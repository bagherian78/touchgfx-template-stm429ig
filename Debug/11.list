
11.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001c564  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000038b4  0801c714  0801c714  0002c714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 000001b2  0801ffc8  0801ffc8  0002ffc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 ExtFlashSection 00039e6c  0802017c  0802017c  0003017c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 0000000c  08059fe8  08059fe8  00069fe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .ARM.extab    00000000  08059ff4  08059ff4  000700f8  2**0
                  CONTENTS
  7 .ARM          00000008  08059ff4  08059ff4  00069ff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .preinit_array 00000000  08059ffc  08059ffc  000700f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .init_array   00000014  08059ffc  08059ffc  00069ffc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .fini_array   00000008  0805a010  0805a010  0006a010  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .data         000000f8  20000000  0805a018  00070000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .bss          00001c5c  200000f8  0805a110  000700f8  2**2
                  ALLOC
 13 ._user_heap_stack 00006004  20001d54  0805a110  00071d54  2**0
                  ALLOC
 14 .ARM.attributes 00000030  00000000  00000000  000700f8  2**0
                  CONTENTS, READONLY
 15 .debug_info   0003b54a  00000000  00000000  00070128  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_abbrev 0000ab08  00000000  00000000  000ab672  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_aranges 00002378  00000000  00000000  000b6180  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_ranges 00001f10  00000000  00000000  000b84f8  2**3
                  CONTENTS, READONLY, DEBUGGING
 19 .debug_macro  0002f97f  00000000  00000000  000ba408  2**0
                  CONTENTS, READONLY, DEBUGGING
 20 .debug_line   000280d6  00000000  00000000  000e9d87  2**0
                  CONTENTS, READONLY, DEBUGGING
 21 .debug_str    000eccb3  00000000  00000000  00111e5d  2**0
                  CONTENTS, READONLY, DEBUGGING
 22 .comment      000000fa  00000000  00000000  001feb10  2**0
                  CONTENTS, READONLY
 23 .debug_frame  00009830  00000000  00000000  001fec0c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200000f8 	.word	0x200000f8
 80001cc:	00000000 	.word	0x00000000
 80001d0:	0801c6fc 	.word	0x0801c6fc

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200000fc 	.word	0x200000fc
 80001ec:	0801c6fc 	.word	0x0801c6fc

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_uldivmod>:
 8000290:	b953      	cbnz	r3, 80002a8 <__aeabi_uldivmod+0x18>
 8000292:	b94a      	cbnz	r2, 80002a8 <__aeabi_uldivmod+0x18>
 8000294:	2900      	cmp	r1, #0
 8000296:	bf08      	it	eq
 8000298:	2800      	cmpeq	r0, #0
 800029a:	bf1c      	itt	ne
 800029c:	f04f 31ff 	movne.w	r1, #4294967295
 80002a0:	f04f 30ff 	movne.w	r0, #4294967295
 80002a4:	f000 b972 	b.w	800058c <__aeabi_idiv0>
 80002a8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002ac:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002b0:	f000 f806 	bl	80002c0 <__udivmoddi4>
 80002b4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002b8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002bc:	b004      	add	sp, #16
 80002be:	4770      	bx	lr

080002c0 <__udivmoddi4>:
 80002c0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002c4:	9e08      	ldr	r6, [sp, #32]
 80002c6:	4604      	mov	r4, r0
 80002c8:	4688      	mov	r8, r1
 80002ca:	2b00      	cmp	r3, #0
 80002cc:	d14b      	bne.n	8000366 <__udivmoddi4+0xa6>
 80002ce:	428a      	cmp	r2, r1
 80002d0:	4615      	mov	r5, r2
 80002d2:	d967      	bls.n	80003a4 <__udivmoddi4+0xe4>
 80002d4:	fab2 f282 	clz	r2, r2
 80002d8:	b14a      	cbz	r2, 80002ee <__udivmoddi4+0x2e>
 80002da:	f1c2 0720 	rsb	r7, r2, #32
 80002de:	fa01 f302 	lsl.w	r3, r1, r2
 80002e2:	fa20 f707 	lsr.w	r7, r0, r7
 80002e6:	4095      	lsls	r5, r2
 80002e8:	ea47 0803 	orr.w	r8, r7, r3
 80002ec:	4094      	lsls	r4, r2
 80002ee:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80002f2:	0c23      	lsrs	r3, r4, #16
 80002f4:	fbb8 f7fe 	udiv	r7, r8, lr
 80002f8:	fa1f fc85 	uxth.w	ip, r5
 80002fc:	fb0e 8817 	mls	r8, lr, r7, r8
 8000300:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000304:	fb07 f10c 	mul.w	r1, r7, ip
 8000308:	4299      	cmp	r1, r3
 800030a:	d909      	bls.n	8000320 <__udivmoddi4+0x60>
 800030c:	18eb      	adds	r3, r5, r3
 800030e:	f107 30ff 	add.w	r0, r7, #4294967295
 8000312:	f080 811b 	bcs.w	800054c <__udivmoddi4+0x28c>
 8000316:	4299      	cmp	r1, r3
 8000318:	f240 8118 	bls.w	800054c <__udivmoddi4+0x28c>
 800031c:	3f02      	subs	r7, #2
 800031e:	442b      	add	r3, r5
 8000320:	1a5b      	subs	r3, r3, r1
 8000322:	b2a4      	uxth	r4, r4
 8000324:	fbb3 f0fe 	udiv	r0, r3, lr
 8000328:	fb0e 3310 	mls	r3, lr, r0, r3
 800032c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000330:	fb00 fc0c 	mul.w	ip, r0, ip
 8000334:	45a4      	cmp	ip, r4
 8000336:	d909      	bls.n	800034c <__udivmoddi4+0x8c>
 8000338:	192c      	adds	r4, r5, r4
 800033a:	f100 33ff 	add.w	r3, r0, #4294967295
 800033e:	f080 8107 	bcs.w	8000550 <__udivmoddi4+0x290>
 8000342:	45a4      	cmp	ip, r4
 8000344:	f240 8104 	bls.w	8000550 <__udivmoddi4+0x290>
 8000348:	3802      	subs	r0, #2
 800034a:	442c      	add	r4, r5
 800034c:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000350:	eba4 040c 	sub.w	r4, r4, ip
 8000354:	2700      	movs	r7, #0
 8000356:	b11e      	cbz	r6, 8000360 <__udivmoddi4+0xa0>
 8000358:	40d4      	lsrs	r4, r2
 800035a:	2300      	movs	r3, #0
 800035c:	e9c6 4300 	strd	r4, r3, [r6]
 8000360:	4639      	mov	r1, r7
 8000362:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000366:	428b      	cmp	r3, r1
 8000368:	d909      	bls.n	800037e <__udivmoddi4+0xbe>
 800036a:	2e00      	cmp	r6, #0
 800036c:	f000 80eb 	beq.w	8000546 <__udivmoddi4+0x286>
 8000370:	2700      	movs	r7, #0
 8000372:	e9c6 0100 	strd	r0, r1, [r6]
 8000376:	4638      	mov	r0, r7
 8000378:	4639      	mov	r1, r7
 800037a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800037e:	fab3 f783 	clz	r7, r3
 8000382:	2f00      	cmp	r7, #0
 8000384:	d147      	bne.n	8000416 <__udivmoddi4+0x156>
 8000386:	428b      	cmp	r3, r1
 8000388:	d302      	bcc.n	8000390 <__udivmoddi4+0xd0>
 800038a:	4282      	cmp	r2, r0
 800038c:	f200 80fa 	bhi.w	8000584 <__udivmoddi4+0x2c4>
 8000390:	1a84      	subs	r4, r0, r2
 8000392:	eb61 0303 	sbc.w	r3, r1, r3
 8000396:	2001      	movs	r0, #1
 8000398:	4698      	mov	r8, r3
 800039a:	2e00      	cmp	r6, #0
 800039c:	d0e0      	beq.n	8000360 <__udivmoddi4+0xa0>
 800039e:	e9c6 4800 	strd	r4, r8, [r6]
 80003a2:	e7dd      	b.n	8000360 <__udivmoddi4+0xa0>
 80003a4:	b902      	cbnz	r2, 80003a8 <__udivmoddi4+0xe8>
 80003a6:	deff      	udf	#255	; 0xff
 80003a8:	fab2 f282 	clz	r2, r2
 80003ac:	2a00      	cmp	r2, #0
 80003ae:	f040 808f 	bne.w	80004d0 <__udivmoddi4+0x210>
 80003b2:	1b49      	subs	r1, r1, r5
 80003b4:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80003b8:	fa1f f885 	uxth.w	r8, r5
 80003bc:	2701      	movs	r7, #1
 80003be:	fbb1 fcfe 	udiv	ip, r1, lr
 80003c2:	0c23      	lsrs	r3, r4, #16
 80003c4:	fb0e 111c 	mls	r1, lr, ip, r1
 80003c8:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 80003cc:	fb08 f10c 	mul.w	r1, r8, ip
 80003d0:	4299      	cmp	r1, r3
 80003d2:	d907      	bls.n	80003e4 <__udivmoddi4+0x124>
 80003d4:	18eb      	adds	r3, r5, r3
 80003d6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003da:	d202      	bcs.n	80003e2 <__udivmoddi4+0x122>
 80003dc:	4299      	cmp	r1, r3
 80003de:	f200 80cd 	bhi.w	800057c <__udivmoddi4+0x2bc>
 80003e2:	4684      	mov	ip, r0
 80003e4:	1a59      	subs	r1, r3, r1
 80003e6:	b2a3      	uxth	r3, r4
 80003e8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003ec:	fb0e 1410 	mls	r4, lr, r0, r1
 80003f0:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 80003f4:	fb08 f800 	mul.w	r8, r8, r0
 80003f8:	45a0      	cmp	r8, r4
 80003fa:	d907      	bls.n	800040c <__udivmoddi4+0x14c>
 80003fc:	192c      	adds	r4, r5, r4
 80003fe:	f100 33ff 	add.w	r3, r0, #4294967295
 8000402:	d202      	bcs.n	800040a <__udivmoddi4+0x14a>
 8000404:	45a0      	cmp	r8, r4
 8000406:	f200 80b6 	bhi.w	8000576 <__udivmoddi4+0x2b6>
 800040a:	4618      	mov	r0, r3
 800040c:	eba4 0408 	sub.w	r4, r4, r8
 8000410:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000414:	e79f      	b.n	8000356 <__udivmoddi4+0x96>
 8000416:	f1c7 0c20 	rsb	ip, r7, #32
 800041a:	40bb      	lsls	r3, r7
 800041c:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000420:	ea4e 0e03 	orr.w	lr, lr, r3
 8000424:	fa01 f407 	lsl.w	r4, r1, r7
 8000428:	fa20 f50c 	lsr.w	r5, r0, ip
 800042c:	fa21 f30c 	lsr.w	r3, r1, ip
 8000430:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000434:	4325      	orrs	r5, r4
 8000436:	fbb3 f9f8 	udiv	r9, r3, r8
 800043a:	0c2c      	lsrs	r4, r5, #16
 800043c:	fb08 3319 	mls	r3, r8, r9, r3
 8000440:	fa1f fa8e 	uxth.w	sl, lr
 8000444:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000448:	fb09 f40a 	mul.w	r4, r9, sl
 800044c:	429c      	cmp	r4, r3
 800044e:	fa02 f207 	lsl.w	r2, r2, r7
 8000452:	fa00 f107 	lsl.w	r1, r0, r7
 8000456:	d90b      	bls.n	8000470 <__udivmoddi4+0x1b0>
 8000458:	eb1e 0303 	adds.w	r3, lr, r3
 800045c:	f109 30ff 	add.w	r0, r9, #4294967295
 8000460:	f080 8087 	bcs.w	8000572 <__udivmoddi4+0x2b2>
 8000464:	429c      	cmp	r4, r3
 8000466:	f240 8084 	bls.w	8000572 <__udivmoddi4+0x2b2>
 800046a:	f1a9 0902 	sub.w	r9, r9, #2
 800046e:	4473      	add	r3, lr
 8000470:	1b1b      	subs	r3, r3, r4
 8000472:	b2ad      	uxth	r5, r5
 8000474:	fbb3 f0f8 	udiv	r0, r3, r8
 8000478:	fb08 3310 	mls	r3, r8, r0, r3
 800047c:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000480:	fb00 fa0a 	mul.w	sl, r0, sl
 8000484:	45a2      	cmp	sl, r4
 8000486:	d908      	bls.n	800049a <__udivmoddi4+0x1da>
 8000488:	eb1e 0404 	adds.w	r4, lr, r4
 800048c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000490:	d26b      	bcs.n	800056a <__udivmoddi4+0x2aa>
 8000492:	45a2      	cmp	sl, r4
 8000494:	d969      	bls.n	800056a <__udivmoddi4+0x2aa>
 8000496:	3802      	subs	r0, #2
 8000498:	4474      	add	r4, lr
 800049a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800049e:	fba0 8902 	umull	r8, r9, r0, r2
 80004a2:	eba4 040a 	sub.w	r4, r4, sl
 80004a6:	454c      	cmp	r4, r9
 80004a8:	46c2      	mov	sl, r8
 80004aa:	464b      	mov	r3, r9
 80004ac:	d354      	bcc.n	8000558 <__udivmoddi4+0x298>
 80004ae:	d051      	beq.n	8000554 <__udivmoddi4+0x294>
 80004b0:	2e00      	cmp	r6, #0
 80004b2:	d069      	beq.n	8000588 <__udivmoddi4+0x2c8>
 80004b4:	ebb1 050a 	subs.w	r5, r1, sl
 80004b8:	eb64 0403 	sbc.w	r4, r4, r3
 80004bc:	fa04 fc0c 	lsl.w	ip, r4, ip
 80004c0:	40fd      	lsrs	r5, r7
 80004c2:	40fc      	lsrs	r4, r7
 80004c4:	ea4c 0505 	orr.w	r5, ip, r5
 80004c8:	e9c6 5400 	strd	r5, r4, [r6]
 80004cc:	2700      	movs	r7, #0
 80004ce:	e747      	b.n	8000360 <__udivmoddi4+0xa0>
 80004d0:	f1c2 0320 	rsb	r3, r2, #32
 80004d4:	fa20 f703 	lsr.w	r7, r0, r3
 80004d8:	4095      	lsls	r5, r2
 80004da:	fa01 f002 	lsl.w	r0, r1, r2
 80004de:	fa21 f303 	lsr.w	r3, r1, r3
 80004e2:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 80004e6:	4338      	orrs	r0, r7
 80004e8:	0c01      	lsrs	r1, r0, #16
 80004ea:	fbb3 f7fe 	udiv	r7, r3, lr
 80004ee:	fa1f f885 	uxth.w	r8, r5
 80004f2:	fb0e 3317 	mls	r3, lr, r7, r3
 80004f6:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 80004fa:	fb07 f308 	mul.w	r3, r7, r8
 80004fe:	428b      	cmp	r3, r1
 8000500:	fa04 f402 	lsl.w	r4, r4, r2
 8000504:	d907      	bls.n	8000516 <__udivmoddi4+0x256>
 8000506:	1869      	adds	r1, r5, r1
 8000508:	f107 3cff 	add.w	ip, r7, #4294967295
 800050c:	d22f      	bcs.n	800056e <__udivmoddi4+0x2ae>
 800050e:	428b      	cmp	r3, r1
 8000510:	d92d      	bls.n	800056e <__udivmoddi4+0x2ae>
 8000512:	3f02      	subs	r7, #2
 8000514:	4429      	add	r1, r5
 8000516:	1acb      	subs	r3, r1, r3
 8000518:	b281      	uxth	r1, r0
 800051a:	fbb3 f0fe 	udiv	r0, r3, lr
 800051e:	fb0e 3310 	mls	r3, lr, r0, r3
 8000522:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000526:	fb00 f308 	mul.w	r3, r0, r8
 800052a:	428b      	cmp	r3, r1
 800052c:	d907      	bls.n	800053e <__udivmoddi4+0x27e>
 800052e:	1869      	adds	r1, r5, r1
 8000530:	f100 3cff 	add.w	ip, r0, #4294967295
 8000534:	d217      	bcs.n	8000566 <__udivmoddi4+0x2a6>
 8000536:	428b      	cmp	r3, r1
 8000538:	d915      	bls.n	8000566 <__udivmoddi4+0x2a6>
 800053a:	3802      	subs	r0, #2
 800053c:	4429      	add	r1, r5
 800053e:	1ac9      	subs	r1, r1, r3
 8000540:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000544:	e73b      	b.n	80003be <__udivmoddi4+0xfe>
 8000546:	4637      	mov	r7, r6
 8000548:	4630      	mov	r0, r6
 800054a:	e709      	b.n	8000360 <__udivmoddi4+0xa0>
 800054c:	4607      	mov	r7, r0
 800054e:	e6e7      	b.n	8000320 <__udivmoddi4+0x60>
 8000550:	4618      	mov	r0, r3
 8000552:	e6fb      	b.n	800034c <__udivmoddi4+0x8c>
 8000554:	4541      	cmp	r1, r8
 8000556:	d2ab      	bcs.n	80004b0 <__udivmoddi4+0x1f0>
 8000558:	ebb8 0a02 	subs.w	sl, r8, r2
 800055c:	eb69 020e 	sbc.w	r2, r9, lr
 8000560:	3801      	subs	r0, #1
 8000562:	4613      	mov	r3, r2
 8000564:	e7a4      	b.n	80004b0 <__udivmoddi4+0x1f0>
 8000566:	4660      	mov	r0, ip
 8000568:	e7e9      	b.n	800053e <__udivmoddi4+0x27e>
 800056a:	4618      	mov	r0, r3
 800056c:	e795      	b.n	800049a <__udivmoddi4+0x1da>
 800056e:	4667      	mov	r7, ip
 8000570:	e7d1      	b.n	8000516 <__udivmoddi4+0x256>
 8000572:	4681      	mov	r9, r0
 8000574:	e77c      	b.n	8000470 <__udivmoddi4+0x1b0>
 8000576:	3802      	subs	r0, #2
 8000578:	442c      	add	r4, r5
 800057a:	e747      	b.n	800040c <__udivmoddi4+0x14c>
 800057c:	f1ac 0c02 	sub.w	ip, ip, #2
 8000580:	442b      	add	r3, r5
 8000582:	e72f      	b.n	80003e4 <__udivmoddi4+0x124>
 8000584:	4638      	mov	r0, r7
 8000586:	e708      	b.n	800039a <__udivmoddi4+0xda>
 8000588:	4637      	mov	r7, r6
 800058a:	e6e9      	b.n	8000360 <__udivmoddi4+0xa0>

0800058c <__aeabi_idiv0>:
 800058c:	4770      	bx	lr
 800058e:	bf00      	nop

08000590 <MX_CRC_Init>:

CRC_HandleTypeDef hcrc;

/* CRC init function */
void MX_CRC_Init(void)
{
 8000590:	b580      	push	{r7, lr}
 8000592:	af00      	add	r7, sp, #0

  hcrc.Instance = CRC;
 8000594:	4b06      	ldr	r3, [pc, #24]	; (80005b0 <MX_CRC_Init+0x20>)
 8000596:	4a07      	ldr	r2, [pc, #28]	; (80005b4 <MX_CRC_Init+0x24>)
 8000598:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800059a:	4805      	ldr	r0, [pc, #20]	; (80005b0 <MX_CRC_Init+0x20>)
 800059c:	f001 f95d 	bl	800185a <HAL_CRC_Init>
 80005a0:	4603      	mov	r3, r0
 80005a2:	2b00      	cmp	r3, #0
 80005a4:	d001      	beq.n	80005aa <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80005a6:	f000 fd09 	bl	8000fbc <Error_Handler>
  }

}
 80005aa:	bf00      	nop
 80005ac:	bd80      	pop	{r7, pc}
 80005ae:	bf00      	nop
 80005b0:	200016f8 	.word	0x200016f8
 80005b4:	40023000 	.word	0x40023000

080005b8 <HAL_CRC_MspInit>:

void HAL_CRC_MspInit(CRC_HandleTypeDef* crcHandle)
{
 80005b8:	b480      	push	{r7}
 80005ba:	b085      	sub	sp, #20
 80005bc:	af00      	add	r7, sp, #0
 80005be:	6078      	str	r0, [r7, #4]

  if(crcHandle->Instance==CRC)
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	4a0b      	ldr	r2, [pc, #44]	; (80005f4 <HAL_CRC_MspInit+0x3c>)
 80005c6:	4293      	cmp	r3, r2
 80005c8:	d10d      	bne.n	80005e6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* CRC clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80005ca:	2300      	movs	r3, #0
 80005cc:	60fb      	str	r3, [r7, #12]
 80005ce:	4b0a      	ldr	r3, [pc, #40]	; (80005f8 <HAL_CRC_MspInit+0x40>)
 80005d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005d2:	4a09      	ldr	r2, [pc, #36]	; (80005f8 <HAL_CRC_MspInit+0x40>)
 80005d4:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 80005d8:	6313      	str	r3, [r2, #48]	; 0x30
 80005da:	4b07      	ldr	r3, [pc, #28]	; (80005f8 <HAL_CRC_MspInit+0x40>)
 80005dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80005de:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80005e2:	60fb      	str	r3, [r7, #12]
 80005e4:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }
}
 80005e6:	bf00      	nop
 80005e8:	3714      	adds	r7, #20
 80005ea:	46bd      	mov	sp, r7
 80005ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005f0:	4770      	bx	lr
 80005f2:	bf00      	nop
 80005f4:	40023000 	.word	0x40023000
 80005f8:	40023800 	.word	0x40023800

080005fc <MX_DMA2D_Init>:

DMA2D_HandleTypeDef hdma2d;

/* DMA2D init function */
void MX_DMA2D_Init(void)
{
 80005fc:	b580      	push	{r7, lr}
 80005fe:	af00      	add	r7, sp, #0

  hdma2d.Instance = DMA2D;
 8000600:	4b15      	ldr	r3, [pc, #84]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000602:	4a16      	ldr	r2, [pc, #88]	; (800065c <MX_DMA2D_Init+0x60>)
 8000604:	601a      	str	r2, [r3, #0]
  hdma2d.Init.Mode = DMA2D_M2M;
 8000606:	4b14      	ldr	r3, [pc, #80]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000608:	2200      	movs	r2, #0
 800060a:	605a      	str	r2, [r3, #4]
  hdma2d.Init.ColorMode = DMA2D_OUTPUT_RGB565;
 800060c:	4b12      	ldr	r3, [pc, #72]	; (8000658 <MX_DMA2D_Init+0x5c>)
 800060e:	2202      	movs	r2, #2
 8000610:	609a      	str	r2, [r3, #8]
  hdma2d.Init.OutputOffset = 0;
 8000612:	4b11      	ldr	r3, [pc, #68]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000614:	2200      	movs	r2, #0
 8000616:	60da      	str	r2, [r3, #12]
  hdma2d.LayerCfg[1].InputOffset = 0;
 8000618:	4b0f      	ldr	r3, [pc, #60]	; (8000658 <MX_DMA2D_Init+0x5c>)
 800061a:	2200      	movs	r2, #0
 800061c:	629a      	str	r2, [r3, #40]	; 0x28
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 800061e:	4b0e      	ldr	r3, [pc, #56]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000620:	2202      	movs	r2, #2
 8000622:	62da      	str	r2, [r3, #44]	; 0x2c
  hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8000624:	4b0c      	ldr	r3, [pc, #48]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000626:	2200      	movs	r2, #0
 8000628:	631a      	str	r2, [r3, #48]	; 0x30
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800062a:	4b0b      	ldr	r3, [pc, #44]	; (8000658 <MX_DMA2D_Init+0x5c>)
 800062c:	2200      	movs	r2, #0
 800062e:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8000630:	4809      	ldr	r0, [pc, #36]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000632:	f001 f92e 	bl	8001892 <HAL_DMA2D_Init>
 8000636:	4603      	mov	r3, r0
 8000638:	2b00      	cmp	r3, #0
 800063a:	d001      	beq.n	8000640 <MX_DMA2D_Init+0x44>
  {
    Error_Handler();
 800063c:	f000 fcbe 	bl	8000fbc <Error_Handler>
  }
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8000640:	2101      	movs	r1, #1
 8000642:	4805      	ldr	r0, [pc, #20]	; (8000658 <MX_DMA2D_Init+0x5c>)
 8000644:	f001 fbee 	bl	8001e24 <HAL_DMA2D_ConfigLayer>
 8000648:	4603      	mov	r3, r0
 800064a:	2b00      	cmp	r3, #0
 800064c:	d001      	beq.n	8000652 <MX_DMA2D_Init+0x56>
  {
    Error_Handler();
 800064e:	f000 fcb5 	bl	8000fbc <Error_Handler>
  }

}
 8000652:	bf00      	nop
 8000654:	bd80      	pop	{r7, pc}
 8000656:	bf00      	nop
 8000658:	20001700 	.word	0x20001700
 800065c:	4002b000 	.word	0x4002b000

08000660 <HAL_DMA2D_MspInit>:

void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 8000660:	b580      	push	{r7, lr}
 8000662:	b084      	sub	sp, #16
 8000664:	af00      	add	r7, sp, #0
 8000666:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	681b      	ldr	r3, [r3, #0]
 800066c:	4a0e      	ldr	r2, [pc, #56]	; (80006a8 <HAL_DMA2D_MspInit+0x48>)
 800066e:	4293      	cmp	r3, r2
 8000670:	d115      	bne.n	800069e <HAL_DMA2D_MspInit+0x3e>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* DMA2D clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000672:	2300      	movs	r3, #0
 8000674:	60fb      	str	r3, [r7, #12]
 8000676:	4b0d      	ldr	r3, [pc, #52]	; (80006ac <HAL_DMA2D_MspInit+0x4c>)
 8000678:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800067a:	4a0c      	ldr	r2, [pc, #48]	; (80006ac <HAL_DMA2D_MspInit+0x4c>)
 800067c:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8000680:	6313      	str	r3, [r2, #48]	; 0x30
 8000682:	4b0a      	ldr	r3, [pc, #40]	; (80006ac <HAL_DMA2D_MspInit+0x4c>)
 8000684:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000686:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800068a:	60fb      	str	r3, [r7, #12]
 800068c:	68fb      	ldr	r3, [r7, #12]

    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 0, 0);
 800068e:	2200      	movs	r2, #0
 8000690:	2100      	movs	r1, #0
 8000692:	205a      	movs	r0, #90	; 0x5a
 8000694:	f001 f89d 	bl	80017d2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8000698:	205a      	movs	r0, #90	; 0x5a
 800069a:	f001 f8b6 	bl	800180a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }
}
 800069e:	bf00      	nop
 80006a0:	3710      	adds	r7, #16
 80006a2:	46bd      	mov	sp, r7
 80006a4:	bd80      	pop	{r7, pc}
 80006a6:	bf00      	nop
 80006a8:	4002b000 	.word	0x4002b000
 80006ac:	40023800 	.word	0x40023800

080006b0 <HAL_DMA2D_MspDeInit>:

void HAL_DMA2D_MspDeInit(DMA2D_HandleTypeDef* dma2dHandle)
{
 80006b0:	b580      	push	{r7, lr}
 80006b2:	b082      	sub	sp, #8
 80006b4:	af00      	add	r7, sp, #0
 80006b6:	6078      	str	r0, [r7, #4]

  if(dma2dHandle->Instance==DMA2D)
 80006b8:	687b      	ldr	r3, [r7, #4]
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a07      	ldr	r2, [pc, #28]	; (80006dc <HAL_DMA2D_MspDeInit+0x2c>)
 80006be:	4293      	cmp	r3, r2
 80006c0:	d108      	bne.n	80006d4 <HAL_DMA2D_MspDeInit+0x24>
  {
  /* USER CODE BEGIN DMA2D_MspDeInit 0 */

  /* USER CODE END DMA2D_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_DMA2D_CLK_DISABLE();
 80006c2:	4b07      	ldr	r3, [pc, #28]	; (80006e0 <HAL_DMA2D_MspDeInit+0x30>)
 80006c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80006c6:	4a06      	ldr	r2, [pc, #24]	; (80006e0 <HAL_DMA2D_MspDeInit+0x30>)
 80006c8:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 80006cc:	6313      	str	r3, [r2, #48]	; 0x30

    /* DMA2D interrupt Deinit */
    HAL_NVIC_DisableIRQ(DMA2D_IRQn);
 80006ce:	205a      	movs	r0, #90	; 0x5a
 80006d0:	f001 f8a9 	bl	8001826 <HAL_NVIC_DisableIRQ>
  /* USER CODE BEGIN DMA2D_MspDeInit 1 */

  /* USER CODE END DMA2D_MspDeInit 1 */
  }
} 
 80006d4:	bf00      	nop
 80006d6:	3708      	adds	r7, #8
 80006d8:	46bd      	mov	sp, r7
 80006da:	bd80      	pop	{r7, pc}
 80006dc:	4002b000 	.word	0x4002b000
 80006e0:	40023800 	.word	0x40023800

080006e4 <MX_FMC_Init>:

SDRAM_HandleTypeDef hsdram1;

/* FMC initialization function */
void MX_FMC_Init(void)
{
 80006e4:	b580      	push	{r7, lr}
 80006e6:	b088      	sub	sp, #32
 80006e8:	af00      	add	r7, sp, #0
  FMC_SDRAM_TimingTypeDef SdramTiming = {0};
 80006ea:	1d3b      	adds	r3, r7, #4
 80006ec:	2200      	movs	r2, #0
 80006ee:	601a      	str	r2, [r3, #0]
 80006f0:	605a      	str	r2, [r3, #4]
 80006f2:	609a      	str	r2, [r3, #8]
 80006f4:	60da      	str	r2, [r3, #12]
 80006f6:	611a      	str	r2, [r3, #16]
 80006f8:	615a      	str	r2, [r3, #20]
 80006fa:	619a      	str	r2, [r3, #24]

  /** Perform the SDRAM1 memory initialization sequence
  */
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80006fc:	4b1f      	ldr	r3, [pc, #124]	; (800077c <MX_FMC_Init+0x98>)
 80006fe:	4a20      	ldr	r2, [pc, #128]	; (8000780 <MX_FMC_Init+0x9c>)
 8000700:	601a      	str	r2, [r3, #0]
  /* hsdram1.Init */
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8000702:	4b1e      	ldr	r3, [pc, #120]	; (800077c <MX_FMC_Init+0x98>)
 8000704:	2200      	movs	r2, #0
 8000706:	605a      	str	r2, [r3, #4]
  hsdram1.Init.ColumnBitsNumber = FMC_SDRAM_COLUMN_BITS_NUM_9;
 8000708:	4b1c      	ldr	r3, [pc, #112]	; (800077c <MX_FMC_Init+0x98>)
 800070a:	2201      	movs	r2, #1
 800070c:	609a      	str	r2, [r3, #8]
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_13;
 800070e:	4b1b      	ldr	r3, [pc, #108]	; (800077c <MX_FMC_Init+0x98>)
 8000710:	2208      	movs	r2, #8
 8000712:	60da      	str	r2, [r3, #12]
  hsdram1.Init.MemoryDataWidth = FMC_SDRAM_MEM_BUS_WIDTH_16;
 8000714:	4b19      	ldr	r3, [pc, #100]	; (800077c <MX_FMC_Init+0x98>)
 8000716:	2210      	movs	r2, #16
 8000718:	611a      	str	r2, [r3, #16]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 800071a:	4b18      	ldr	r3, [pc, #96]	; (800077c <MX_FMC_Init+0x98>)
 800071c:	2240      	movs	r2, #64	; 0x40
 800071e:	615a      	str	r2, [r3, #20]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 8000720:	4b16      	ldr	r3, [pc, #88]	; (800077c <MX_FMC_Init+0x98>)
 8000722:	f44f 72c0 	mov.w	r2, #384	; 0x180
 8000726:	619a      	str	r2, [r3, #24]
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8000728:	4b14      	ldr	r3, [pc, #80]	; (800077c <MX_FMC_Init+0x98>)
 800072a:	2200      	movs	r2, #0
 800072c:	61da      	str	r2, [r3, #28]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 800072e:	4b13      	ldr	r3, [pc, #76]	; (800077c <MX_FMC_Init+0x98>)
 8000730:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8000734:	621a      	str	r2, [r3, #32]
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 8000736:	4b11      	ldr	r3, [pc, #68]	; (800077c <MX_FMC_Init+0x98>)
 8000738:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800073c:	625a      	str	r2, [r3, #36]	; 0x24
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_0;
 800073e:	4b0f      	ldr	r3, [pc, #60]	; (800077c <MX_FMC_Init+0x98>)
 8000740:	2200      	movs	r2, #0
 8000742:	629a      	str	r2, [r3, #40]	; 0x28
  /* SdramTiming */
  SdramTiming.LoadToActiveDelay = 2;
 8000744:	2302      	movs	r3, #2
 8000746:	607b      	str	r3, [r7, #4]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8000748:	2307      	movs	r3, #7
 800074a:	60bb      	str	r3, [r7, #8]
  SdramTiming.SelfRefreshTime = 6;
 800074c:	2306      	movs	r3, #6
 800074e:	60fb      	str	r3, [r7, #12]
  SdramTiming.RowCycleDelay = 6;
 8000750:	2306      	movs	r3, #6
 8000752:	613b      	str	r3, [r7, #16]
  SdramTiming.WriteRecoveryTime = 5;
 8000754:	2305      	movs	r3, #5
 8000756:	617b      	str	r3, [r7, #20]
  SdramTiming.RPDelay = 2;
 8000758:	2302      	movs	r3, #2
 800075a:	61bb      	str	r3, [r7, #24]
  SdramTiming.RCDDelay = 2;
 800075c:	2302      	movs	r3, #2
 800075e:	61fb      	str	r3, [r7, #28]

  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8000760:	1d3b      	adds	r3, r7, #4
 8000762:	4619      	mov	r1, r3
 8000764:	4805      	ldr	r0, [pc, #20]	; (800077c <MX_FMC_Init+0x98>)
 8000766:	f004 f80b 	bl	8004780 <HAL_SDRAM_Init>
 800076a:	4603      	mov	r3, r0
 800076c:	2b00      	cmp	r3, #0
 800076e:	d001      	beq.n	8000774 <MX_FMC_Init+0x90>
  {
    Error_Handler( );
 8000770:	f000 fc24 	bl	8000fbc <Error_Handler>
  }

}
 8000774:	bf00      	nop
 8000776:	3720      	adds	r7, #32
 8000778:	46bd      	mov	sp, r7
 800077a:	bd80      	pop	{r7, pc}
 800077c:	20001740 	.word	0x20001740
 8000780:	a0000140 	.word	0xa0000140

08000784 <HAL_FMC_MspInit>:

static uint32_t FMC_Initialized = 0;

static void HAL_FMC_MspInit(void){
 8000784:	b580      	push	{r7, lr}
 8000786:	b086      	sub	sp, #24
 8000788:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN FMC_MspInit 0 */

  /* USER CODE END FMC_MspInit 0 */
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800078a:	1d3b      	adds	r3, r7, #4
 800078c:	2200      	movs	r2, #0
 800078e:	601a      	str	r2, [r3, #0]
 8000790:	605a      	str	r2, [r3, #4]
 8000792:	609a      	str	r2, [r3, #8]
 8000794:	60da      	str	r2, [r3, #12]
 8000796:	611a      	str	r2, [r3, #16]
  if (FMC_Initialized) {
 8000798:	4b34      	ldr	r3, [pc, #208]	; (800086c <HAL_FMC_MspInit+0xe8>)
 800079a:	681b      	ldr	r3, [r3, #0]
 800079c:	2b00      	cmp	r3, #0
 800079e:	d160      	bne.n	8000862 <HAL_FMC_MspInit+0xde>
    return;
  }
  FMC_Initialized = 1;
 80007a0:	4b32      	ldr	r3, [pc, #200]	; (800086c <HAL_FMC_MspInit+0xe8>)
 80007a2:	2201      	movs	r2, #1
 80007a4:	601a      	str	r2, [r3, #0]

  /* Peripheral clock enable */
  __HAL_RCC_FMC_CLK_ENABLE();
 80007a6:	2300      	movs	r3, #0
 80007a8:	603b      	str	r3, [r7, #0]
 80007aa:	4b31      	ldr	r3, [pc, #196]	; (8000870 <HAL_FMC_MspInit+0xec>)
 80007ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80007ae:	4a30      	ldr	r2, [pc, #192]	; (8000870 <HAL_FMC_MspInit+0xec>)
 80007b0:	f043 0301 	orr.w	r3, r3, #1
 80007b4:	6393      	str	r3, [r2, #56]	; 0x38
 80007b6:	4b2e      	ldr	r3, [pc, #184]	; (8000870 <HAL_FMC_MspInit+0xec>)
 80007b8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80007ba:	f003 0301 	and.w	r3, r3, #1
 80007be:	603b      	str	r3, [r7, #0]
 80007c0:	683b      	ldr	r3, [r7, #0]
  PD0   ------> FMC_D2
  PD1   ------> FMC_D3
  PG15   ------> FMC_SDNCAS
  */
  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3 
 80007c2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 80007c6:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_11|GPIO_PIN_12 
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80007c8:	2302      	movs	r3, #2
 80007ca:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007cc:	2300      	movs	r3, #0
 80007ce:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007d0:	2303      	movs	r3, #3
 80007d2:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80007d4:	230c      	movs	r3, #12
 80007d6:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 80007d8:	1d3b      	adds	r3, r7, #4
 80007da:	4619      	mov	r1, r3
 80007dc:	4825      	ldr	r0, [pc, #148]	; (8000874 <HAL_FMC_MspInit+0xf0>)
 80007de:	f001 fc4f 	bl	8002080 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_2|GPIO_PIN_3;
 80007e2:	230d      	movs	r3, #13
 80007e4:	607b      	str	r3, [r7, #4]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80007e6:	2302      	movs	r3, #2
 80007e8:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80007ea:	2300      	movs	r3, #0
 80007ec:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80007ee:	2303      	movs	r3, #3
 80007f0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 80007f2:	230c      	movs	r3, #12
 80007f4:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80007f6:	1d3b      	adds	r3, r7, #4
 80007f8:	4619      	mov	r1, r3
 80007fa:	481f      	ldr	r0, [pc, #124]	; (8000878 <HAL_FMC_MspInit+0xf4>)
 80007fc:	f001 fc40 	bl	8002080 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_4 
 8000800:	f248 1337 	movw	r3, #33079	; 0x8137
 8000804:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000806:	2302      	movs	r3, #2
 8000808:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800080a:	2300      	movs	r3, #0
 800080c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800080e:	2303      	movs	r3, #3
 8000810:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000812:	230c      	movs	r3, #12
 8000814:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000816:	1d3b      	adds	r3, r7, #4
 8000818:	4619      	mov	r1, r3
 800081a:	4818      	ldr	r0, [pc, #96]	; (800087c <HAL_FMC_MspInit+0xf8>)
 800081c:	f001 fc30 	bl	8002080 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10 
 8000820:	f64f 7380 	movw	r3, #65408	; 0xff80
 8000824:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_11|GPIO_PIN_12|GPIO_PIN_13|GPIO_PIN_14 
                          |GPIO_PIN_15;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000826:	2302      	movs	r3, #2
 8000828:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800082a:	2300      	movs	r3, #0
 800082c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800082e:	2303      	movs	r3, #3
 8000830:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000832:	230c      	movs	r3, #12
 8000834:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8000836:	1d3b      	adds	r3, r7, #4
 8000838:	4619      	mov	r1, r3
 800083a:	4811      	ldr	r0, [pc, #68]	; (8000880 <HAL_FMC_MspInit+0xfc>)
 800083c:	f001 fc20 	bl	8002080 <HAL_GPIO_Init>

  /* GPIO_InitStruct */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14 
 8000840:	f24c 7303 	movw	r3, #50947	; 0xc703
 8000844:	607b      	str	r3, [r7, #4]
                          |GPIO_PIN_15|GPIO_PIN_0|GPIO_PIN_1;
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000846:	2302      	movs	r3, #2
 8000848:	60bb      	str	r3, [r7, #8]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800084a:	2300      	movs	r3, #0
 800084c:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800084e:	2303      	movs	r3, #3
 8000850:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8000852:	230c      	movs	r3, #12
 8000854:	617b      	str	r3, [r7, #20]

  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8000856:	1d3b      	adds	r3, r7, #4
 8000858:	4619      	mov	r1, r3
 800085a:	480a      	ldr	r0, [pc, #40]	; (8000884 <HAL_FMC_MspInit+0x100>)
 800085c:	f001 fc10 	bl	8002080 <HAL_GPIO_Init>
 8000860:	e000      	b.n	8000864 <HAL_FMC_MspInit+0xe0>
    return;
 8000862:	bf00      	nop

  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}
 8000864:	3718      	adds	r7, #24
 8000866:	46bd      	mov	sp, r7
 8000868:	bd80      	pop	{r7, pc}
 800086a:	bf00      	nop
 800086c:	20000114 	.word	0x20000114
 8000870:	40023800 	.word	0x40023800
 8000874:	40021400 	.word	0x40021400
 8000878:	40020800 	.word	0x40020800
 800087c:	40021800 	.word	0x40021800
 8000880:	40021000 	.word	0x40021000
 8000884:	40020c00 	.word	0x40020c00

08000888 <HAL_SDRAM_MspInit>:

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* sdramHandle){
 8000888:	b580      	push	{r7, lr}
 800088a:	b082      	sub	sp, #8
 800088c:	af00      	add	r7, sp, #0
 800088e:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN SDRAM_MspInit 0 */

  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
 8000890:	f7ff ff78 	bl	8000784 <HAL_FMC_MspInit>
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8000894:	bf00      	nop
 8000896:	3708      	adds	r7, #8
 8000898:	46bd      	mov	sp, r7
 800089a:	bd80      	pop	{r7, pc}

0800089c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 800089c:	b580      	push	{r7, lr}
 800089e:	b08e      	sub	sp, #56	; 0x38
 80008a0:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80008a2:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80008a6:	2200      	movs	r2, #0
 80008a8:	601a      	str	r2, [r3, #0]
 80008aa:	605a      	str	r2, [r3, #4]
 80008ac:	609a      	str	r2, [r3, #8]
 80008ae:	60da      	str	r2, [r3, #12]
 80008b0:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80008b2:	2300      	movs	r3, #0
 80008b4:	623b      	str	r3, [r7, #32]
 80008b6:	4b73      	ldr	r3, [pc, #460]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008b8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008ba:	4a72      	ldr	r2, [pc, #456]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008bc:	f043 0310 	orr.w	r3, r3, #16
 80008c0:	6313      	str	r3, [r2, #48]	; 0x30
 80008c2:	4b70      	ldr	r3, [pc, #448]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008c6:	f003 0310 	and.w	r3, r3, #16
 80008ca:	623b      	str	r3, [r7, #32]
 80008cc:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 80008ce:	2300      	movs	r3, #0
 80008d0:	61fb      	str	r3, [r7, #28]
 80008d2:	4b6c      	ldr	r3, [pc, #432]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008d6:	4a6b      	ldr	r2, [pc, #428]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008d8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80008dc:	6313      	str	r3, [r2, #48]	; 0x30
 80008de:	4b69      	ldr	r3, [pc, #420]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80008e6:	61fb      	str	r3, [r7, #28]
 80008e8:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 80008ea:	2300      	movs	r3, #0
 80008ec:	61bb      	str	r3, [r7, #24]
 80008ee:	4b65      	ldr	r3, [pc, #404]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008f2:	4a64      	ldr	r2, [pc, #400]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008f4:	f043 0320 	orr.w	r3, r3, #32
 80008f8:	6313      	str	r3, [r2, #48]	; 0x30
 80008fa:	4b62      	ldr	r3, [pc, #392]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80008fc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80008fe:	f003 0320 	and.w	r3, r3, #32
 8000902:	61bb      	str	r3, [r7, #24]
 8000904:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000906:	2300      	movs	r3, #0
 8000908:	617b      	str	r3, [r7, #20]
 800090a:	4b5e      	ldr	r3, [pc, #376]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 800090c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800090e:	4a5d      	ldr	r2, [pc, #372]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000910:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000914:	6313      	str	r3, [r2, #48]	; 0x30
 8000916:	4b5b      	ldr	r3, [pc, #364]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000918:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800091a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800091e:	617b      	str	r3, [r7, #20]
 8000920:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000922:	2300      	movs	r3, #0
 8000924:	613b      	str	r3, [r7, #16]
 8000926:	4b57      	ldr	r3, [pc, #348]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000928:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800092a:	4a56      	ldr	r2, [pc, #344]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 800092c:	f043 0304 	orr.w	r3, r3, #4
 8000930:	6313      	str	r3, [r2, #48]	; 0x30
 8000932:	4b54      	ldr	r3, [pc, #336]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000934:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000936:	f003 0304 	and.w	r3, r3, #4
 800093a:	613b      	str	r3, [r7, #16]
 800093c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 800093e:	2300      	movs	r3, #0
 8000940:	60fb      	str	r3, [r7, #12]
 8000942:	4b50      	ldr	r3, [pc, #320]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000944:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000946:	4a4f      	ldr	r2, [pc, #316]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000948:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800094c:	6313      	str	r3, [r2, #48]	; 0x30
 800094e:	4b4d      	ldr	r3, [pc, #308]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000950:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000952:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000956:	60fb      	str	r3, [r7, #12]
 8000958:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 800095a:	2300      	movs	r3, #0
 800095c:	60bb      	str	r3, [r7, #8]
 800095e:	4b49      	ldr	r3, [pc, #292]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000960:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000962:	4a48      	ldr	r2, [pc, #288]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000964:	f043 0308 	orr.w	r3, r3, #8
 8000968:	6313      	str	r3, [r2, #48]	; 0x30
 800096a:	4b46      	ldr	r3, [pc, #280]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 800096c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800096e:	f003 0308 	and.w	r3, r3, #8
 8000972:	60bb      	str	r3, [r7, #8]
 8000974:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000976:	2300      	movs	r3, #0
 8000978:	607b      	str	r3, [r7, #4]
 800097a:	4b42      	ldr	r3, [pc, #264]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 800097c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800097e:	4a41      	ldr	r2, [pc, #260]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000980:	f043 0301 	orr.w	r3, r3, #1
 8000984:	6313      	str	r3, [r2, #48]	; 0x30
 8000986:	4b3f      	ldr	r3, [pc, #252]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800098a:	f003 0301 	and.w	r3, r3, #1
 800098e:	607b      	str	r3, [r7, #4]
 8000990:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000992:	2300      	movs	r3, #0
 8000994:	603b      	str	r3, [r7, #0]
 8000996:	4b3b      	ldr	r3, [pc, #236]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 8000998:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800099a:	4a3a      	ldr	r2, [pc, #232]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 800099c:	f043 0302 	orr.w	r3, r3, #2
 80009a0:	6313      	str	r3, [r2, #48]	; 0x30
 80009a2:	4b38      	ldr	r3, [pc, #224]	; (8000a84 <MX_GPIO_Init+0x1e8>)
 80009a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80009a6:	f003 0302 	and.w	r3, r3, #2
 80009aa:	603b      	str	r3, [r7, #0]
 80009ac:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOI, Touch_CS_Pin|Touch_MOSI_Pin, GPIO_PIN_RESET);
 80009ae:	2200      	movs	r2, #0
 80009b0:	f44f 7184 	mov.w	r1, #264	; 0x108
 80009b4:	4834      	ldr	r0, [pc, #208]	; (8000a88 <MX_GPIO_Init+0x1ec>)
 80009b6:	f001 fd25 	bl	8002404 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(Touch_CLK_GPIO_Port, Touch_CLK_Pin, GPIO_PIN_RESET);
 80009ba:	2200      	movs	r2, #0
 80009bc:	2140      	movs	r1, #64	; 0x40
 80009be:	4833      	ldr	r0, [pc, #204]	; (8000a8c <MX_GPIO_Init+0x1f0>)
 80009c0:	f001 fd20 	bl	8002404 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_RESET);
 80009c4:	2200      	movs	r2, #0
 80009c6:	2120      	movs	r1, #32
 80009c8:	4831      	ldr	r0, [pc, #196]	; (8000a90 <MX_GPIO_Init+0x1f4>)
 80009ca:	f001 fd1b 	bl	8002404 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PE2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80009ce:	2304      	movs	r3, #4
 80009d0:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80009d2:	2300      	movs	r3, #0
 80009d4:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009d6:	2300      	movs	r3, #0
 80009d8:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 80009da:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009de:	4619      	mov	r1, r3
 80009e0:	482c      	ldr	r0, [pc, #176]	; (8000a94 <MX_GPIO_Init+0x1f8>)
 80009e2:	f001 fb4d 	bl	8002080 <HAL_GPIO_Init>

  /*Configure GPIO pins : PIPin PIPin */
  GPIO_InitStruct.Pin = Touch_CS_Pin|Touch_MOSI_Pin;
 80009e6:	f44f 7384 	mov.w	r3, #264	; 0x108
 80009ea:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80009ec:	2301      	movs	r3, #1
 80009ee:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80009f0:	2300      	movs	r3, #0
 80009f2:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80009f4:	2300      	movs	r3, #0
 80009f6:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 80009f8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80009fc:	4619      	mov	r1, r3
 80009fe:	4822      	ldr	r0, [pc, #136]	; (8000a88 <MX_GPIO_Init+0x1ec>)
 8000a00:	f001 fb3e 	bl	8002080 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Touch_CLK_Pin;
 8000a04:	2340      	movs	r3, #64	; 0x40
 8000a06:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a08:	2301      	movs	r3, #1
 8000a0a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a0c:	2300      	movs	r3, #0
 8000a0e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a10:	2300      	movs	r3, #0
 8000a12:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(Touch_CLK_GPIO_Port, &GPIO_InitStruct);
 8000a14:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a18:	4619      	mov	r1, r3
 8000a1a:	481c      	ldr	r0, [pc, #112]	; (8000a8c <MX_GPIO_Init+0x1f0>)
 8000a1c:	f001 fb30 	bl	8002080 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Touch_INT_Pin;
 8000a20:	2380      	movs	r3, #128	; 0x80
 8000a22:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8000a24:	4b1c      	ldr	r3, [pc, #112]	; (8000a98 <MX_GPIO_Init+0x1fc>)
 8000a26:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 8000a28:	2301      	movs	r3, #1
 8000a2a:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(Touch_INT_GPIO_Port, &GPIO_InitStruct);
 8000a2c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a30:	4619      	mov	r1, r3
 8000a32:	4816      	ldr	r0, [pc, #88]	; (8000a8c <MX_GPIO_Init+0x1f0>)
 8000a34:	f001 fb24 	bl	8002080 <HAL_GPIO_Init>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = Touch_MISO_Pin;
 8000a38:	2308      	movs	r3, #8
 8000a3a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8000a3c:	2300      	movs	r3, #0
 8000a3e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a40:	2300      	movs	r3, #0
 8000a42:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(Touch_MISO_GPIO_Port, &GPIO_InitStruct);
 8000a44:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a48:	4619      	mov	r1, r3
 8000a4a:	4814      	ldr	r0, [pc, #80]	; (8000a9c <MX_GPIO_Init+0x200>)
 8000a4c:	f001 fb18 	bl	8002080 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8000a50:	2320      	movs	r3, #32
 8000a52:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000a54:	2301      	movs	r3, #1
 8000a56:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000a58:	2300      	movs	r3, #0
 8000a5a:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000a5c:	2300      	movs	r3, #0
 8000a5e:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000a60:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8000a64:	4619      	mov	r1, r3
 8000a66:	480a      	ldr	r0, [pc, #40]	; (8000a90 <MX_GPIO_Init+0x1f4>)
 8000a68:	f001 fb0a 	bl	8002080 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8000a6c:	2200      	movs	r2, #0
 8000a6e:	2100      	movs	r1, #0
 8000a70:	2017      	movs	r0, #23
 8000a72:	f000 feae 	bl	80017d2 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8000a76:	2017      	movs	r0, #23
 8000a78:	f000 fec7 	bl	800180a <HAL_NVIC_EnableIRQ>

}
 8000a7c:	bf00      	nop
 8000a7e:	3738      	adds	r7, #56	; 0x38
 8000a80:	46bd      	mov	sp, r7
 8000a82:	bd80      	pop	{r7, pc}
 8000a84:	40023800 	.word	0x40023800
 8000a88:	40022000 	.word	0x40022000
 8000a8c:	40021c00 	.word	0x40021c00
 8000a90:	40020400 	.word	0x40020400
 8000a94:	40021000 	.word	0x40021000
 8000a98:	10210000 	.word	0x10210000
 8000a9c:	40021800 	.word	0x40021800

08000aa0 <MX_LTDC_Init>:

LTDC_HandleTypeDef hltdc;

/* LTDC init function */
void MX_LTDC_Init(void)
{
 8000aa0:	b580      	push	{r7, lr}
 8000aa2:	b08e      	sub	sp, #56	; 0x38
 8000aa4:	af00      	add	r7, sp, #0
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8000aa6:	1d3b      	adds	r3, r7, #4
 8000aa8:	2234      	movs	r2, #52	; 0x34
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4618      	mov	r0, r3
 8000aae:	f01a fea8 	bl	801b802 <memset>

  hltdc.Instance = LTDC;
 8000ab2:	4b3a      	ldr	r3, [pc, #232]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ab4:	4a3a      	ldr	r2, [pc, #232]	; (8000ba0 <MX_LTDC_Init+0x100>)
 8000ab6:	601a      	str	r2, [r3, #0]
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8000ab8:	4b38      	ldr	r3, [pc, #224]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000aba:	2200      	movs	r2, #0
 8000abc:	605a      	str	r2, [r3, #4]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AL;
 8000abe:	4b37      	ldr	r3, [pc, #220]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ac0:	2200      	movs	r2, #0
 8000ac2:	609a      	str	r2, [r3, #8]
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8000ac4:	4b35      	ldr	r3, [pc, #212]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ac6:	2200      	movs	r2, #0
 8000ac8:	60da      	str	r2, [r3, #12]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 8000aca:	4b34      	ldr	r3, [pc, #208]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000acc:	2200      	movs	r2, #0
 8000ace:	611a      	str	r2, [r3, #16]
  hltdc.Init.HorizontalSync = 7;
 8000ad0:	4b32      	ldr	r3, [pc, #200]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ad2:	2207      	movs	r2, #7
 8000ad4:	615a      	str	r2, [r3, #20]
  hltdc.Init.VerticalSync = 3;
 8000ad6:	4b31      	ldr	r3, [pc, #196]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ad8:	2203      	movs	r2, #3
 8000ada:	619a      	str	r2, [r3, #24]
  hltdc.Init.AccumulatedHBP = 14;
 8000adc:	4b2f      	ldr	r3, [pc, #188]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ade:	220e      	movs	r2, #14
 8000ae0:	61da      	str	r2, [r3, #28]
  hltdc.Init.AccumulatedVBP = 5;
 8000ae2:	4b2e      	ldr	r3, [pc, #184]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000ae4:	2205      	movs	r2, #5
 8000ae6:	621a      	str	r2, [r3, #32]
  hltdc.Init.AccumulatedActiveW = 814;
 8000ae8:	4b2c      	ldr	r3, [pc, #176]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000aea:	f240 322e 	movw	r2, #814	; 0x32e
 8000aee:	625a      	str	r2, [r3, #36]	; 0x24
  hltdc.Init.AccumulatedActiveH = 485;
 8000af0:	4b2a      	ldr	r3, [pc, #168]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000af2:	f240 12e5 	movw	r2, #485	; 0x1e5
 8000af6:	629a      	str	r2, [r3, #40]	; 0x28
  hltdc.Init.TotalWidth = 1024;
 8000af8:	4b28      	ldr	r3, [pc, #160]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000afa:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8000afe:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc.Init.TotalHeigh = 507;
 8000b00:	4b26      	ldr	r3, [pc, #152]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b02:	f240 12fb 	movw	r2, #507	; 0x1fb
 8000b06:	631a      	str	r2, [r3, #48]	; 0x30
  hltdc.Init.Backcolor.Blue = 0;
 8000b08:	4b24      	ldr	r3, [pc, #144]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b0a:	2200      	movs	r2, #0
 8000b0c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
  hltdc.Init.Backcolor.Green = 0;
 8000b10:	4b22      	ldr	r3, [pc, #136]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b12:	2200      	movs	r2, #0
 8000b14:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  hltdc.Init.Backcolor.Red = 0;
 8000b18:	4b20      	ldr	r3, [pc, #128]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b1a:	2200      	movs	r2, #0
 8000b1c:	f883 2036 	strb.w	r2, [r3, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8000b20:	481e      	ldr	r0, [pc, #120]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b22:	f001 fcad 	bl	8002480 <HAL_LTDC_Init>
 8000b26:	4603      	mov	r3, r0
 8000b28:	2b00      	cmp	r3, #0
 8000b2a:	d001      	beq.n	8000b30 <MX_LTDC_Init+0x90>
  {
    Error_Handler();
 8000b2c:	f000 fa46 	bl	8000fbc <Error_Handler>
  }
  pLayerCfg.WindowX0 = 0;
 8000b30:	2300      	movs	r3, #0
 8000b32:	607b      	str	r3, [r7, #4]
  pLayerCfg.WindowX1 = 800;
 8000b34:	f44f 7348 	mov.w	r3, #800	; 0x320
 8000b38:	60bb      	str	r3, [r7, #8]
  pLayerCfg.WindowY0 = 0;
 8000b3a:	2300      	movs	r3, #0
 8000b3c:	60fb      	str	r3, [r7, #12]
  pLayerCfg.WindowY1 = 480;
 8000b3e:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8000b42:	613b      	str	r3, [r7, #16]
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8000b44:	2302      	movs	r3, #2
 8000b46:	617b      	str	r3, [r7, #20]
  pLayerCfg.Alpha = 255;
 8000b48:	23ff      	movs	r3, #255	; 0xff
 8000b4a:	61bb      	str	r3, [r7, #24]
  pLayerCfg.Alpha0 = 0;
 8000b4c:	2300      	movs	r3, #0
 8000b4e:	61fb      	str	r3, [r7, #28]
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8000b50:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000b54:	623b      	str	r3, [r7, #32]
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 8000b56:	2305      	movs	r3, #5
 8000b58:	627b      	str	r3, [r7, #36]	; 0x24
  pLayerCfg.FBStartAdress = 0;
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	62bb      	str	r3, [r7, #40]	; 0x28
  pLayerCfg.ImageWidth = 800;
 8000b5e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8000b62:	62fb      	str	r3, [r7, #44]	; 0x2c
  pLayerCfg.ImageHeight = 480;
 8000b64:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8000b68:	633b      	str	r3, [r7, #48]	; 0x30
  pLayerCfg.Backcolor.Blue = 0;
 8000b6a:	2300      	movs	r3, #0
 8000b6c:	f887 3034 	strb.w	r3, [r7, #52]	; 0x34
  pLayerCfg.Backcolor.Green = 0;
 8000b70:	2300      	movs	r3, #0
 8000b72:	f887 3035 	strb.w	r3, [r7, #53]	; 0x35
  pLayerCfg.Backcolor.Red = 250;
 8000b76:	23fa      	movs	r3, #250	; 0xfa
 8000b78:	f887 3036 	strb.w	r3, [r7, #54]	; 0x36
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8000b7c:	1d3b      	adds	r3, r7, #4
 8000b7e:	2200      	movs	r2, #0
 8000b80:	4619      	mov	r1, r3
 8000b82:	4806      	ldr	r0, [pc, #24]	; (8000b9c <MX_LTDC_Init+0xfc>)
 8000b84:	f001 fe04 	bl	8002790 <HAL_LTDC_ConfigLayer>
 8000b88:	4603      	mov	r3, r0
 8000b8a:	2b00      	cmp	r3, #0
 8000b8c:	d001      	beq.n	8000b92 <MX_LTDC_Init+0xf2>
  {
    Error_Handler();
 8000b8e:	f000 fa15 	bl	8000fbc <Error_Handler>
  }

}
 8000b92:	bf00      	nop
 8000b94:	3738      	adds	r7, #56	; 0x38
 8000b96:	46bd      	mov	sp, r7
 8000b98:	bd80      	pop	{r7, pc}
 8000b9a:	bf00      	nop
 8000b9c:	20001774 	.word	0x20001774
 8000ba0:	40016800 	.word	0x40016800

08000ba4 <HAL_LTDC_MspInit>:

void HAL_LTDC_MspInit(LTDC_HandleTypeDef* ltdcHandle)
{
 8000ba4:	b580      	push	{r7, lr}
 8000ba6:	b08c      	sub	sp, #48	; 0x30
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000bac:	f107 031c 	add.w	r3, r7, #28
 8000bb0:	2200      	movs	r2, #0
 8000bb2:	601a      	str	r2, [r3, #0]
 8000bb4:	605a      	str	r2, [r3, #4]
 8000bb6:	609a      	str	r2, [r3, #8]
 8000bb8:	60da      	str	r2, [r3, #12]
 8000bba:	611a      	str	r2, [r3, #16]
  if(ltdcHandle->Instance==LTDC)
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	681b      	ldr	r3, [r3, #0]
 8000bc0:	4a50      	ldr	r2, [pc, #320]	; (8000d04 <HAL_LTDC_MspInit+0x160>)
 8000bc2:	4293      	cmp	r3, r2
 8000bc4:	f040 809a 	bne.w	8000cfc <HAL_LTDC_MspInit+0x158>
  {
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
    /* LTDC clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8000bc8:	2300      	movs	r3, #0
 8000bca:	61bb      	str	r3, [r7, #24]
 8000bcc:	4b4e      	ldr	r3, [pc, #312]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bce:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bd0:	4a4d      	ldr	r2, [pc, #308]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bd2:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 8000bd6:	6453      	str	r3, [r2, #68]	; 0x44
 8000bd8:	4b4b      	ldr	r3, [pc, #300]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bda:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000bdc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8000be0:	61bb      	str	r3, [r7, #24]
 8000be2:	69bb      	ldr	r3, [r7, #24]
  
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8000be4:	2300      	movs	r3, #0
 8000be6:	617b      	str	r3, [r7, #20]
 8000be8:	4b47      	ldr	r3, [pc, #284]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bec:	4a46      	ldr	r2, [pc, #280]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000bf2:	6313      	str	r3, [r2, #48]	; 0x30
 8000bf4:	4b44      	ldr	r3, [pc, #272]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000bf6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000bf8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8000bfc:	617b      	str	r3, [r7, #20]
 8000bfe:	697b      	ldr	r3, [r7, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8000c00:	2300      	movs	r3, #0
 8000c02:	613b      	str	r3, [r7, #16]
 8000c04:	4b40      	ldr	r3, [pc, #256]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c06:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c08:	4a3f      	ldr	r2, [pc, #252]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c0a:	f043 0320 	orr.w	r3, r3, #32
 8000c0e:	6313      	str	r3, [r2, #48]	; 0x30
 8000c10:	4b3d      	ldr	r3, [pc, #244]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c12:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c14:	f003 0320 	and.w	r3, r3, #32
 8000c18:	613b      	str	r3, [r7, #16]
 8000c1a:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8000c1c:	2300      	movs	r3, #0
 8000c1e:	60fb      	str	r3, [r7, #12]
 8000c20:	4b39      	ldr	r3, [pc, #228]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c24:	4a38      	ldr	r2, [pc, #224]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c26:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c2a:	6313      	str	r3, [r2, #48]	; 0x30
 8000c2c:	4b36      	ldr	r3, [pc, #216]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c2e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c30:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8000c34:	60fb      	str	r3, [r7, #12]
 8000c36:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8000c38:	2300      	movs	r3, #0
 8000c3a:	60bb      	str	r3, [r7, #8]
 8000c3c:	4b32      	ldr	r3, [pc, #200]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c3e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c40:	4a31      	ldr	r2, [pc, #196]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c42:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000c46:	6313      	str	r3, [r2, #48]	; 0x30
 8000c48:	4b2f      	ldr	r3, [pc, #188]	; (8000d08 <HAL_LTDC_MspInit+0x164>)
 8000c4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000c4c:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8000c50:	60bb      	str	r3, [r7, #8]
 8000c52:	68bb      	ldr	r3, [r7, #8]
    PI4     ------> LTDC_B4
    PI5     ------> LTDC_B5
    PI6     ------> LTDC_B6
    PI7     ------> LTDC_B7 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_0|GPIO_PIN_1 
 8000c54:	f240 63f7 	movw	r3, #1783	; 0x6f7
 8000c58:	61fb      	str	r3, [r7, #28]
                          |GPIO_PIN_2|GPIO_PIN_4|GPIO_PIN_5|GPIO_PIN_6 
                          |GPIO_PIN_7;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c5a:	2302      	movs	r3, #2
 8000c5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c5e:	2300      	movs	r3, #0
 8000c60:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c62:	2300      	movs	r3, #0
 8000c64:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000c66:	230e      	movs	r3, #14
 8000c68:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8000c6a:	f107 031c 	add.w	r3, r7, #28
 8000c6e:	4619      	mov	r1, r3
 8000c70:	4826      	ldr	r0, [pc, #152]	; (8000d0c <HAL_LTDC_MspInit+0x168>)
 8000c72:	f001 fa05 	bl	8002080 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8000c76:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c7a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c7c:	2302      	movs	r3, #2
 8000c7e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000c80:	2300      	movs	r3, #0
 8000c82:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000c84:	2300      	movs	r3, #0
 8000c86:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000c88:	230e      	movs	r3, #14
 8000c8a:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8000c8c:	f107 031c 	add.w	r3, r7, #28
 8000c90:	4619      	mov	r1, r3
 8000c92:	481f      	ldr	r0, [pc, #124]	; (8000d10 <HAL_LTDC_MspInit+0x16c>)
 8000c94:	f001 f9f4 	bl	8002080 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_12 
 8000c98:	f44f 437e 	mov.w	r3, #65024	; 0xfe00
 8000c9c:	61fb      	str	r3, [r7, #28]
                          |GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000c9e:	2302      	movs	r3, #2
 8000ca0:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000ca2:	2300      	movs	r3, #0
 8000ca4:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000ca6:	2300      	movs	r3, #0
 8000ca8:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000caa:	230e      	movs	r3, #14
 8000cac:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8000cae:	f107 031c 	add.w	r3, r7, #28
 8000cb2:	4619      	mov	r1, r3
 8000cb4:	4817      	ldr	r0, [pc, #92]	; (8000d14 <HAL_LTDC_MspInit+0x170>)
 8000cb6:	f001 f9e3 	bl	8002080 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8000cba:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
 8000cbe:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8000cc0:	2302      	movs	r3, #2
 8000cc2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000cc4:	2300      	movs	r3, #0
 8000cc6:	627b      	str	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000cc8:	2300      	movs	r3, #0
 8000cca:	62bb      	str	r3, [r7, #40]	; 0x28
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8000ccc:	230e      	movs	r3, #14
 8000cce:	62fb      	str	r3, [r7, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8000cd0:	f107 031c 	add.w	r3, r7, #28
 8000cd4:	4619      	mov	r1, r3
 8000cd6:	4810      	ldr	r0, [pc, #64]	; (8000d18 <HAL_LTDC_MspInit+0x174>)
 8000cd8:	f001 f9d2 	bl	8002080 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 0, 0);
 8000cdc:	2200      	movs	r2, #0
 8000cde:	2100      	movs	r1, #0
 8000ce0:	2058      	movs	r0, #88	; 0x58
 8000ce2:	f000 fd76 	bl	80017d2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8000ce6:	2058      	movs	r0, #88	; 0x58
 8000ce8:	f000 fd8f 	bl	800180a <HAL_NVIC_EnableIRQ>
    HAL_NVIC_SetPriority(LTDC_ER_IRQn, 0, 0);
 8000cec:	2200      	movs	r2, #0
 8000cee:	2100      	movs	r1, #0
 8000cf0:	2059      	movs	r0, #89	; 0x59
 8000cf2:	f000 fd6e 	bl	80017d2 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_ER_IRQn);
 8000cf6:	2059      	movs	r0, #89	; 0x59
 8000cf8:	f000 fd87 	bl	800180a <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }
}
 8000cfc:	bf00      	nop
 8000cfe:	3730      	adds	r7, #48	; 0x30
 8000d00:	46bd      	mov	sp, r7
 8000d02:	bd80      	pop	{r7, pc}
 8000d04:	40016800 	.word	0x40016800
 8000d08:	40023800 	.word	0x40023800
 8000d0c:	40022000 	.word	0x40022000
 8000d10:	40021400 	.word	0x40021400
 8000d14:	40021c00 	.word	0x40021c00
 8000d18:	40021800 	.word	0x40021800

08000d1c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	f5ad 5dcd 	sub.w	sp, sp, #6560	; 0x19a0
 8000d22:	b084      	sub	sp, #16
 8000d24:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	toggle = false;
 8000d26:	4b5b      	ldr	r3, [pc, #364]	; (8000e94 <main+0x178>)
 8000d28:	2200      	movs	r2, #0
 8000d2a:	701a      	strb	r2, [r3, #0]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000d2c:	f000 fbc0 	bl	80014b0 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000d30:	f000 f8ba 	bl	8000ea8 <SystemClock_Config>

  /* USER CODE BEGIN SysInit */
  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000d34:	f7ff fdb2 	bl	800089c <MX_GPIO_Init>
  MX_FMC_Init();
 8000d38:	f7ff fcd4 	bl	80006e4 <MX_FMC_Init>
  FMC_SDRAM_CommandTypeDef command;
////Enable The clock
HAL_Delay(100);
 8000d3c:	2064      	movs	r0, #100	; 0x64
 8000d3e:	f000 fc29 	bl	8001594 <HAL_Delay>
command.CommandMode = FMC_SDRAM_CMD_CLK_ENABLE;
 8000d42:	2301      	movs	r3, #1
 8000d44:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d48:	6013      	str	r3, [r2, #0]
command.CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1;
 8000d4a:	2310      	movs	r3, #16
 8000d4c:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d50:	f102 0204 	add.w	r2, r2, #4
 8000d54:	6013      	str	r3, [r2, #0]
command.AutoRefreshNumber= 2;
 8000d56:	2302      	movs	r3, #2
 8000d58:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d5c:	f102 0208 	add.w	r2, r2, #8
 8000d60:	6013      	str	r3, [r2, #0]
command.ModeRegisterDefinition=0;
 8000d62:	2300      	movs	r3, #0
 8000d64:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d68:	f102 020c 	add.w	r2, r2, #12
 8000d6c:	6013      	str	r3, [r2, #0]
HAL_SDRAM_SendCommand(&hsdram1, &command, 5000);
 8000d6e:	f507 53cd 	add.w	r3, r7, #6560	; 0x19a0
 8000d72:	f241 3288 	movw	r2, #5000	; 0x1388
 8000d76:	4619      	mov	r1, r3
 8000d78:	4847      	ldr	r0, [pc, #284]	; (8000e98 <main+0x17c>)
 8000d7a:	f003 fd56 	bl	800482a <HAL_SDRAM_SendCommand>
HAL_Delay(100);
 8000d7e:	2064      	movs	r0, #100	; 0x64
 8000d80:	f000 fc08 	bl	8001594 <HAL_Delay>
////Precharge SDRAM
command.CommandMode = FMC_SDRAM_CMD_PALL;
 8000d84:	2302      	movs	r3, #2
 8000d86:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d8a:	6013      	str	r3, [r2, #0]
command.CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1;
 8000d8c:	2310      	movs	r3, #16
 8000d8e:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d92:	f102 0204 	add.w	r2, r2, #4
 8000d96:	6013      	str	r3, [r2, #0]
command.AutoRefreshNumber= 4;
 8000d98:	2304      	movs	r3, #4
 8000d9a:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000d9e:	f102 0208 	add.w	r2, r2, #8
 8000da2:	6013      	str	r3, [r2, #0]
command.ModeRegisterDefinition=0;
 8000da4:	2300      	movs	r3, #0
 8000da6:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000daa:	f102 020c 	add.w	r2, r2, #12
 8000dae:	6013      	str	r3, [r2, #0]
HAL_SDRAM_SendCommand(&hsdram1, &command, 5000);
 8000db0:	f507 53cd 	add.w	r3, r7, #6560	; 0x19a0
 8000db4:	f241 3288 	movw	r2, #5000	; 0x1388
 8000db8:	4619      	mov	r1, r3
 8000dba:	4837      	ldr	r0, [pc, #220]	; (8000e98 <main+0x17c>)
 8000dbc:	f003 fd35 	bl	800482a <HAL_SDRAM_SendCommand>
HAL_Delay(100);
 8000dc0:	2064      	movs	r0, #100	; 0x64
 8000dc2:	f000 fbe7 	bl	8001594 <HAL_Delay>
////Precharge SDRAM
command.CommandMode = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8000dc6:	2303      	movs	r3, #3
 8000dc8:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000dcc:	6013      	str	r3, [r2, #0]
command.CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1;
 8000dce:	2310      	movs	r3, #16
 8000dd0:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000dd4:	f102 0204 	add.w	r2, r2, #4
 8000dd8:	6013      	str	r3, [r2, #0]
command.AutoRefreshNumber= 8;
 8000dda:	2308      	movs	r3, #8
 8000ddc:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000de0:	f102 0208 	add.w	r2, r2, #8
 8000de4:	6013      	str	r3, [r2, #0]
command.ModeRegisterDefinition=0;
 8000de6:	2300      	movs	r3, #0
 8000de8:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000dec:	f102 020c 	add.w	r2, r2, #12
 8000df0:	6013      	str	r3, [r2, #0]
HAL_SDRAM_SendCommand(&hsdram1, &command, 5000);
 8000df2:	f507 53cd 	add.w	r3, r7, #6560	; 0x19a0
 8000df6:	f241 3288 	movw	r2, #5000	; 0x1388
 8000dfa:	4619      	mov	r1, r3
 8000dfc:	4826      	ldr	r0, [pc, #152]	; (8000e98 <main+0x17c>)
 8000dfe:	f003 fd14 	bl	800482a <HAL_SDRAM_SendCommand>
HAL_Delay(100);
 8000e02:	2064      	movs	r0, #100	; 0x64
 8000e04:	f000 fbc6 	bl	8001594 <HAL_Delay>
///
command.CommandMode = FMC_SDRAM_CMD_LOAD_MODE;
 8000e08:	2304      	movs	r3, #4
 8000e0a:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000e0e:	6013      	str	r3, [r2, #0]
    command.CommandTarget = FMC_SDRAM_CMD_TARGET_BANK1;
 8000e10:	2310      	movs	r3, #16
 8000e12:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000e16:	f102 0204 	add.w	r2, r2, #4
 8000e1a:	6013      	str	r3, [r2, #0]
    command.AutoRefreshNumber= 4;
 8000e1c:	2304      	movs	r3, #4
 8000e1e:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000e22:	f102 0208 	add.w	r2, r2, #8
 8000e26:	6013      	str	r3, [r2, #0]
    command.ModeRegisterDefinition=0x130;
 8000e28:	f44f 7398 	mov.w	r3, #304	; 0x130
 8000e2c:	f507 52cd 	add.w	r2, r7, #6560	; 0x19a0
 8000e30:	f102 020c 	add.w	r2, r2, #12
 8000e34:	6013      	str	r3, [r2, #0]
    HAL_SDRAM_SendCommand(&hsdram1, &command, 5000);
 8000e36:	f507 53cd 	add.w	r3, r7, #6560	; 0x19a0
 8000e3a:	f241 3288 	movw	r2, #5000	; 0x1388
 8000e3e:	4619      	mov	r1, r3
 8000e40:	4815      	ldr	r0, [pc, #84]	; (8000e98 <main+0x17c>)
 8000e42:	f003 fcf2 	bl	800482a <HAL_SDRAM_SendCommand>
    HAL_Delay(100);
 8000e46:	2064      	movs	r0, #100	; 0x64
 8000e48:	f000 fba4 	bl	8001594 <HAL_Delay>
    ///
HAL_SDRAM_WriteProtection_Disable(&hsdram1);
 8000e4c:	4812      	ldr	r0, [pc, #72]	; (8000e98 <main+0x17c>)
 8000e4e:	f003 fccb 	bl	80047e8 <HAL_SDRAM_WriteProtection_Disable>
HAL_Delay(100);
 8000e52:	2064      	movs	r0, #100	; 0x64
 8000e54:	f000 fb9e 	bl	8001594 <HAL_Delay>
  MX_USART1_UART_Init();
 8000e58:	f000 fa8e 	bl	8001378 <MX_USART1_UART_Init>
  MX_CRC_Init();
 8000e5c:	f7ff fb98 	bl	8000590 <MX_CRC_Init>
  MX_LTDC_Init();
 8000e60:	f7ff fe1e 	bl	8000aa0 <MX_LTDC_Init>
  MX_SDIO_SD_Init();
 8000e64:	f000 f8b2 	bl	8000fcc <MX_SDIO_SD_Init>
  MX_FATFS_Init();
 8000e68:	f005 f81c 	bl	8005ea4 <MX_FATFS_Init>
  MX_DMA2D_Init();
 8000e6c:	f7ff fbc6 	bl	80005fc <MX_DMA2D_Init>
  MX_TouchGFX_Init();
 8000e70:	f005 fa03 	bl	800627a <MX_TouchGFX_Init>
         ///
     HAL_SDRAM_WriteProtection_Disable(&hsdram1);
     HAL_Delay(100);
	 */
     ///////////////////////////////////////////////////////////////////////////TURN LCD ON
       HAL_GPIO_WritePin(GPIOB, GPIO_PIN_5, GPIO_PIN_SET);
 8000e74:	2201      	movs	r2, #1
 8000e76:	2120      	movs	r1, #32
 8000e78:	4808      	ldr	r0, [pc, #32]	; (8000e9c <main+0x180>)
 8000e7a:	f001 fac3 	bl	8002404 <HAL_GPIO_WritePin>
        HAL_UART_Transmit(&huart1, (uint8_t*)"START\n", 6, 5000);
 8000e7e:	f241 3388 	movw	r3, #5000	; 0x1388
 8000e82:	2206      	movs	r2, #6
 8000e84:	4906      	ldr	r1, [pc, #24]	; (8000ea0 <main+0x184>)
 8000e86:	4807      	ldr	r0, [pc, #28]	; (8000ea4 <main+0x188>)
 8000e88:	f003 fd47 	bl	800491a <HAL_UART_Transmit>

  while (1)
  {


  MX_TouchGFX_Process();
 8000e8c:	f005 f9fb 	bl	8006286 <MX_TouchGFX_Process>
 8000e90:	e7fc      	b.n	8000e8c <main+0x170>
 8000e92:	bf00      	nop
 8000e94:	2000181c 	.word	0x2000181c
 8000e98:	20001740 	.word	0x20001740
 8000e9c:	40020400 	.word	0x40020400
 8000ea0:	0801c714 	.word	0x0801c714
 8000ea4:	200018a4 	.word	0x200018a4

08000ea8 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8000ea8:	b580      	push	{r7, lr}
 8000eaa:	b0a0      	sub	sp, #128	; 0x80
 8000eac:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8000eae:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000eb2:	2230      	movs	r2, #48	; 0x30
 8000eb4:	2100      	movs	r1, #0
 8000eb6:	4618      	mov	r0, r3
 8000eb8:	f01a fca3 	bl	801b802 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8000ebc:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000ec0:	2200      	movs	r2, #0
 8000ec2:	601a      	str	r2, [r3, #0]
 8000ec4:	605a      	str	r2, [r3, #4]
 8000ec6:	609a      	str	r2, [r3, #8]
 8000ec8:	60da      	str	r2, [r3, #12]
 8000eca:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8000ecc:	f107 030c 	add.w	r3, r7, #12
 8000ed0:	2230      	movs	r2, #48	; 0x30
 8000ed2:	2100      	movs	r1, #0
 8000ed4:	4618      	mov	r0, r3
 8000ed6:	f01a fc94 	bl	801b802 <memset>

  /** Configure the main internal regulator output voltage 
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8000eda:	2300      	movs	r3, #0
 8000edc:	60bb      	str	r3, [r7, #8]
 8000ede:	4b35      	ldr	r3, [pc, #212]	; (8000fb4 <SystemClock_Config+0x10c>)
 8000ee0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000ee2:	4a34      	ldr	r2, [pc, #208]	; (8000fb4 <SystemClock_Config+0x10c>)
 8000ee4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8000ee8:	6413      	str	r3, [r2, #64]	; 0x40
 8000eea:	4b32      	ldr	r3, [pc, #200]	; (8000fb4 <SystemClock_Config+0x10c>)
 8000eec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8000eee:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8000ef2:	60bb      	str	r3, [r7, #8]
 8000ef4:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	607b      	str	r3, [r7, #4]
 8000efa:	4b2f      	ldr	r3, [pc, #188]	; (8000fb8 <SystemClock_Config+0x110>)
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	4a2e      	ldr	r2, [pc, #184]	; (8000fb8 <SystemClock_Config+0x110>)
 8000f00:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8000f04:	6013      	str	r3, [r2, #0]
 8000f06:	4b2c      	ldr	r3, [pc, #176]	; (8000fb8 <SystemClock_Config+0x110>)
 8000f08:	681b      	ldr	r3, [r3, #0]
 8000f0a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8000f0e:	607b      	str	r3, [r7, #4]
 8000f10:	687b      	ldr	r3, [r7, #4]
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 8000f12:	2301      	movs	r3, #1
 8000f14:	653b      	str	r3, [r7, #80]	; 0x50
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8000f16:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8000f1a:	657b      	str	r3, [r7, #84]	; 0x54
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8000f1c:	2302      	movs	r3, #2
 8000f1e:	66bb      	str	r3, [r7, #104]	; 0x68
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8000f20:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8000f24:	66fb      	str	r3, [r7, #108]	; 0x6c
  RCC_OscInitStruct.PLL.PLLM = 15;
 8000f26:	230f      	movs	r3, #15
 8000f28:	673b      	str	r3, [r7, #112]	; 0x70
  RCC_OscInitStruct.PLL.PLLN = 216;
 8000f2a:	23d8      	movs	r3, #216	; 0xd8
 8000f2c:	677b      	str	r3, [r7, #116]	; 0x74
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8000f2e:	2302      	movs	r3, #2
 8000f30:	67bb      	str	r3, [r7, #120]	; 0x78
  RCC_OscInitStruct.PLL.PLLQ = 8;
 8000f32:	2308      	movs	r3, #8
 8000f34:	67fb      	str	r3, [r7, #124]	; 0x7c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8000f36:	f107 0350 	add.w	r3, r7, #80	; 0x50
 8000f3a:	4618      	mov	r0, r3
 8000f3c:	f001 fe86 	bl	8002c4c <HAL_RCC_OscConfig>
 8000f40:	4603      	mov	r3, r0
 8000f42:	2b00      	cmp	r3, #0
 8000f44:	d001      	beq.n	8000f4a <SystemClock_Config+0xa2>
  {
    Error_Handler();
 8000f46:	f000 f839 	bl	8000fbc <Error_Handler>
  }
  /** Activate the Over-Drive mode 
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8000f4a:	f001 fe2f 	bl	8002bac <HAL_PWREx_EnableOverDrive>
 8000f4e:	4603      	mov	r3, r0
 8000f50:	2b00      	cmp	r3, #0
 8000f52:	d001      	beq.n	8000f58 <SystemClock_Config+0xb0>
  {
    Error_Handler();
 8000f54:	f000 f832 	bl	8000fbc <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8000f58:	230f      	movs	r3, #15
 8000f5a:	63fb      	str	r3, [r7, #60]	; 0x3c
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8000f5c:	2302      	movs	r3, #2
 8000f5e:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8000f60:	2300      	movs	r3, #0
 8000f62:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8000f64:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
 8000f68:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8000f6a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8000f6e:	64fb      	str	r3, [r7, #76]	; 0x4c

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8000f70:	f107 033c 	add.w	r3, r7, #60	; 0x3c
 8000f74:	2105      	movs	r1, #5
 8000f76:	4618      	mov	r0, r3
 8000f78:	f002 f8d8 	bl	800312c <HAL_RCC_ClockConfig>
 8000f7c:	4603      	mov	r3, r0
 8000f7e:	2b00      	cmp	r3, #0
 8000f80:	d001      	beq.n	8000f86 <SystemClock_Config+0xde>
  {
    Error_Handler();
 8000f82:	f000 f81b 	bl	8000fbc <Error_Handler>
  }
  PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8000f86:	2308      	movs	r3, #8
 8000f88:	60fb      	str	r3, [r7, #12]
  PeriphClkInitStruct.PLLSAI.PLLSAIN = 60;
 8000f8a:	233c      	movs	r3, #60	; 0x3c
 8000f8c:	61fb      	str	r3, [r7, #28]
  PeriphClkInitStruct.PLLSAI.PLLSAIR = 2;
 8000f8e:	2302      	movs	r3, #2
 8000f90:	627b      	str	r3, [r7, #36]	; 0x24
  PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8000f92:	2300      	movs	r3, #0
 8000f94:	633b      	str	r3, [r7, #48]	; 0x30
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8000f96:	f107 030c 	add.w	r3, r7, #12
 8000f9a:	4618      	mov	r0, r3
 8000f9c:	f002 fa92 	bl	80034c4 <HAL_RCCEx_PeriphCLKConfig>
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	2b00      	cmp	r3, #0
 8000fa4:	d001      	beq.n	8000faa <SystemClock_Config+0x102>
  {
    Error_Handler();
 8000fa6:	f000 f809 	bl	8000fbc <Error_Handler>
  }
}
 8000faa:	bf00      	nop
 8000fac:	3780      	adds	r7, #128	; 0x80
 8000fae:	46bd      	mov	sp, r7
 8000fb0:	bd80      	pop	{r7, pc}
 8000fb2:	bf00      	nop
 8000fb4:	40023800 	.word	0x40023800
 8000fb8:	40007000 	.word	0x40007000

08000fbc <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8000fbc:	b480      	push	{r7}
 8000fbe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8000fc0:	bf00      	nop
 8000fc2:	46bd      	mov	sp, r7
 8000fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fc8:	4770      	bx	lr
	...

08000fcc <MX_SDIO_SD_Init>:
SD_HandleTypeDef hsd;

/* SDIO init function */

void MX_SDIO_SD_Init(void)
{
 8000fcc:	b480      	push	{r7}
 8000fce:	af00      	add	r7, sp, #0

  hsd.Instance = SDIO;
 8000fd0:	4b0c      	ldr	r3, [pc, #48]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000fd2:	4a0d      	ldr	r2, [pc, #52]	; (8001008 <MX_SDIO_SD_Init+0x3c>)
 8000fd4:	601a      	str	r2, [r3, #0]
  hsd.Init.ClockEdge = SDIO_CLOCK_EDGE_RISING;
 8000fd6:	4b0b      	ldr	r3, [pc, #44]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000fd8:	2200      	movs	r2, #0
 8000fda:	605a      	str	r2, [r3, #4]
  hsd.Init.ClockBypass = SDIO_CLOCK_BYPASS_DISABLE;
 8000fdc:	4b09      	ldr	r3, [pc, #36]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000fde:	2200      	movs	r2, #0
 8000fe0:	609a      	str	r2, [r3, #8]
  hsd.Init.ClockPowerSave = SDIO_CLOCK_POWER_SAVE_DISABLE;
 8000fe2:	4b08      	ldr	r3, [pc, #32]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000fe4:	2200      	movs	r2, #0
 8000fe6:	60da      	str	r2, [r3, #12]
  hsd.Init.BusWide = SDIO_BUS_WIDE_1B;
 8000fe8:	4b06      	ldr	r3, [pc, #24]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000fea:	2200      	movs	r2, #0
 8000fec:	611a      	str	r2, [r3, #16]
  hsd.Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 8000fee:	4b05      	ldr	r3, [pc, #20]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000ff0:	2200      	movs	r2, #0
 8000ff2:	615a      	str	r2, [r3, #20]
  hsd.Init.ClockDiv = 0;
 8000ff4:	4b03      	ldr	r3, [pc, #12]	; (8001004 <MX_SDIO_SD_Init+0x38>)
 8000ff6:	2200      	movs	r2, #0
 8000ff8:	619a      	str	r2, [r3, #24]

}
 8000ffa:	bf00      	nop
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001002:	4770      	bx	lr
 8001004:	20001820 	.word	0x20001820
 8001008:	40012c00 	.word	0x40012c00

0800100c <HAL_SD_MspInit>:

void HAL_SD_MspInit(SD_HandleTypeDef* sdHandle)
{
 800100c:	b580      	push	{r7, lr}
 800100e:	b08a      	sub	sp, #40	; 0x28
 8001010:	af00      	add	r7, sp, #0
 8001012:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001014:	f107 0314 	add.w	r3, r7, #20
 8001018:	2200      	movs	r2, #0
 800101a:	601a      	str	r2, [r3, #0]
 800101c:	605a      	str	r2, [r3, #4]
 800101e:	609a      	str	r2, [r3, #8]
 8001020:	60da      	str	r2, [r3, #12]
 8001022:	611a      	str	r2, [r3, #16]
  if(sdHandle->Instance==SDIO)
 8001024:	687b      	ldr	r3, [r7, #4]
 8001026:	681b      	ldr	r3, [r3, #0]
 8001028:	4a28      	ldr	r2, [pc, #160]	; (80010cc <HAL_SD_MspInit+0xc0>)
 800102a:	4293      	cmp	r3, r2
 800102c:	d14a      	bne.n	80010c4 <HAL_SD_MspInit+0xb8>
  {
  /* USER CODE BEGIN SDIO_MspInit 0 */

  /* USER CODE END SDIO_MspInit 0 */
    /* SDIO clock enable */
    __HAL_RCC_SDIO_CLK_ENABLE();
 800102e:	2300      	movs	r3, #0
 8001030:	613b      	str	r3, [r7, #16]
 8001032:	4b27      	ldr	r3, [pc, #156]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001034:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001036:	4a26      	ldr	r2, [pc, #152]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001038:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 800103c:	6453      	str	r3, [r2, #68]	; 0x44
 800103e:	4b24      	ldr	r3, [pc, #144]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001040:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001042:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001046:	613b      	str	r3, [r7, #16]
 8001048:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOC_CLK_ENABLE();
 800104a:	2300      	movs	r3, #0
 800104c:	60fb      	str	r3, [r7, #12]
 800104e:	4b20      	ldr	r3, [pc, #128]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001050:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001052:	4a1f      	ldr	r2, [pc, #124]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001054:	f043 0304 	orr.w	r3, r3, #4
 8001058:	6313      	str	r3, [r2, #48]	; 0x30
 800105a:	4b1d      	ldr	r3, [pc, #116]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 800105c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800105e:	f003 0304 	and.w	r3, r3, #4
 8001062:	60fb      	str	r3, [r7, #12]
 8001064:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8001066:	2300      	movs	r3, #0
 8001068:	60bb      	str	r3, [r7, #8]
 800106a:	4b19      	ldr	r3, [pc, #100]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 800106c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800106e:	4a18      	ldr	r2, [pc, #96]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001070:	f043 0308 	orr.w	r3, r3, #8
 8001074:	6313      	str	r3, [r2, #48]	; 0x30
 8001076:	4b16      	ldr	r3, [pc, #88]	; (80010d0 <HAL_SD_MspInit+0xc4>)
 8001078:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800107a:	f003 0308 	and.w	r3, r3, #8
 800107e:	60bb      	str	r3, [r7, #8]
 8001080:	68bb      	ldr	r3, [r7, #8]
    /**SDIO GPIO Configuration    
    PC8     ------> SDIO_D0
    PC12     ------> SDIO_CK
    PD2     ------> SDIO_CMD 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_12;
 8001082:	f44f 5388 	mov.w	r3, #4352	; 0x1100
 8001086:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001088:	2302      	movs	r3, #2
 800108a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800108c:	2300      	movs	r3, #0
 800108e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001090:	2303      	movs	r3, #3
 8001092:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 8001094:	230c      	movs	r3, #12
 8001096:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001098:	f107 0314 	add.w	r3, r7, #20
 800109c:	4619      	mov	r1, r3
 800109e:	480d      	ldr	r0, [pc, #52]	; (80010d4 <HAL_SD_MspInit+0xc8>)
 80010a0:	f000 ffee 	bl	8002080 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_2;
 80010a4:	2304      	movs	r3, #4
 80010a6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80010a8:	2302      	movs	r3, #2
 80010aa:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80010ac:	2300      	movs	r3, #0
 80010ae:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80010b0:	2303      	movs	r3, #3
 80010b2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF12_SDIO;
 80010b4:	230c      	movs	r3, #12
 80010b6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 80010b8:	f107 0314 	add.w	r3, r7, #20
 80010bc:	4619      	mov	r1, r3
 80010be:	4806      	ldr	r0, [pc, #24]	; (80010d8 <HAL_SD_MspInit+0xcc>)
 80010c0:	f000 ffde 	bl	8002080 <HAL_GPIO_Init>

  /* USER CODE BEGIN SDIO_MspInit 1 */

  /* USER CODE END SDIO_MspInit 1 */
  }
}
 80010c4:	bf00      	nop
 80010c6:	3728      	adds	r7, #40	; 0x28
 80010c8:	46bd      	mov	sp, r7
 80010ca:	bd80      	pop	{r7, pc}
 80010cc:	40012c00 	.word	0x40012c00
 80010d0:	40023800 	.word	0x40023800
 80010d4:	40020800 	.word	0x40020800
 80010d8:	40020c00 	.word	0x40020c00

080010dc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80010dc:	b480      	push	{r7}
 80010de:	b083      	sub	sp, #12
 80010e0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80010e2:	2300      	movs	r3, #0
 80010e4:	607b      	str	r3, [r7, #4]
 80010e6:	4b10      	ldr	r3, [pc, #64]	; (8001128 <HAL_MspInit+0x4c>)
 80010e8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010ea:	4a0f      	ldr	r2, [pc, #60]	; (8001128 <HAL_MspInit+0x4c>)
 80010ec:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80010f0:	6453      	str	r3, [r2, #68]	; 0x44
 80010f2:	4b0d      	ldr	r3, [pc, #52]	; (8001128 <HAL_MspInit+0x4c>)
 80010f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80010f6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80010fa:	607b      	str	r3, [r7, #4]
 80010fc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80010fe:	2300      	movs	r3, #0
 8001100:	603b      	str	r3, [r7, #0]
 8001102:	4b09      	ldr	r3, [pc, #36]	; (8001128 <HAL_MspInit+0x4c>)
 8001104:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001106:	4a08      	ldr	r2, [pc, #32]	; (8001128 <HAL_MspInit+0x4c>)
 8001108:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800110c:	6413      	str	r3, [r2, #64]	; 0x40
 800110e:	4b06      	ldr	r3, [pc, #24]	; (8001128 <HAL_MspInit+0x4c>)
 8001110:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001112:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001116:	603b      	str	r3, [r7, #0]
 8001118:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800111a:	bf00      	nop
 800111c:	370c      	adds	r7, #12
 800111e:	46bd      	mov	sp, r7
 8001120:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001124:	4770      	bx	lr
 8001126:	bf00      	nop
 8001128:	40023800 	.word	0x40023800

0800112c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 800112c:	b480      	push	{r7}
 800112e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001130:	bf00      	nop
 8001132:	46bd      	mov	sp, r7
 8001134:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001138:	4770      	bx	lr

0800113a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800113a:	b480      	push	{r7}
 800113c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800113e:	e7fe      	b.n	800113e <HardFault_Handler+0x4>

08001140 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001140:	b480      	push	{r7}
 8001142:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001144:	e7fe      	b.n	8001144 <MemManage_Handler+0x4>

08001146 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001146:	b480      	push	{r7}
 8001148:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 800114a:	e7fe      	b.n	800114a <BusFault_Handler+0x4>

0800114c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 800114c:	b480      	push	{r7}
 800114e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001150:	e7fe      	b.n	8001150 <UsageFault_Handler+0x4>

08001152 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001152:	b480      	push	{r7}
 8001154:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001156:	bf00      	nop
 8001158:	46bd      	mov	sp, r7
 800115a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800115e:	4770      	bx	lr

08001160 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001160:	b480      	push	{r7}
 8001162:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001164:	bf00      	nop
 8001166:	46bd      	mov	sp, r7
 8001168:	f85d 7b04 	ldr.w	r7, [sp], #4
 800116c:	4770      	bx	lr

0800116e <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 800116e:	b480      	push	{r7}
 8001170:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001172:	bf00      	nop
 8001174:	46bd      	mov	sp, r7
 8001176:	f85d 7b04 	ldr.w	r7, [sp], #4
 800117a:	4770      	bx	lr

0800117c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800117c:	b580      	push	{r7, lr}
 800117e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001180:	f000 f9e8 	bl	8001554 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001184:	bf00      	nop
 8001186:	bd80      	pop	{r7, pc}

08001188 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001188:	b580      	push	{r7, lr}
 800118a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_7);
 800118c:	2080      	movs	r0, #128	; 0x80
 800118e:	f001 f953 	bl	8002438 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001192:	bf00      	nop
 8001194:	bd80      	pop	{r7, pc}
	...

08001198 <LTDC_IRQHandler>:

/**
  * @brief This function handles LTDC global interrupt.
  */
void LTDC_IRQHandler(void)
{
 8001198:	b580      	push	{r7, lr}
 800119a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800119c:	4802      	ldr	r0, [pc, #8]	; (80011a8 <LTDC_IRQHandler+0x10>)
 800119e:	f001 fa3f 	bl	8002620 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_IRQn 1 */

  /* USER CODE END LTDC_IRQn 1 */
}
 80011a2:	bf00      	nop
 80011a4:	bd80      	pop	{r7, pc}
 80011a6:	bf00      	nop
 80011a8:	20001774 	.word	0x20001774

080011ac <LTDC_ER_IRQHandler>:

/**
  * @brief This function handles LTDC global error interrupt.
  */
void LTDC_ER_IRQHandler(void)
{
 80011ac:	b580      	push	{r7, lr}
 80011ae:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN LTDC_ER_IRQn 0 */

  /* USER CODE END LTDC_ER_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 80011b0:	4802      	ldr	r0, [pc, #8]	; (80011bc <LTDC_ER_IRQHandler+0x10>)
 80011b2:	f001 fa35 	bl	8002620 <HAL_LTDC_IRQHandler>
  /* USER CODE BEGIN LTDC_ER_IRQn 1 */

  /* USER CODE END LTDC_ER_IRQn 1 */
}
 80011b6:	bf00      	nop
 80011b8:	bd80      	pop	{r7, pc}
 80011ba:	bf00      	nop
 80011bc:	20001774 	.word	0x20001774

080011c0 <DMA2D_IRQHandler>:

/**
  * @brief This function handles DMA2D global interrupt.
  */
void DMA2D_IRQHandler(void)
{
 80011c0:	b580      	push	{r7, lr}
 80011c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 80011c4:	4802      	ldr	r0, [pc, #8]	; (80011d0 <DMA2D_IRQHandler+0x10>)
 80011c6:	f000 fd1c 	bl	8001c02 <HAL_DMA2D_IRQHandler>
  /* USER CODE BEGIN DMA2D_IRQn 1 */

  /* USER CODE END DMA2D_IRQn 1 */
}
 80011ca:	bf00      	nop
 80011cc:	bd80      	pop	{r7, pc}
 80011ce:	bf00      	nop
 80011d0:	20001700 	.word	0x20001700

080011d4 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80011d4:	b480      	push	{r7}
 80011d6:	af00      	add	r7, sp, #0
	return 1;
 80011d8:	2301      	movs	r3, #1
}
 80011da:	4618      	mov	r0, r3
 80011dc:	46bd      	mov	sp, r7
 80011de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80011e2:	4770      	bx	lr

080011e4 <_kill>:

int _kill(int pid, int sig)
{
 80011e4:	b580      	push	{r7, lr}
 80011e6:	b082      	sub	sp, #8
 80011e8:	af00      	add	r7, sp, #0
 80011ea:	6078      	str	r0, [r7, #4]
 80011ec:	6039      	str	r1, [r7, #0]
	errno = EINVAL;
 80011ee:	f01a fab1 	bl	801b754 <__errno>
 80011f2:	4602      	mov	r2, r0
 80011f4:	2316      	movs	r3, #22
 80011f6:	6013      	str	r3, [r2, #0]
	return -1;
 80011f8:	f04f 33ff 	mov.w	r3, #4294967295
}
 80011fc:	4618      	mov	r0, r3
 80011fe:	3708      	adds	r7, #8
 8001200:	46bd      	mov	sp, r7
 8001202:	bd80      	pop	{r7, pc}

08001204 <_exit>:

void _exit (int status)
{
 8001204:	b580      	push	{r7, lr}
 8001206:	b082      	sub	sp, #8
 8001208:	af00      	add	r7, sp, #0
 800120a:	6078      	str	r0, [r7, #4]
	_kill(status, -1);
 800120c:	f04f 31ff 	mov.w	r1, #4294967295
 8001210:	6878      	ldr	r0, [r7, #4]
 8001212:	f7ff ffe7 	bl	80011e4 <_kill>
	while (1) {}		/* Make sure we hang here */
 8001216:	e7fe      	b.n	8001216 <_exit+0x12>

08001218 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001218:	b580      	push	{r7, lr}
 800121a:	b086      	sub	sp, #24
 800121c:	af00      	add	r7, sp, #0
 800121e:	60f8      	str	r0, [r7, #12]
 8001220:	60b9      	str	r1, [r7, #8]
 8001222:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001224:	2300      	movs	r3, #0
 8001226:	617b      	str	r3, [r7, #20]
 8001228:	e00a      	b.n	8001240 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 800122a:	f3af 8000 	nop.w
 800122e:	4601      	mov	r1, r0
 8001230:	68bb      	ldr	r3, [r7, #8]
 8001232:	1c5a      	adds	r2, r3, #1
 8001234:	60ba      	str	r2, [r7, #8]
 8001236:	b2ca      	uxtb	r2, r1
 8001238:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800123a:	697b      	ldr	r3, [r7, #20]
 800123c:	3301      	adds	r3, #1
 800123e:	617b      	str	r3, [r7, #20]
 8001240:	697a      	ldr	r2, [r7, #20]
 8001242:	687b      	ldr	r3, [r7, #4]
 8001244:	429a      	cmp	r2, r3
 8001246:	dbf0      	blt.n	800122a <_read+0x12>
	}

return len;
 8001248:	687b      	ldr	r3, [r7, #4]
}
 800124a:	4618      	mov	r0, r3
 800124c:	3718      	adds	r7, #24
 800124e:	46bd      	mov	sp, r7
 8001250:	bd80      	pop	{r7, pc}

08001252 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001252:	b580      	push	{r7, lr}
 8001254:	b086      	sub	sp, #24
 8001256:	af00      	add	r7, sp, #0
 8001258:	60f8      	str	r0, [r7, #12]
 800125a:	60b9      	str	r1, [r7, #8]
 800125c:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800125e:	2300      	movs	r3, #0
 8001260:	617b      	str	r3, [r7, #20]
 8001262:	e009      	b.n	8001278 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8001264:	68bb      	ldr	r3, [r7, #8]
 8001266:	1c5a      	adds	r2, r3, #1
 8001268:	60ba      	str	r2, [r7, #8]
 800126a:	781b      	ldrb	r3, [r3, #0]
 800126c:	4618      	mov	r0, r3
 800126e:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001272:	697b      	ldr	r3, [r7, #20]
 8001274:	3301      	adds	r3, #1
 8001276:	617b      	str	r3, [r7, #20]
 8001278:	697a      	ldr	r2, [r7, #20]
 800127a:	687b      	ldr	r3, [r7, #4]
 800127c:	429a      	cmp	r2, r3
 800127e:	dbf1      	blt.n	8001264 <_write+0x12>
	}
	return len;
 8001280:	687b      	ldr	r3, [r7, #4]
}
 8001282:	4618      	mov	r0, r3
 8001284:	3718      	adds	r7, #24
 8001286:	46bd      	mov	sp, r7
 8001288:	bd80      	pop	{r7, pc}

0800128a <_close>:

int _close(int file)
{
 800128a:	b480      	push	{r7}
 800128c:	b083      	sub	sp, #12
 800128e:	af00      	add	r7, sp, #0
 8001290:	6078      	str	r0, [r7, #4]
	return -1;
 8001292:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001296:	4618      	mov	r0, r3
 8001298:	370c      	adds	r7, #12
 800129a:	46bd      	mov	sp, r7
 800129c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012a0:	4770      	bx	lr

080012a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80012a2:	b480      	push	{r7}
 80012a4:	b083      	sub	sp, #12
 80012a6:	af00      	add	r7, sp, #0
 80012a8:	6078      	str	r0, [r7, #4]
 80012aa:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 80012ac:	683b      	ldr	r3, [r7, #0]
 80012ae:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80012b2:	605a      	str	r2, [r3, #4]
	return 0;
 80012b4:	2300      	movs	r3, #0
}
 80012b6:	4618      	mov	r0, r3
 80012b8:	370c      	adds	r7, #12
 80012ba:	46bd      	mov	sp, r7
 80012bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012c0:	4770      	bx	lr

080012c2 <_isatty>:

int _isatty(int file)
{
 80012c2:	b480      	push	{r7}
 80012c4:	b083      	sub	sp, #12
 80012c6:	af00      	add	r7, sp, #0
 80012c8:	6078      	str	r0, [r7, #4]
	return 1;
 80012ca:	2301      	movs	r3, #1
}
 80012cc:	4618      	mov	r0, r3
 80012ce:	370c      	adds	r7, #12
 80012d0:	46bd      	mov	sp, r7
 80012d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012d6:	4770      	bx	lr

080012d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80012d8:	b480      	push	{r7}
 80012da:	b085      	sub	sp, #20
 80012dc:	af00      	add	r7, sp, #0
 80012de:	60f8      	str	r0, [r7, #12]
 80012e0:	60b9      	str	r1, [r7, #8]
 80012e2:	607a      	str	r2, [r7, #4]
	return 0;
 80012e4:	2300      	movs	r3, #0
}
 80012e6:	4618      	mov	r0, r3
 80012e8:	3714      	adds	r7, #20
 80012ea:	46bd      	mov	sp, r7
 80012ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80012f0:	4770      	bx	lr
	...

080012f4 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 80012f4:	b580      	push	{r7, lr}
 80012f6:	b084      	sub	sp, #16
 80012f8:	af00      	add	r7, sp, #0
 80012fa:	6078      	str	r0, [r7, #4]
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80012fc:	4b11      	ldr	r3, [pc, #68]	; (8001344 <_sbrk+0x50>)
 80012fe:	681b      	ldr	r3, [r3, #0]
 8001300:	2b00      	cmp	r3, #0
 8001302:	d102      	bne.n	800130a <_sbrk+0x16>
		heap_end = &end;
 8001304:	4b0f      	ldr	r3, [pc, #60]	; (8001344 <_sbrk+0x50>)
 8001306:	4a10      	ldr	r2, [pc, #64]	; (8001348 <_sbrk+0x54>)
 8001308:	601a      	str	r2, [r3, #0]

	prev_heap_end = heap_end;
 800130a:	4b0e      	ldr	r3, [pc, #56]	; (8001344 <_sbrk+0x50>)
 800130c:	681b      	ldr	r3, [r3, #0]
 800130e:	60fb      	str	r3, [r7, #12]
	if (heap_end + incr > stack_ptr)
 8001310:	4b0c      	ldr	r3, [pc, #48]	; (8001344 <_sbrk+0x50>)
 8001312:	681a      	ldr	r2, [r3, #0]
 8001314:	687b      	ldr	r3, [r7, #4]
 8001316:	4413      	add	r3, r2
 8001318:	466a      	mov	r2, sp
 800131a:	4293      	cmp	r3, r2
 800131c:	d907      	bls.n	800132e <_sbrk+0x3a>
	{
		errno = ENOMEM;
 800131e:	f01a fa19 	bl	801b754 <__errno>
 8001322:	4602      	mov	r2, r0
 8001324:	230c      	movs	r3, #12
 8001326:	6013      	str	r3, [r2, #0]
		return (caddr_t) -1;
 8001328:	f04f 33ff 	mov.w	r3, #4294967295
 800132c:	e006      	b.n	800133c <_sbrk+0x48>
	}

	heap_end += incr;
 800132e:	4b05      	ldr	r3, [pc, #20]	; (8001344 <_sbrk+0x50>)
 8001330:	681a      	ldr	r2, [r3, #0]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	4413      	add	r3, r2
 8001336:	4a03      	ldr	r2, [pc, #12]	; (8001344 <_sbrk+0x50>)
 8001338:	6013      	str	r3, [r2, #0]

	return (caddr_t) prev_heap_end;
 800133a:	68fb      	ldr	r3, [r7, #12]
}
 800133c:	4618      	mov	r0, r3
 800133e:	3710      	adds	r7, #16
 8001340:	46bd      	mov	sp, r7
 8001342:	bd80      	pop	{r7, pc}
 8001344:	20000118 	.word	0x20000118
 8001348:	20001d58 	.word	0x20001d58

0800134c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800134c:	b480      	push	{r7}
 800134e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8001350:	4b08      	ldr	r3, [pc, #32]	; (8001374 <SystemInit+0x28>)
 8001352:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001356:	4a07      	ldr	r2, [pc, #28]	; (8001374 <SystemInit+0x28>)
 8001358:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800135c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8001360:	4b04      	ldr	r3, [pc, #16]	; (8001374 <SystemInit+0x28>)
 8001362:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8001366:	609a      	str	r2, [r3, #8]
#endif
}
 8001368:	bf00      	nop
 800136a:	46bd      	mov	sp, r7
 800136c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001370:	4770      	bx	lr
 8001372:	bf00      	nop
 8001374:	e000ed00 	.word	0xe000ed00

08001378 <MX_USART1_UART_Init>:
UART_HandleTypeDef huart1;

/* USART1 init function */

void MX_USART1_UART_Init(void)
{
 8001378:	b580      	push	{r7, lr}
 800137a:	af00      	add	r7, sp, #0

  huart1.Instance = USART1;
 800137c:	4b11      	ldr	r3, [pc, #68]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 800137e:	4a12      	ldr	r2, [pc, #72]	; (80013c8 <MX_USART1_UART_Init+0x50>)
 8001380:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8001382:	4b10      	ldr	r3, [pc, #64]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 8001384:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8001388:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 800138a:	4b0e      	ldr	r3, [pc, #56]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 800138c:	2200      	movs	r2, #0
 800138e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8001390:	4b0c      	ldr	r3, [pc, #48]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 8001392:	2200      	movs	r2, #0
 8001394:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8001396:	4b0b      	ldr	r3, [pc, #44]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 8001398:	2200      	movs	r2, #0
 800139a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 800139c:	4b09      	ldr	r3, [pc, #36]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 800139e:	220c      	movs	r2, #12
 80013a0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80013a2:	4b08      	ldr	r3, [pc, #32]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 80013a4:	2200      	movs	r2, #0
 80013a6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80013a8:	4b06      	ldr	r3, [pc, #24]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 80013aa:	2200      	movs	r2, #0
 80013ac:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80013ae:	4805      	ldr	r0, [pc, #20]	; (80013c4 <MX_USART1_UART_Init+0x4c>)
 80013b0:	f003 fa66 	bl	8004880 <HAL_UART_Init>
 80013b4:	4603      	mov	r3, r0
 80013b6:	2b00      	cmp	r3, #0
 80013b8:	d001      	beq.n	80013be <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 80013ba:	f7ff fdff 	bl	8000fbc <Error_Handler>
  }

}
 80013be:	bf00      	nop
 80013c0:	bd80      	pop	{r7, pc}
 80013c2:	bf00      	nop
 80013c4:	200018a4 	.word	0x200018a4
 80013c8:	40011000 	.word	0x40011000

080013cc <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 80013cc:	b580      	push	{r7, lr}
 80013ce:	b08a      	sub	sp, #40	; 0x28
 80013d0:	af00      	add	r7, sp, #0
 80013d2:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80013d4:	f107 0314 	add.w	r3, r7, #20
 80013d8:	2200      	movs	r2, #0
 80013da:	601a      	str	r2, [r3, #0]
 80013dc:	605a      	str	r2, [r3, #4]
 80013de:	609a      	str	r2, [r3, #8]
 80013e0:	60da      	str	r2, [r3, #12]
 80013e2:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART1)
 80013e4:	687b      	ldr	r3, [r7, #4]
 80013e6:	681b      	ldr	r3, [r3, #0]
 80013e8:	4a19      	ldr	r2, [pc, #100]	; (8001450 <HAL_UART_MspInit+0x84>)
 80013ea:	4293      	cmp	r3, r2
 80013ec:	d12c      	bne.n	8001448 <HAL_UART_MspInit+0x7c>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* USART1 clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 80013ee:	2300      	movs	r3, #0
 80013f0:	613b      	str	r3, [r7, #16]
 80013f2:	4b18      	ldr	r3, [pc, #96]	; (8001454 <HAL_UART_MspInit+0x88>)
 80013f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80013f6:	4a17      	ldr	r2, [pc, #92]	; (8001454 <HAL_UART_MspInit+0x88>)
 80013f8:	f043 0310 	orr.w	r3, r3, #16
 80013fc:	6453      	str	r3, [r2, #68]	; 0x44
 80013fe:	4b15      	ldr	r3, [pc, #84]	; (8001454 <HAL_UART_MspInit+0x88>)
 8001400:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001402:	f003 0310 	and.w	r3, r3, #16
 8001406:	613b      	str	r3, [r7, #16]
 8001408:	693b      	ldr	r3, [r7, #16]
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 800140a:	2300      	movs	r3, #0
 800140c:	60fb      	str	r3, [r7, #12]
 800140e:	4b11      	ldr	r3, [pc, #68]	; (8001454 <HAL_UART_MspInit+0x88>)
 8001410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001412:	4a10      	ldr	r2, [pc, #64]	; (8001454 <HAL_UART_MspInit+0x88>)
 8001414:	f043 0301 	orr.w	r3, r3, #1
 8001418:	6313      	str	r3, [r2, #48]	; 0x30
 800141a:	4b0e      	ldr	r3, [pc, #56]	; (8001454 <HAL_UART_MspInit+0x88>)
 800141c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800141e:	f003 0301 	and.w	r3, r3, #1
 8001422:	60fb      	str	r3, [r7, #12]
 8001424:	68fb      	ldr	r3, [r7, #12]
    /**USART1 GPIO Configuration    
    PA9     ------> USART1_TX
    PA10     ------> USART1_RX 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 8001426:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 800142a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800142c:	2302      	movs	r3, #2
 800142e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001430:	2300      	movs	r3, #0
 8001432:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001434:	2303      	movs	r3, #3
 8001436:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8001438:	2307      	movs	r3, #7
 800143a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800143c:	f107 0314 	add.w	r3, r7, #20
 8001440:	4619      	mov	r1, r3
 8001442:	4805      	ldr	r0, [pc, #20]	; (8001458 <HAL_UART_MspInit+0x8c>)
 8001444:	f000 fe1c 	bl	8002080 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }
}
 8001448:	bf00      	nop
 800144a:	3728      	adds	r7, #40	; 0x28
 800144c:	46bd      	mov	sp, r7
 800144e:	bd80      	pop	{r7, pc}
 8001450:	40011000 	.word	0x40011000
 8001454:	40023800 	.word	0x40023800
 8001458:	40020000 	.word	0x40020000

0800145c <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 800145c:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001494 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8001460:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8001462:	e003      	b.n	800146c <LoopCopyDataInit>

08001464 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001464:	4b0c      	ldr	r3, [pc, #48]	; (8001498 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001466:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001468:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 800146a:	3104      	adds	r1, #4

0800146c <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 800146c:	480b      	ldr	r0, [pc, #44]	; (800149c <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800146e:	4b0c      	ldr	r3, [pc, #48]	; (80014a0 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8001470:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8001472:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001474:	d3f6      	bcc.n	8001464 <CopyDataInit>
  ldr  r2, =_sbss
 8001476:	4a0b      	ldr	r2, [pc, #44]	; (80014a4 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001478:	e002      	b.n	8001480 <LoopFillZerobss>

0800147a <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 800147a:	2300      	movs	r3, #0
  str  r3, [r2], #4
 800147c:	f842 3b04 	str.w	r3, [r2], #4

08001480 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8001480:	4b09      	ldr	r3, [pc, #36]	; (80014a8 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8001482:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001484:	d3f9      	bcc.n	800147a <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001486:	f7ff ff61 	bl	800134c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 800148a:	f01a f97b 	bl	801b784 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800148e:	f7ff fc45 	bl	8000d1c <main>
  bx  lr    
 8001492:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8001494:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001498:	0805a018 	.word	0x0805a018
  ldr  r0, =_sdata
 800149c:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80014a0:	200000f8 	.word	0x200000f8
  ldr  r2, =_sbss
 80014a4:	200000f8 	.word	0x200000f8
  ldr  r3, = _ebss
 80014a8:	20001d54 	.word	0x20001d54

080014ac <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80014ac:	e7fe      	b.n	80014ac <ADC_IRQHandler>
	...

080014b0 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 80014b0:	b580      	push	{r7, lr}
 80014b2:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 80014b4:	4b0e      	ldr	r3, [pc, #56]	; (80014f0 <HAL_Init+0x40>)
 80014b6:	681b      	ldr	r3, [r3, #0]
 80014b8:	4a0d      	ldr	r2, [pc, #52]	; (80014f0 <HAL_Init+0x40>)
 80014ba:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80014be:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80014c0:	4b0b      	ldr	r3, [pc, #44]	; (80014f0 <HAL_Init+0x40>)
 80014c2:	681b      	ldr	r3, [r3, #0]
 80014c4:	4a0a      	ldr	r2, [pc, #40]	; (80014f0 <HAL_Init+0x40>)
 80014c6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80014ca:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80014cc:	4b08      	ldr	r3, [pc, #32]	; (80014f0 <HAL_Init+0x40>)
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	4a07      	ldr	r2, [pc, #28]	; (80014f0 <HAL_Init+0x40>)
 80014d2:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80014d6:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80014d8:	2003      	movs	r0, #3
 80014da:	f000 f96f 	bl	80017bc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80014de:	2000      	movs	r0, #0
 80014e0:	f000 f808 	bl	80014f4 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80014e4:	f7ff fdfa 	bl	80010dc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80014e8:	2300      	movs	r3, #0
}
 80014ea:	4618      	mov	r0, r3
 80014ec:	bd80      	pop	{r7, pc}
 80014ee:	bf00      	nop
 80014f0:	40023c00 	.word	0x40023c00

080014f4 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80014f4:	b580      	push	{r7, lr}
 80014f6:	b082      	sub	sp, #8
 80014f8:	af00      	add	r7, sp, #0
 80014fa:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80014fc:	4b12      	ldr	r3, [pc, #72]	; (8001548 <HAL_InitTick+0x54>)
 80014fe:	681a      	ldr	r2, [r3, #0]
 8001500:	4b12      	ldr	r3, [pc, #72]	; (800154c <HAL_InitTick+0x58>)
 8001502:	781b      	ldrb	r3, [r3, #0]
 8001504:	4619      	mov	r1, r3
 8001506:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800150a:	fbb3 f3f1 	udiv	r3, r3, r1
 800150e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001512:	4618      	mov	r0, r3
 8001514:	f000 f995 	bl	8001842 <HAL_SYSTICK_Config>
 8001518:	4603      	mov	r3, r0
 800151a:	2b00      	cmp	r3, #0
 800151c:	d001      	beq.n	8001522 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 800151e:	2301      	movs	r3, #1
 8001520:	e00e      	b.n	8001540 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8001522:	687b      	ldr	r3, [r7, #4]
 8001524:	2b0f      	cmp	r3, #15
 8001526:	d80a      	bhi.n	800153e <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8001528:	2200      	movs	r2, #0
 800152a:	6879      	ldr	r1, [r7, #4]
 800152c:	f04f 30ff 	mov.w	r0, #4294967295
 8001530:	f000 f94f 	bl	80017d2 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8001534:	4a06      	ldr	r2, [pc, #24]	; (8001550 <HAL_InitTick+0x5c>)
 8001536:	687b      	ldr	r3, [r7, #4]
 8001538:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 800153a:	2300      	movs	r3, #0
 800153c:	e000      	b.n	8001540 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 800153e:	2301      	movs	r3, #1
}
 8001540:	4618      	mov	r0, r3
 8001542:	3708      	adds	r7, #8
 8001544:	46bd      	mov	sp, r7
 8001546:	bd80      	pop	{r7, pc}
 8001548:	20000004 	.word	0x20000004
 800154c:	2000000c 	.word	0x2000000c
 8001550:	20000008 	.word	0x20000008

08001554 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8001554:	b480      	push	{r7}
 8001556:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8001558:	4b06      	ldr	r3, [pc, #24]	; (8001574 <HAL_IncTick+0x20>)
 800155a:	781b      	ldrb	r3, [r3, #0]
 800155c:	461a      	mov	r2, r3
 800155e:	4b06      	ldr	r3, [pc, #24]	; (8001578 <HAL_IncTick+0x24>)
 8001560:	681b      	ldr	r3, [r3, #0]
 8001562:	4413      	add	r3, r2
 8001564:	4a04      	ldr	r2, [pc, #16]	; (8001578 <HAL_IncTick+0x24>)
 8001566:	6013      	str	r3, [r2, #0]
}
 8001568:	bf00      	nop
 800156a:	46bd      	mov	sp, r7
 800156c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001570:	4770      	bx	lr
 8001572:	bf00      	nop
 8001574:	2000000c 	.word	0x2000000c
 8001578:	200018e4 	.word	0x200018e4

0800157c <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 800157c:	b480      	push	{r7}
 800157e:	af00      	add	r7, sp, #0
  return uwTick;
 8001580:	4b03      	ldr	r3, [pc, #12]	; (8001590 <HAL_GetTick+0x14>)
 8001582:	681b      	ldr	r3, [r3, #0]
}
 8001584:	4618      	mov	r0, r3
 8001586:	46bd      	mov	sp, r7
 8001588:	f85d 7b04 	ldr.w	r7, [sp], #4
 800158c:	4770      	bx	lr
 800158e:	bf00      	nop
 8001590:	200018e4 	.word	0x200018e4

08001594 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8001594:	b580      	push	{r7, lr}
 8001596:	b084      	sub	sp, #16
 8001598:	af00      	add	r7, sp, #0
 800159a:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 800159c:	f7ff ffee 	bl	800157c <HAL_GetTick>
 80015a0:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 80015a2:	687b      	ldr	r3, [r7, #4]
 80015a4:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80015a6:	68fb      	ldr	r3, [r7, #12]
 80015a8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80015ac:	d005      	beq.n	80015ba <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 80015ae:	4b09      	ldr	r3, [pc, #36]	; (80015d4 <HAL_Delay+0x40>)
 80015b0:	781b      	ldrb	r3, [r3, #0]
 80015b2:	461a      	mov	r2, r3
 80015b4:	68fb      	ldr	r3, [r7, #12]
 80015b6:	4413      	add	r3, r2
 80015b8:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 80015ba:	bf00      	nop
 80015bc:	f7ff ffde 	bl	800157c <HAL_GetTick>
 80015c0:	4602      	mov	r2, r0
 80015c2:	68bb      	ldr	r3, [r7, #8]
 80015c4:	1ad3      	subs	r3, r2, r3
 80015c6:	68fa      	ldr	r2, [r7, #12]
 80015c8:	429a      	cmp	r2, r3
 80015ca:	d8f7      	bhi.n	80015bc <HAL_Delay+0x28>
  {
  }
}
 80015cc:	bf00      	nop
 80015ce:	3710      	adds	r7, #16
 80015d0:	46bd      	mov	sp, r7
 80015d2:	bd80      	pop	{r7, pc}
 80015d4:	2000000c 	.word	0x2000000c

080015d8 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80015d8:	b480      	push	{r7}
 80015da:	b085      	sub	sp, #20
 80015dc:	af00      	add	r7, sp, #0
 80015de:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	f003 0307 	and.w	r3, r3, #7
 80015e6:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80015e8:	4b0c      	ldr	r3, [pc, #48]	; (800161c <__NVIC_SetPriorityGrouping+0x44>)
 80015ea:	68db      	ldr	r3, [r3, #12]
 80015ec:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80015ee:	68ba      	ldr	r2, [r7, #8]
 80015f0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80015f4:	4013      	ands	r3, r2
 80015f6:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80015f8:	68fb      	ldr	r3, [r7, #12]
 80015fa:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80015fc:	68bb      	ldr	r3, [r7, #8]
 80015fe:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8001600:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8001604:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8001608:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800160a:	4a04      	ldr	r2, [pc, #16]	; (800161c <__NVIC_SetPriorityGrouping+0x44>)
 800160c:	68bb      	ldr	r3, [r7, #8]
 800160e:	60d3      	str	r3, [r2, #12]
}
 8001610:	bf00      	nop
 8001612:	3714      	adds	r7, #20
 8001614:	46bd      	mov	sp, r7
 8001616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800161a:	4770      	bx	lr
 800161c:	e000ed00 	.word	0xe000ed00

08001620 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8001620:	b480      	push	{r7}
 8001622:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8001624:	4b04      	ldr	r3, [pc, #16]	; (8001638 <__NVIC_GetPriorityGrouping+0x18>)
 8001626:	68db      	ldr	r3, [r3, #12]
 8001628:	0a1b      	lsrs	r3, r3, #8
 800162a:	f003 0307 	and.w	r3, r3, #7
}
 800162e:	4618      	mov	r0, r3
 8001630:	46bd      	mov	sp, r7
 8001632:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001636:	4770      	bx	lr
 8001638:	e000ed00 	.word	0xe000ed00

0800163c <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800163c:	b480      	push	{r7}
 800163e:	b083      	sub	sp, #12
 8001640:	af00      	add	r7, sp, #0
 8001642:	4603      	mov	r3, r0
 8001644:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001646:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800164a:	2b00      	cmp	r3, #0
 800164c:	db0b      	blt.n	8001666 <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800164e:	79fb      	ldrb	r3, [r7, #7]
 8001650:	f003 021f 	and.w	r2, r3, #31
 8001654:	4907      	ldr	r1, [pc, #28]	; (8001674 <__NVIC_EnableIRQ+0x38>)
 8001656:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800165a:	095b      	lsrs	r3, r3, #5
 800165c:	2001      	movs	r0, #1
 800165e:	fa00 f202 	lsl.w	r2, r0, r2
 8001662:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8001666:	bf00      	nop
 8001668:	370c      	adds	r7, #12
 800166a:	46bd      	mov	sp, r7
 800166c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001670:	4770      	bx	lr
 8001672:	bf00      	nop
 8001674:	e000e100 	.word	0xe000e100

08001678 <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8001678:	b480      	push	{r7}
 800167a:	b083      	sub	sp, #12
 800167c:	af00      	add	r7, sp, #0
 800167e:	4603      	mov	r3, r0
 8001680:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8001682:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001686:	2b00      	cmp	r3, #0
 8001688:	db10      	blt.n	80016ac <__NVIC_DisableIRQ+0x34>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800168a:	79fb      	ldrb	r3, [r7, #7]
 800168c:	f003 021f 	and.w	r2, r3, #31
 8001690:	4909      	ldr	r1, [pc, #36]	; (80016b8 <__NVIC_DisableIRQ+0x40>)
 8001692:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001696:	095b      	lsrs	r3, r3, #5
 8001698:	2001      	movs	r0, #1
 800169a:	fa00 f202 	lsl.w	r2, r0, r2
 800169e:	3320      	adds	r3, #32
 80016a0:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80016a4:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80016a8:	f3bf 8f6f 	isb	sy
    __DSB();
    __ISB();
  }
}
 80016ac:	bf00      	nop
 80016ae:	370c      	adds	r7, #12
 80016b0:	46bd      	mov	sp, r7
 80016b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016b6:	4770      	bx	lr
 80016b8:	e000e100 	.word	0xe000e100

080016bc <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80016bc:	b480      	push	{r7}
 80016be:	b083      	sub	sp, #12
 80016c0:	af00      	add	r7, sp, #0
 80016c2:	4603      	mov	r3, r0
 80016c4:	6039      	str	r1, [r7, #0]
 80016c6:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80016c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	db0a      	blt.n	80016e6 <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016d0:	683b      	ldr	r3, [r7, #0]
 80016d2:	b2da      	uxtb	r2, r3
 80016d4:	490c      	ldr	r1, [pc, #48]	; (8001708 <__NVIC_SetPriority+0x4c>)
 80016d6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80016da:	0112      	lsls	r2, r2, #4
 80016dc:	b2d2      	uxtb	r2, r2
 80016de:	440b      	add	r3, r1
 80016e0:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80016e4:	e00a      	b.n	80016fc <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80016e6:	683b      	ldr	r3, [r7, #0]
 80016e8:	b2da      	uxtb	r2, r3
 80016ea:	4908      	ldr	r1, [pc, #32]	; (800170c <__NVIC_SetPriority+0x50>)
 80016ec:	79fb      	ldrb	r3, [r7, #7]
 80016ee:	f003 030f 	and.w	r3, r3, #15
 80016f2:	3b04      	subs	r3, #4
 80016f4:	0112      	lsls	r2, r2, #4
 80016f6:	b2d2      	uxtb	r2, r2
 80016f8:	440b      	add	r3, r1
 80016fa:	761a      	strb	r2, [r3, #24]
}
 80016fc:	bf00      	nop
 80016fe:	370c      	adds	r7, #12
 8001700:	46bd      	mov	sp, r7
 8001702:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001706:	4770      	bx	lr
 8001708:	e000e100 	.word	0xe000e100
 800170c:	e000ed00 	.word	0xe000ed00

08001710 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 8001710:	b480      	push	{r7}
 8001712:	b089      	sub	sp, #36	; 0x24
 8001714:	af00      	add	r7, sp, #0
 8001716:	60f8      	str	r0, [r7, #12]
 8001718:	60b9      	str	r1, [r7, #8]
 800171a:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 800171c:	68fb      	ldr	r3, [r7, #12]
 800171e:	f003 0307 	and.w	r3, r3, #7
 8001722:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8001724:	69fb      	ldr	r3, [r7, #28]
 8001726:	f1c3 0307 	rsb	r3, r3, #7
 800172a:	2b04      	cmp	r3, #4
 800172c:	bf28      	it	cs
 800172e:	2304      	movcs	r3, #4
 8001730:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8001732:	69fb      	ldr	r3, [r7, #28]
 8001734:	3304      	adds	r3, #4
 8001736:	2b06      	cmp	r3, #6
 8001738:	d902      	bls.n	8001740 <NVIC_EncodePriority+0x30>
 800173a:	69fb      	ldr	r3, [r7, #28]
 800173c:	3b03      	subs	r3, #3
 800173e:	e000      	b.n	8001742 <NVIC_EncodePriority+0x32>
 8001740:	2300      	movs	r3, #0
 8001742:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001744:	f04f 32ff 	mov.w	r2, #4294967295
 8001748:	69bb      	ldr	r3, [r7, #24]
 800174a:	fa02 f303 	lsl.w	r3, r2, r3
 800174e:	43da      	mvns	r2, r3
 8001750:	68bb      	ldr	r3, [r7, #8]
 8001752:	401a      	ands	r2, r3
 8001754:	697b      	ldr	r3, [r7, #20]
 8001756:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8001758:	f04f 31ff 	mov.w	r1, #4294967295
 800175c:	697b      	ldr	r3, [r7, #20]
 800175e:	fa01 f303 	lsl.w	r3, r1, r3
 8001762:	43d9      	mvns	r1, r3
 8001764:	687b      	ldr	r3, [r7, #4]
 8001766:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8001768:	4313      	orrs	r3, r2
         );
}
 800176a:	4618      	mov	r0, r3
 800176c:	3724      	adds	r7, #36	; 0x24
 800176e:	46bd      	mov	sp, r7
 8001770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001774:	4770      	bx	lr
	...

08001778 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8001778:	b580      	push	{r7, lr}
 800177a:	b082      	sub	sp, #8
 800177c:	af00      	add	r7, sp, #0
 800177e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8001780:	687b      	ldr	r3, [r7, #4]
 8001782:	3b01      	subs	r3, #1
 8001784:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8001788:	d301      	bcc.n	800178e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800178a:	2301      	movs	r3, #1
 800178c:	e00f      	b.n	80017ae <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800178e:	4a0a      	ldr	r2, [pc, #40]	; (80017b8 <SysTick_Config+0x40>)
 8001790:	687b      	ldr	r3, [r7, #4]
 8001792:	3b01      	subs	r3, #1
 8001794:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8001796:	210f      	movs	r1, #15
 8001798:	f04f 30ff 	mov.w	r0, #4294967295
 800179c:	f7ff ff8e 	bl	80016bc <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 80017a0:	4b05      	ldr	r3, [pc, #20]	; (80017b8 <SysTick_Config+0x40>)
 80017a2:	2200      	movs	r2, #0
 80017a4:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 80017a6:	4b04      	ldr	r3, [pc, #16]	; (80017b8 <SysTick_Config+0x40>)
 80017a8:	2207      	movs	r2, #7
 80017aa:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 80017ac:	2300      	movs	r3, #0
}
 80017ae:	4618      	mov	r0, r3
 80017b0:	3708      	adds	r7, #8
 80017b2:	46bd      	mov	sp, r7
 80017b4:	bd80      	pop	{r7, pc}
 80017b6:	bf00      	nop
 80017b8:	e000e010 	.word	0xe000e010

080017bc <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 80017bc:	b580      	push	{r7, lr}
 80017be:	b082      	sub	sp, #8
 80017c0:	af00      	add	r7, sp, #0
 80017c2:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 80017c4:	6878      	ldr	r0, [r7, #4]
 80017c6:	f7ff ff07 	bl	80015d8 <__NVIC_SetPriorityGrouping>
}
 80017ca:	bf00      	nop
 80017cc:	3708      	adds	r7, #8
 80017ce:	46bd      	mov	sp, r7
 80017d0:	bd80      	pop	{r7, pc}

080017d2 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80017d2:	b580      	push	{r7, lr}
 80017d4:	b086      	sub	sp, #24
 80017d6:	af00      	add	r7, sp, #0
 80017d8:	4603      	mov	r3, r0
 80017da:	60b9      	str	r1, [r7, #8]
 80017dc:	607a      	str	r2, [r7, #4]
 80017de:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 80017e0:	2300      	movs	r3, #0
 80017e2:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 80017e4:	f7ff ff1c 	bl	8001620 <__NVIC_GetPriorityGrouping>
 80017e8:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 80017ea:	687a      	ldr	r2, [r7, #4]
 80017ec:	68b9      	ldr	r1, [r7, #8]
 80017ee:	6978      	ldr	r0, [r7, #20]
 80017f0:	f7ff ff8e 	bl	8001710 <NVIC_EncodePriority>
 80017f4:	4602      	mov	r2, r0
 80017f6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80017fa:	4611      	mov	r1, r2
 80017fc:	4618      	mov	r0, r3
 80017fe:	f7ff ff5d 	bl	80016bc <__NVIC_SetPriority>
}
 8001802:	bf00      	nop
 8001804:	3718      	adds	r7, #24
 8001806:	46bd      	mov	sp, r7
 8001808:	bd80      	pop	{r7, pc}

0800180a <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 800180a:	b580      	push	{r7, lr}
 800180c:	b082      	sub	sp, #8
 800180e:	af00      	add	r7, sp, #0
 8001810:	4603      	mov	r3, r0
 8001812:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 8001814:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001818:	4618      	mov	r0, r3
 800181a:	f7ff ff0f 	bl	800163c <__NVIC_EnableIRQ>
}
 800181e:	bf00      	nop
 8001820:	3708      	adds	r7, #8
 8001822:	46bd      	mov	sp, r7
 8001824:	bd80      	pop	{r7, pc}

08001826 <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 8001826:	b580      	push	{r7, lr}
 8001828:	b082      	sub	sp, #8
 800182a:	af00      	add	r7, sp, #0
 800182c:	4603      	mov	r3, r0
 800182e:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 8001830:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001834:	4618      	mov	r0, r3
 8001836:	f7ff ff1f 	bl	8001678 <__NVIC_DisableIRQ>
}
 800183a:	bf00      	nop
 800183c:	3708      	adds	r7, #8
 800183e:	46bd      	mov	sp, r7
 8001840:	bd80      	pop	{r7, pc}

08001842 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 8001842:	b580      	push	{r7, lr}
 8001844:	b082      	sub	sp, #8
 8001846:	af00      	add	r7, sp, #0
 8001848:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 800184a:	6878      	ldr	r0, [r7, #4]
 800184c:	f7ff ff94 	bl	8001778 <SysTick_Config>
 8001850:	4603      	mov	r3, r0
}
 8001852:	4618      	mov	r0, r3
 8001854:	3708      	adds	r7, #8
 8001856:	46bd      	mov	sp, r7
 8001858:	bd80      	pop	{r7, pc}

0800185a <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800185a:	b580      	push	{r7, lr}
 800185c:	b082      	sub	sp, #8
 800185e:	af00      	add	r7, sp, #0
 8001860:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	2b00      	cmp	r3, #0
 8001866:	d101      	bne.n	800186c <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8001868:	2301      	movs	r3, #1
 800186a:	e00e      	b.n	800188a <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800186c:	687b      	ldr	r3, [r7, #4]
 800186e:	795b      	ldrb	r3, [r3, #5]
 8001870:	b2db      	uxtb	r3, r3
 8001872:	2b00      	cmp	r3, #0
 8001874:	d105      	bne.n	8001882 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	2200      	movs	r2, #0
 800187a:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800187c:	6878      	ldr	r0, [r7, #4]
 800187e:	f7fe fe9b 	bl	80005b8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8001882:	687b      	ldr	r3, [r7, #4]
 8001884:	2201      	movs	r2, #1
 8001886:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8001888:	2300      	movs	r3, #0
}
 800188a:	4618      	mov	r0, r3
 800188c:	3708      	adds	r7, #8
 800188e:	46bd      	mov	sp, r7
 8001890:	bd80      	pop	{r7, pc}

08001892 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8001892:	b580      	push	{r7, lr}
 8001894:	b082      	sub	sp, #8
 8001896:	af00      	add	r7, sp, #0
 8001898:	6078      	str	r0, [r7, #4]
  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800189a:	687b      	ldr	r3, [r7, #4]
 800189c:	2b00      	cmp	r3, #0
 800189e:	d101      	bne.n	80018a4 <HAL_DMA2D_Init+0x12>
  {
     return HAL_ERROR;
 80018a0:	2301      	movs	r3, #1
 80018a2:	e03b      	b.n	800191c <HAL_DMA2D_Init+0x8a>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if(hdma2d->State == HAL_DMA2D_STATE_RESET)
 80018a4:	687b      	ldr	r3, [r7, #4]
 80018a6:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 80018aa:	b2db      	uxtb	r3, r3
 80018ac:	2b00      	cmp	r3, #0
 80018ae:	d106      	bne.n	80018be <HAL_DMA2D_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80018b0:	687b      	ldr	r3, [r7, #4]
 80018b2:	2200      	movs	r2, #0
 80018b4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80018b8:	6878      	ldr	r0, [r7, #4]
 80018ba:	f7fe fed1 	bl	8000660 <HAL_DMA2D_MspInit>
  }
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80018be:	687b      	ldr	r3, [r7, #4]
 80018c0:	2202      	movs	r2, #2
 80018c2:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80018c6:	687b      	ldr	r3, [r7, #4]
 80018c8:	681b      	ldr	r3, [r3, #0]
 80018ca:	681b      	ldr	r3, [r3, #0]
 80018cc:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	685a      	ldr	r2, [r3, #4]
 80018d4:	687b      	ldr	r3, [r7, #4]
 80018d6:	681b      	ldr	r3, [r3, #0]
 80018d8:	430a      	orrs	r2, r1
 80018da:	601a      	str	r2, [r3, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80018dc:	687b      	ldr	r3, [r7, #4]
 80018de:	681b      	ldr	r3, [r3, #0]
 80018e0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80018e2:	f023 0107 	bic.w	r1, r3, #7
 80018e6:	687b      	ldr	r3, [r7, #4]
 80018e8:	689a      	ldr	r2, [r3, #8]
 80018ea:	687b      	ldr	r3, [r7, #4]
 80018ec:	681b      	ldr	r3, [r3, #0]
 80018ee:	430a      	orrs	r2, r1
 80018f0:	635a      	str	r2, [r3, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80018f2:	687b      	ldr	r3, [r7, #4]
 80018f4:	681b      	ldr	r3, [r3, #0]
 80018f6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80018f8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80018fc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8001900:	687a      	ldr	r2, [r7, #4]
 8001902:	68d1      	ldr	r1, [r2, #12]
 8001904:	687a      	ldr	r2, [r7, #4]
 8001906:	6812      	ldr	r2, [r2, #0]
 8001908:	430b      	orrs	r3, r1
 800190a:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	2200      	movs	r2, #0
 8001910:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	2201      	movs	r2, #1
 8001916:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  return HAL_OK;
 800191a:	2300      	movs	r3, #0
}
 800191c:	4618      	mov	r0, r3
 800191e:	3708      	adds	r7, #8
 8001920:	46bd      	mov	sp, r7
 8001922:	bd80      	pop	{r7, pc}

08001924 <HAL_DMA2D_DeInit>:
  *                 the configuration information for the DMA2D.
  * @retval None
  */

HAL_StatusTypeDef HAL_DMA2D_DeInit(DMA2D_HandleTypeDef *hdma2d)
{
 8001924:	b580      	push	{r7, lr}
 8001926:	b082      	sub	sp, #8
 8001928:	af00      	add	r7, sp, #0
 800192a:	6078      	str	r0, [r7, #4]

  /* Check the DMA2D peripheral state */
  if(hdma2d == NULL)
 800192c:	687b      	ldr	r3, [r7, #4]
 800192e:	2b00      	cmp	r3, #0
 8001930:	d101      	bne.n	8001936 <HAL_DMA2D_DeInit+0x12>
  {
     return HAL_ERROR;
 8001932:	2301      	movs	r3, #1
 8001934:	e05f      	b.n	80019f6 <HAL_DMA2D_DeInit+0xd2>
  }

  /* Before aborting any DMA2D transfer or CLUT loading, check
     first whether or not DMA2D clock is enabled */
  if (__HAL_RCC_DMA2D_IS_CLK_ENABLED())
 8001936:	4b32      	ldr	r3, [pc, #200]	; (8001a00 <HAL_DMA2D_DeInit+0xdc>)
 8001938:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800193a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 800193e:	2b00      	cmp	r3, #0
 8001940:	d02e      	beq.n	80019a0 <HAL_DMA2D_DeInit+0x7c>
  {
    /* Abort DMA2D transfer if any */
    if ((hdma2d->Instance->CR & DMA2D_CR_START) == DMA2D_CR_START)
 8001942:	687b      	ldr	r3, [r7, #4]
 8001944:	681b      	ldr	r3, [r3, #0]
 8001946:	681b      	ldr	r3, [r3, #0]
 8001948:	f003 0301 	and.w	r3, r3, #1
 800194c:	2b01      	cmp	r3, #1
 800194e:	d107      	bne.n	8001960 <HAL_DMA2D_DeInit+0x3c>
    {
      if (HAL_DMA2D_Abort(hdma2d) != HAL_OK)
 8001950:	6878      	ldr	r0, [r7, #4]
 8001952:	f000 f8c1 	bl	8001ad8 <HAL_DMA2D_Abort>
 8001956:	4603      	mov	r3, r0
 8001958:	2b00      	cmp	r3, #0
 800195a:	d021      	beq.n	80019a0 <HAL_DMA2D_DeInit+0x7c>
      {
        /* Issue when aborting DMA2D transfer */
        return HAL_ERROR;
 800195c:	2301      	movs	r3, #1
 800195e:	e04a      	b.n	80019f6 <HAL_DMA2D_DeInit+0xd2>
      }
    }
    else
    {
      /* Abort background CLUT loading if any */
      if ((hdma2d->Instance->BGPFCCR & DMA2D_BGPFCCR_START) == DMA2D_BGPFCCR_START)
 8001960:	687b      	ldr	r3, [r7, #4]
 8001962:	681b      	ldr	r3, [r3, #0]
 8001964:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001966:	f003 0320 	and.w	r3, r3, #32
 800196a:	2b20      	cmp	r3, #32
 800196c:	d108      	bne.n	8001980 <HAL_DMA2D_DeInit+0x5c>
      {
        if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 0U) != HAL_OK)
 800196e:	2100      	movs	r1, #0
 8001970:	6878      	ldr	r0, [r7, #4]
 8001972:	f000 f8f7 	bl	8001b64 <HAL_DMA2D_CLUTLoading_Abort>
 8001976:	4603      	mov	r3, r0
 8001978:	2b00      	cmp	r3, #0
 800197a:	d011      	beq.n	80019a0 <HAL_DMA2D_DeInit+0x7c>
        {
          /* Issue when aborting background CLUT loading */
          return HAL_ERROR;
 800197c:	2301      	movs	r3, #1
 800197e:	e03a      	b.n	80019f6 <HAL_DMA2D_DeInit+0xd2>
        }
      }
      else
      {
        /* Abort foreground CLUT loading if any */
        if ((hdma2d->Instance->FGPFCCR & DMA2D_FGPFCCR_START) == DMA2D_FGPFCCR_START)
 8001980:	687b      	ldr	r3, [r7, #4]
 8001982:	681b      	ldr	r3, [r3, #0]
 8001984:	69db      	ldr	r3, [r3, #28]
 8001986:	f003 0320 	and.w	r3, r3, #32
 800198a:	2b20      	cmp	r3, #32
 800198c:	d108      	bne.n	80019a0 <HAL_DMA2D_DeInit+0x7c>
        {
          if (HAL_DMA2D_CLUTLoading_Abort(hdma2d, 1U) != HAL_OK)
 800198e:	2101      	movs	r1, #1
 8001990:	6878      	ldr	r0, [r7, #4]
 8001992:	f000 f8e7 	bl	8001b64 <HAL_DMA2D_CLUTLoading_Abort>
 8001996:	4603      	mov	r3, r0
 8001998:	2b00      	cmp	r3, #0
 800199a:	d001      	beq.n	80019a0 <HAL_DMA2D_DeInit+0x7c>
          {
            /* Issue when aborting foreground CLUT loading */
            return HAL_ERROR;
 800199c:	2301      	movs	r3, #1
 800199e:	e02a      	b.n	80019f6 <HAL_DMA2D_DeInit+0xd2>
      }
    }
  }

  /* Reset DMA2D control registers*/
  hdma2d->Instance->CR       =    0U;
 80019a0:	687b      	ldr	r3, [r7, #4]
 80019a2:	681b      	ldr	r3, [r3, #0]
 80019a4:	2200      	movs	r2, #0
 80019a6:	601a      	str	r2, [r3, #0]
  hdma2d->Instance->IFCR     = 0x3FU;
 80019a8:	687b      	ldr	r3, [r7, #4]
 80019aa:	681b      	ldr	r3, [r3, #0]
 80019ac:	223f      	movs	r2, #63	; 0x3f
 80019ae:	609a      	str	r2, [r3, #8]
  hdma2d->Instance->FGOR     =    0U;
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	2200      	movs	r2, #0
 80019b6:	611a      	str	r2, [r3, #16]
  hdma2d->Instance->BGOR     =    0U;
 80019b8:	687b      	ldr	r3, [r7, #4]
 80019ba:	681b      	ldr	r3, [r3, #0]
 80019bc:	2200      	movs	r2, #0
 80019be:	619a      	str	r2, [r3, #24]
  hdma2d->Instance->FGPFCCR  =    0U;
 80019c0:	687b      	ldr	r3, [r7, #4]
 80019c2:	681b      	ldr	r3, [r3, #0]
 80019c4:	2200      	movs	r2, #0
 80019c6:	61da      	str	r2, [r3, #28]
  hdma2d->Instance->BGPFCCR  =    0U;
 80019c8:	687b      	ldr	r3, [r7, #4]
 80019ca:	681b      	ldr	r3, [r3, #0]
 80019cc:	2200      	movs	r2, #0
 80019ce:	625a      	str	r2, [r3, #36]	; 0x24
  hdma2d->Instance->OPFCCR   =    0U;
 80019d0:	687b      	ldr	r3, [r7, #4]
 80019d2:	681b      	ldr	r3, [r3, #0]
 80019d4:	2200      	movs	r2, #0
 80019d6:	635a      	str	r2, [r3, #52]	; 0x34
    /* DeInit the low level hardware */
    hdma2d->MspDeInitCallback(hdma2d);

#else
  /* Carry on with de-initialization of low level hardware */
  HAL_DMA2D_MspDeInit(hdma2d);
 80019d8:	6878      	ldr	r0, [r7, #4]
 80019da:	f7fe fe69 	bl	80006b0 <HAL_DMA2D_MspDeInit>
#endif /* (USE_HAL_DMA2D_REGISTER_CALLBACKS) */

  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80019de:	687b      	ldr	r3, [r7, #4]
 80019e0:	2200      	movs	r2, #0
 80019e2:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_RESET;
 80019e4:	687b      	ldr	r3, [r7, #4]
 80019e6:	2200      	movs	r2, #0
 80019e8:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Release Lock */
  __HAL_UNLOCK(hdma2d);
 80019ec:	687b      	ldr	r3, [r7, #4]
 80019ee:	2200      	movs	r2, #0
 80019f0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 80019f4:	2300      	movs	r3, #0
}
 80019f6:	4618      	mov	r0, r3
 80019f8:	3708      	adds	r7, #8
 80019fa:	46bd      	mov	sp, r7
 80019fc:	bd80      	pop	{r7, pc}
 80019fe:	bf00      	nop
 8001a00:	40023800 	.word	0x40023800

08001a04 <HAL_DMA2D_Start_IT>:
  * @param  Width      The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height     The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Start_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8001a04:	b580      	push	{r7, lr}
 8001a06:	b086      	sub	sp, #24
 8001a08:	af02      	add	r7, sp, #8
 8001a0a:	60f8      	str	r0, [r7, #12]
 8001a0c:	60b9      	str	r1, [r7, #8]
 8001a0e:	607a      	str	r2, [r7, #4]
 8001a10:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8001a12:	68fb      	ldr	r3, [r7, #12]
 8001a14:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001a18:	2b01      	cmp	r3, #1
 8001a1a:	d101      	bne.n	8001a20 <HAL_DMA2D_Start_IT+0x1c>
 8001a1c:	2302      	movs	r3, #2
 8001a1e:	e020      	b.n	8001a62 <HAL_DMA2D_Start_IT+0x5e>
 8001a20:	68fb      	ldr	r3, [r7, #12]
 8001a22:	2201      	movs	r2, #1
 8001a24:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001a28:	68fb      	ldr	r3, [r7, #12]
 8001a2a:	2202      	movs	r2, #2
 8001a2c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, pdata, DstAddress, Width, Height);
 8001a30:	69bb      	ldr	r3, [r7, #24]
 8001a32:	9300      	str	r3, [sp, #0]
 8001a34:	683b      	ldr	r3, [r7, #0]
 8001a36:	687a      	ldr	r2, [r7, #4]
 8001a38:	68b9      	ldr	r1, [r7, #8]
 8001a3a:	68f8      	ldr	r0, [r7, #12]
 8001a3c:	f000 fa84 	bl	8001f48 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8001a40:	68fb      	ldr	r3, [r7, #12]
 8001a42:	681b      	ldr	r3, [r3, #0]
 8001a44:	681a      	ldr	r2, [r3, #0]
 8001a46:	68fb      	ldr	r3, [r7, #12]
 8001a48:	681b      	ldr	r3, [r3, #0]
 8001a4a:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8001a4e:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8001a50:	68fb      	ldr	r3, [r7, #12]
 8001a52:	681b      	ldr	r3, [r3, #0]
 8001a54:	681a      	ldr	r2, [r3, #0]
 8001a56:	68fb      	ldr	r3, [r7, #12]
 8001a58:	681b      	ldr	r3, [r3, #0]
 8001a5a:	f042 0201 	orr.w	r2, r2, #1
 8001a5e:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 8001a60:	2300      	movs	r3, #0
}
 8001a62:	4618      	mov	r0, r3
 8001a64:	3710      	adds	r7, #16
 8001a66:	46bd      	mov	sp, r7
 8001a68:	bd80      	pop	{r7, pc}

08001a6a <HAL_DMA2D_BlendingStart_IT>:
  * @param  Width       The width of data to be transferred from source to destination (expressed in number of pixels per line).
  * @param  Height      The height of data to be transferred from source to destination (expressed in number of lines).
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_BlendingStart_IT(DMA2D_HandleTypeDef *hdma2d, uint32_t SrcAddress1, uint32_t  SrcAddress2, uint32_t DstAddress, uint32_t Width,  uint32_t Height)
{
 8001a6a:	b580      	push	{r7, lr}
 8001a6c:	b086      	sub	sp, #24
 8001a6e:	af02      	add	r7, sp, #8
 8001a70:	60f8      	str	r0, [r7, #12]
 8001a72:	60b9      	str	r1, [r7, #8]
 8001a74:	607a      	str	r2, [r7, #4]
 8001a76:	603b      	str	r3, [r7, #0]
  /* Check the parameters */
  assert_param(IS_DMA2D_LINE(Height));
  assert_param(IS_DMA2D_PIXEL(Width));

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8001a78:	68fb      	ldr	r3, [r7, #12]
 8001a7a:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001a7e:	2b01      	cmp	r3, #1
 8001a80:	d101      	bne.n	8001a86 <HAL_DMA2D_BlendingStart_IT+0x1c>
 8001a82:	2302      	movs	r3, #2
 8001a84:	e024      	b.n	8001ad0 <HAL_DMA2D_BlendingStart_IT+0x66>
 8001a86:	68fb      	ldr	r3, [r7, #12]
 8001a88:	2201      	movs	r2, #1
 8001a8a:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001a8e:	68fb      	ldr	r3, [r7, #12]
 8001a90:	2202      	movs	r2, #2
 8001a92:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Configure DMA2D Stream source2 address */
  WRITE_REG(hdma2d->Instance->BGMAR, SrcAddress2);
 8001a96:	68fb      	ldr	r3, [r7, #12]
 8001a98:	681b      	ldr	r3, [r3, #0]
 8001a9a:	687a      	ldr	r2, [r7, #4]
 8001a9c:	615a      	str	r2, [r3, #20]

  /* Configure the source, destination address and the data size */
  DMA2D_SetConfig(hdma2d, SrcAddress1, DstAddress, Width, Height);
 8001a9e:	69fb      	ldr	r3, [r7, #28]
 8001aa0:	9300      	str	r3, [sp, #0]
 8001aa2:	69bb      	ldr	r3, [r7, #24]
 8001aa4:	683a      	ldr	r2, [r7, #0]
 8001aa6:	68b9      	ldr	r1, [r7, #8]
 8001aa8:	68f8      	ldr	r0, [r7, #12]
 8001aaa:	f000 fa4d 	bl	8001f48 <DMA2D_SetConfig>

  /* Enable the transfer complete, transfer error and configuration error interrupts */
  __HAL_DMA2D_ENABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8001aae:	68fb      	ldr	r3, [r7, #12]
 8001ab0:	681b      	ldr	r3, [r3, #0]
 8001ab2:	681a      	ldr	r2, [r3, #0]
 8001ab4:	68fb      	ldr	r3, [r7, #12]
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	f442 520c 	orr.w	r2, r2, #8960	; 0x2300
 8001abc:	601a      	str	r2, [r3, #0]

  /* Enable the Peripheral */
  __HAL_DMA2D_ENABLE(hdma2d);
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	681b      	ldr	r3, [r3, #0]
 8001ac2:	681a      	ldr	r2, [r3, #0]
 8001ac4:	68fb      	ldr	r3, [r7, #12]
 8001ac6:	681b      	ldr	r3, [r3, #0]
 8001ac8:	f042 0201 	orr.w	r2, r2, #1
 8001acc:	601a      	str	r2, [r3, #0]

  return HAL_OK;
 8001ace:	2300      	movs	r3, #0
}
 8001ad0:	4618      	mov	r0, r3
 8001ad2:	3710      	adds	r7, #16
 8001ad4:	46bd      	mov	sp, r7
 8001ad6:	bd80      	pop	{r7, pc}

08001ad8 <HAL_DMA2D_Abort>:
  * @param  hdma2d  pointer to a DMA2D_HandleTypeDef structure that contains
  *                  the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Abort(DMA2D_HandleTypeDef *hdma2d)
{
 8001ad8:	b580      	push	{r7, lr}
 8001ada:	b084      	sub	sp, #16
 8001adc:	af00      	add	r7, sp, #0
 8001ade:	6078      	str	r0, [r7, #4]

  /* Abort the DMA2D transfer */
  /* START bit is reset to make sure not to set it again, in the event the HW clears it
     between the register read and the register write by the CPU (writing 0 has no
     effect on START bitvalue) */
   MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_ABORT|DMA2D_CR_START, DMA2D_CR_ABORT);
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	681b      	ldr	r3, [r3, #0]
 8001ae4:	681b      	ldr	r3, [r3, #0]
 8001ae6:	f023 0205 	bic.w	r2, r3, #5
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	681b      	ldr	r3, [r3, #0]
 8001aee:	f042 0204 	orr.w	r2, r2, #4
 8001af2:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8001af4:	f7ff fd42 	bl	800157c <HAL_GetTick>
 8001af8:	60f8      	str	r0, [r7, #12]

  /* Check if the DMA2D is effectively disabled */
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8001afa:	e017      	b.n	8001b2c <HAL_DMA2D_Abort+0x54>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8001afc:	f7ff fd3e 	bl	800157c <HAL_GetTick>
 8001b00:	4602      	mov	r2, r0
 8001b02:	68fb      	ldr	r3, [r7, #12]
 8001b04:	1ad3      	subs	r3, r2, r3
 8001b06:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001b0a:	d90f      	bls.n	8001b2c <HAL_DMA2D_Abort+0x54>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8001b0c:	687b      	ldr	r3, [r7, #4]
 8001b0e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001b10:	f043 0220 	orr.w	r2, r3, #32
 8001b14:	687b      	ldr	r3, [r7, #4]
 8001b16:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8001b18:	687b      	ldr	r3, [r7, #4]
 8001b1a:	2203      	movs	r2, #3
 8001b1c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	2200      	movs	r2, #0
 8001b24:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8001b28:	2303      	movs	r3, #3
 8001b2a:	e017      	b.n	8001b5c <HAL_DMA2D_Abort+0x84>
  while((hdma2d->Instance->CR & DMA2D_CR_START) != 0U)
 8001b2c:	687b      	ldr	r3, [r7, #4]
 8001b2e:	681b      	ldr	r3, [r3, #0]
 8001b30:	681b      	ldr	r3, [r3, #0]
 8001b32:	f003 0301 	and.w	r3, r3, #1
 8001b36:	2b00      	cmp	r3, #0
 8001b38:	d1e0      	bne.n	8001afc <HAL_DMA2D_Abort+0x24>
    }
  }

  /* Disable the Transfer Complete, Transfer Error and Configuration Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC|DMA2D_IT_TE|DMA2D_IT_CE);
 8001b3a:	687b      	ldr	r3, [r7, #4]
 8001b3c:	681b      	ldr	r3, [r3, #0]
 8001b3e:	681a      	ldr	r2, [r3, #0]
 8001b40:	687b      	ldr	r3, [r7, #4]
 8001b42:	681b      	ldr	r3, [r3, #0]
 8001b44:	f422 520c 	bic.w	r2, r2, #8960	; 0x2300
 8001b48:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8001b4a:	687b      	ldr	r3, [r7, #4]
 8001b4c:	2201      	movs	r2, #1
 8001b4e:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8001b52:	687b      	ldr	r3, [r7, #4]
 8001b54:	2200      	movs	r2, #0
 8001b56:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8001b5a:	2300      	movs	r3, #0
}
 8001b5c:	4618      	mov	r0, r3
 8001b5e:	3710      	adds	r7, #16
 8001b60:	46bd      	mov	sp, r7
 8001b62:	bd80      	pop	{r7, pc}

08001b64 <HAL_DMA2D_CLUTLoading_Abort>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_CLUTLoading_Abort(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8001b64:	b580      	push	{r7, lr}
 8001b66:	b084      	sub	sp, #16
 8001b68:	af00      	add	r7, sp, #0
 8001b6a:	6078      	str	r0, [r7, #4]
 8001b6c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  const __IO uint32_t * reg =  &(hdma2d->Instance->BGPFCCR); /* by default, point at background register */
 8001b6e:	687b      	ldr	r3, [r7, #4]
 8001b70:	681b      	ldr	r3, [r3, #0]
 8001b72:	3324      	adds	r3, #36	; 0x24
 8001b74:	60fb      	str	r3, [r7, #12]

  /* Abort the CLUT loading */
  SET_BIT(hdma2d->Instance->CR, DMA2D_CR_ABORT);
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	681b      	ldr	r3, [r3, #0]
 8001b7a:	681a      	ldr	r2, [r3, #0]
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	681b      	ldr	r3, [r3, #0]
 8001b80:	f042 0204 	orr.w	r2, r2, #4
 8001b84:	601a      	str	r2, [r3, #0]

  /* If foreground CLUT loading is considered, update local variables */
  if(LayerIdx == DMA2D_FOREGROUND_LAYER)
 8001b86:	683b      	ldr	r3, [r7, #0]
 8001b88:	2b01      	cmp	r3, #1
 8001b8a:	d103      	bne.n	8001b94 <HAL_DMA2D_CLUTLoading_Abort+0x30>
  {
    reg  = &(hdma2d->Instance->FGPFCCR);
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	681b      	ldr	r3, [r3, #0]
 8001b90:	331c      	adds	r3, #28
 8001b92:	60fb      	str	r3, [r7, #12]
  }


  /* Get tick */
  tickstart = HAL_GetTick();
 8001b94:	f7ff fcf2 	bl	800157c <HAL_GetTick>
 8001b98:	60b8      	str	r0, [r7, #8]

  /* Check if the CLUT loading is aborted */
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8001b9a:	e017      	b.n	8001bcc <HAL_DMA2D_CLUTLoading_Abort+0x68>
  {
    if((HAL_GetTick() - tickstart ) > DMA2D_TIMEOUT_ABORT)
 8001b9c:	f7ff fcee 	bl	800157c <HAL_GetTick>
 8001ba0:	4602      	mov	r2, r0
 8001ba2:	68bb      	ldr	r3, [r7, #8]
 8001ba4:	1ad3      	subs	r3, r2, r3
 8001ba6:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8001baa:	d90f      	bls.n	8001bcc <HAL_DMA2D_CLUTLoading_Abort+0x68>
    {
      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TIMEOUT;
 8001bac:	687b      	ldr	r3, [r7, #4]
 8001bae:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001bb0:	f043 0220 	orr.w	r2, r3, #32
 8001bb4:	687b      	ldr	r3, [r7, #4]
 8001bb6:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change the DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_TIMEOUT;
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	2203      	movs	r2, #3
 8001bbc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001bc0:	687b      	ldr	r3, [r7, #4]
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      return HAL_TIMEOUT;
 8001bc8:	2303      	movs	r3, #3
 8001bca:	e016      	b.n	8001bfa <HAL_DMA2D_CLUTLoading_Abort+0x96>
  while((*reg & DMA2D_BGPFCCR_START) != 0U)
 8001bcc:	68fb      	ldr	r3, [r7, #12]
 8001bce:	681b      	ldr	r3, [r3, #0]
 8001bd0:	f003 0320 	and.w	r3, r3, #32
 8001bd4:	2b00      	cmp	r3, #0
 8001bd6:	d1e1      	bne.n	8001b9c <HAL_DMA2D_CLUTLoading_Abort+0x38>
    }
  }

  /* Disable the CLUT Transfer Complete, Transfer Error, Configuration Error and CLUT Access Error interrupts */
  __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC | DMA2D_IT_TE | DMA2D_IT_CE |DMA2D_IT_CAE);
 8001bd8:	687b      	ldr	r3, [r7, #4]
 8001bda:	681b      	ldr	r3, [r3, #0]
 8001bdc:	681a      	ldr	r2, [r3, #0]
 8001bde:	687b      	ldr	r3, [r7, #4]
 8001be0:	681b      	ldr	r3, [r3, #0]
 8001be2:	f422 5264 	bic.w	r2, r2, #14592	; 0x3900
 8001be6:	601a      	str	r2, [r3, #0]

  /* Change the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	2201      	movs	r2, #1
 8001bec:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process Unlocked */
  __HAL_UNLOCK(hdma2d);
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	2200      	movs	r2, #0
 8001bf4:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8001bf8:	2300      	movs	r3, #0
}
 8001bfa:	4618      	mov	r0, r3
 8001bfc:	3710      	adds	r7, #16
 8001bfe:	46bd      	mov	sp, r7
 8001c00:	bd80      	pop	{r7, pc}

08001c02 <HAL_DMA2D_IRQHandler>:
  * @param  hdma2d Pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
 8001c02:	b580      	push	{r7, lr}
 8001c04:	b084      	sub	sp, #16
 8001c06:	af00      	add	r7, sp, #0
 8001c08:	6078      	str	r0, [r7, #4]
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8001c0a:	687b      	ldr	r3, [r7, #4]
 8001c0c:	681b      	ldr	r3, [r3, #0]
 8001c0e:	685b      	ldr	r3, [r3, #4]
 8001c10:	60fb      	str	r3, [r7, #12]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8001c12:	687b      	ldr	r3, [r7, #4]
 8001c14:	681b      	ldr	r3, [r3, #0]
 8001c16:	681b      	ldr	r3, [r3, #0]
 8001c18:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8001c1a:	68fb      	ldr	r3, [r7, #12]
 8001c1c:	f003 0301 	and.w	r3, r3, #1
 8001c20:	2b00      	cmp	r3, #0
 8001c22:	d026      	beq.n	8001c72 <HAL_DMA2D_IRQHandler+0x70>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8001c24:	68bb      	ldr	r3, [r7, #8]
 8001c26:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c2a:	2b00      	cmp	r3, #0
 8001c2c:	d021      	beq.n	8001c72 <HAL_DMA2D_IRQHandler+0x70>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	681b      	ldr	r3, [r3, #0]
 8001c32:	681a      	ldr	r2, [r3, #0]
 8001c34:	687b      	ldr	r3, [r7, #4]
 8001c36:	681b      	ldr	r3, [r3, #0]
 8001c38:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001c3c:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8001c3e:	687b      	ldr	r3, [r7, #4]
 8001c40:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001c42:	f043 0201 	orr.w	r2, r3, #1
 8001c46:	687b      	ldr	r3, [r7, #4]
 8001c48:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	2201      	movs	r2, #1
 8001c50:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8001c52:	687b      	ldr	r3, [r7, #4]
 8001c54:	2204      	movs	r2, #4
 8001c56:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	2200      	movs	r2, #0
 8001c5e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	695b      	ldr	r3, [r3, #20]
 8001c66:	2b00      	cmp	r3, #0
 8001c68:	d003      	beq.n	8001c72 <HAL_DMA2D_IRQHandler+0x70>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	695b      	ldr	r3, [r3, #20]
 8001c6e:	6878      	ldr	r0, [r7, #4]
 8001c70:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8001c72:	68fb      	ldr	r3, [r7, #12]
 8001c74:	f003 0320 	and.w	r3, r3, #32
 8001c78:	2b00      	cmp	r3, #0
 8001c7a:	d026      	beq.n	8001cca <HAL_DMA2D_IRQHandler+0xc8>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8001c7c:	68bb      	ldr	r3, [r7, #8]
 8001c7e:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8001c82:	2b00      	cmp	r3, #0
 8001c84:	d021      	beq.n	8001cca <HAL_DMA2D_IRQHandler+0xc8>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8001c86:	687b      	ldr	r3, [r7, #4]
 8001c88:	681b      	ldr	r3, [r3, #0]
 8001c8a:	681a      	ldr	r2, [r3, #0]
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8001c94:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8001c96:	687b      	ldr	r3, [r7, #4]
 8001c98:	681b      	ldr	r3, [r3, #0]
 8001c9a:	2220      	movs	r2, #32
 8001c9c:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8001c9e:	687b      	ldr	r3, [r7, #4]
 8001ca0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001ca2:	f043 0202 	orr.w	r2, r3, #2
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8001caa:	687b      	ldr	r3, [r7, #4]
 8001cac:	2204      	movs	r2, #4
 8001cae:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	695b      	ldr	r3, [r3, #20]
 8001cbe:	2b00      	cmp	r3, #0
 8001cc0:	d003      	beq.n	8001cca <HAL_DMA2D_IRQHandler+0xc8>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	695b      	ldr	r3, [r3, #20]
 8001cc6:	6878      	ldr	r0, [r7, #4]
 8001cc8:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8001cca:	68fb      	ldr	r3, [r7, #12]
 8001ccc:	f003 0308 	and.w	r3, r3, #8
 8001cd0:	2b00      	cmp	r3, #0
 8001cd2:	d026      	beq.n	8001d22 <HAL_DMA2D_IRQHandler+0x120>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8001cd4:	68bb      	ldr	r3, [r7, #8]
 8001cd6:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8001cda:	2b00      	cmp	r3, #0
 8001cdc:	d021      	beq.n	8001d22 <HAL_DMA2D_IRQHandler+0x120>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	681a      	ldr	r2, [r3, #0]
 8001ce4:	687b      	ldr	r3, [r7, #4]
 8001ce6:	681b      	ldr	r3, [r3, #0]
 8001ce8:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8001cec:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	681b      	ldr	r3, [r3, #0]
 8001cf2:	2208      	movs	r2, #8
 8001cf4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8001cfa:	f043 0204 	orr.w	r2, r3, #4
 8001cfe:	687b      	ldr	r3, [r7, #4]
 8001d00:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8001d02:	687b      	ldr	r3, [r7, #4]
 8001d04:	2204      	movs	r2, #4
 8001d06:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001d0a:	687b      	ldr	r3, [r7, #4]
 8001d0c:	2200      	movs	r2, #0
 8001d0e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferErrorCallback != NULL)
 8001d12:	687b      	ldr	r3, [r7, #4]
 8001d14:	695b      	ldr	r3, [r3, #20]
 8001d16:	2b00      	cmp	r3, #0
 8001d18:	d003      	beq.n	8001d22 <HAL_DMA2D_IRQHandler+0x120>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8001d1a:	687b      	ldr	r3, [r7, #4]
 8001d1c:	695b      	ldr	r3, [r3, #20]
 8001d1e:	6878      	ldr	r0, [r7, #4]
 8001d20:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	f003 0304 	and.w	r3, r3, #4
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d013      	beq.n	8001d54 <HAL_DMA2D_IRQHandler+0x152>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8001d2c:	68bb      	ldr	r3, [r7, #8]
 8001d2e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d00e      	beq.n	8001d54 <HAL_DMA2D_IRQHandler+0x152>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8001d36:	687b      	ldr	r3, [r7, #4]
 8001d38:	681b      	ldr	r3, [r3, #0]
 8001d3a:	681a      	ldr	r2, [r3, #0]
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	681b      	ldr	r3, [r3, #0]
 8001d40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8001d44:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8001d46:	687b      	ldr	r3, [r7, #4]
 8001d48:	681b      	ldr	r3, [r3, #0]
 8001d4a:	2204      	movs	r2, #4
 8001d4c:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8001d4e:	6878      	ldr	r0, [r7, #4]
 8001d50:	f000 f853 	bl	8001dfa <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8001d54:	68fb      	ldr	r3, [r7, #12]
 8001d56:	f003 0302 	and.w	r3, r3, #2
 8001d5a:	2b00      	cmp	r3, #0
 8001d5c:	d024      	beq.n	8001da8 <HAL_DMA2D_IRQHandler+0x1a6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8001d5e:	68bb      	ldr	r3, [r7, #8]
 8001d60:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001d64:	2b00      	cmp	r3, #0
 8001d66:	d01f      	beq.n	8001da8 <HAL_DMA2D_IRQHandler+0x1a6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	681a      	ldr	r2, [r3, #0]
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	681b      	ldr	r3, [r3, #0]
 8001d72:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8001d76:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	681b      	ldr	r3, [r3, #0]
 8001d7c:	2202      	movs	r2, #2
 8001d7e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8001d80:	687b      	ldr	r3, [r7, #4]
 8001d82:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001d84:	687b      	ldr	r3, [r7, #4]
 8001d86:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	2201      	movs	r2, #1
 8001d8c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	2200      	movs	r2, #0
 8001d94:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      if(hdma2d->XferCpltCallback != NULL)
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	691b      	ldr	r3, [r3, #16]
 8001d9c:	2b00      	cmp	r3, #0
 8001d9e:	d003      	beq.n	8001da8 <HAL_DMA2D_IRQHandler+0x1a6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8001da0:	687b      	ldr	r3, [r7, #4]
 8001da2:	691b      	ldr	r3, [r3, #16]
 8001da4:	6878      	ldr	r0, [r7, #4]
 8001da6:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8001da8:	68fb      	ldr	r3, [r7, #12]
 8001daa:	f003 0310 	and.w	r3, r3, #16
 8001dae:	2b00      	cmp	r3, #0
 8001db0:	d01f      	beq.n	8001df2 <HAL_DMA2D_IRQHandler+0x1f0>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8001db2:	68bb      	ldr	r3, [r7, #8]
 8001db4:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001db8:	2b00      	cmp	r3, #0
 8001dba:	d01a      	beq.n	8001df2 <HAL_DMA2D_IRQHandler+0x1f0>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	681b      	ldr	r3, [r3, #0]
 8001dc0:	681a      	ldr	r2, [r3, #0]
 8001dc2:	687b      	ldr	r3, [r7, #4]
 8001dc4:	681b      	ldr	r3, [r3, #0]
 8001dc6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8001dca:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8001dcc:	687b      	ldr	r3, [r7, #4]
 8001dce:	681b      	ldr	r3, [r3, #0]
 8001dd0:	2210      	movs	r2, #16
 8001dd2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	63da      	str	r2, [r3, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8001ddc:	687b      	ldr	r3, [r7, #4]
 8001dde:	2201      	movs	r2, #1
 8001de0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	2200      	movs	r2, #0
 8001de8:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8001dec:	6878      	ldr	r0, [r7, #4]
 8001dee:	f000 f80e 	bl	8001e0e <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8001df2:	bf00      	nop
 8001df4:	3710      	adds	r7, #16
 8001df6:	46bd      	mov	sp, r7
 8001df8:	bd80      	pop	{r7, pc}

08001dfa <HAL_DMA2D_LineEventCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_LineEventCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8001dfa:	b480      	push	{r7}
 8001dfc:	b083      	sub	sp, #12
 8001dfe:	af00      	add	r7, sp, #0
 8001e00:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_LineEventCallback can be implemented in the user file.
   */
}
 8001e02:	bf00      	nop
 8001e04:	370c      	adds	r7, #12
 8001e06:	46bd      	mov	sp, r7
 8001e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e0c:	4770      	bx	lr

08001e0e <HAL_DMA2D_CLUTLoadingCpltCallback>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval None
  */
__weak void HAL_DMA2D_CLUTLoadingCpltCallback(DMA2D_HandleTypeDef *hdma2d)
{
 8001e0e:	b480      	push	{r7}
 8001e10:	b083      	sub	sp, #12
 8001e12:	af00      	add	r7, sp, #0
 8001e14:	6078      	str	r0, [r7, #4]
  UNUSED(hdma2d);

  /* NOTE : This function should not be modified; when the callback is needed,
            the HAL_DMA2D_CLUTLoadingCpltCallback can be implemented in the user file.
   */
}
 8001e16:	bf00      	nop
 8001e18:	370c      	adds	r7, #12
 8001e1a:	46bd      	mov	sp, r7
 8001e1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e20:	4770      	bx	lr
	...

08001e24 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8001e24:	b480      	push	{r7}
 8001e26:	b087      	sub	sp, #28
 8001e28:	af00      	add	r7, sp, #0
 8001e2a:	6078      	str	r0, [r7, #4]
 8001e2c:	6039      	str	r1, [r7, #0]
  uint32_t regMask, regValue;

  /* Check the parameters */
  assert_param(IS_DMA2D_LAYER(LayerIdx));
  assert_param(IS_DMA2D_OFFSET(hdma2d->LayerCfg[LayerIdx].InputOffset));
  if(hdma2d->Init.Mode != DMA2D_R2M)
 8001e2e:	687b      	ldr	r3, [r7, #4]
 8001e30:	685b      	ldr	r3, [r3, #4]
 8001e32:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8001e36:	687b      	ldr	r3, [r7, #4]
 8001e38:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8001e3c:	2b01      	cmp	r3, #1
 8001e3e:	d101      	bne.n	8001e44 <HAL_DMA2D_ConfigLayer+0x20>
 8001e40:	2302      	movs	r3, #2
 8001e42:	e079      	b.n	8001f38 <HAL_DMA2D_ConfigLayer+0x114>
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	2201      	movs	r2, #1
 8001e48:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	2202      	movs	r2, #2
 8001e50:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];
 8001e54:	683b      	ldr	r3, [r7, #0]
 8001e56:	011b      	lsls	r3, r3, #4
 8001e58:	3318      	adds	r3, #24
 8001e5a:	687a      	ldr	r2, [r7, #4]
 8001e5c:	4413      	add	r3, r2
 8001e5e:	613b      	str	r3, [r7, #16]

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8001e60:	693b      	ldr	r3, [r7, #16]
 8001e62:	685a      	ldr	r2, [r3, #4]
 8001e64:	693b      	ldr	r3, [r7, #16]
 8001e66:	689b      	ldr	r3, [r3, #8]
 8001e68:	041b      	lsls	r3, r3, #16
 8001e6a:	4313      	orrs	r3, r2
 8001e6c:	617b      	str	r3, [r7, #20]
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;
 8001e6e:	4b35      	ldr	r3, [pc, #212]	; (8001f44 <HAL_DMA2D_ConfigLayer+0x120>)
 8001e70:	60fb      	str	r3, [r7, #12]


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8001e72:	693b      	ldr	r3, [r7, #16]
 8001e74:	685b      	ldr	r3, [r3, #4]
 8001e76:	2b0a      	cmp	r3, #10
 8001e78:	d003      	beq.n	8001e82 <HAL_DMA2D_ConfigLayer+0x5e>
 8001e7a:	693b      	ldr	r3, [r7, #16]
 8001e7c:	685b      	ldr	r3, [r3, #4]
 8001e7e:	2b09      	cmp	r3, #9
 8001e80:	d107      	bne.n	8001e92 <HAL_DMA2D_ConfigLayer+0x6e>
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8001e82:	693b      	ldr	r3, [r7, #16]
 8001e84:	68db      	ldr	r3, [r3, #12]
 8001e86:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8001e8a:	697a      	ldr	r2, [r7, #20]
 8001e8c:	4313      	orrs	r3, r2
 8001e8e:	617b      	str	r3, [r7, #20]
 8001e90:	e005      	b.n	8001e9e <HAL_DMA2D_ConfigLayer+0x7a>
  }
  else
  {
    regValue |=  (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8001e92:	693b      	ldr	r3, [r7, #16]
 8001e94:	68db      	ldr	r3, [r3, #12]
 8001e96:	061b      	lsls	r3, r3, #24
 8001e98:	697a      	ldr	r2, [r7, #20]
 8001e9a:	4313      	orrs	r3, r2
 8001e9c:	617b      	str	r3, [r7, #20]
  }

  /* Configure the background DMA2D layer */
  if(LayerIdx == DMA2D_BACKGROUND_LAYER)
 8001e9e:	683b      	ldr	r3, [r7, #0]
 8001ea0:	2b00      	cmp	r3, #0
 8001ea2:	d120      	bne.n	8001ee6 <HAL_DMA2D_ConfigLayer+0xc2>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8001ea4:	687b      	ldr	r3, [r7, #4]
 8001ea6:	681b      	ldr	r3, [r3, #0]
 8001ea8:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8001eaa:	68fb      	ldr	r3, [r7, #12]
 8001eac:	43db      	mvns	r3, r3
 8001eae:	ea02 0103 	and.w	r1, r2, r3
 8001eb2:	687b      	ldr	r3, [r7, #4]
 8001eb4:	681b      	ldr	r3, [r3, #0]
 8001eb6:	697a      	ldr	r2, [r7, #20]
 8001eb8:	430a      	orrs	r2, r1
 8001eba:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	681b      	ldr	r3, [r3, #0]
 8001ec0:	693a      	ldr	r2, [r7, #16]
 8001ec2:	6812      	ldr	r2, [r2, #0]
 8001ec4:	619a      	str	r2, [r3, #24]

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8001ec6:	693b      	ldr	r3, [r7, #16]
 8001ec8:	685b      	ldr	r3, [r3, #4]
 8001eca:	2b0a      	cmp	r3, #10
 8001ecc:	d003      	beq.n	8001ed6 <HAL_DMA2D_ConfigLayer+0xb2>
 8001ece:	693b      	ldr	r3, [r7, #16]
 8001ed0:	685b      	ldr	r3, [r3, #4]
 8001ed2:	2b09      	cmp	r3, #9
 8001ed4:	d127      	bne.n	8001f26 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE|DMA2D_BGCOLR_GREEN|DMA2D_BGCOLR_RED));
 8001ed6:	693b      	ldr	r3, [r7, #16]
 8001ed8:	68da      	ldr	r2, [r3, #12]
 8001eda:	687b      	ldr	r3, [r7, #4]
 8001edc:	681b      	ldr	r3, [r3, #0]
 8001ede:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8001ee2:	629a      	str	r2, [r3, #40]	; 0x28
 8001ee4:	e01f      	b.n	8001f26 <HAL_DMA2D_ConfigLayer+0x102>
  else
  {


     /* Write DMA2D FGPFCCR register */
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8001ee6:	687b      	ldr	r3, [r7, #4]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	69da      	ldr	r2, [r3, #28]
 8001eec:	68fb      	ldr	r3, [r7, #12]
 8001eee:	43db      	mvns	r3, r3
 8001ef0:	ea02 0103 	and.w	r1, r2, r3
 8001ef4:	687b      	ldr	r3, [r7, #4]
 8001ef6:	681b      	ldr	r3, [r3, #0]
 8001ef8:	697a      	ldr	r2, [r7, #20]
 8001efa:	430a      	orrs	r2, r1
 8001efc:	61da      	str	r2, [r3, #28]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	693a      	ldr	r2, [r7, #16]
 8001f04:	6812      	ldr	r2, [r2, #0]
 8001f06:	611a      	str	r2, [r3, #16]

    /* DMA2D FGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8001f08:	693b      	ldr	r3, [r7, #16]
 8001f0a:	685b      	ldr	r3, [r3, #4]
 8001f0c:	2b0a      	cmp	r3, #10
 8001f0e:	d003      	beq.n	8001f18 <HAL_DMA2D_ConfigLayer+0xf4>
 8001f10:	693b      	ldr	r3, [r7, #16]
 8001f12:	685b      	ldr	r3, [r3, #4]
 8001f14:	2b09      	cmp	r3, #9
 8001f16:	d106      	bne.n	8001f26 <HAL_DMA2D_ConfigLayer+0x102>
    {
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE|DMA2D_FGCOLR_GREEN|DMA2D_FGCOLR_RED));
 8001f18:	693b      	ldr	r3, [r7, #16]
 8001f1a:	68da      	ldr	r2, [r3, #12]
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8001f24:	621a      	str	r2, [r3, #32]
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8001f26:	687b      	ldr	r3, [r7, #4]
 8001f28:	2201      	movs	r2, #1
 8001f2a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	2200      	movs	r2, #0
 8001f32:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

  return HAL_OK;
 8001f36:	2300      	movs	r3, #0
}
 8001f38:	4618      	mov	r0, r3
 8001f3a:	371c      	adds	r7, #28
 8001f3c:	46bd      	mov	sp, r7
 8001f3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f42:	4770      	bx	lr
 8001f44:	ff03000f 	.word	0xff03000f

08001f48 <DMA2D_SetConfig>:
  * @param  Width      The width of data to be transferred from source to destination.
  * @param  Height     The height of data to be transferred from source to destination.
  * @retval HAL status
  */
static void DMA2D_SetConfig(DMA2D_HandleTypeDef *hdma2d, uint32_t pdata, uint32_t DstAddress, uint32_t Width, uint32_t Height)
{
 8001f48:	b480      	push	{r7}
 8001f4a:	b08b      	sub	sp, #44	; 0x2c
 8001f4c:	af00      	add	r7, sp, #0
 8001f4e:	60f8      	str	r0, [r7, #12]
 8001f50:	60b9      	str	r1, [r7, #8]
 8001f52:	607a      	str	r2, [r7, #4]
 8001f54:	603b      	str	r3, [r7, #0]
  uint32_t tmp2;
  uint32_t tmp3;
  uint32_t tmp4;

  /* Configure DMA2D data size */
  MODIFY_REG(hdma2d->Instance->NLR, (DMA2D_NLR_NL|DMA2D_NLR_PL), (Height| (Width << DMA2D_NLR_PL_Pos)));
 8001f56:	68fb      	ldr	r3, [r7, #12]
 8001f58:	681b      	ldr	r3, [r3, #0]
 8001f5a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001f5c:	f003 4140 	and.w	r1, r3, #3221225472	; 0xc0000000
 8001f60:	683b      	ldr	r3, [r7, #0]
 8001f62:	041a      	lsls	r2, r3, #16
 8001f64:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8001f66:	431a      	orrs	r2, r3
 8001f68:	68fb      	ldr	r3, [r7, #12]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	430a      	orrs	r2, r1
 8001f6e:	645a      	str	r2, [r3, #68]	; 0x44

  /* Configure DMA2D destination address */
  WRITE_REG(hdma2d->Instance->OMAR, DstAddress);
 8001f70:	68fb      	ldr	r3, [r7, #12]
 8001f72:	681b      	ldr	r3, [r3, #0]
 8001f74:	687a      	ldr	r2, [r7, #4]
 8001f76:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Register to memory DMA2D mode selected */
  if (hdma2d->Init.Mode == DMA2D_R2M)
 8001f78:	68fb      	ldr	r3, [r7, #12]
 8001f7a:	685b      	ldr	r3, [r3, #4]
 8001f7c:	f5b3 3f40 	cmp.w	r3, #196608	; 0x30000
 8001f80:	d174      	bne.n	800206c <DMA2D_SetConfig+0x124>
  {
    tmp1 = pdata & DMA2D_OCOLR_ALPHA_1;
 8001f82:	68bb      	ldr	r3, [r7, #8]
 8001f84:	f003 437f 	and.w	r3, r3, #4278190080	; 0xff000000
 8001f88:	623b      	str	r3, [r7, #32]
    tmp2 = pdata & DMA2D_OCOLR_RED_1;
 8001f8a:	68bb      	ldr	r3, [r7, #8]
 8001f8c:	f403 037f 	and.w	r3, r3, #16711680	; 0xff0000
 8001f90:	61fb      	str	r3, [r7, #28]
    tmp3 = pdata & DMA2D_OCOLR_GREEN_1;
 8001f92:	68bb      	ldr	r3, [r7, #8]
 8001f94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8001f98:	61bb      	str	r3, [r7, #24]
    tmp4 = pdata & DMA2D_OCOLR_BLUE_1;
 8001f9a:	68bb      	ldr	r3, [r7, #8]
 8001f9c:	b2db      	uxtb	r3, r3
 8001f9e:	617b      	str	r3, [r7, #20]

    /* Prepare the value to be written to the OCOLR register according to the color mode */
    if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB8888)
 8001fa0:	68fb      	ldr	r3, [r7, #12]
 8001fa2:	689b      	ldr	r3, [r3, #8]
 8001fa4:	2b00      	cmp	r3, #0
 8001fa6:	d108      	bne.n	8001fba <DMA2D_SetConfig+0x72>
    {
      tmp = (tmp3 | tmp2 | tmp1| tmp4);
 8001fa8:	69ba      	ldr	r2, [r7, #24]
 8001faa:	69fb      	ldr	r3, [r7, #28]
 8001fac:	431a      	orrs	r2, r3
 8001fae:	6a3b      	ldr	r3, [r7, #32]
 8001fb0:	4313      	orrs	r3, r2
 8001fb2:	697a      	ldr	r2, [r7, #20]
 8001fb4:	4313      	orrs	r3, r2
 8001fb6:	627b      	str	r3, [r7, #36]	; 0x24
 8001fb8:	e053      	b.n	8002062 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB888)
 8001fba:	68fb      	ldr	r3, [r7, #12]
 8001fbc:	689b      	ldr	r3, [r3, #8]
 8001fbe:	2b01      	cmp	r3, #1
 8001fc0:	d106      	bne.n	8001fd0 <DMA2D_SetConfig+0x88>
    {
      tmp = (tmp3 | tmp2 | tmp4);
 8001fc2:	69ba      	ldr	r2, [r7, #24]
 8001fc4:	69fb      	ldr	r3, [r7, #28]
 8001fc6:	4313      	orrs	r3, r2
 8001fc8:	697a      	ldr	r2, [r7, #20]
 8001fca:	4313      	orrs	r3, r2
 8001fcc:	627b      	str	r3, [r7, #36]	; 0x24
 8001fce:	e048      	b.n	8002062 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_RGB565)
 8001fd0:	68fb      	ldr	r3, [r7, #12]
 8001fd2:	689b      	ldr	r3, [r3, #8]
 8001fd4:	2b02      	cmp	r3, #2
 8001fd6:	d111      	bne.n	8001ffc <DMA2D_SetConfig+0xb4>
    {
      tmp2 = (tmp2 >> 19U);
 8001fd8:	69fb      	ldr	r3, [r7, #28]
 8001fda:	0cdb      	lsrs	r3, r3, #19
 8001fdc:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 10U);
 8001fde:	69bb      	ldr	r3, [r7, #24]
 8001fe0:	0a9b      	lsrs	r3, r3, #10
 8001fe2:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8001fe4:	697b      	ldr	r3, [r7, #20]
 8001fe6:	08db      	lsrs	r3, r3, #3
 8001fe8:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 11U) | tmp4);
 8001fea:	69bb      	ldr	r3, [r7, #24]
 8001fec:	015a      	lsls	r2, r3, #5
 8001fee:	69fb      	ldr	r3, [r7, #28]
 8001ff0:	02db      	lsls	r3, r3, #11
 8001ff2:	4313      	orrs	r3, r2
 8001ff4:	697a      	ldr	r2, [r7, #20]
 8001ff6:	4313      	orrs	r3, r2
 8001ff8:	627b      	str	r3, [r7, #36]	; 0x24
 8001ffa:	e032      	b.n	8002062 <DMA2D_SetConfig+0x11a>
    }
    else if (hdma2d->Init.ColorMode == DMA2D_OUTPUT_ARGB1555)
 8001ffc:	68fb      	ldr	r3, [r7, #12]
 8001ffe:	689b      	ldr	r3, [r3, #8]
 8002000:	2b03      	cmp	r3, #3
 8002002:	d117      	bne.n	8002034 <DMA2D_SetConfig+0xec>
    {
      tmp1 = (tmp1 >> 31U);
 8002004:	6a3b      	ldr	r3, [r7, #32]
 8002006:	0fdb      	lsrs	r3, r3, #31
 8002008:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 19U);
 800200a:	69fb      	ldr	r3, [r7, #28]
 800200c:	0cdb      	lsrs	r3, r3, #19
 800200e:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 11U);
 8002010:	69bb      	ldr	r3, [r7, #24]
 8002012:	0adb      	lsrs	r3, r3, #11
 8002014:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 3U );
 8002016:	697b      	ldr	r3, [r7, #20]
 8002018:	08db      	lsrs	r3, r3, #3
 800201a:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 5U) | (tmp2 << 10U) | (tmp1 << 15U) | tmp4);
 800201c:	69bb      	ldr	r3, [r7, #24]
 800201e:	015a      	lsls	r2, r3, #5
 8002020:	69fb      	ldr	r3, [r7, #28]
 8002022:	029b      	lsls	r3, r3, #10
 8002024:	431a      	orrs	r2, r3
 8002026:	6a3b      	ldr	r3, [r7, #32]
 8002028:	03db      	lsls	r3, r3, #15
 800202a:	4313      	orrs	r3, r2
 800202c:	697a      	ldr	r2, [r7, #20]
 800202e:	4313      	orrs	r3, r2
 8002030:	627b      	str	r3, [r7, #36]	; 0x24
 8002032:	e016      	b.n	8002062 <DMA2D_SetConfig+0x11a>
    }
    else /* Dhdma2d->Init.ColorMode = DMA2D_OUTPUT_ARGB4444 */
    {
      tmp1 = (tmp1 >> 28U);
 8002034:	6a3b      	ldr	r3, [r7, #32]
 8002036:	0f1b      	lsrs	r3, r3, #28
 8002038:	623b      	str	r3, [r7, #32]
      tmp2 = (tmp2 >> 20U);
 800203a:	69fb      	ldr	r3, [r7, #28]
 800203c:	0d1b      	lsrs	r3, r3, #20
 800203e:	61fb      	str	r3, [r7, #28]
      tmp3 = (tmp3 >> 12U);
 8002040:	69bb      	ldr	r3, [r7, #24]
 8002042:	0b1b      	lsrs	r3, r3, #12
 8002044:	61bb      	str	r3, [r7, #24]
      tmp4 = (tmp4 >> 4U );
 8002046:	697b      	ldr	r3, [r7, #20]
 8002048:	091b      	lsrs	r3, r3, #4
 800204a:	617b      	str	r3, [r7, #20]
      tmp  = ((tmp3 << 4U) | (tmp2 << 8U) | (tmp1 << 12U) | tmp4);
 800204c:	69bb      	ldr	r3, [r7, #24]
 800204e:	011a      	lsls	r2, r3, #4
 8002050:	69fb      	ldr	r3, [r7, #28]
 8002052:	021b      	lsls	r3, r3, #8
 8002054:	431a      	orrs	r2, r3
 8002056:	6a3b      	ldr	r3, [r7, #32]
 8002058:	031b      	lsls	r3, r3, #12
 800205a:	4313      	orrs	r3, r2
 800205c:	697a      	ldr	r2, [r7, #20]
 800205e:	4313      	orrs	r3, r2
 8002060:	627b      	str	r3, [r7, #36]	; 0x24
    }
    /* Write to DMA2D OCOLR register */
    WRITE_REG(hdma2d->Instance->OCOLR, tmp);
 8002062:	68fb      	ldr	r3, [r7, #12]
 8002064:	681b      	ldr	r3, [r3, #0]
 8002066:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002068:	639a      	str	r2, [r3, #56]	; 0x38
  else /* M2M, M2M_PFC or M2M_Blending DMA2D Mode */
  {
    /* Configure DMA2D source address */
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
  }
}
 800206a:	e003      	b.n	8002074 <DMA2D_SetConfig+0x12c>
    WRITE_REG(hdma2d->Instance->FGMAR, pdata);
 800206c:	68fb      	ldr	r3, [r7, #12]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	68ba      	ldr	r2, [r7, #8]
 8002072:	60da      	str	r2, [r3, #12]
}
 8002074:	bf00      	nop
 8002076:	372c      	adds	r7, #44	; 0x2c
 8002078:	46bd      	mov	sp, r7
 800207a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800207e:	4770      	bx	lr

08002080 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8002080:	b480      	push	{r7}
 8002082:	b089      	sub	sp, #36	; 0x24
 8002084:	af00      	add	r7, sp, #0
 8002086:	6078      	str	r0, [r7, #4]
 8002088:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 800208a:	2300      	movs	r3, #0
 800208c:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 800208e:	2300      	movs	r3, #0
 8002090:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8002092:	2300      	movs	r3, #0
 8002094:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002096:	2300      	movs	r3, #0
 8002098:	61fb      	str	r3, [r7, #28]
 800209a:	e177      	b.n	800238c <HAL_GPIO_Init+0x30c>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 800209c:	2201      	movs	r2, #1
 800209e:	69fb      	ldr	r3, [r7, #28]
 80020a0:	fa02 f303 	lsl.w	r3, r2, r3
 80020a4:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 80020a6:	683b      	ldr	r3, [r7, #0]
 80020a8:	681b      	ldr	r3, [r3, #0]
 80020aa:	697a      	ldr	r2, [r7, #20]
 80020ac:	4013      	ands	r3, r2
 80020ae:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 80020b0:	693a      	ldr	r2, [r7, #16]
 80020b2:	697b      	ldr	r3, [r7, #20]
 80020b4:	429a      	cmp	r2, r3
 80020b6:	f040 8166 	bne.w	8002386 <HAL_GPIO_Init+0x306>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80020ba:	683b      	ldr	r3, [r7, #0]
 80020bc:	685b      	ldr	r3, [r3, #4]
 80020be:	2b01      	cmp	r3, #1
 80020c0:	d00b      	beq.n	80020da <HAL_GPIO_Init+0x5a>
 80020c2:	683b      	ldr	r3, [r7, #0]
 80020c4:	685b      	ldr	r3, [r3, #4]
 80020c6:	2b02      	cmp	r3, #2
 80020c8:	d007      	beq.n	80020da <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80020ca:	683b      	ldr	r3, [r7, #0]
 80020cc:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80020ce:	2b11      	cmp	r3, #17
 80020d0:	d003      	beq.n	80020da <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80020d2:	683b      	ldr	r3, [r7, #0]
 80020d4:	685b      	ldr	r3, [r3, #4]
 80020d6:	2b12      	cmp	r3, #18
 80020d8:	d130      	bne.n	800213c <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	689b      	ldr	r3, [r3, #8]
 80020de:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80020e0:	69fb      	ldr	r3, [r7, #28]
 80020e2:	005b      	lsls	r3, r3, #1
 80020e4:	2203      	movs	r2, #3
 80020e6:	fa02 f303 	lsl.w	r3, r2, r3
 80020ea:	43db      	mvns	r3, r3
 80020ec:	69ba      	ldr	r2, [r7, #24]
 80020ee:	4013      	ands	r3, r2
 80020f0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80020f2:	683b      	ldr	r3, [r7, #0]
 80020f4:	68da      	ldr	r2, [r3, #12]
 80020f6:	69fb      	ldr	r3, [r7, #28]
 80020f8:	005b      	lsls	r3, r3, #1
 80020fa:	fa02 f303 	lsl.w	r3, r2, r3
 80020fe:	69ba      	ldr	r2, [r7, #24]
 8002100:	4313      	orrs	r3, r2
 8002102:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8002104:	687b      	ldr	r3, [r7, #4]
 8002106:	69ba      	ldr	r2, [r7, #24]
 8002108:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800210a:	687b      	ldr	r3, [r7, #4]
 800210c:	685b      	ldr	r3, [r3, #4]
 800210e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8002110:	2201      	movs	r2, #1
 8002112:	69fb      	ldr	r3, [r7, #28]
 8002114:	fa02 f303 	lsl.w	r3, r2, r3
 8002118:	43db      	mvns	r3, r3
 800211a:	69ba      	ldr	r2, [r7, #24]
 800211c:	4013      	ands	r3, r2
 800211e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 8002120:	683b      	ldr	r3, [r7, #0]
 8002122:	685b      	ldr	r3, [r3, #4]
 8002124:	091b      	lsrs	r3, r3, #4
 8002126:	f003 0201 	and.w	r2, r3, #1
 800212a:	69fb      	ldr	r3, [r7, #28]
 800212c:	fa02 f303 	lsl.w	r3, r2, r3
 8002130:	69ba      	ldr	r2, [r7, #24]
 8002132:	4313      	orrs	r3, r2
 8002134:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8002136:	687b      	ldr	r3, [r7, #4]
 8002138:	69ba      	ldr	r2, [r7, #24]
 800213a:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	68db      	ldr	r3, [r3, #12]
 8002140:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8002142:	69fb      	ldr	r3, [r7, #28]
 8002144:	005b      	lsls	r3, r3, #1
 8002146:	2203      	movs	r2, #3
 8002148:	fa02 f303 	lsl.w	r3, r2, r3
 800214c:	43db      	mvns	r3, r3
 800214e:	69ba      	ldr	r2, [r7, #24]
 8002150:	4013      	ands	r3, r2
 8002152:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002154:	683b      	ldr	r3, [r7, #0]
 8002156:	689a      	ldr	r2, [r3, #8]
 8002158:	69fb      	ldr	r3, [r7, #28]
 800215a:	005b      	lsls	r3, r3, #1
 800215c:	fa02 f303 	lsl.w	r3, r2, r3
 8002160:	69ba      	ldr	r2, [r7, #24]
 8002162:	4313      	orrs	r3, r2
 8002164:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 8002166:	687b      	ldr	r3, [r7, #4]
 8002168:	69ba      	ldr	r2, [r7, #24]
 800216a:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800216c:	683b      	ldr	r3, [r7, #0]
 800216e:	685b      	ldr	r3, [r3, #4]
 8002170:	2b02      	cmp	r3, #2
 8002172:	d003      	beq.n	800217c <HAL_GPIO_Init+0xfc>
 8002174:	683b      	ldr	r3, [r7, #0]
 8002176:	685b      	ldr	r3, [r3, #4]
 8002178:	2b12      	cmp	r3, #18
 800217a:	d123      	bne.n	80021c4 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800217c:	69fb      	ldr	r3, [r7, #28]
 800217e:	08da      	lsrs	r2, r3, #3
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	3208      	adds	r2, #8
 8002184:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002188:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 800218a:	69fb      	ldr	r3, [r7, #28]
 800218c:	f003 0307 	and.w	r3, r3, #7
 8002190:	009b      	lsls	r3, r3, #2
 8002192:	220f      	movs	r2, #15
 8002194:	fa02 f303 	lsl.w	r3, r2, r3
 8002198:	43db      	mvns	r3, r3
 800219a:	69ba      	ldr	r2, [r7, #24]
 800219c:	4013      	ands	r3, r2
 800219e:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80021a0:	683b      	ldr	r3, [r7, #0]
 80021a2:	691a      	ldr	r2, [r3, #16]
 80021a4:	69fb      	ldr	r3, [r7, #28]
 80021a6:	f003 0307 	and.w	r3, r3, #7
 80021aa:	009b      	lsls	r3, r3, #2
 80021ac:	fa02 f303 	lsl.w	r3, r2, r3
 80021b0:	69ba      	ldr	r2, [r7, #24]
 80021b2:	4313      	orrs	r3, r2
 80021b4:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80021b6:	69fb      	ldr	r3, [r7, #28]
 80021b8:	08da      	lsrs	r2, r3, #3
 80021ba:	687b      	ldr	r3, [r7, #4]
 80021bc:	3208      	adds	r2, #8
 80021be:	69b9      	ldr	r1, [r7, #24]
 80021c0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80021c4:	687b      	ldr	r3, [r7, #4]
 80021c6:	681b      	ldr	r3, [r3, #0]
 80021c8:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80021ca:	69fb      	ldr	r3, [r7, #28]
 80021cc:	005b      	lsls	r3, r3, #1
 80021ce:	2203      	movs	r2, #3
 80021d0:	fa02 f303 	lsl.w	r3, r2, r3
 80021d4:	43db      	mvns	r3, r3
 80021d6:	69ba      	ldr	r2, [r7, #24]
 80021d8:	4013      	ands	r3, r2
 80021da:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80021dc:	683b      	ldr	r3, [r7, #0]
 80021de:	685b      	ldr	r3, [r3, #4]
 80021e0:	f003 0203 	and.w	r2, r3, #3
 80021e4:	69fb      	ldr	r3, [r7, #28]
 80021e6:	005b      	lsls	r3, r3, #1
 80021e8:	fa02 f303 	lsl.w	r3, r2, r3
 80021ec:	69ba      	ldr	r2, [r7, #24]
 80021ee:	4313      	orrs	r3, r2
 80021f0:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	69ba      	ldr	r2, [r7, #24]
 80021f6:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 80021f8:	683b      	ldr	r3, [r7, #0]
 80021fa:	685b      	ldr	r3, [r3, #4]
 80021fc:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002200:	2b00      	cmp	r3, #0
 8002202:	f000 80c0 	beq.w	8002386 <HAL_GPIO_Init+0x306>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002206:	2300      	movs	r3, #0
 8002208:	60fb      	str	r3, [r7, #12]
 800220a:	4b65      	ldr	r3, [pc, #404]	; (80023a0 <HAL_GPIO_Init+0x320>)
 800220c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800220e:	4a64      	ldr	r2, [pc, #400]	; (80023a0 <HAL_GPIO_Init+0x320>)
 8002210:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002214:	6453      	str	r3, [r2, #68]	; 0x44
 8002216:	4b62      	ldr	r3, [pc, #392]	; (80023a0 <HAL_GPIO_Init+0x320>)
 8002218:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800221a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800221e:	60fb      	str	r3, [r7, #12]
 8002220:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 8002222:	4a60      	ldr	r2, [pc, #384]	; (80023a4 <HAL_GPIO_Init+0x324>)
 8002224:	69fb      	ldr	r3, [r7, #28]
 8002226:	089b      	lsrs	r3, r3, #2
 8002228:	3302      	adds	r3, #2
 800222a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800222e:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8002230:	69fb      	ldr	r3, [r7, #28]
 8002232:	f003 0303 	and.w	r3, r3, #3
 8002236:	009b      	lsls	r3, r3, #2
 8002238:	220f      	movs	r2, #15
 800223a:	fa02 f303 	lsl.w	r3, r2, r3
 800223e:	43db      	mvns	r3, r3
 8002240:	69ba      	ldr	r2, [r7, #24]
 8002242:	4013      	ands	r3, r2
 8002244:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8002246:	687b      	ldr	r3, [r7, #4]
 8002248:	4a57      	ldr	r2, [pc, #348]	; (80023a8 <HAL_GPIO_Init+0x328>)
 800224a:	4293      	cmp	r3, r2
 800224c:	d037      	beq.n	80022be <HAL_GPIO_Init+0x23e>
 800224e:	687b      	ldr	r3, [r7, #4]
 8002250:	4a56      	ldr	r2, [pc, #344]	; (80023ac <HAL_GPIO_Init+0x32c>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d031      	beq.n	80022ba <HAL_GPIO_Init+0x23a>
 8002256:	687b      	ldr	r3, [r7, #4]
 8002258:	4a55      	ldr	r2, [pc, #340]	; (80023b0 <HAL_GPIO_Init+0x330>)
 800225a:	4293      	cmp	r3, r2
 800225c:	d02b      	beq.n	80022b6 <HAL_GPIO_Init+0x236>
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	4a54      	ldr	r2, [pc, #336]	; (80023b4 <HAL_GPIO_Init+0x334>)
 8002262:	4293      	cmp	r3, r2
 8002264:	d025      	beq.n	80022b2 <HAL_GPIO_Init+0x232>
 8002266:	687b      	ldr	r3, [r7, #4]
 8002268:	4a53      	ldr	r2, [pc, #332]	; (80023b8 <HAL_GPIO_Init+0x338>)
 800226a:	4293      	cmp	r3, r2
 800226c:	d01f      	beq.n	80022ae <HAL_GPIO_Init+0x22e>
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	4a52      	ldr	r2, [pc, #328]	; (80023bc <HAL_GPIO_Init+0x33c>)
 8002272:	4293      	cmp	r3, r2
 8002274:	d019      	beq.n	80022aa <HAL_GPIO_Init+0x22a>
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	4a51      	ldr	r2, [pc, #324]	; (80023c0 <HAL_GPIO_Init+0x340>)
 800227a:	4293      	cmp	r3, r2
 800227c:	d013      	beq.n	80022a6 <HAL_GPIO_Init+0x226>
 800227e:	687b      	ldr	r3, [r7, #4]
 8002280:	4a50      	ldr	r2, [pc, #320]	; (80023c4 <HAL_GPIO_Init+0x344>)
 8002282:	4293      	cmp	r3, r2
 8002284:	d00d      	beq.n	80022a2 <HAL_GPIO_Init+0x222>
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	4a4f      	ldr	r2, [pc, #316]	; (80023c8 <HAL_GPIO_Init+0x348>)
 800228a:	4293      	cmp	r3, r2
 800228c:	d007      	beq.n	800229e <HAL_GPIO_Init+0x21e>
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	4a4e      	ldr	r2, [pc, #312]	; (80023cc <HAL_GPIO_Init+0x34c>)
 8002292:	4293      	cmp	r3, r2
 8002294:	d101      	bne.n	800229a <HAL_GPIO_Init+0x21a>
 8002296:	2309      	movs	r3, #9
 8002298:	e012      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 800229a:	230a      	movs	r3, #10
 800229c:	e010      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 800229e:	2308      	movs	r3, #8
 80022a0:	e00e      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022a2:	2307      	movs	r3, #7
 80022a4:	e00c      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022a6:	2306      	movs	r3, #6
 80022a8:	e00a      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022aa:	2305      	movs	r3, #5
 80022ac:	e008      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022ae:	2304      	movs	r3, #4
 80022b0:	e006      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022b2:	2303      	movs	r3, #3
 80022b4:	e004      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022b6:	2302      	movs	r3, #2
 80022b8:	e002      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022ba:	2301      	movs	r3, #1
 80022bc:	e000      	b.n	80022c0 <HAL_GPIO_Init+0x240>
 80022be:	2300      	movs	r3, #0
 80022c0:	69fa      	ldr	r2, [r7, #28]
 80022c2:	f002 0203 	and.w	r2, r2, #3
 80022c6:	0092      	lsls	r2, r2, #2
 80022c8:	4093      	lsls	r3, r2
 80022ca:	69ba      	ldr	r2, [r7, #24]
 80022cc:	4313      	orrs	r3, r2
 80022ce:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80022d0:	4934      	ldr	r1, [pc, #208]	; (80023a4 <HAL_GPIO_Init+0x324>)
 80022d2:	69fb      	ldr	r3, [r7, #28]
 80022d4:	089b      	lsrs	r3, r3, #2
 80022d6:	3302      	adds	r3, #2
 80022d8:	69ba      	ldr	r2, [r7, #24]
 80022da:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80022de:	4b3c      	ldr	r3, [pc, #240]	; (80023d0 <HAL_GPIO_Init+0x350>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80022e4:	693b      	ldr	r3, [r7, #16]
 80022e6:	43db      	mvns	r3, r3
 80022e8:	69ba      	ldr	r2, [r7, #24]
 80022ea:	4013      	ands	r3, r2
 80022ec:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80022ee:	683b      	ldr	r3, [r7, #0]
 80022f0:	685b      	ldr	r3, [r3, #4]
 80022f2:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80022f6:	2b00      	cmp	r3, #0
 80022f8:	d003      	beq.n	8002302 <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 80022fa:	69ba      	ldr	r2, [r7, #24]
 80022fc:	693b      	ldr	r3, [r7, #16]
 80022fe:	4313      	orrs	r3, r2
 8002300:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8002302:	4a33      	ldr	r2, [pc, #204]	; (80023d0 <HAL_GPIO_Init+0x350>)
 8002304:	69bb      	ldr	r3, [r7, #24]
 8002306:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 8002308:	4b31      	ldr	r3, [pc, #196]	; (80023d0 <HAL_GPIO_Init+0x350>)
 800230a:	685b      	ldr	r3, [r3, #4]
 800230c:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800230e:	693b      	ldr	r3, [r7, #16]
 8002310:	43db      	mvns	r3, r3
 8002312:	69ba      	ldr	r2, [r7, #24]
 8002314:	4013      	ands	r3, r2
 8002316:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8002318:	683b      	ldr	r3, [r7, #0]
 800231a:	685b      	ldr	r3, [r3, #4]
 800231c:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002320:	2b00      	cmp	r3, #0
 8002322:	d003      	beq.n	800232c <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 8002324:	69ba      	ldr	r2, [r7, #24]
 8002326:	693b      	ldr	r3, [r7, #16]
 8002328:	4313      	orrs	r3, r2
 800232a:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800232c:	4a28      	ldr	r2, [pc, #160]	; (80023d0 <HAL_GPIO_Init+0x350>)
 800232e:	69bb      	ldr	r3, [r7, #24]
 8002330:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002332:	4b27      	ldr	r3, [pc, #156]	; (80023d0 <HAL_GPIO_Init+0x350>)
 8002334:	689b      	ldr	r3, [r3, #8]
 8002336:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002338:	693b      	ldr	r3, [r7, #16]
 800233a:	43db      	mvns	r3, r3
 800233c:	69ba      	ldr	r2, [r7, #24]
 800233e:	4013      	ands	r3, r2
 8002340:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8002342:	683b      	ldr	r3, [r7, #0]
 8002344:	685b      	ldr	r3, [r3, #4]
 8002346:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800234a:	2b00      	cmp	r3, #0
 800234c:	d003      	beq.n	8002356 <HAL_GPIO_Init+0x2d6>
        {
          temp |= iocurrent;
 800234e:	69ba      	ldr	r2, [r7, #24]
 8002350:	693b      	ldr	r3, [r7, #16]
 8002352:	4313      	orrs	r3, r2
 8002354:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 8002356:	4a1e      	ldr	r2, [pc, #120]	; (80023d0 <HAL_GPIO_Init+0x350>)
 8002358:	69bb      	ldr	r3, [r7, #24]
 800235a:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 800235c:	4b1c      	ldr	r3, [pc, #112]	; (80023d0 <HAL_GPIO_Init+0x350>)
 800235e:	68db      	ldr	r3, [r3, #12]
 8002360:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8002362:	693b      	ldr	r3, [r7, #16]
 8002364:	43db      	mvns	r3, r3
 8002366:	69ba      	ldr	r2, [r7, #24]
 8002368:	4013      	ands	r3, r2
 800236a:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800236c:	683b      	ldr	r3, [r7, #0]
 800236e:	685b      	ldr	r3, [r3, #4]
 8002370:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002374:	2b00      	cmp	r3, #0
 8002376:	d003      	beq.n	8002380 <HAL_GPIO_Init+0x300>
        {
          temp |= iocurrent;
 8002378:	69ba      	ldr	r2, [r7, #24]
 800237a:	693b      	ldr	r3, [r7, #16]
 800237c:	4313      	orrs	r3, r2
 800237e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8002380:	4a13      	ldr	r2, [pc, #76]	; (80023d0 <HAL_GPIO_Init+0x350>)
 8002382:	69bb      	ldr	r3, [r7, #24]
 8002384:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8002386:	69fb      	ldr	r3, [r7, #28]
 8002388:	3301      	adds	r3, #1
 800238a:	61fb      	str	r3, [r7, #28]
 800238c:	69fb      	ldr	r3, [r7, #28]
 800238e:	2b0f      	cmp	r3, #15
 8002390:	f67f ae84 	bls.w	800209c <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8002394:	bf00      	nop
 8002396:	3724      	adds	r7, #36	; 0x24
 8002398:	46bd      	mov	sp, r7
 800239a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800239e:	4770      	bx	lr
 80023a0:	40023800 	.word	0x40023800
 80023a4:	40013800 	.word	0x40013800
 80023a8:	40020000 	.word	0x40020000
 80023ac:	40020400 	.word	0x40020400
 80023b0:	40020800 	.word	0x40020800
 80023b4:	40020c00 	.word	0x40020c00
 80023b8:	40021000 	.word	0x40021000
 80023bc:	40021400 	.word	0x40021400
 80023c0:	40021800 	.word	0x40021800
 80023c4:	40021c00 	.word	0x40021c00
 80023c8:	40022000 	.word	0x40022000
 80023cc:	40022400 	.word	0x40022400
 80023d0:	40013c00 	.word	0x40013c00

080023d4 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80023d4:	b480      	push	{r7}
 80023d6:	b085      	sub	sp, #20
 80023d8:	af00      	add	r7, sp, #0
 80023da:	6078      	str	r0, [r7, #4]
 80023dc:	460b      	mov	r3, r1
 80023de:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	691a      	ldr	r2, [r3, #16]
 80023e4:	887b      	ldrh	r3, [r7, #2]
 80023e6:	4013      	ands	r3, r2
 80023e8:	2b00      	cmp	r3, #0
 80023ea:	d002      	beq.n	80023f2 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80023ec:	2301      	movs	r3, #1
 80023ee:	73fb      	strb	r3, [r7, #15]
 80023f0:	e001      	b.n	80023f6 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80023f2:	2300      	movs	r3, #0
 80023f4:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80023f6:	7bfb      	ldrb	r3, [r7, #15]
}
 80023f8:	4618      	mov	r0, r3
 80023fa:	3714      	adds	r7, #20
 80023fc:	46bd      	mov	sp, r7
 80023fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002402:	4770      	bx	lr

08002404 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8002404:	b480      	push	{r7}
 8002406:	b083      	sub	sp, #12
 8002408:	af00      	add	r7, sp, #0
 800240a:	6078      	str	r0, [r7, #4]
 800240c:	460b      	mov	r3, r1
 800240e:	807b      	strh	r3, [r7, #2]
 8002410:	4613      	mov	r3, r2
 8002412:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8002414:	787b      	ldrb	r3, [r7, #1]
 8002416:	2b00      	cmp	r3, #0
 8002418:	d003      	beq.n	8002422 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 800241a:	887a      	ldrh	r2, [r7, #2]
 800241c:	687b      	ldr	r3, [r7, #4]
 800241e:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 8002420:	e003      	b.n	800242a <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8002422:	887b      	ldrh	r3, [r7, #2]
 8002424:	041a      	lsls	r2, r3, #16
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	619a      	str	r2, [r3, #24]
}
 800242a:	bf00      	nop
 800242c:	370c      	adds	r7, #12
 800242e:	46bd      	mov	sp, r7
 8002430:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002434:	4770      	bx	lr
	...

08002438 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8002438:	b580      	push	{r7, lr}
 800243a:	b082      	sub	sp, #8
 800243c:	af00      	add	r7, sp, #0
 800243e:	4603      	mov	r3, r0
 8002440:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8002442:	4b08      	ldr	r3, [pc, #32]	; (8002464 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002444:	695a      	ldr	r2, [r3, #20]
 8002446:	88fb      	ldrh	r3, [r7, #6]
 8002448:	4013      	ands	r3, r2
 800244a:	2b00      	cmp	r3, #0
 800244c:	d006      	beq.n	800245c <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800244e:	4a05      	ldr	r2, [pc, #20]	; (8002464 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002450:	88fb      	ldrh	r3, [r7, #6]
 8002452:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8002454:	88fb      	ldrh	r3, [r7, #6]
 8002456:	4618      	mov	r0, r3
 8002458:	f000 f806 	bl	8002468 <HAL_GPIO_EXTI_Callback>
  }
}
 800245c:	bf00      	nop
 800245e:	3708      	adds	r7, #8
 8002460:	46bd      	mov	sp, r7
 8002462:	bd80      	pop	{r7, pc}
 8002464:	40013c00 	.word	0x40013c00

08002468 <HAL_GPIO_EXTI_Callback>:
  * @brief  EXTI line detection callbacks.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
__weak void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8002468:	b480      	push	{r7}
 800246a:	b083      	sub	sp, #12
 800246c:	af00      	add	r7, sp, #0
 800246e:	4603      	mov	r3, r0
 8002470:	80fb      	strh	r3, [r7, #6]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(GPIO_Pin);
  /* NOTE: This function Should not be modified, when the callback is needed,
           the HAL_GPIO_EXTI_Callback could be implemented in the user file
   */
}
 8002472:	bf00      	nop
 8002474:	370c      	adds	r7, #12
 8002476:	46bd      	mov	sp, r7
 8002478:	f85d 7b04 	ldr.w	r7, [sp], #4
 800247c:	4770      	bx	lr
	...

08002480 <HAL_LTDC_Init>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_Init(LTDC_HandleTypeDef *hltdc)
{
 8002480:	b580      	push	{r7, lr}
 8002482:	b084      	sub	sp, #16
 8002484:	af00      	add	r7, sp, #0
 8002486:	6078      	str	r0, [r7, #4]
  uint32_t tmp, tmp1;

  /* Check the LTDC peripheral state */
  if (hltdc == NULL)
 8002488:	687b      	ldr	r3, [r7, #4]
 800248a:	2b00      	cmp	r3, #0
 800248c:	d101      	bne.n	8002492 <HAL_LTDC_Init+0x12>
  {
    return HAL_ERROR;
 800248e:	2301      	movs	r3, #1
 8002490:	e0bf      	b.n	8002612 <HAL_LTDC_Init+0x192>
    }
    /* Init the low level hardware */
    hltdc->MspInitCallback(hltdc);
  }
#else
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8002492:	687b      	ldr	r3, [r7, #4]
 8002494:	f893 30a1 	ldrb.w	r3, [r3, #161]	; 0xa1
 8002498:	b2db      	uxtb	r3, r3
 800249a:	2b00      	cmp	r3, #0
 800249c:	d106      	bne.n	80024ac <HAL_LTDC_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hltdc->Lock = HAL_UNLOCKED;
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	2200      	movs	r2, #0
 80024a2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
    /* Init the low level hardware */
    HAL_LTDC_MspInit(hltdc);
 80024a6:	6878      	ldr	r0, [r7, #4]
 80024a8:	f7fe fb7c 	bl	8000ba4 <HAL_LTDC_MspInit>
  }
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	2202      	movs	r2, #2
 80024b0:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Configure the HS, VS, DE and PC polarity */
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	681b      	ldr	r3, [r3, #0]
 80024b8:	699a      	ldr	r2, [r3, #24]
 80024ba:	687b      	ldr	r3, [r7, #4]
 80024bc:	681b      	ldr	r3, [r3, #0]
 80024be:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80024c2:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80024c4:	687b      	ldr	r3, [r7, #4]
 80024c6:	681b      	ldr	r3, [r3, #0]
 80024c8:	6999      	ldr	r1, [r3, #24]
 80024ca:	687b      	ldr	r3, [r7, #4]
 80024cc:	685a      	ldr	r2, [r3, #4]
 80024ce:	687b      	ldr	r3, [r7, #4]
 80024d0:	689b      	ldr	r3, [r3, #8]
 80024d2:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80024d4:	687b      	ldr	r3, [r7, #4]
 80024d6:	68db      	ldr	r3, [r3, #12]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80024d8:	431a      	orrs	r2, r3
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	691b      	ldr	r3, [r3, #16]
 80024de:	431a      	orrs	r2, r3
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	681b      	ldr	r3, [r3, #0]
 80024e4:	430a      	orrs	r2, r1
 80024e6:	619a      	str	r2, [r3, #24]

  /* Set Synchronization size */
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80024e8:	687b      	ldr	r3, [r7, #4]
 80024ea:	681b      	ldr	r3, [r3, #0]
 80024ec:	6899      	ldr	r1, [r3, #8]
 80024ee:	687b      	ldr	r3, [r7, #4]
 80024f0:	681a      	ldr	r2, [r3, #0]
 80024f2:	4b4a      	ldr	r3, [pc, #296]	; (800261c <HAL_LTDC_Init+0x19c>)
 80024f4:	400b      	ands	r3, r1
 80024f6:	6093      	str	r3, [r2, #8]
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80024f8:	687b      	ldr	r3, [r7, #4]
 80024fa:	695b      	ldr	r3, [r3, #20]
 80024fc:	041b      	lsls	r3, r3, #16
 80024fe:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8002500:	687b      	ldr	r3, [r7, #4]
 8002502:	681b      	ldr	r3, [r3, #0]
 8002504:	6899      	ldr	r1, [r3, #8]
 8002506:	687b      	ldr	r3, [r7, #4]
 8002508:	699a      	ldr	r2, [r3, #24]
 800250a:	68fb      	ldr	r3, [r7, #12]
 800250c:	431a      	orrs	r2, r3
 800250e:	687b      	ldr	r3, [r7, #4]
 8002510:	681b      	ldr	r3, [r3, #0]
 8002512:	430a      	orrs	r2, r1
 8002514:	609a      	str	r2, [r3, #8]

  /* Set Accumulated Back porch */
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	681b      	ldr	r3, [r3, #0]
 800251a:	68d9      	ldr	r1, [r3, #12]
 800251c:	687b      	ldr	r3, [r7, #4]
 800251e:	681a      	ldr	r2, [r3, #0]
 8002520:	4b3e      	ldr	r3, [pc, #248]	; (800261c <HAL_LTDC_Init+0x19c>)
 8002522:	400b      	ands	r3, r1
 8002524:	60d3      	str	r3, [r2, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	69db      	ldr	r3, [r3, #28]
 800252a:	041b      	lsls	r3, r3, #16
 800252c:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800252e:	687b      	ldr	r3, [r7, #4]
 8002530:	681b      	ldr	r3, [r3, #0]
 8002532:	68d9      	ldr	r1, [r3, #12]
 8002534:	687b      	ldr	r3, [r7, #4]
 8002536:	6a1a      	ldr	r2, [r3, #32]
 8002538:	68fb      	ldr	r3, [r7, #12]
 800253a:	431a      	orrs	r2, r3
 800253c:	687b      	ldr	r3, [r7, #4]
 800253e:	681b      	ldr	r3, [r3, #0]
 8002540:	430a      	orrs	r2, r1
 8002542:	60da      	str	r2, [r3, #12]

  /* Set Accumulated Active Width */
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8002544:	687b      	ldr	r3, [r7, #4]
 8002546:	681b      	ldr	r3, [r3, #0]
 8002548:	6919      	ldr	r1, [r3, #16]
 800254a:	687b      	ldr	r3, [r7, #4]
 800254c:	681a      	ldr	r2, [r3, #0]
 800254e:	4b33      	ldr	r3, [pc, #204]	; (800261c <HAL_LTDC_Init+0x19c>)
 8002550:	400b      	ands	r3, r1
 8002552:	6113      	str	r3, [r2, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8002554:	687b      	ldr	r3, [r7, #4]
 8002556:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002558:	041b      	lsls	r3, r3, #16
 800255a:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 800255c:	687b      	ldr	r3, [r7, #4]
 800255e:	681b      	ldr	r3, [r3, #0]
 8002560:	6919      	ldr	r1, [r3, #16]
 8002562:	687b      	ldr	r3, [r7, #4]
 8002564:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002566:	68fb      	ldr	r3, [r7, #12]
 8002568:	431a      	orrs	r2, r3
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	681b      	ldr	r3, [r3, #0]
 800256e:	430a      	orrs	r2, r1
 8002570:	611a      	str	r2, [r3, #16]

  /* Set Total Width */
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8002572:	687b      	ldr	r3, [r7, #4]
 8002574:	681b      	ldr	r3, [r3, #0]
 8002576:	6959      	ldr	r1, [r3, #20]
 8002578:	687b      	ldr	r3, [r7, #4]
 800257a:	681a      	ldr	r2, [r3, #0]
 800257c:	4b27      	ldr	r3, [pc, #156]	; (800261c <HAL_LTDC_Init+0x19c>)
 800257e:	400b      	ands	r3, r1
 8002580:	6153      	str	r3, [r2, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8002582:	687b      	ldr	r3, [r7, #4]
 8002584:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002586:	041b      	lsls	r3, r3, #16
 8002588:	60fb      	str	r3, [r7, #12]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800258a:	687b      	ldr	r3, [r7, #4]
 800258c:	681b      	ldr	r3, [r3, #0]
 800258e:	6959      	ldr	r1, [r3, #20]
 8002590:	687b      	ldr	r3, [r7, #4]
 8002592:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002594:	68fb      	ldr	r3, [r7, #12]
 8002596:	431a      	orrs	r2, r3
 8002598:	687b      	ldr	r3, [r7, #4]
 800259a:	681b      	ldr	r3, [r3, #0]
 800259c:	430a      	orrs	r2, r1
 800259e:	615a      	str	r2, [r3, #20]

  /* Set the background color value */
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80025a0:	687b      	ldr	r3, [r7, #4]
 80025a2:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 80025a6:	021b      	lsls	r3, r3, #8
 80025a8:	60fb      	str	r3, [r7, #12]
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	f893 3036 	ldrb.w	r3, [r3, #54]	; 0x36
 80025b0:	041b      	lsls	r3, r3, #16
 80025b2:	60bb      	str	r3, [r7, #8]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80025b4:	687b      	ldr	r3, [r7, #4]
 80025b6:	681b      	ldr	r3, [r3, #0]
 80025b8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	681b      	ldr	r3, [r3, #0]
 80025be:	f002 427f 	and.w	r2, r2, #4278190080	; 0xff000000
 80025c2:	62da      	str	r2, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	681b      	ldr	r3, [r3, #0]
 80025c8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80025ca:	68ba      	ldr	r2, [r7, #8]
 80025cc:	68fb      	ldr	r3, [r7, #12]
 80025ce:	4313      	orrs	r3, r2
 80025d0:	687a      	ldr	r2, [r7, #4]
 80025d2:	f892 2034 	ldrb.w	r2, [r2, #52]	; 0x34
 80025d6:	431a      	orrs	r2, r3
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	681b      	ldr	r3, [r3, #0]
 80025dc:	430a      	orrs	r2, r1
 80025de:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Enable the Transfer Error and FIFO underrun interrupts */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80025e0:	687b      	ldr	r3, [r7, #4]
 80025e2:	681b      	ldr	r3, [r3, #0]
 80025e4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80025e6:	687b      	ldr	r3, [r7, #4]
 80025e8:	681b      	ldr	r3, [r3, #0]
 80025ea:	f042 0206 	orr.w	r2, r2, #6
 80025ee:	635a      	str	r2, [r3, #52]	; 0x34

  /* Enable LTDC by setting LTDCEN bit */
  __HAL_LTDC_ENABLE(hltdc);
 80025f0:	687b      	ldr	r3, [r7, #4]
 80025f2:	681b      	ldr	r3, [r3, #0]
 80025f4:	699a      	ldr	r2, [r3, #24]
 80025f6:	687b      	ldr	r3, [r7, #4]
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	f042 0201 	orr.w	r2, r2, #1
 80025fe:	619a      	str	r2, [r3, #24]

  /* Initialize the error code */
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8002600:	687b      	ldr	r3, [r7, #4]
 8002602:	2200      	movs	r2, #0
 8002604:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Initialize the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	2201      	movs	r2, #1
 800260c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  return HAL_OK;
 8002610:	2300      	movs	r3, #0
}
 8002612:	4618      	mov	r0, r3
 8002614:	3710      	adds	r7, #16
 8002616:	46bd      	mov	sp, r7
 8002618:	bd80      	pop	{r7, pc}
 800261a:	bf00      	nop
 800261c:	f000f800 	.word	0xf000f800

08002620 <HAL_LTDC_IRQHandler>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval HAL status
  */
void HAL_LTDC_IRQHandler(LTDC_HandleTypeDef *hltdc)
{
 8002620:	b580      	push	{r7, lr}
 8002622:	b084      	sub	sp, #16
 8002624:	af00      	add	r7, sp, #0
 8002626:	6078      	str	r0, [r7, #4]
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8002628:	687b      	ldr	r3, [r7, #4]
 800262a:	681b      	ldr	r3, [r3, #0]
 800262c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800262e:	60fb      	str	r3, [r7, #12]
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	681b      	ldr	r3, [r3, #0]
 8002634:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002636:	60bb      	str	r3, [r7, #8]

  /* Transfer Error Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8002638:	68fb      	ldr	r3, [r7, #12]
 800263a:	f003 0304 	and.w	r3, r3, #4
 800263e:	2b00      	cmp	r3, #0
 8002640:	d023      	beq.n	800268a <HAL_LTDC_IRQHandler+0x6a>
 8002642:	68bb      	ldr	r3, [r7, #8]
 8002644:	f003 0304 	and.w	r3, r3, #4
 8002648:	2b00      	cmp	r3, #0
 800264a:	d01e      	beq.n	800268a <HAL_LTDC_IRQHandler+0x6a>
  {
    /* Disable the transfer Error interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 800264c:	687b      	ldr	r3, [r7, #4]
 800264e:	681b      	ldr	r3, [r3, #0]
 8002650:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002652:	687b      	ldr	r3, [r7, #4]
 8002654:	681b      	ldr	r3, [r3, #0]
 8002656:	f022 0204 	bic.w	r2, r2, #4
 800265a:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the transfer error flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 800265c:	687b      	ldr	r3, [r7, #4]
 800265e:	681b      	ldr	r3, [r3, #0]
 8002660:	2204      	movs	r2, #4
 8002662:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8002664:	687b      	ldr	r3, [r7, #4]
 8002666:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800266a:	f043 0201 	orr.w	r2, r3, #1
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8002674:	687b      	ldr	r3, [r7, #4]
 8002676:	2204      	movs	r2, #4
 8002678:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 800267c:	687b      	ldr	r3, [r7, #4]
 800267e:	2200      	movs	r2, #0
 8002680:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 8002684:	6878      	ldr	r0, [r7, #4]
 8002686:	f000 f86f 	bl	8002768 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* FIFO underrun Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 800268a:	68fb      	ldr	r3, [r7, #12]
 800268c:	f003 0302 	and.w	r3, r3, #2
 8002690:	2b00      	cmp	r3, #0
 8002692:	d023      	beq.n	80026dc <HAL_LTDC_IRQHandler+0xbc>
 8002694:	68bb      	ldr	r3, [r7, #8]
 8002696:	f003 0302 	and.w	r3, r3, #2
 800269a:	2b00      	cmp	r3, #0
 800269c:	d01e      	beq.n	80026dc <HAL_LTDC_IRQHandler+0xbc>
  {
    /* Disable the FIFO underrun interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800269e:	687b      	ldr	r3, [r7, #4]
 80026a0:	681b      	ldr	r3, [r3, #0]
 80026a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	681b      	ldr	r3, [r3, #0]
 80026a8:	f022 0202 	bic.w	r2, r2, #2
 80026ac:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the FIFO underrun flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	681b      	ldr	r3, [r3, #0]
 80026b2:	2202      	movs	r2, #2
 80026b4:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Update error code */
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 80026bc:	f043 0202 	orr.w	r2, r3, #2
 80026c0:	687b      	ldr	r3, [r7, #4]
 80026c2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80026c6:	687b      	ldr	r3, [r7, #4]
 80026c8:	2204      	movs	r2, #4
 80026ca:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 80026ce:	687b      	ldr	r3, [r7, #4]
 80026d0:	2200      	movs	r2, #0
 80026d2:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered error callback*/
    hltdc->ErrorCallback(hltdc);
#else
    /* Call legacy error callback*/
    HAL_LTDC_ErrorCallback(hltdc);
 80026d6:	6878      	ldr	r0, [r7, #4]
 80026d8:	f000 f846 	bl	8002768 <HAL_LTDC_ErrorCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Line Interrupt management ************************************************/
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80026dc:	68fb      	ldr	r3, [r7, #12]
 80026de:	f003 0301 	and.w	r3, r3, #1
 80026e2:	2b00      	cmp	r3, #0
 80026e4:	d01b      	beq.n	800271e <HAL_LTDC_IRQHandler+0xfe>
 80026e6:	68bb      	ldr	r3, [r7, #8]
 80026e8:	f003 0301 	and.w	r3, r3, #1
 80026ec:	2b00      	cmp	r3, #0
 80026ee:	d016      	beq.n	800271e <HAL_LTDC_IRQHandler+0xfe>
  {
    /* Disable the Line interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80026f0:	687b      	ldr	r3, [r7, #4]
 80026f2:	681b      	ldr	r3, [r3, #0]
 80026f4:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	681b      	ldr	r3, [r3, #0]
 80026fa:	f022 0201 	bic.w	r2, r2, #1
 80026fe:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the Line interrupt flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8002700:	687b      	ldr	r3, [r7, #4]
 8002702:	681b      	ldr	r3, [r3, #0]
 8002704:	2201      	movs	r2, #1
 8002706:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 8002708:	687b      	ldr	r3, [r7, #4]
 800270a:	2201      	movs	r2, #1
 800270c:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	2200      	movs	r2, #0
 8002714:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered Line Event callback */
    hltdc->LineEventCallback(hltdc);
#else
    /*Call Legacy Line Event callback */
    HAL_LTDC_LineEventCallback(hltdc);
 8002718:	6878      	ldr	r0, [r7, #4]
 800271a:	f007 f9f7 	bl	8009b0c <HAL_LTDC_LineEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }

  /* Register reload Interrupt management ***************************************/
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800271e:	68fb      	ldr	r3, [r7, #12]
 8002720:	f003 0308 	and.w	r3, r3, #8
 8002724:	2b00      	cmp	r3, #0
 8002726:	d01b      	beq.n	8002760 <HAL_LTDC_IRQHandler+0x140>
 8002728:	68bb      	ldr	r3, [r7, #8]
 800272a:	f003 0308 	and.w	r3, r3, #8
 800272e:	2b00      	cmp	r3, #0
 8002730:	d016      	beq.n	8002760 <HAL_LTDC_IRQHandler+0x140>
  {
    /* Disable the register reload interrupt */
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8002732:	687b      	ldr	r3, [r7, #4]
 8002734:	681b      	ldr	r3, [r3, #0]
 8002736:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002738:	687b      	ldr	r3, [r7, #4]
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	f022 0208 	bic.w	r2, r2, #8
 8002740:	635a      	str	r2, [r3, #52]	; 0x34

    /* Clear the register reload flag */
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8002742:	687b      	ldr	r3, [r7, #4]
 8002744:	681b      	ldr	r3, [r3, #0]
 8002746:	2208      	movs	r2, #8
 8002748:	63da      	str	r2, [r3, #60]	; 0x3c

    /* Change LTDC state */
    hltdc->State = HAL_LTDC_STATE_READY;
 800274a:	687b      	ldr	r3, [r7, #4]
 800274c:	2201      	movs	r2, #1
 800274e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

    /* Process unlocked */
    __HAL_UNLOCK(hltdc);
 8002752:	687b      	ldr	r3, [r7, #4]
 8002754:	2200      	movs	r2, #0
 8002756:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0
#if (USE_HAL_LTDC_REGISTER_CALLBACKS == 1)
    /*Call registered reload Event callback */
    hltdc->ReloadEventCallback(hltdc);
#else
    /*Call Legacy Reload Event callback */
    HAL_LTDC_ReloadEventCallback(hltdc);
 800275a:	6878      	ldr	r0, [r7, #4]
 800275c:	f000 f80e 	bl	800277c <HAL_LTDC_ReloadEventCallback>
#endif /* USE_HAL_LTDC_REGISTER_CALLBACKS */
  }
}
 8002760:	bf00      	nop
 8002762:	3710      	adds	r7, #16
 8002764:	46bd      	mov	sp, r7
 8002766:	bd80      	pop	{r7, pc}

08002768 <HAL_LTDC_ErrorCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ErrorCallback(LTDC_HandleTypeDef *hltdc)
{
 8002768:	b480      	push	{r7}
 800276a:	b083      	sub	sp, #12
 800276c:	af00      	add	r7, sp, #0
 800276e:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ErrorCallback could be implemented in the user file
   */
}
 8002770:	bf00      	nop
 8002772:	370c      	adds	r7, #12
 8002774:	46bd      	mov	sp, r7
 8002776:	f85d 7b04 	ldr.w	r7, [sp], #4
 800277a:	4770      	bx	lr

0800277c <HAL_LTDC_ReloadEventCallback>:
  * @param  hltdc  pointer to a LTDC_HandleTypeDef structure that contains
  *                the configuration information for the LTDC.
  * @retval None
  */
__weak void HAL_LTDC_ReloadEventCallback(LTDC_HandleTypeDef *hltdc)
{
 800277c:	b480      	push	{r7}
 800277e:	b083      	sub	sp, #12
 8002780:	af00      	add	r7, sp, #0
 8002782:	6078      	str	r0, [r7, #4]
  UNUSED(hltdc);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_LTDC_ReloadEvenCallback could be implemented in the user file
   */
}
 8002784:	bf00      	nop
 8002786:	370c      	adds	r7, #12
 8002788:	46bd      	mov	sp, r7
 800278a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800278e:	4770      	bx	lr

08002790 <HAL_LTDC_ConfigLayer>:
  *                    This parameter can be one of the following values:
  *                    LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ConfigLayer(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8002790:	b5b0      	push	{r4, r5, r7, lr}
 8002792:	b084      	sub	sp, #16
 8002794:	af00      	add	r7, sp, #0
 8002796:	60f8      	str	r0, [r7, #12]
 8002798:	60b9      	str	r1, [r7, #8]
 800279a:	607a      	str	r2, [r7, #4]
  assert_param(IS_LTDC_BLENDING_FACTOR2(pLayerCfg->BlendingFactor2));
  assert_param(IS_LTDC_CFBLL(pLayerCfg->ImageWidth));
  assert_param(IS_LTDC_CFBLNBR(pLayerCfg->ImageHeight));

  /* Process locked */
  __HAL_LOCK(hltdc);
 800279c:	68fb      	ldr	r3, [r7, #12]
 800279e:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 80027a2:	2b01      	cmp	r3, #1
 80027a4:	d101      	bne.n	80027aa <HAL_LTDC_ConfigLayer+0x1a>
 80027a6:	2302      	movs	r3, #2
 80027a8:	e02c      	b.n	8002804 <HAL_LTDC_ConfigLayer+0x74>
 80027aa:	68fb      	ldr	r3, [r7, #12]
 80027ac:	2201      	movs	r2, #1
 80027ae:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80027b2:	68fb      	ldr	r3, [r7, #12]
 80027b4:	2202      	movs	r2, #2
 80027b6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Copy new layer configuration into handle structure */
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80027ba:	68fa      	ldr	r2, [r7, #12]
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	2134      	movs	r1, #52	; 0x34
 80027c0:	fb01 f303 	mul.w	r3, r1, r3
 80027c4:	4413      	add	r3, r2
 80027c6:	f103 0238 	add.w	r2, r3, #56	; 0x38
 80027ca:	68bb      	ldr	r3, [r7, #8]
 80027cc:	4614      	mov	r4, r2
 80027ce:	461d      	mov	r5, r3
 80027d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80027d2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80027d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80027d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80027d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80027da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80027dc:	682b      	ldr	r3, [r5, #0]
 80027de:	6023      	str	r3, [r4, #0]

  /* Configure the LTDC Layer */
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80027e0:	687a      	ldr	r2, [r7, #4]
 80027e2:	68b9      	ldr	r1, [r7, #8]
 80027e4:	68f8      	ldr	r0, [r7, #12]
 80027e6:	f000 f849 	bl	800287c <LTDC_SetConfig>

  /* Set the Immediate Reload type */
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80027ea:	68fb      	ldr	r3, [r7, #12]
 80027ec:	681b      	ldr	r3, [r3, #0]
 80027ee:	2201      	movs	r2, #1
 80027f0:	625a      	str	r2, [r3, #36]	; 0x24

  /* Initialize the LTDC state*/
  hltdc->State  = HAL_LTDC_STATE_READY;
 80027f2:	68fb      	ldr	r3, [r7, #12]
 80027f4:	2201      	movs	r2, #1
 80027f6:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 80027fa:	68fb      	ldr	r3, [r7, #12]
 80027fc:	2200      	movs	r2, #0
 80027fe:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 8002802:	2300      	movs	r3, #0
}
 8002804:	4618      	mov	r0, r3
 8002806:	3710      	adds	r7, #16
 8002808:	46bd      	mov	sp, r7
 800280a:	bdb0      	pop	{r4, r5, r7, pc}

0800280c <HAL_LTDC_ProgramLineEvent>:
  * @param  Line    Line Interrupt Position.
  * @note   User application may resort to HAL_LTDC_LineEventCallback() at line interrupt generation.
  * @retval  HAL status
  */
HAL_StatusTypeDef HAL_LTDC_ProgramLineEvent(LTDC_HandleTypeDef *hltdc, uint32_t Line)
{
 800280c:	b480      	push	{r7}
 800280e:	b083      	sub	sp, #12
 8002810:	af00      	add	r7, sp, #0
 8002812:	6078      	str	r0, [r7, #4]
 8002814:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_LTDC_LIPOS(Line));

  /* Process locked */
  __HAL_LOCK(hltdc);
 8002816:	687b      	ldr	r3, [r7, #4]
 8002818:	f893 30a0 	ldrb.w	r3, [r3, #160]	; 0xa0
 800281c:	2b01      	cmp	r3, #1
 800281e:	d101      	bne.n	8002824 <HAL_LTDC_ProgramLineEvent+0x18>
 8002820:	2302      	movs	r3, #2
 8002822:	e023      	b.n	800286c <HAL_LTDC_ProgramLineEvent+0x60>
 8002824:	687b      	ldr	r3, [r7, #4]
 8002826:	2201      	movs	r2, #1
 8002828:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  /* Change LTDC peripheral state */
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800282c:	687b      	ldr	r3, [r7, #4]
 800282e:	2202      	movs	r2, #2
 8002830:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Disable the Line interrupt */
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8002834:	687b      	ldr	r3, [r7, #4]
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800283a:	687b      	ldr	r3, [r7, #4]
 800283c:	681b      	ldr	r3, [r3, #0]
 800283e:	f022 0201 	bic.w	r2, r2, #1
 8002842:	635a      	str	r2, [r3, #52]	; 0x34

  /* Set the Line Interrupt position */
  LTDC->LIPCR = (uint32_t)Line;
 8002844:	4a0c      	ldr	r2, [pc, #48]	; (8002878 <HAL_LTDC_ProgramLineEvent+0x6c>)
 8002846:	683b      	ldr	r3, [r7, #0]
 8002848:	6413      	str	r3, [r2, #64]	; 0x40

  /* Enable the Line interrupt */
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 800284a:	687b      	ldr	r3, [r7, #4]
 800284c:	681b      	ldr	r3, [r3, #0]
 800284e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002850:	687b      	ldr	r3, [r7, #4]
 8002852:	681b      	ldr	r3, [r3, #0]
 8002854:	f042 0201 	orr.w	r2, r2, #1
 8002858:	635a      	str	r2, [r3, #52]	; 0x34

  /* Change the LTDC state*/
  hltdc->State = HAL_LTDC_STATE_READY;
 800285a:	687b      	ldr	r3, [r7, #4]
 800285c:	2201      	movs	r2, #1
 800285e:	f883 20a1 	strb.w	r2, [r3, #161]	; 0xa1

  /* Process unlocked */
  __HAL_UNLOCK(hltdc);
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	2200      	movs	r2, #0
 8002866:	f883 20a0 	strb.w	r2, [r3, #160]	; 0xa0

  return HAL_OK;
 800286a:	2300      	movs	r3, #0
}
 800286c:	4618      	mov	r0, r3
 800286e:	370c      	adds	r7, #12
 8002870:	46bd      	mov	sp, r7
 8002872:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002876:	4770      	bx	lr
 8002878:	40016800 	.word	0x40016800

0800287c <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 800287c:	b480      	push	{r7}
 800287e:	b089      	sub	sp, #36	; 0x24
 8002880:	af00      	add	r7, sp, #0
 8002882:	60f8      	str	r0, [r7, #12]
 8002884:	60b9      	str	r1, [r7, #8]
 8002886:	607a      	str	r2, [r7, #4]
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8002888:	68bb      	ldr	r3, [r7, #8]
 800288a:	685a      	ldr	r2, [r3, #4]
 800288c:	68fb      	ldr	r3, [r7, #12]
 800288e:	681b      	ldr	r3, [r3, #0]
 8002890:	68db      	ldr	r3, [r3, #12]
 8002892:	0c1b      	lsrs	r3, r3, #16
 8002894:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8002898:	4413      	add	r3, r2
 800289a:	041b      	lsls	r3, r3, #16
 800289c:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800289e:	68fb      	ldr	r3, [r7, #12]
 80028a0:	681b      	ldr	r3, [r3, #0]
 80028a2:	461a      	mov	r2, r3
 80028a4:	687b      	ldr	r3, [r7, #4]
 80028a6:	01db      	lsls	r3, r3, #7
 80028a8:	4413      	add	r3, r2
 80028aa:	3384      	adds	r3, #132	; 0x84
 80028ac:	685b      	ldr	r3, [r3, #4]
 80028ae:	68fa      	ldr	r2, [r7, #12]
 80028b0:	6812      	ldr	r2, [r2, #0]
 80028b2:	4611      	mov	r1, r2
 80028b4:	687a      	ldr	r2, [r7, #4]
 80028b6:	01d2      	lsls	r2, r2, #7
 80028b8:	440a      	add	r2, r1
 80028ba:	3284      	adds	r2, #132	; 0x84
 80028bc:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 80028c0:	6053      	str	r3, [r2, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80028c2:	68bb      	ldr	r3, [r7, #8]
 80028c4:	681a      	ldr	r2, [r3, #0]
 80028c6:	68fb      	ldr	r3, [r7, #12]
 80028c8:	681b      	ldr	r3, [r3, #0]
 80028ca:	68db      	ldr	r3, [r3, #12]
 80028cc:	0c1b      	lsrs	r3, r3, #16
 80028ce:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80028d2:	4413      	add	r3, r2
 80028d4:	1c5a      	adds	r2, r3, #1
 80028d6:	68fb      	ldr	r3, [r7, #12]
 80028d8:	681b      	ldr	r3, [r3, #0]
 80028da:	4619      	mov	r1, r3
 80028dc:	687b      	ldr	r3, [r7, #4]
 80028de:	01db      	lsls	r3, r3, #7
 80028e0:	440b      	add	r3, r1
 80028e2:	3384      	adds	r3, #132	; 0x84
 80028e4:	4619      	mov	r1, r3
 80028e6:	69fb      	ldr	r3, [r7, #28]
 80028e8:	4313      	orrs	r3, r2
 80028ea:	604b      	str	r3, [r1, #4]

  /* Configure the vertical start and stop position */
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80028ec:	68bb      	ldr	r3, [r7, #8]
 80028ee:	68da      	ldr	r2, [r3, #12]
 80028f0:	68fb      	ldr	r3, [r7, #12]
 80028f2:	681b      	ldr	r3, [r3, #0]
 80028f4:	68db      	ldr	r3, [r3, #12]
 80028f6:	f3c3 030a 	ubfx	r3, r3, #0, #11
 80028fa:	4413      	add	r3, r2
 80028fc:	041b      	lsls	r3, r3, #16
 80028fe:	61fb      	str	r3, [r7, #28]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8002900:	68fb      	ldr	r3, [r7, #12]
 8002902:	681b      	ldr	r3, [r3, #0]
 8002904:	461a      	mov	r2, r3
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	01db      	lsls	r3, r3, #7
 800290a:	4413      	add	r3, r2
 800290c:	3384      	adds	r3, #132	; 0x84
 800290e:	689b      	ldr	r3, [r3, #8]
 8002910:	68fa      	ldr	r2, [r7, #12]
 8002912:	6812      	ldr	r2, [r2, #0]
 8002914:	4611      	mov	r1, r2
 8002916:	687a      	ldr	r2, [r7, #4]
 8002918:	01d2      	lsls	r2, r2, #7
 800291a:	440a      	add	r2, r1
 800291c:	3284      	adds	r2, #132	; 0x84
 800291e:	f403 4370 	and.w	r3, r3, #61440	; 0xf000
 8002922:	6093      	str	r3, [r2, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8002924:	68bb      	ldr	r3, [r7, #8]
 8002926:	689a      	ldr	r2, [r3, #8]
 8002928:	68fb      	ldr	r3, [r7, #12]
 800292a:	681b      	ldr	r3, [r3, #0]
 800292c:	68db      	ldr	r3, [r3, #12]
 800292e:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8002932:	4413      	add	r3, r2
 8002934:	1c5a      	adds	r2, r3, #1
 8002936:	68fb      	ldr	r3, [r7, #12]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	4619      	mov	r1, r3
 800293c:	687b      	ldr	r3, [r7, #4]
 800293e:	01db      	lsls	r3, r3, #7
 8002940:	440b      	add	r3, r1
 8002942:	3384      	adds	r3, #132	; 0x84
 8002944:	4619      	mov	r1, r3
 8002946:	69fb      	ldr	r3, [r7, #28]
 8002948:	4313      	orrs	r3, r2
 800294a:	608b      	str	r3, [r1, #8]

  /* Specifies the pixel format */
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800294c:	68fb      	ldr	r3, [r7, #12]
 800294e:	681b      	ldr	r3, [r3, #0]
 8002950:	461a      	mov	r2, r3
 8002952:	687b      	ldr	r3, [r7, #4]
 8002954:	01db      	lsls	r3, r3, #7
 8002956:	4413      	add	r3, r2
 8002958:	3384      	adds	r3, #132	; 0x84
 800295a:	691b      	ldr	r3, [r3, #16]
 800295c:	68fa      	ldr	r2, [r7, #12]
 800295e:	6812      	ldr	r2, [r2, #0]
 8002960:	4611      	mov	r1, r2
 8002962:	687a      	ldr	r2, [r7, #4]
 8002964:	01d2      	lsls	r2, r2, #7
 8002966:	440a      	add	r2, r1
 8002968:	3284      	adds	r2, #132	; 0x84
 800296a:	f023 0307 	bic.w	r3, r3, #7
 800296e:	6113      	str	r3, [r2, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8002970:	68fb      	ldr	r3, [r7, #12]
 8002972:	681b      	ldr	r3, [r3, #0]
 8002974:	461a      	mov	r2, r3
 8002976:	687b      	ldr	r3, [r7, #4]
 8002978:	01db      	lsls	r3, r3, #7
 800297a:	4413      	add	r3, r2
 800297c:	3384      	adds	r3, #132	; 0x84
 800297e:	461a      	mov	r2, r3
 8002980:	68bb      	ldr	r3, [r7, #8]
 8002982:	691b      	ldr	r3, [r3, #16]
 8002984:	6113      	str	r3, [r2, #16]

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8002986:	68bb      	ldr	r3, [r7, #8]
 8002988:	f893 3031 	ldrb.w	r3, [r3, #49]	; 0x31
 800298c:	021b      	lsls	r3, r3, #8
 800298e:	61fb      	str	r3, [r7, #28]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8002990:	68bb      	ldr	r3, [r7, #8]
 8002992:	f893 3032 	ldrb.w	r3, [r3, #50]	; 0x32
 8002996:	041b      	lsls	r3, r3, #16
 8002998:	61bb      	str	r3, [r7, #24]
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 800299a:	68bb      	ldr	r3, [r7, #8]
 800299c:	699b      	ldr	r3, [r3, #24]
 800299e:	061b      	lsls	r3, r3, #24
 80029a0:	617b      	str	r3, [r7, #20]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 80029a2:	68fb      	ldr	r3, [r7, #12]
 80029a4:	681b      	ldr	r3, [r3, #0]
 80029a6:	461a      	mov	r2, r3
 80029a8:	687b      	ldr	r3, [r7, #4]
 80029aa:	01db      	lsls	r3, r3, #7
 80029ac:	4413      	add	r3, r2
 80029ae:	3384      	adds	r3, #132	; 0x84
 80029b0:	699b      	ldr	r3, [r3, #24]
 80029b2:	68fb      	ldr	r3, [r7, #12]
 80029b4:	681b      	ldr	r3, [r3, #0]
 80029b6:	461a      	mov	r2, r3
 80029b8:	687b      	ldr	r3, [r7, #4]
 80029ba:	01db      	lsls	r3, r3, #7
 80029bc:	4413      	add	r3, r2
 80029be:	3384      	adds	r3, #132	; 0x84
 80029c0:	461a      	mov	r2, r3
 80029c2:	2300      	movs	r3, #0
 80029c4:	6193      	str	r3, [r2, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 80029c6:	68bb      	ldr	r3, [r7, #8]
 80029c8:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 80029cc:	461a      	mov	r2, r3
 80029ce:	69fb      	ldr	r3, [r7, #28]
 80029d0:	431a      	orrs	r2, r3
 80029d2:	69bb      	ldr	r3, [r7, #24]
 80029d4:	431a      	orrs	r2, r3
 80029d6:	68fb      	ldr	r3, [r7, #12]
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	4619      	mov	r1, r3
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	01db      	lsls	r3, r3, #7
 80029e0:	440b      	add	r3, r1
 80029e2:	3384      	adds	r3, #132	; 0x84
 80029e4:	4619      	mov	r1, r3
 80029e6:	697b      	ldr	r3, [r7, #20]
 80029e8:	4313      	orrs	r3, r2
 80029ea:	618b      	str	r3, [r1, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 80029ec:	68fb      	ldr	r3, [r7, #12]
 80029ee:	681b      	ldr	r3, [r3, #0]
 80029f0:	461a      	mov	r2, r3
 80029f2:	687b      	ldr	r3, [r7, #4]
 80029f4:	01db      	lsls	r3, r3, #7
 80029f6:	4413      	add	r3, r2
 80029f8:	3384      	adds	r3, #132	; 0x84
 80029fa:	695b      	ldr	r3, [r3, #20]
 80029fc:	68fa      	ldr	r2, [r7, #12]
 80029fe:	6812      	ldr	r2, [r2, #0]
 8002a00:	4611      	mov	r1, r2
 8002a02:	687a      	ldr	r2, [r7, #4]
 8002a04:	01d2      	lsls	r2, r2, #7
 8002a06:	440a      	add	r2, r1
 8002a08:	3284      	adds	r2, #132	; 0x84
 8002a0a:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 8002a0e:	6153      	str	r3, [r2, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8002a10:	68fb      	ldr	r3, [r7, #12]
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	461a      	mov	r2, r3
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	01db      	lsls	r3, r3, #7
 8002a1a:	4413      	add	r3, r2
 8002a1c:	3384      	adds	r3, #132	; 0x84
 8002a1e:	461a      	mov	r2, r3
 8002a20:	68bb      	ldr	r3, [r7, #8]
 8002a22:	695b      	ldr	r3, [r3, #20]
 8002a24:	6153      	str	r3, [r2, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8002a26:	68fb      	ldr	r3, [r7, #12]
 8002a28:	681b      	ldr	r3, [r3, #0]
 8002a2a:	461a      	mov	r2, r3
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	01db      	lsls	r3, r3, #7
 8002a30:	4413      	add	r3, r2
 8002a32:	3384      	adds	r3, #132	; 0x84
 8002a34:	69db      	ldr	r3, [r3, #28]
 8002a36:	68fa      	ldr	r2, [r7, #12]
 8002a38:	6812      	ldr	r2, [r2, #0]
 8002a3a:	4611      	mov	r1, r2
 8002a3c:	687a      	ldr	r2, [r7, #4]
 8002a3e:	01d2      	lsls	r2, r2, #7
 8002a40:	440a      	add	r2, r1
 8002a42:	3284      	adds	r2, #132	; 0x84
 8002a44:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8002a48:	f023 0307 	bic.w	r3, r3, #7
 8002a4c:	61d3      	str	r3, [r2, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8002a4e:	68bb      	ldr	r3, [r7, #8]
 8002a50:	69da      	ldr	r2, [r3, #28]
 8002a52:	68bb      	ldr	r3, [r7, #8]
 8002a54:	6a1b      	ldr	r3, [r3, #32]
 8002a56:	68f9      	ldr	r1, [r7, #12]
 8002a58:	6809      	ldr	r1, [r1, #0]
 8002a5a:	4608      	mov	r0, r1
 8002a5c:	6879      	ldr	r1, [r7, #4]
 8002a5e:	01c9      	lsls	r1, r1, #7
 8002a60:	4401      	add	r1, r0
 8002a62:	3184      	adds	r1, #132	; 0x84
 8002a64:	4313      	orrs	r3, r2
 8002a66:	61cb      	str	r3, [r1, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8002a68:	68fb      	ldr	r3, [r7, #12]
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	461a      	mov	r2, r3
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	01db      	lsls	r3, r3, #7
 8002a72:	4413      	add	r3, r2
 8002a74:	3384      	adds	r3, #132	; 0x84
 8002a76:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002a78:	68fb      	ldr	r3, [r7, #12]
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	461a      	mov	r2, r3
 8002a7e:	687b      	ldr	r3, [r7, #4]
 8002a80:	01db      	lsls	r3, r3, #7
 8002a82:	4413      	add	r3, r2
 8002a84:	3384      	adds	r3, #132	; 0x84
 8002a86:	461a      	mov	r2, r3
 8002a88:	2300      	movs	r3, #0
 8002a8a:	6293      	str	r3, [r2, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8002a8c:	68fb      	ldr	r3, [r7, #12]
 8002a8e:	681b      	ldr	r3, [r3, #0]
 8002a90:	461a      	mov	r2, r3
 8002a92:	687b      	ldr	r3, [r7, #4]
 8002a94:	01db      	lsls	r3, r3, #7
 8002a96:	4413      	add	r3, r2
 8002a98:	3384      	adds	r3, #132	; 0x84
 8002a9a:	461a      	mov	r2, r3
 8002a9c:	68bb      	ldr	r3, [r7, #8]
 8002a9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002aa0:	6293      	str	r3, [r2, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8002aa2:	68bb      	ldr	r3, [r7, #8]
 8002aa4:	691b      	ldr	r3, [r3, #16]
 8002aa6:	2b00      	cmp	r3, #0
 8002aa8:	d102      	bne.n	8002ab0 <LTDC_SetConfig+0x234>
  {
    tmp = 4U;
 8002aaa:	2304      	movs	r3, #4
 8002aac:	61fb      	str	r3, [r7, #28]
 8002aae:	e01b      	b.n	8002ae8 <LTDC_SetConfig+0x26c>
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8002ab0:	68bb      	ldr	r3, [r7, #8]
 8002ab2:	691b      	ldr	r3, [r3, #16]
 8002ab4:	2b01      	cmp	r3, #1
 8002ab6:	d102      	bne.n	8002abe <LTDC_SetConfig+0x242>
  {
    tmp = 3U;
 8002ab8:	2303      	movs	r3, #3
 8002aba:	61fb      	str	r3, [r7, #28]
 8002abc:	e014      	b.n	8002ae8 <LTDC_SetConfig+0x26c>
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8002abe:	68bb      	ldr	r3, [r7, #8]
 8002ac0:	691b      	ldr	r3, [r3, #16]
 8002ac2:	2b04      	cmp	r3, #4
 8002ac4:	d00b      	beq.n	8002ade <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8002ac6:	68bb      	ldr	r3, [r7, #8]
 8002ac8:	691b      	ldr	r3, [r3, #16]
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8002aca:	2b02      	cmp	r3, #2
 8002acc:	d007      	beq.n	8002ade <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8002ace:	68bb      	ldr	r3, [r7, #8]
 8002ad0:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
 8002ad2:	2b03      	cmp	r3, #3
 8002ad4:	d003      	beq.n	8002ade <LTDC_SetConfig+0x262>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_AL88))
 8002ad6:	68bb      	ldr	r3, [r7, #8]
 8002ad8:	691b      	ldr	r3, [r3, #16]
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 8002ada:	2b07      	cmp	r3, #7
 8002adc:	d102      	bne.n	8002ae4 <LTDC_SetConfig+0x268>
  {
    tmp = 2U;
 8002ade:	2302      	movs	r3, #2
 8002ae0:	61fb      	str	r3, [r7, #28]
 8002ae2:	e001      	b.n	8002ae8 <LTDC_SetConfig+0x26c>
  }
  else
  {
    tmp = 1U;
 8002ae4:	2301      	movs	r3, #1
 8002ae6:	61fb      	str	r3, [r7, #28]
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8002ae8:	68fb      	ldr	r3, [r7, #12]
 8002aea:	681b      	ldr	r3, [r3, #0]
 8002aec:	461a      	mov	r2, r3
 8002aee:	687b      	ldr	r3, [r7, #4]
 8002af0:	01db      	lsls	r3, r3, #7
 8002af2:	4413      	add	r3, r2
 8002af4:	3384      	adds	r3, #132	; 0x84
 8002af6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002af8:	68fa      	ldr	r2, [r7, #12]
 8002afa:	6812      	ldr	r2, [r2, #0]
 8002afc:	4611      	mov	r1, r2
 8002afe:	687a      	ldr	r2, [r7, #4]
 8002b00:	01d2      	lsls	r2, r2, #7
 8002b02:	440a      	add	r2, r1
 8002b04:	3284      	adds	r2, #132	; 0x84
 8002b06:	f003 23e0 	and.w	r3, r3, #3758153728	; 0xe000e000
 8002b0a:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8002b0c:	68bb      	ldr	r3, [r7, #8]
 8002b0e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b10:	69fa      	ldr	r2, [r7, #28]
 8002b12:	fb02 f303 	mul.w	r3, r2, r3
 8002b16:	041a      	lsls	r2, r3, #16
 8002b18:	68bb      	ldr	r3, [r7, #8]
 8002b1a:	6859      	ldr	r1, [r3, #4]
 8002b1c:	68bb      	ldr	r3, [r7, #8]
 8002b1e:	681b      	ldr	r3, [r3, #0]
 8002b20:	1acb      	subs	r3, r1, r3
 8002b22:	69f9      	ldr	r1, [r7, #28]
 8002b24:	fb01 f303 	mul.w	r3, r1, r3
 8002b28:	3303      	adds	r3, #3
 8002b2a:	68f9      	ldr	r1, [r7, #12]
 8002b2c:	6809      	ldr	r1, [r1, #0]
 8002b2e:	4608      	mov	r0, r1
 8002b30:	6879      	ldr	r1, [r7, #4]
 8002b32:	01c9      	lsls	r1, r1, #7
 8002b34:	4401      	add	r1, r0
 8002b36:	3184      	adds	r1, #132	; 0x84
 8002b38:	4313      	orrs	r3, r2
 8002b3a:	62cb      	str	r3, [r1, #44]	; 0x2c
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8002b3c:	68fb      	ldr	r3, [r7, #12]
 8002b3e:	681b      	ldr	r3, [r3, #0]
 8002b40:	461a      	mov	r2, r3
 8002b42:	687b      	ldr	r3, [r7, #4]
 8002b44:	01db      	lsls	r3, r3, #7
 8002b46:	4413      	add	r3, r2
 8002b48:	3384      	adds	r3, #132	; 0x84
 8002b4a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b4c:	68fa      	ldr	r2, [r7, #12]
 8002b4e:	6812      	ldr	r2, [r2, #0]
 8002b50:	4611      	mov	r1, r2
 8002b52:	687a      	ldr	r2, [r7, #4]
 8002b54:	01d2      	lsls	r2, r2, #7
 8002b56:	440a      	add	r2, r1
 8002b58:	3284      	adds	r2, #132	; 0x84
 8002b5a:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8002b5e:	f023 0307 	bic.w	r3, r3, #7
 8002b62:	6313      	str	r3, [r2, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8002b64:	68fb      	ldr	r3, [r7, #12]
 8002b66:	681b      	ldr	r3, [r3, #0]
 8002b68:	461a      	mov	r2, r3
 8002b6a:	687b      	ldr	r3, [r7, #4]
 8002b6c:	01db      	lsls	r3, r3, #7
 8002b6e:	4413      	add	r3, r2
 8002b70:	3384      	adds	r3, #132	; 0x84
 8002b72:	461a      	mov	r2, r3
 8002b74:	68bb      	ldr	r3, [r7, #8]
 8002b76:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b78:	6313      	str	r3, [r2, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8002b7a:	68fb      	ldr	r3, [r7, #12]
 8002b7c:	681b      	ldr	r3, [r3, #0]
 8002b7e:	461a      	mov	r2, r3
 8002b80:	687b      	ldr	r3, [r7, #4]
 8002b82:	01db      	lsls	r3, r3, #7
 8002b84:	4413      	add	r3, r2
 8002b86:	3384      	adds	r3, #132	; 0x84
 8002b88:	681b      	ldr	r3, [r3, #0]
 8002b8a:	68fa      	ldr	r2, [r7, #12]
 8002b8c:	6812      	ldr	r2, [r2, #0]
 8002b8e:	4611      	mov	r1, r2
 8002b90:	687a      	ldr	r2, [r7, #4]
 8002b92:	01d2      	lsls	r2, r2, #7
 8002b94:	440a      	add	r2, r1
 8002b96:	3284      	adds	r2, #132	; 0x84
 8002b98:	f043 0301 	orr.w	r3, r3, #1
 8002b9c:	6013      	str	r3, [r2, #0]
}
 8002b9e:	bf00      	nop
 8002ba0:	3724      	adds	r7, #36	; 0x24
 8002ba2:	46bd      	mov	sp, r7
 8002ba4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002ba8:	4770      	bx	lr
	...

08002bac <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8002bac:	b580      	push	{r7, lr}
 8002bae:	b082      	sub	sp, #8
 8002bb0:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8002bb2:	2300      	movs	r3, #0
 8002bb4:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8002bb6:	2300      	movs	r3, #0
 8002bb8:	603b      	str	r3, [r7, #0]
 8002bba:	4b20      	ldr	r3, [pc, #128]	; (8002c3c <HAL_PWREx_EnableOverDrive+0x90>)
 8002bbc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bbe:	4a1f      	ldr	r2, [pc, #124]	; (8002c3c <HAL_PWREx_EnableOverDrive+0x90>)
 8002bc0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002bc4:	6413      	str	r3, [r2, #64]	; 0x40
 8002bc6:	4b1d      	ldr	r3, [pc, #116]	; (8002c3c <HAL_PWREx_EnableOverDrive+0x90>)
 8002bc8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002bca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002bce:	603b      	str	r3, [r7, #0]
 8002bd0:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8002bd2:	4b1b      	ldr	r3, [pc, #108]	; (8002c40 <HAL_PWREx_EnableOverDrive+0x94>)
 8002bd4:	2201      	movs	r2, #1
 8002bd6:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8002bd8:	f7fe fcd0 	bl	800157c <HAL_GetTick>
 8002bdc:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8002bde:	e009      	b.n	8002bf4 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002be0:	f7fe fccc 	bl	800157c <HAL_GetTick>
 8002be4:	4602      	mov	r2, r0
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	1ad3      	subs	r3, r2, r3
 8002bea:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002bee:	d901      	bls.n	8002bf4 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 8002bf0:	2303      	movs	r3, #3
 8002bf2:	e01f      	b.n	8002c34 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8002bf4:	4b13      	ldr	r3, [pc, #76]	; (8002c44 <HAL_PWREx_EnableOverDrive+0x98>)
 8002bf6:	685b      	ldr	r3, [r3, #4]
 8002bf8:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002bfc:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002c00:	d1ee      	bne.n	8002be0 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8002c02:	4b11      	ldr	r3, [pc, #68]	; (8002c48 <HAL_PWREx_EnableOverDrive+0x9c>)
 8002c04:	2201      	movs	r2, #1
 8002c06:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8002c08:	f7fe fcb8 	bl	800157c <HAL_GetTick>
 8002c0c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002c0e:	e009      	b.n	8002c24 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8002c10:	f7fe fcb4 	bl	800157c <HAL_GetTick>
 8002c14:	4602      	mov	r2, r0
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	1ad3      	subs	r3, r2, r3
 8002c1a:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002c1e:	d901      	bls.n	8002c24 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 8002c20:	2303      	movs	r3, #3
 8002c22:	e007      	b.n	8002c34 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8002c24:	4b07      	ldr	r3, [pc, #28]	; (8002c44 <HAL_PWREx_EnableOverDrive+0x98>)
 8002c26:	685b      	ldr	r3, [r3, #4]
 8002c28:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002c2c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8002c30:	d1ee      	bne.n	8002c10 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 8002c32:	2300      	movs	r3, #0
}
 8002c34:	4618      	mov	r0, r3
 8002c36:	3708      	adds	r7, #8
 8002c38:	46bd      	mov	sp, r7
 8002c3a:	bd80      	pop	{r7, pc}
 8002c3c:	40023800 	.word	0x40023800
 8002c40:	420e0040 	.word	0x420e0040
 8002c44:	40007000 	.word	0x40007000
 8002c48:	420e0044 	.word	0x420e0044

08002c4c <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002c4c:	b580      	push	{r7, lr}
 8002c4e:	b086      	sub	sp, #24
 8002c50:	af00      	add	r7, sp, #0
 8002c52:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8002c54:	687b      	ldr	r3, [r7, #4]
 8002c56:	2b00      	cmp	r3, #0
 8002c58:	d101      	bne.n	8002c5e <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8002c5a:	2301      	movs	r3, #1
 8002c5c:	e25b      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	681b      	ldr	r3, [r3, #0]
 8002c62:	f003 0301 	and.w	r3, r3, #1
 8002c66:	2b00      	cmp	r3, #0
 8002c68:	d075      	beq.n	8002d56 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8002c6a:	4ba3      	ldr	r3, [pc, #652]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002c6c:	689b      	ldr	r3, [r3, #8]
 8002c6e:	f003 030c 	and.w	r3, r3, #12
 8002c72:	2b04      	cmp	r3, #4
 8002c74:	d00c      	beq.n	8002c90 <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002c76:	4ba0      	ldr	r3, [pc, #640]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002c78:	689b      	ldr	r3, [r3, #8]
 8002c7a:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8002c7e:	2b08      	cmp	r3, #8
 8002c80:	d112      	bne.n	8002ca8 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8002c82:	4b9d      	ldr	r3, [pc, #628]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002c84:	685b      	ldr	r3, [r3, #4]
 8002c86:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002c8a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 8002c8e:	d10b      	bne.n	8002ca8 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002c90:	4b99      	ldr	r3, [pc, #612]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	d05b      	beq.n	8002d54 <HAL_RCC_OscConfig+0x108>
 8002c9c:	687b      	ldr	r3, [r7, #4]
 8002c9e:	685b      	ldr	r3, [r3, #4]
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d157      	bne.n	8002d54 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 8002ca4:	2301      	movs	r3, #1
 8002ca6:	e236      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	685b      	ldr	r3, [r3, #4]
 8002cac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002cb0:	d106      	bne.n	8002cc0 <HAL_RCC_OscConfig+0x74>
 8002cb2:	4b91      	ldr	r3, [pc, #580]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cb4:	681b      	ldr	r3, [r3, #0]
 8002cb6:	4a90      	ldr	r2, [pc, #576]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002cbc:	6013      	str	r3, [r2, #0]
 8002cbe:	e01d      	b.n	8002cfc <HAL_RCC_OscConfig+0xb0>
 8002cc0:	687b      	ldr	r3, [r7, #4]
 8002cc2:	685b      	ldr	r3, [r3, #4]
 8002cc4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002cc8:	d10c      	bne.n	8002ce4 <HAL_RCC_OscConfig+0x98>
 8002cca:	4b8b      	ldr	r3, [pc, #556]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002ccc:	681b      	ldr	r3, [r3, #0]
 8002cce:	4a8a      	ldr	r2, [pc, #552]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cd0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002cd4:	6013      	str	r3, [r2, #0]
 8002cd6:	4b88      	ldr	r3, [pc, #544]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	4a87      	ldr	r2, [pc, #540]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cdc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002ce0:	6013      	str	r3, [r2, #0]
 8002ce2:	e00b      	b.n	8002cfc <HAL_RCC_OscConfig+0xb0>
 8002ce4:	4b84      	ldr	r3, [pc, #528]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002ce6:	681b      	ldr	r3, [r3, #0]
 8002ce8:	4a83      	ldr	r2, [pc, #524]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002cee:	6013      	str	r3, [r2, #0]
 8002cf0:	4b81      	ldr	r3, [pc, #516]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cf2:	681b      	ldr	r3, [r3, #0]
 8002cf4:	4a80      	ldr	r2, [pc, #512]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002cf6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002cfa:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8002cfc:	687b      	ldr	r3, [r7, #4]
 8002cfe:	685b      	ldr	r3, [r3, #4]
 8002d00:	2b00      	cmp	r3, #0
 8002d02:	d013      	beq.n	8002d2c <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d04:	f7fe fc3a 	bl	800157c <HAL_GetTick>
 8002d08:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d0a:	e008      	b.n	8002d1e <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002d0c:	f7fe fc36 	bl	800157c <HAL_GetTick>
 8002d10:	4602      	mov	r2, r0
 8002d12:	693b      	ldr	r3, [r7, #16]
 8002d14:	1ad3      	subs	r3, r2, r3
 8002d16:	2b64      	cmp	r3, #100	; 0x64
 8002d18:	d901      	bls.n	8002d1e <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 8002d1a:	2303      	movs	r3, #3
 8002d1c:	e1fb      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8002d1e:	4b76      	ldr	r3, [pc, #472]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d20:	681b      	ldr	r3, [r3, #0]
 8002d22:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d26:	2b00      	cmp	r3, #0
 8002d28:	d0f0      	beq.n	8002d0c <HAL_RCC_OscConfig+0xc0>
 8002d2a:	e014      	b.n	8002d56 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002d2c:	f7fe fc26 	bl	800157c <HAL_GetTick>
 8002d30:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002d32:	e008      	b.n	8002d46 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8002d34:	f7fe fc22 	bl	800157c <HAL_GetTick>
 8002d38:	4602      	mov	r2, r0
 8002d3a:	693b      	ldr	r3, [r7, #16]
 8002d3c:	1ad3      	subs	r3, r2, r3
 8002d3e:	2b64      	cmp	r3, #100	; 0x64
 8002d40:	d901      	bls.n	8002d46 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8002d42:	2303      	movs	r3, #3
 8002d44:	e1e7      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8002d46:	4b6c      	ldr	r3, [pc, #432]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d48:	681b      	ldr	r3, [r3, #0]
 8002d4a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002d4e:	2b00      	cmp	r3, #0
 8002d50:	d1f0      	bne.n	8002d34 <HAL_RCC_OscConfig+0xe8>
 8002d52:	e000      	b.n	8002d56 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002d54:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	681b      	ldr	r3, [r3, #0]
 8002d5a:	f003 0302 	and.w	r3, r3, #2
 8002d5e:	2b00      	cmp	r3, #0
 8002d60:	d063      	beq.n	8002e2a <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002d62:	4b65      	ldr	r3, [pc, #404]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d64:	689b      	ldr	r3, [r3, #8]
 8002d66:	f003 030c 	and.w	r3, r3, #12
 8002d6a:	2b00      	cmp	r3, #0
 8002d6c:	d00b      	beq.n	8002d86 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002d6e:	4b62      	ldr	r3, [pc, #392]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d70:	689b      	ldr	r3, [r3, #8]
 8002d72:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 8002d76:	2b08      	cmp	r3, #8
 8002d78:	d11c      	bne.n	8002db4 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8002d7a:	4b5f      	ldr	r3, [pc, #380]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d7c:	685b      	ldr	r3, [r3, #4]
 8002d7e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002d82:	2b00      	cmp	r3, #0
 8002d84:	d116      	bne.n	8002db4 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002d86:	4b5c      	ldr	r3, [pc, #368]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002d88:	681b      	ldr	r3, [r3, #0]
 8002d8a:	f003 0302 	and.w	r3, r3, #2
 8002d8e:	2b00      	cmp	r3, #0
 8002d90:	d005      	beq.n	8002d9e <HAL_RCC_OscConfig+0x152>
 8002d92:	687b      	ldr	r3, [r7, #4]
 8002d94:	68db      	ldr	r3, [r3, #12]
 8002d96:	2b01      	cmp	r3, #1
 8002d98:	d001      	beq.n	8002d9e <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 8002d9a:	2301      	movs	r3, #1
 8002d9c:	e1bb      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002d9e:	4b56      	ldr	r3, [pc, #344]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002da6:	687b      	ldr	r3, [r7, #4]
 8002da8:	691b      	ldr	r3, [r3, #16]
 8002daa:	00db      	lsls	r3, r3, #3
 8002dac:	4952      	ldr	r1, [pc, #328]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002dae:	4313      	orrs	r3, r2
 8002db0:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8002db2:	e03a      	b.n	8002e2a <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8002db4:	687b      	ldr	r3, [r7, #4]
 8002db6:	68db      	ldr	r3, [r3, #12]
 8002db8:	2b00      	cmp	r3, #0
 8002dba:	d020      	beq.n	8002dfe <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8002dbc:	4b4f      	ldr	r3, [pc, #316]	; (8002efc <HAL_RCC_OscConfig+0x2b0>)
 8002dbe:	2201      	movs	r2, #1
 8002dc0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002dc2:	f7fe fbdb 	bl	800157c <HAL_GetTick>
 8002dc6:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002dc8:	e008      	b.n	8002ddc <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002dca:	f7fe fbd7 	bl	800157c <HAL_GetTick>
 8002dce:	4602      	mov	r2, r0
 8002dd0:	693b      	ldr	r3, [r7, #16]
 8002dd2:	1ad3      	subs	r3, r2, r3
 8002dd4:	2b02      	cmp	r3, #2
 8002dd6:	d901      	bls.n	8002ddc <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 8002dd8:	2303      	movs	r3, #3
 8002dda:	e19c      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8002ddc:	4b46      	ldr	r3, [pc, #280]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002dde:	681b      	ldr	r3, [r3, #0]
 8002de0:	f003 0302 	and.w	r3, r3, #2
 8002de4:	2b00      	cmp	r3, #0
 8002de6:	d0f0      	beq.n	8002dca <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002de8:	4b43      	ldr	r3, [pc, #268]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002dea:	681b      	ldr	r3, [r3, #0]
 8002dec:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	691b      	ldr	r3, [r3, #16]
 8002df4:	00db      	lsls	r3, r3, #3
 8002df6:	4940      	ldr	r1, [pc, #256]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002df8:	4313      	orrs	r3, r2
 8002dfa:	600b      	str	r3, [r1, #0]
 8002dfc:	e015      	b.n	8002e2a <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002dfe:	4b3f      	ldr	r3, [pc, #252]	; (8002efc <HAL_RCC_OscConfig+0x2b0>)
 8002e00:	2200      	movs	r2, #0
 8002e02:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8002e04:	f7fe fbba 	bl	800157c <HAL_GetTick>
 8002e08:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002e0a:	e008      	b.n	8002e1e <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002e0c:	f7fe fbb6 	bl	800157c <HAL_GetTick>
 8002e10:	4602      	mov	r2, r0
 8002e12:	693b      	ldr	r3, [r7, #16]
 8002e14:	1ad3      	subs	r3, r2, r3
 8002e16:	2b02      	cmp	r3, #2
 8002e18:	d901      	bls.n	8002e1e <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 8002e1a:	2303      	movs	r3, #3
 8002e1c:	e17b      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8002e1e:	4b36      	ldr	r3, [pc, #216]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002e20:	681b      	ldr	r3, [r3, #0]
 8002e22:	f003 0302 	and.w	r3, r3, #2
 8002e26:	2b00      	cmp	r3, #0
 8002e28:	d1f0      	bne.n	8002e0c <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	681b      	ldr	r3, [r3, #0]
 8002e2e:	f003 0308 	and.w	r3, r3, #8
 8002e32:	2b00      	cmp	r3, #0
 8002e34:	d030      	beq.n	8002e98 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8002e36:	687b      	ldr	r3, [r7, #4]
 8002e38:	695b      	ldr	r3, [r3, #20]
 8002e3a:	2b00      	cmp	r3, #0
 8002e3c:	d016      	beq.n	8002e6c <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002e3e:	4b30      	ldr	r3, [pc, #192]	; (8002f00 <HAL_RCC_OscConfig+0x2b4>)
 8002e40:	2201      	movs	r2, #1
 8002e42:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002e44:	f7fe fb9a 	bl	800157c <HAL_GetTick>
 8002e48:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002e4a:	e008      	b.n	8002e5e <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002e4c:	f7fe fb96 	bl	800157c <HAL_GetTick>
 8002e50:	4602      	mov	r2, r0
 8002e52:	693b      	ldr	r3, [r7, #16]
 8002e54:	1ad3      	subs	r3, r2, r3
 8002e56:	2b02      	cmp	r3, #2
 8002e58:	d901      	bls.n	8002e5e <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 8002e5a:	2303      	movs	r3, #3
 8002e5c:	e15b      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8002e5e:	4b26      	ldr	r3, [pc, #152]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002e60:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002e62:	f003 0302 	and.w	r3, r3, #2
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d0f0      	beq.n	8002e4c <HAL_RCC_OscConfig+0x200>
 8002e6a:	e015      	b.n	8002e98 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002e6c:	4b24      	ldr	r3, [pc, #144]	; (8002f00 <HAL_RCC_OscConfig+0x2b4>)
 8002e6e:	2200      	movs	r2, #0
 8002e70:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002e72:	f7fe fb83 	bl	800157c <HAL_GetTick>
 8002e76:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002e78:	e008      	b.n	8002e8c <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002e7a:	f7fe fb7f 	bl	800157c <HAL_GetTick>
 8002e7e:	4602      	mov	r2, r0
 8002e80:	693b      	ldr	r3, [r7, #16]
 8002e82:	1ad3      	subs	r3, r2, r3
 8002e84:	2b02      	cmp	r3, #2
 8002e86:	d901      	bls.n	8002e8c <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 8002e88:	2303      	movs	r3, #3
 8002e8a:	e144      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8002e8c:	4b1a      	ldr	r3, [pc, #104]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002e8e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002e90:	f003 0302 	and.w	r3, r3, #2
 8002e94:	2b00      	cmp	r3, #0
 8002e96:	d1f0      	bne.n	8002e7a <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002e98:	687b      	ldr	r3, [r7, #4]
 8002e9a:	681b      	ldr	r3, [r3, #0]
 8002e9c:	f003 0304 	and.w	r3, r3, #4
 8002ea0:	2b00      	cmp	r3, #0
 8002ea2:	f000 80a0 	beq.w	8002fe6 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002ea6:	2300      	movs	r3, #0
 8002ea8:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002eaa:	4b13      	ldr	r3, [pc, #76]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002eac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eae:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002eb2:	2b00      	cmp	r3, #0
 8002eb4:	d10f      	bne.n	8002ed6 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002eb6:	2300      	movs	r3, #0
 8002eb8:	60bb      	str	r3, [r7, #8]
 8002eba:	4b0f      	ldr	r3, [pc, #60]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002ebc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ebe:	4a0e      	ldr	r2, [pc, #56]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002ec0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002ec4:	6413      	str	r3, [r2, #64]	; 0x40
 8002ec6:	4b0c      	ldr	r3, [pc, #48]	; (8002ef8 <HAL_RCC_OscConfig+0x2ac>)
 8002ec8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002ece:	60bb      	str	r3, [r7, #8]
 8002ed0:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8002ed2:	2301      	movs	r3, #1
 8002ed4:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002ed6:	4b0b      	ldr	r3, [pc, #44]	; (8002f04 <HAL_RCC_OscConfig+0x2b8>)
 8002ed8:	681b      	ldr	r3, [r3, #0]
 8002eda:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002ede:	2b00      	cmp	r3, #0
 8002ee0:	d121      	bne.n	8002f26 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002ee2:	4b08      	ldr	r3, [pc, #32]	; (8002f04 <HAL_RCC_OscConfig+0x2b8>)
 8002ee4:	681b      	ldr	r3, [r3, #0]
 8002ee6:	4a07      	ldr	r2, [pc, #28]	; (8002f04 <HAL_RCC_OscConfig+0x2b8>)
 8002ee8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002eec:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002eee:	f7fe fb45 	bl	800157c <HAL_GetTick>
 8002ef2:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002ef4:	e011      	b.n	8002f1a <HAL_RCC_OscConfig+0x2ce>
 8002ef6:	bf00      	nop
 8002ef8:	40023800 	.word	0x40023800
 8002efc:	42470000 	.word	0x42470000
 8002f00:	42470e80 	.word	0x42470e80
 8002f04:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002f08:	f7fe fb38 	bl	800157c <HAL_GetTick>
 8002f0c:	4602      	mov	r2, r0
 8002f0e:	693b      	ldr	r3, [r7, #16]
 8002f10:	1ad3      	subs	r3, r2, r3
 8002f12:	2b02      	cmp	r3, #2
 8002f14:	d901      	bls.n	8002f1a <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 8002f16:	2303      	movs	r3, #3
 8002f18:	e0fd      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002f1a:	4b81      	ldr	r3, [pc, #516]	; (8003120 <HAL_RCC_OscConfig+0x4d4>)
 8002f1c:	681b      	ldr	r3, [r3, #0]
 8002f1e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002f22:	2b00      	cmp	r3, #0
 8002f24:	d0f0      	beq.n	8002f08 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	689b      	ldr	r3, [r3, #8]
 8002f2a:	2b01      	cmp	r3, #1
 8002f2c:	d106      	bne.n	8002f3c <HAL_RCC_OscConfig+0x2f0>
 8002f2e:	4b7d      	ldr	r3, [pc, #500]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f30:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f32:	4a7c      	ldr	r2, [pc, #496]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f34:	f043 0301 	orr.w	r3, r3, #1
 8002f38:	6713      	str	r3, [r2, #112]	; 0x70
 8002f3a:	e01c      	b.n	8002f76 <HAL_RCC_OscConfig+0x32a>
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	689b      	ldr	r3, [r3, #8]
 8002f40:	2b05      	cmp	r3, #5
 8002f42:	d10c      	bne.n	8002f5e <HAL_RCC_OscConfig+0x312>
 8002f44:	4b77      	ldr	r3, [pc, #476]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f46:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f48:	4a76      	ldr	r2, [pc, #472]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f4a:	f043 0304 	orr.w	r3, r3, #4
 8002f4e:	6713      	str	r3, [r2, #112]	; 0x70
 8002f50:	4b74      	ldr	r3, [pc, #464]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f52:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f54:	4a73      	ldr	r2, [pc, #460]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f56:	f043 0301 	orr.w	r3, r3, #1
 8002f5a:	6713      	str	r3, [r2, #112]	; 0x70
 8002f5c:	e00b      	b.n	8002f76 <HAL_RCC_OscConfig+0x32a>
 8002f5e:	4b71      	ldr	r3, [pc, #452]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f60:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f62:	4a70      	ldr	r2, [pc, #448]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f64:	f023 0301 	bic.w	r3, r3, #1
 8002f68:	6713      	str	r3, [r2, #112]	; 0x70
 8002f6a:	4b6e      	ldr	r3, [pc, #440]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f6c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002f6e:	4a6d      	ldr	r2, [pc, #436]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f70:	f023 0304 	bic.w	r3, r3, #4
 8002f74:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	689b      	ldr	r3, [r3, #8]
 8002f7a:	2b00      	cmp	r3, #0
 8002f7c:	d015      	beq.n	8002faa <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8002f7e:	f7fe fafd 	bl	800157c <HAL_GetTick>
 8002f82:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002f84:	e00a      	b.n	8002f9c <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002f86:	f7fe faf9 	bl	800157c <HAL_GetTick>
 8002f8a:	4602      	mov	r2, r0
 8002f8c:	693b      	ldr	r3, [r7, #16]
 8002f8e:	1ad3      	subs	r3, r2, r3
 8002f90:	f241 3288 	movw	r2, #5000	; 0x1388
 8002f94:	4293      	cmp	r3, r2
 8002f96:	d901      	bls.n	8002f9c <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 8002f98:	2303      	movs	r3, #3
 8002f9a:	e0bc      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8002f9c:	4b61      	ldr	r3, [pc, #388]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002f9e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002fa0:	f003 0302 	and.w	r3, r3, #2
 8002fa4:	2b00      	cmp	r3, #0
 8002fa6:	d0ee      	beq.n	8002f86 <HAL_RCC_OscConfig+0x33a>
 8002fa8:	e014      	b.n	8002fd4 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002faa:	f7fe fae7 	bl	800157c <HAL_GetTick>
 8002fae:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002fb0:	e00a      	b.n	8002fc8 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002fb2:	f7fe fae3 	bl	800157c <HAL_GetTick>
 8002fb6:	4602      	mov	r2, r0
 8002fb8:	693b      	ldr	r3, [r7, #16]
 8002fba:	1ad3      	subs	r3, r2, r3
 8002fbc:	f241 3288 	movw	r2, #5000	; 0x1388
 8002fc0:	4293      	cmp	r3, r2
 8002fc2:	d901      	bls.n	8002fc8 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 8002fc4:	2303      	movs	r3, #3
 8002fc6:	e0a6      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8002fc8:	4b56      	ldr	r3, [pc, #344]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002fca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002fcc:	f003 0302 	and.w	r3, r3, #2
 8002fd0:	2b00      	cmp	r3, #0
 8002fd2:	d1ee      	bne.n	8002fb2 <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 8002fd4:	7dfb      	ldrb	r3, [r7, #23]
 8002fd6:	2b01      	cmp	r3, #1
 8002fd8:	d105      	bne.n	8002fe6 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8002fda:	4b52      	ldr	r3, [pc, #328]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002fdc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002fde:	4a51      	ldr	r2, [pc, #324]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002fe0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002fe4:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	699b      	ldr	r3, [r3, #24]
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	f000 8092 	beq.w	8003114 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8002ff0:	4b4c      	ldr	r3, [pc, #304]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8002ff2:	689b      	ldr	r3, [r3, #8]
 8002ff4:	f003 030c 	and.w	r3, r3, #12
 8002ff8:	2b08      	cmp	r3, #8
 8002ffa:	d05c      	beq.n	80030b6 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	699b      	ldr	r3, [r3, #24]
 8003000:	2b02      	cmp	r3, #2
 8003002:	d141      	bne.n	8003088 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003004:	4b48      	ldr	r3, [pc, #288]	; (8003128 <HAL_RCC_OscConfig+0x4dc>)
 8003006:	2200      	movs	r2, #0
 8003008:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800300a:	f7fe fab7 	bl	800157c <HAL_GetTick>
 800300e:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003010:	e008      	b.n	8003024 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003012:	f7fe fab3 	bl	800157c <HAL_GetTick>
 8003016:	4602      	mov	r2, r0
 8003018:	693b      	ldr	r3, [r7, #16]
 800301a:	1ad3      	subs	r3, r2, r3
 800301c:	2b02      	cmp	r3, #2
 800301e:	d901      	bls.n	8003024 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 8003020:	2303      	movs	r3, #3
 8003022:	e078      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003024:	4b3f      	ldr	r3, [pc, #252]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8003026:	681b      	ldr	r3, [r3, #0]
 8003028:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800302c:	2b00      	cmp	r3, #0
 800302e:	d1f0      	bne.n	8003012 <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8003030:	687b      	ldr	r3, [r7, #4]
 8003032:	69da      	ldr	r2, [r3, #28]
 8003034:	687b      	ldr	r3, [r7, #4]
 8003036:	6a1b      	ldr	r3, [r3, #32]
 8003038:	431a      	orrs	r2, r3
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800303e:	019b      	lsls	r3, r3, #6
 8003040:	431a      	orrs	r2, r3
 8003042:	687b      	ldr	r3, [r7, #4]
 8003044:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003046:	085b      	lsrs	r3, r3, #1
 8003048:	3b01      	subs	r3, #1
 800304a:	041b      	lsls	r3, r3, #16
 800304c:	431a      	orrs	r2, r3
 800304e:	687b      	ldr	r3, [r7, #4]
 8003050:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003052:	061b      	lsls	r3, r3, #24
 8003054:	4933      	ldr	r1, [pc, #204]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 8003056:	4313      	orrs	r3, r2
 8003058:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 800305a:	4b33      	ldr	r3, [pc, #204]	; (8003128 <HAL_RCC_OscConfig+0x4dc>)
 800305c:	2201      	movs	r2, #1
 800305e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003060:	f7fe fa8c 	bl	800157c <HAL_GetTick>
 8003064:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8003066:	e008      	b.n	800307a <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003068:	f7fe fa88 	bl	800157c <HAL_GetTick>
 800306c:	4602      	mov	r2, r0
 800306e:	693b      	ldr	r3, [r7, #16]
 8003070:	1ad3      	subs	r3, r2, r3
 8003072:	2b02      	cmp	r3, #2
 8003074:	d901      	bls.n	800307a <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 8003076:	2303      	movs	r3, #3
 8003078:	e04d      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800307a:	4b2a      	ldr	r3, [pc, #168]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 800307c:	681b      	ldr	r3, [r3, #0]
 800307e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8003082:	2b00      	cmp	r3, #0
 8003084:	d0f0      	beq.n	8003068 <HAL_RCC_OscConfig+0x41c>
 8003086:	e045      	b.n	8003114 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003088:	4b27      	ldr	r3, [pc, #156]	; (8003128 <HAL_RCC_OscConfig+0x4dc>)
 800308a:	2200      	movs	r2, #0
 800308c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800308e:	f7fe fa75 	bl	800157c <HAL_GetTick>
 8003092:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8003094:	e008      	b.n	80030a8 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003096:	f7fe fa71 	bl	800157c <HAL_GetTick>
 800309a:	4602      	mov	r2, r0
 800309c:	693b      	ldr	r3, [r7, #16]
 800309e:	1ad3      	subs	r3, r2, r3
 80030a0:	2b02      	cmp	r3, #2
 80030a2:	d901      	bls.n	80030a8 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 80030a4:	2303      	movs	r3, #3
 80030a6:	e036      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80030a8:	4b1e      	ldr	r3, [pc, #120]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 80030aa:	681b      	ldr	r3, [r3, #0]
 80030ac:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80030b0:	2b00      	cmp	r3, #0
 80030b2:	d1f0      	bne.n	8003096 <HAL_RCC_OscConfig+0x44a>
 80030b4:	e02e      	b.n	8003114 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80030b6:	687b      	ldr	r3, [r7, #4]
 80030b8:	699b      	ldr	r3, [r3, #24]
 80030ba:	2b01      	cmp	r3, #1
 80030bc:	d101      	bne.n	80030c2 <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 80030be:	2301      	movs	r3, #1
 80030c0:	e029      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 80030c2:	4b18      	ldr	r3, [pc, #96]	; (8003124 <HAL_RCC_OscConfig+0x4d8>)
 80030c4:	685b      	ldr	r3, [r3, #4]
 80030c6:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80030c8:	68fb      	ldr	r3, [r7, #12]
 80030ca:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80030ce:	687b      	ldr	r3, [r7, #4]
 80030d0:	69db      	ldr	r3, [r3, #28]
 80030d2:	429a      	cmp	r2, r3
 80030d4:	d11c      	bne.n	8003110 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80030d6:	68fb      	ldr	r3, [r7, #12]
 80030d8:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80030dc:	687b      	ldr	r3, [r7, #4]
 80030de:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80030e0:	429a      	cmp	r2, r3
 80030e2:	d115      	bne.n	8003110 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80030e4:	68fa      	ldr	r2, [r7, #12]
 80030e6:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80030ea:	4013      	ands	r3, r2
 80030ec:	687a      	ldr	r2, [r7, #4]
 80030ee:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 80030f0:	4293      	cmp	r3, r2
 80030f2:	d10d      	bne.n	8003110 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 80030f4:	68fb      	ldr	r3, [r7, #12]
 80030f6:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 80030fa:	687b      	ldr	r3, [r7, #4]
 80030fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 80030fe:	429a      	cmp	r2, r3
 8003100:	d106      	bne.n	8003110 <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 8003102:	68fb      	ldr	r3, [r7, #12]
 8003104:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 800310c:	429a      	cmp	r2, r3
 800310e:	d001      	beq.n	8003114 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 8003110:	2301      	movs	r3, #1
 8003112:	e000      	b.n	8003116 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 8003114:	2300      	movs	r3, #0
}
 8003116:	4618      	mov	r0, r3
 8003118:	3718      	adds	r7, #24
 800311a:	46bd      	mov	sp, r7
 800311c:	bd80      	pop	{r7, pc}
 800311e:	bf00      	nop
 8003120:	40007000 	.word	0x40007000
 8003124:	40023800 	.word	0x40023800
 8003128:	42470060 	.word	0x42470060

0800312c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800312c:	b580      	push	{r7, lr}
 800312e:	b084      	sub	sp, #16
 8003130:	af00      	add	r7, sp, #0
 8003132:	6078      	str	r0, [r7, #4]
 8003134:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	2b00      	cmp	r3, #0
 800313a:	d101      	bne.n	8003140 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800313c:	2301      	movs	r3, #1
 800313e:	e0cc      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8003140:	4b68      	ldr	r3, [pc, #416]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 8003142:	681b      	ldr	r3, [r3, #0]
 8003144:	f003 030f 	and.w	r3, r3, #15
 8003148:	683a      	ldr	r2, [r7, #0]
 800314a:	429a      	cmp	r2, r3
 800314c:	d90c      	bls.n	8003168 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800314e:	4b65      	ldr	r3, [pc, #404]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 8003150:	683a      	ldr	r2, [r7, #0]
 8003152:	b2d2      	uxtb	r2, r2
 8003154:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003156:	4b63      	ldr	r3, [pc, #396]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f003 030f 	and.w	r3, r3, #15
 800315e:	683a      	ldr	r2, [r7, #0]
 8003160:	429a      	cmp	r2, r3
 8003162:	d001      	beq.n	8003168 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8003164:	2301      	movs	r3, #1
 8003166:	e0b8      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	f003 0302 	and.w	r3, r3, #2
 8003170:	2b00      	cmp	r3, #0
 8003172:	d020      	beq.n	80031b6 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	681b      	ldr	r3, [r3, #0]
 8003178:	f003 0304 	and.w	r3, r3, #4
 800317c:	2b00      	cmp	r3, #0
 800317e:	d005      	beq.n	800318c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8003180:	4b59      	ldr	r3, [pc, #356]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 8003182:	689b      	ldr	r3, [r3, #8]
 8003184:	4a58      	ldr	r2, [pc, #352]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 8003186:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800318a:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800318c:	687b      	ldr	r3, [r7, #4]
 800318e:	681b      	ldr	r3, [r3, #0]
 8003190:	f003 0308 	and.w	r3, r3, #8
 8003194:	2b00      	cmp	r3, #0
 8003196:	d005      	beq.n	80031a4 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8003198:	4b53      	ldr	r3, [pc, #332]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 800319a:	689b      	ldr	r3, [r3, #8]
 800319c:	4a52      	ldr	r2, [pc, #328]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 800319e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80031a2:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80031a4:	4b50      	ldr	r3, [pc, #320]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80031a6:	689b      	ldr	r3, [r3, #8]
 80031a8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	689b      	ldr	r3, [r3, #8]
 80031b0:	494d      	ldr	r1, [pc, #308]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80031b2:	4313      	orrs	r3, r2
 80031b4:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	681b      	ldr	r3, [r3, #0]
 80031ba:	f003 0301 	and.w	r3, r3, #1
 80031be:	2b00      	cmp	r3, #0
 80031c0:	d044      	beq.n	800324c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80031c2:	687b      	ldr	r3, [r7, #4]
 80031c4:	685b      	ldr	r3, [r3, #4]
 80031c6:	2b01      	cmp	r3, #1
 80031c8:	d107      	bne.n	80031da <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80031ca:	4b47      	ldr	r3, [pc, #284]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80031cc:	681b      	ldr	r3, [r3, #0]
 80031ce:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80031d2:	2b00      	cmp	r3, #0
 80031d4:	d119      	bne.n	800320a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80031d6:	2301      	movs	r3, #1
 80031d8:	e07f      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80031da:	687b      	ldr	r3, [r7, #4]
 80031dc:	685b      	ldr	r3, [r3, #4]
 80031de:	2b02      	cmp	r3, #2
 80031e0:	d003      	beq.n	80031ea <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80031e2:	687b      	ldr	r3, [r7, #4]
 80031e4:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80031e6:	2b03      	cmp	r3, #3
 80031e8:	d107      	bne.n	80031fa <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80031ea:	4b3f      	ldr	r3, [pc, #252]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80031ec:	681b      	ldr	r3, [r3, #0]
 80031ee:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80031f2:	2b00      	cmp	r3, #0
 80031f4:	d109      	bne.n	800320a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80031f6:	2301      	movs	r3, #1
 80031f8:	e06f      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80031fa:	4b3b      	ldr	r3, [pc, #236]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80031fc:	681b      	ldr	r3, [r3, #0]
 80031fe:	f003 0302 	and.w	r3, r3, #2
 8003202:	2b00      	cmp	r3, #0
 8003204:	d101      	bne.n	800320a <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 8003206:	2301      	movs	r3, #1
 8003208:	e067      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800320a:	4b37      	ldr	r3, [pc, #220]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 800320c:	689b      	ldr	r3, [r3, #8]
 800320e:	f023 0203 	bic.w	r2, r3, #3
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	685b      	ldr	r3, [r3, #4]
 8003216:	4934      	ldr	r1, [pc, #208]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 8003218:	4313      	orrs	r3, r2
 800321a:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800321c:	f7fe f9ae 	bl	800157c <HAL_GetTick>
 8003220:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8003222:	e00a      	b.n	800323a <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8003224:	f7fe f9aa 	bl	800157c <HAL_GetTick>
 8003228:	4602      	mov	r2, r0
 800322a:	68fb      	ldr	r3, [r7, #12]
 800322c:	1ad3      	subs	r3, r2, r3
 800322e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003232:	4293      	cmp	r3, r2
 8003234:	d901      	bls.n	800323a <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8003236:	2303      	movs	r3, #3
 8003238:	e04f      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800323a:	4b2b      	ldr	r3, [pc, #172]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 800323c:	689b      	ldr	r3, [r3, #8]
 800323e:	f003 020c 	and.w	r2, r3, #12
 8003242:	687b      	ldr	r3, [r7, #4]
 8003244:	685b      	ldr	r3, [r3, #4]
 8003246:	009b      	lsls	r3, r3, #2
 8003248:	429a      	cmp	r2, r3
 800324a:	d1eb      	bne.n	8003224 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800324c:	4b25      	ldr	r3, [pc, #148]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 800324e:	681b      	ldr	r3, [r3, #0]
 8003250:	f003 030f 	and.w	r3, r3, #15
 8003254:	683a      	ldr	r2, [r7, #0]
 8003256:	429a      	cmp	r2, r3
 8003258:	d20c      	bcs.n	8003274 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800325a:	4b22      	ldr	r3, [pc, #136]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 800325c:	683a      	ldr	r2, [r7, #0]
 800325e:	b2d2      	uxtb	r2, r2
 8003260:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8003262:	4b20      	ldr	r3, [pc, #128]	; (80032e4 <HAL_RCC_ClockConfig+0x1b8>)
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	f003 030f 	and.w	r3, r3, #15
 800326a:	683a      	ldr	r2, [r7, #0]
 800326c:	429a      	cmp	r2, r3
 800326e:	d001      	beq.n	8003274 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8003270:	2301      	movs	r3, #1
 8003272:	e032      	b.n	80032da <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8003274:	687b      	ldr	r3, [r7, #4]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	f003 0304 	and.w	r3, r3, #4
 800327c:	2b00      	cmp	r3, #0
 800327e:	d008      	beq.n	8003292 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003280:	4b19      	ldr	r3, [pc, #100]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 8003282:	689b      	ldr	r3, [r3, #8]
 8003284:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8003288:	687b      	ldr	r3, [r7, #4]
 800328a:	68db      	ldr	r3, [r3, #12]
 800328c:	4916      	ldr	r1, [pc, #88]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 800328e:	4313      	orrs	r3, r2
 8003290:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8003292:	687b      	ldr	r3, [r7, #4]
 8003294:	681b      	ldr	r3, [r3, #0]
 8003296:	f003 0308 	and.w	r3, r3, #8
 800329a:	2b00      	cmp	r3, #0
 800329c:	d009      	beq.n	80032b2 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800329e:	4b12      	ldr	r3, [pc, #72]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80032a0:	689b      	ldr	r3, [r3, #8]
 80032a2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	691b      	ldr	r3, [r3, #16]
 80032aa:	00db      	lsls	r3, r3, #3
 80032ac:	490e      	ldr	r1, [pc, #56]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80032ae:	4313      	orrs	r3, r2
 80032b0:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80032b2:	f000 f821 	bl	80032f8 <HAL_RCC_GetSysClockFreq>
 80032b6:	4601      	mov	r1, r0
 80032b8:	4b0b      	ldr	r3, [pc, #44]	; (80032e8 <HAL_RCC_ClockConfig+0x1bc>)
 80032ba:	689b      	ldr	r3, [r3, #8]
 80032bc:	091b      	lsrs	r3, r3, #4
 80032be:	f003 030f 	and.w	r3, r3, #15
 80032c2:	4a0a      	ldr	r2, [pc, #40]	; (80032ec <HAL_RCC_ClockConfig+0x1c0>)
 80032c4:	5cd3      	ldrb	r3, [r2, r3]
 80032c6:	fa21 f303 	lsr.w	r3, r1, r3
 80032ca:	4a09      	ldr	r2, [pc, #36]	; (80032f0 <HAL_RCC_ClockConfig+0x1c4>)
 80032cc:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 80032ce:	4b09      	ldr	r3, [pc, #36]	; (80032f4 <HAL_RCC_ClockConfig+0x1c8>)
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	4618      	mov	r0, r3
 80032d4:	f7fe f90e 	bl	80014f4 <HAL_InitTick>

  return HAL_OK;
 80032d8:	2300      	movs	r3, #0
}
 80032da:	4618      	mov	r0, r3
 80032dc:	3710      	adds	r7, #16
 80032de:	46bd      	mov	sp, r7
 80032e0:	bd80      	pop	{r7, pc}
 80032e2:	bf00      	nop
 80032e4:	40023c00 	.word	0x40023c00
 80032e8:	40023800 	.word	0x40023800
 80032ec:	0801cad0 	.word	0x0801cad0
 80032f0:	20000004 	.word	0x20000004
 80032f4:	20000008 	.word	0x20000008

080032f8 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80032f8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80032fa:	b085      	sub	sp, #20
 80032fc:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 80032fe:	2300      	movs	r3, #0
 8003300:	607b      	str	r3, [r7, #4]
 8003302:	2300      	movs	r3, #0
 8003304:	60fb      	str	r3, [r7, #12]
 8003306:	2300      	movs	r3, #0
 8003308:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 800330a:	2300      	movs	r3, #0
 800330c:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800330e:	4b50      	ldr	r3, [pc, #320]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 8003310:	689b      	ldr	r3, [r3, #8]
 8003312:	f003 030c 	and.w	r3, r3, #12
 8003316:	2b04      	cmp	r3, #4
 8003318:	d007      	beq.n	800332a <HAL_RCC_GetSysClockFreq+0x32>
 800331a:	2b08      	cmp	r3, #8
 800331c:	d008      	beq.n	8003330 <HAL_RCC_GetSysClockFreq+0x38>
 800331e:	2b00      	cmp	r3, #0
 8003320:	f040 808d 	bne.w	800343e <HAL_RCC_GetSysClockFreq+0x146>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8003324:	4b4b      	ldr	r3, [pc, #300]	; (8003454 <HAL_RCC_GetSysClockFreq+0x15c>)
 8003326:	60bb      	str	r3, [r7, #8]
       break;
 8003328:	e08c      	b.n	8003444 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 800332a:	4b4b      	ldr	r3, [pc, #300]	; (8003458 <HAL_RCC_GetSysClockFreq+0x160>)
 800332c:	60bb      	str	r3, [r7, #8]
      break;
 800332e:	e089      	b.n	8003444 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8003330:	4b47      	ldr	r3, [pc, #284]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 8003332:	685b      	ldr	r3, [r3, #4]
 8003334:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8003338:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800333a:	4b45      	ldr	r3, [pc, #276]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 800333c:	685b      	ldr	r3, [r3, #4]
 800333e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8003342:	2b00      	cmp	r3, #0
 8003344:	d023      	beq.n	800338e <HAL_RCC_GetSysClockFreq+0x96>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8003346:	4b42      	ldr	r3, [pc, #264]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 8003348:	685b      	ldr	r3, [r3, #4]
 800334a:	099b      	lsrs	r3, r3, #6
 800334c:	f04f 0400 	mov.w	r4, #0
 8003350:	f240 11ff 	movw	r1, #511	; 0x1ff
 8003354:	f04f 0200 	mov.w	r2, #0
 8003358:	ea03 0501 	and.w	r5, r3, r1
 800335c:	ea04 0602 	and.w	r6, r4, r2
 8003360:	4a3d      	ldr	r2, [pc, #244]	; (8003458 <HAL_RCC_GetSysClockFreq+0x160>)
 8003362:	fb02 f106 	mul.w	r1, r2, r6
 8003366:	2200      	movs	r2, #0
 8003368:	fb02 f205 	mul.w	r2, r2, r5
 800336c:	440a      	add	r2, r1
 800336e:	493a      	ldr	r1, [pc, #232]	; (8003458 <HAL_RCC_GetSysClockFreq+0x160>)
 8003370:	fba5 0101 	umull	r0, r1, r5, r1
 8003374:	1853      	adds	r3, r2, r1
 8003376:	4619      	mov	r1, r3
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	f04f 0400 	mov.w	r4, #0
 800337e:	461a      	mov	r2, r3
 8003380:	4623      	mov	r3, r4
 8003382:	f7fc ff85 	bl	8000290 <__aeabi_uldivmod>
 8003386:	4603      	mov	r3, r0
 8003388:	460c      	mov	r4, r1
 800338a:	60fb      	str	r3, [r7, #12]
 800338c:	e049      	b.n	8003422 <HAL_RCC_GetSysClockFreq+0x12a>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800338e:	4b30      	ldr	r3, [pc, #192]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 8003390:	685b      	ldr	r3, [r3, #4]
 8003392:	099b      	lsrs	r3, r3, #6
 8003394:	f04f 0400 	mov.w	r4, #0
 8003398:	f240 11ff 	movw	r1, #511	; 0x1ff
 800339c:	f04f 0200 	mov.w	r2, #0
 80033a0:	ea03 0501 	and.w	r5, r3, r1
 80033a4:	ea04 0602 	and.w	r6, r4, r2
 80033a8:	4629      	mov	r1, r5
 80033aa:	4632      	mov	r2, r6
 80033ac:	f04f 0300 	mov.w	r3, #0
 80033b0:	f04f 0400 	mov.w	r4, #0
 80033b4:	0154      	lsls	r4, r2, #5
 80033b6:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80033ba:	014b      	lsls	r3, r1, #5
 80033bc:	4619      	mov	r1, r3
 80033be:	4622      	mov	r2, r4
 80033c0:	1b49      	subs	r1, r1, r5
 80033c2:	eb62 0206 	sbc.w	r2, r2, r6
 80033c6:	f04f 0300 	mov.w	r3, #0
 80033ca:	f04f 0400 	mov.w	r4, #0
 80033ce:	0194      	lsls	r4, r2, #6
 80033d0:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 80033d4:	018b      	lsls	r3, r1, #6
 80033d6:	1a5b      	subs	r3, r3, r1
 80033d8:	eb64 0402 	sbc.w	r4, r4, r2
 80033dc:	f04f 0100 	mov.w	r1, #0
 80033e0:	f04f 0200 	mov.w	r2, #0
 80033e4:	00e2      	lsls	r2, r4, #3
 80033e6:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 80033ea:	00d9      	lsls	r1, r3, #3
 80033ec:	460b      	mov	r3, r1
 80033ee:	4614      	mov	r4, r2
 80033f0:	195b      	adds	r3, r3, r5
 80033f2:	eb44 0406 	adc.w	r4, r4, r6
 80033f6:	f04f 0100 	mov.w	r1, #0
 80033fa:	f04f 0200 	mov.w	r2, #0
 80033fe:	02a2      	lsls	r2, r4, #10
 8003400:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 8003404:	0299      	lsls	r1, r3, #10
 8003406:	460b      	mov	r3, r1
 8003408:	4614      	mov	r4, r2
 800340a:	4618      	mov	r0, r3
 800340c:	4621      	mov	r1, r4
 800340e:	687b      	ldr	r3, [r7, #4]
 8003410:	f04f 0400 	mov.w	r4, #0
 8003414:	461a      	mov	r2, r3
 8003416:	4623      	mov	r3, r4
 8003418:	f7fc ff3a 	bl	8000290 <__aeabi_uldivmod>
 800341c:	4603      	mov	r3, r0
 800341e:	460c      	mov	r4, r1
 8003420:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8003422:	4b0b      	ldr	r3, [pc, #44]	; (8003450 <HAL_RCC_GetSysClockFreq+0x158>)
 8003424:	685b      	ldr	r3, [r3, #4]
 8003426:	0c1b      	lsrs	r3, r3, #16
 8003428:	f003 0303 	and.w	r3, r3, #3
 800342c:	3301      	adds	r3, #1
 800342e:	005b      	lsls	r3, r3, #1
 8003430:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 8003432:	68fa      	ldr	r2, [r7, #12]
 8003434:	683b      	ldr	r3, [r7, #0]
 8003436:	fbb2 f3f3 	udiv	r3, r2, r3
 800343a:	60bb      	str	r3, [r7, #8]
      break;
 800343c:	e002      	b.n	8003444 <HAL_RCC_GetSysClockFreq+0x14c>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 800343e:	4b05      	ldr	r3, [pc, #20]	; (8003454 <HAL_RCC_GetSysClockFreq+0x15c>)
 8003440:	60bb      	str	r3, [r7, #8]
      break;
 8003442:	bf00      	nop
    }
  }
  return sysclockfreq;
 8003444:	68bb      	ldr	r3, [r7, #8]
}
 8003446:	4618      	mov	r0, r3
 8003448:	3714      	adds	r7, #20
 800344a:	46bd      	mov	sp, r7
 800344c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800344e:	bf00      	nop
 8003450:	40023800 	.word	0x40023800
 8003454:	00f42400 	.word	0x00f42400
 8003458:	017d7840 	.word	0x017d7840

0800345c <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 800345c:	b480      	push	{r7}
 800345e:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 8003460:	4b03      	ldr	r3, [pc, #12]	; (8003470 <HAL_RCC_GetHCLKFreq+0x14>)
 8003462:	681b      	ldr	r3, [r3, #0]
}
 8003464:	4618      	mov	r0, r3
 8003466:	46bd      	mov	sp, r7
 8003468:	f85d 7b04 	ldr.w	r7, [sp], #4
 800346c:	4770      	bx	lr
 800346e:	bf00      	nop
 8003470:	20000004 	.word	0x20000004

08003474 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 8003474:	b580      	push	{r7, lr}
 8003476:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8003478:	f7ff fff0 	bl	800345c <HAL_RCC_GetHCLKFreq>
 800347c:	4601      	mov	r1, r0
 800347e:	4b05      	ldr	r3, [pc, #20]	; (8003494 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003480:	689b      	ldr	r3, [r3, #8]
 8003482:	0a9b      	lsrs	r3, r3, #10
 8003484:	f003 0307 	and.w	r3, r3, #7
 8003488:	4a03      	ldr	r2, [pc, #12]	; (8003498 <HAL_RCC_GetPCLK1Freq+0x24>)
 800348a:	5cd3      	ldrb	r3, [r2, r3]
 800348c:	fa21 f303 	lsr.w	r3, r1, r3
}
 8003490:	4618      	mov	r0, r3
 8003492:	bd80      	pop	{r7, pc}
 8003494:	40023800 	.word	0x40023800
 8003498:	0801cae0 	.word	0x0801cae0

0800349c <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 800349c:	b580      	push	{r7, lr}
 800349e:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 80034a0:	f7ff ffdc 	bl	800345c <HAL_RCC_GetHCLKFreq>
 80034a4:	4601      	mov	r1, r0
 80034a6:	4b05      	ldr	r3, [pc, #20]	; (80034bc <HAL_RCC_GetPCLK2Freq+0x20>)
 80034a8:	689b      	ldr	r3, [r3, #8]
 80034aa:	0b5b      	lsrs	r3, r3, #13
 80034ac:	f003 0307 	and.w	r3, r3, #7
 80034b0:	4a03      	ldr	r2, [pc, #12]	; (80034c0 <HAL_RCC_GetPCLK2Freq+0x24>)
 80034b2:	5cd3      	ldrb	r3, [r2, r3]
 80034b4:	fa21 f303 	lsr.w	r3, r1, r3
}
 80034b8:	4618      	mov	r0, r3
 80034ba:	bd80      	pop	{r7, pc}
 80034bc:	40023800 	.word	0x40023800
 80034c0:	0801cae0 	.word	0x0801cae0

080034c4 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80034c4:	b580      	push	{r7, lr}
 80034c6:	b086      	sub	sp, #24
 80034c8:	af00      	add	r7, sp, #0
 80034ca:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = 0U;
 80034cc:	2300      	movs	r3, #0
 80034ce:	617b      	str	r3, [r7, #20]
  uint32_t tmpreg1 = 0U;
 80034d0:	2300      	movs	r3, #0
 80034d2:	613b      	str	r3, [r7, #16]

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80034d4:	687b      	ldr	r3, [r7, #4]
 80034d6:	681b      	ldr	r3, [r3, #0]
 80034d8:	f003 0301 	and.w	r3, r3, #1
 80034dc:	2b00      	cmp	r3, #0
 80034de:	d10b      	bne.n	80034f8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80034e0:	687b      	ldr	r3, [r7, #4]
 80034e2:	681b      	ldr	r3, [r3, #0]
 80034e4:	f003 0302 	and.w	r3, r3, #2
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 80034e8:	2b00      	cmp	r3, #0
 80034ea:	d105      	bne.n	80034f8 <HAL_RCCEx_PeriphCLKConfig+0x34>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S))
 80034ec:	687b      	ldr	r3, [r7, #4]
 80034ee:	681b      	ldr	r3, [r3, #0]
 80034f0:	f003 0340 	and.w	r3, r3, #64	; 0x40
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 80034f4:	2b00      	cmp	r3, #0
 80034f6:	d075      	beq.n	80035e4 <HAL_RCCEx_PeriphCLKConfig+0x120>
  {
    /* check for Parameters */
    assert_param(IS_RCC_PLLI2SN_VALUE(PeriphClkInit->PLLI2S.PLLI2SN));

    /* Disable the PLLI2S */
    __HAL_RCC_PLLI2S_DISABLE();
 80034f8:	4bad      	ldr	r3, [pc, #692]	; (80037b0 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80034fa:	2200      	movs	r2, #0
 80034fc:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80034fe:	f7fe f83d 	bl	800157c <HAL_GetTick>
 8003502:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is disabled */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8003504:	e008      	b.n	8003518 <HAL_RCCEx_PeriphCLKConfig+0x54>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8003506:	f7fe f839 	bl	800157c <HAL_GetTick>
 800350a:	4602      	mov	r2, r0
 800350c:	697b      	ldr	r3, [r7, #20]
 800350e:	1ad3      	subs	r3, r2, r3
 8003510:	2b02      	cmp	r3, #2
 8003512:	d901      	bls.n	8003518 <HAL_RCCEx_PeriphCLKConfig+0x54>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8003514:	2303      	movs	r3, #3
 8003516:	e18b      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8003518:	4ba6      	ldr	r3, [pc, #664]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8003520:	2b00      	cmp	r3, #0
 8003522:	d1f0      	bne.n	8003506 <HAL_RCCEx_PeriphCLKConfig+0x42>
    }

    /*---------------------------- I2S configuration -------------------------*/
    /* In Case of I2S Clock Configuration through PLLI2S, PLLI2SR must be added
      only for I2S configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	681b      	ldr	r3, [r3, #0]
 8003528:	f003 0301 	and.w	r3, r3, #1
 800352c:	2b00      	cmp	r3, #0
 800352e:	d009      	beq.n	8003544 <HAL_RCCEx_PeriphCLKConfig+0x80>
      /* check for Parameters */
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO = f(VCO clock) = f(PLLI2S clock input) * (PLLI2SN/PLLM) */
      /* I2SCLK = f(PLLI2S clock output) = f(VCO clock) / PLLI2SR */
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8003530:	687b      	ldr	r3, [r7, #4]
 8003532:	685b      	ldr	r3, [r3, #4]
 8003534:	019a      	lsls	r2, r3, #6
 8003536:	687b      	ldr	r3, [r7, #4]
 8003538:	689b      	ldr	r3, [r3, #8]
 800353a:	071b      	lsls	r3, r3, #28
 800353c:	499d      	ldr	r1, [pc, #628]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800353e:	4313      	orrs	r3, r2
 8003540:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLI2S, PLLI2SQ and PLLI2S_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	681b      	ldr	r3, [r3, #0]
 8003548:	f003 0302 	and.w	r3, r3, #2
 800354c:	2b00      	cmp	r3, #0
 800354e:	d01f      	beq.n	8003590 <HAL_RCCEx_PeriphCLKConfig+0xcc>
      /* Check the PLLI2S division factors */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2S_DIVQ_VALUE(PeriphClkInit->PLLI2SDivQ));

      /* Read PLLI2SR value from PLLI2SCFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8003550:	4b98      	ldr	r3, [pc, #608]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003552:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 8003556:	0f1b      	lsrs	r3, r3, #28
 8003558:	f003 0307 	and.w	r3, r3, #7
 800355c:	613b      	str	r3, [r7, #16]
      /* Configure the PLLI2S division factors */
      /* PLLI2S_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLI2S_VCO Output = PLLI2S_VCO Input * PLLI2SN */
      /* SAI_CLK(first level) = PLLI2S_VCO Output/PLLI2SQ */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	685b      	ldr	r3, [r3, #4]
 8003562:	019a      	lsls	r2, r3, #6
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	68db      	ldr	r3, [r3, #12]
 8003568:	061b      	lsls	r3, r3, #24
 800356a:	431a      	orrs	r2, r3
 800356c:	693b      	ldr	r3, [r7, #16]
 800356e:	071b      	lsls	r3, r3, #28
 8003570:	4990      	ldr	r1, [pc, #576]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003572:	4313      	orrs	r3, r2
 8003574:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
      /* SAI_CLK_x = SAI_CLK(first level)/PLLI2SDIVQ */
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8003578:	4b8e      	ldr	r3, [pc, #568]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800357a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800357e:	f023 021f 	bic.w	r2, r3, #31
 8003582:	687b      	ldr	r3, [r7, #4]
 8003584:	69db      	ldr	r3, [r3, #28]
 8003586:	3b01      	subs	r3, #1
 8003588:	498a      	ldr	r1, [pc, #552]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800358a:	4313      	orrs	r3, r2
 800358c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*----------------- In Case of PLLI2S is just selected  -----------------*/
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	681b      	ldr	r3, [r3, #0]
 8003594:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8003598:	2b00      	cmp	r3, #0
 800359a:	d00d      	beq.n	80035b8 <HAL_RCCEx_PeriphCLKConfig+0xf4>
      /* Check for Parameters */
      assert_param(IS_RCC_PLLI2SQ_VALUE(PeriphClkInit->PLLI2S.PLLI2SQ));
      assert_param(IS_RCC_PLLI2SR_VALUE(PeriphClkInit->PLLI2S.PLLI2SR));

      /* Configure the PLLI2S multiplication and division factors */
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	685b      	ldr	r3, [r3, #4]
 80035a0:	019a      	lsls	r2, r3, #6
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	68db      	ldr	r3, [r3, #12]
 80035a6:	061b      	lsls	r3, r3, #24
 80035a8:	431a      	orrs	r2, r3
 80035aa:	687b      	ldr	r3, [r7, #4]
 80035ac:	689b      	ldr	r3, [r3, #8]
 80035ae:	071b      	lsls	r3, r3, #28
 80035b0:	4980      	ldr	r1, [pc, #512]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80035b2:	4313      	orrs	r3, r2
 80035b4:	f8c1 3084 	str.w	r3, [r1, #132]	; 0x84
    }

    /* Enable the PLLI2S */
    __HAL_RCC_PLLI2S_ENABLE();
 80035b8:	4b7d      	ldr	r3, [pc, #500]	; (80037b0 <HAL_RCCEx_PeriphCLKConfig+0x2ec>)
 80035ba:	2201      	movs	r2, #1
 80035bc:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80035be:	f7fd ffdd 	bl	800157c <HAL_GetTick>
 80035c2:	6178      	str	r0, [r7, #20]
    /* Wait till PLLI2S is ready */
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80035c4:	e008      	b.n	80035d8 <HAL_RCCEx_PeriphCLKConfig+0x114>
    {
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80035c6:	f7fd ffd9 	bl	800157c <HAL_GetTick>
 80035ca:	4602      	mov	r2, r0
 80035cc:	697b      	ldr	r3, [r7, #20]
 80035ce:	1ad3      	subs	r3, r2, r3
 80035d0:	2b02      	cmp	r3, #2
 80035d2:	d901      	bls.n	80035d8 <HAL_RCCEx_PeriphCLKConfig+0x114>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80035d4:	2303      	movs	r3, #3
 80035d6:	e12b      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80035d8:	4b76      	ldr	r3, [pc, #472]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80035da:	681b      	ldr	r3, [r3, #0]
 80035dc:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 80035e0:	2b00      	cmp	r3, #0
 80035e2:	d0f0      	beq.n	80035c6 <HAL_RCCEx_PeriphCLKConfig+0x102>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f003 0304 	and.w	r3, r3, #4
 80035ec:	2b00      	cmp	r3, #0
 80035ee:	d105      	bne.n	80035fc <HAL_RCCEx_PeriphCLKConfig+0x138>
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC))
 80035f0:	687b      	ldr	r3, [r7, #4]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	f003 0308 	and.w	r3, r3, #8
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 80035f8:	2b00      	cmp	r3, #0
 80035fa:	d079      	beq.n	80036f0 <HAL_RCCEx_PeriphCLKConfig+0x22c>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 80035fc:	4b6e      	ldr	r3, [pc, #440]	; (80037b8 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80035fe:	2200      	movs	r2, #0
 8003600:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8003602:	f7fd ffbb 	bl	800157c <HAL_GetTick>
 8003606:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8003608:	e008      	b.n	800361c <HAL_RCCEx_PeriphCLKConfig+0x158>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 800360a:	f7fd ffb7 	bl	800157c <HAL_GetTick>
 800360e:	4602      	mov	r2, r0
 8003610:	697b      	ldr	r3, [r7, #20]
 8003612:	1ad3      	subs	r3, r2, r3
 8003614:	2b02      	cmp	r3, #2
 8003616:	d901      	bls.n	800361c <HAL_RCCEx_PeriphCLKConfig+0x158>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 8003618:	2303      	movs	r3, #3
 800361a:	e109      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 800361c:	4b65      	ldr	r3, [pc, #404]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800361e:	681b      	ldr	r3, [r3, #0]
 8003620:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8003624:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 8003628:	d0ef      	beq.n	800360a <HAL_RCCEx_PeriphCLKConfig+0x146>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800362a:	687b      	ldr	r3, [r7, #4]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	f003 0304 	and.w	r3, r3, #4
 8003632:	2b00      	cmp	r3, #0
 8003634:	d020      	beq.n	8003678 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8003636:	4b5f      	ldr	r3, [pc, #380]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003638:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800363c:	0f1b      	lsrs	r3, r3, #28
 800363e:	f003 0307 	and.w	r3, r3, #7
 8003642:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8003644:	687b      	ldr	r3, [r7, #4]
 8003646:	691b      	ldr	r3, [r3, #16]
 8003648:	019a      	lsls	r2, r3, #6
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	695b      	ldr	r3, [r3, #20]
 800364e:	061b      	lsls	r3, r3, #24
 8003650:	431a      	orrs	r2, r3
 8003652:	693b      	ldr	r3, [r7, #16]
 8003654:	071b      	lsls	r3, r3, #28
 8003656:	4957      	ldr	r1, [pc, #348]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003658:	4313      	orrs	r3, r2
 800365a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 800365e:	4b55      	ldr	r3, [pc, #340]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003660:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 8003664:	f423 52f8 	bic.w	r2, r3, #7936	; 0x1f00
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	6a1b      	ldr	r3, [r3, #32]
 800366c:	3b01      	subs	r3, #1
 800366e:	021b      	lsls	r3, r3, #8
 8003670:	4950      	ldr	r1, [pc, #320]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003672:	4313      	orrs	r3, r2
 8003674:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	681b      	ldr	r3, [r3, #0]
 800367c:	f003 0308 	and.w	r3, r3, #8
 8003680:	2b00      	cmp	r3, #0
 8003682:	d01e      	beq.n	80036c2 <HAL_RCCEx_PeriphCLKConfig+0x1fe>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8003684:	4b4b      	ldr	r3, [pc, #300]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003686:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800368a:	0e1b      	lsrs	r3, r3, #24
 800368c:	f003 030f 	and.w	r3, r3, #15
 8003690:	613b      	str	r3, [r7, #16]
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8003692:	687b      	ldr	r3, [r7, #4]
 8003694:	691b      	ldr	r3, [r3, #16]
 8003696:	019a      	lsls	r2, r3, #6
 8003698:	693b      	ldr	r3, [r7, #16]
 800369a:	061b      	lsls	r3, r3, #24
 800369c:	431a      	orrs	r2, r3
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	699b      	ldr	r3, [r3, #24]
 80036a2:	071b      	lsls	r3, r3, #28
 80036a4:	4943      	ldr	r1, [pc, #268]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80036a6:	4313      	orrs	r3, r2
 80036a8:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80036ac:	4b41      	ldr	r3, [pc, #260]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80036ae:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80036b2:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 80036b6:	687b      	ldr	r3, [r7, #4]
 80036b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036ba:	493e      	ldr	r1, [pc, #248]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80036bc:	4313      	orrs	r3, r2
 80036be:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 80036c2:	4b3d      	ldr	r3, [pc, #244]	; (80037b8 <HAL_RCCEx_PeriphCLKConfig+0x2f4>)
 80036c4:	2201      	movs	r2, #1
 80036c6:	601a      	str	r2, [r3, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 80036c8:	f7fd ff58 	bl	800157c <HAL_GetTick>
 80036cc:	6178      	str	r0, [r7, #20]
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80036ce:	e008      	b.n	80036e2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 80036d0:	f7fd ff54 	bl	800157c <HAL_GetTick>
 80036d4:	4602      	mov	r2, r0
 80036d6:	697b      	ldr	r3, [r7, #20]
 80036d8:	1ad3      	subs	r3, r2, r3
 80036da:	2b02      	cmp	r3, #2
 80036dc:	d901      	bls.n	80036e2 <HAL_RCCEx_PeriphCLKConfig+0x21e>
      {
        /* return in case of Timeout detected */
        return HAL_TIMEOUT;
 80036de:	2303      	movs	r3, #3
 80036e0:	e0a6      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 80036e2:	4b34      	ldr	r3, [pc, #208]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 80036e4:	681b      	ldr	r3, [r3, #0]
 80036e6:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 80036ea:	f1b3 5f00 	cmp.w	r3, #536870912	; 0x20000000
 80036ee:	d1ef      	bne.n	80036d0 <HAL_RCCEx_PeriphCLKConfig+0x20c>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	681b      	ldr	r3, [r3, #0]
 80036f4:	f003 0320 	and.w	r3, r3, #32
 80036f8:	2b00      	cmp	r3, #0
 80036fa:	f000 808d 	beq.w	8003818 <HAL_RCCEx_PeriphCLKConfig+0x354>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 80036fe:	2300      	movs	r3, #0
 8003700:	60fb      	str	r3, [r7, #12]
 8003702:	4b2c      	ldr	r3, [pc, #176]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003704:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003706:	4a2b      	ldr	r2, [pc, #172]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003708:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800370c:	6413      	str	r3, [r2, #64]	; 0x40
 800370e:	4b29      	ldr	r3, [pc, #164]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003710:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003712:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003716:	60fb      	str	r3, [r7, #12]
 8003718:	68fb      	ldr	r3, [r7, #12]

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 800371a:	4b28      	ldr	r3, [pc, #160]	; (80037bc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 800371c:	681b      	ldr	r3, [r3, #0]
 800371e:	4a27      	ldr	r2, [pc, #156]	; (80037bc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8003720:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8003724:	6013      	str	r3, [r2, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8003726:	f7fd ff29 	bl	800157c <HAL_GetTick>
 800372a:	6178      	str	r0, [r7, #20]

    while((PWR->CR & PWR_CR_DBP) == RESET)
 800372c:	e008      	b.n	8003740 <HAL_RCCEx_PeriphCLKConfig+0x27c>
    {
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 800372e:	f7fd ff25 	bl	800157c <HAL_GetTick>
 8003732:	4602      	mov	r2, r0
 8003734:	697b      	ldr	r3, [r7, #20]
 8003736:	1ad3      	subs	r3, r2, r3
 8003738:	2b02      	cmp	r3, #2
 800373a:	d901      	bls.n	8003740 <HAL_RCCEx_PeriphCLKConfig+0x27c>
      {
        return HAL_TIMEOUT;
 800373c:	2303      	movs	r3, #3
 800373e:	e077      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8003740:	4b1e      	ldr	r3, [pc, #120]	; (80037bc <HAL_RCCEx_PeriphCLKConfig+0x2f8>)
 8003742:	681b      	ldr	r3, [r3, #0]
 8003744:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003748:	2b00      	cmp	r3, #0
 800374a:	d0f0      	beq.n	800372e <HAL_RCCEx_PeriphCLKConfig+0x26a>
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 800374c:	4b19      	ldr	r3, [pc, #100]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800374e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8003750:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003754:	613b      	str	r3, [r7, #16]
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8003756:	693b      	ldr	r3, [r7, #16]
 8003758:	2b00      	cmp	r3, #0
 800375a:	d039      	beq.n	80037d0 <HAL_RCCEx_PeriphCLKConfig+0x30c>
 800375c:	687b      	ldr	r3, [r7, #4]
 800375e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003760:	f403 7340 	and.w	r3, r3, #768	; 0x300
 8003764:	693a      	ldr	r2, [r7, #16]
 8003766:	429a      	cmp	r2, r3
 8003768:	d032      	beq.n	80037d0 <HAL_RCCEx_PeriphCLKConfig+0x30c>
    {
      /* Store the content of BDCR register before the reset of Backup Domain */
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 800376a:	4b12      	ldr	r3, [pc, #72]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 800376c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800376e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003772:	613b      	str	r3, [r7, #16]
      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 8003774:	4b12      	ldr	r3, [pc, #72]	; (80037c0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 8003776:	2201      	movs	r2, #1
 8003778:	601a      	str	r2, [r3, #0]
      __HAL_RCC_BACKUPRESET_RELEASE();
 800377a:	4b11      	ldr	r3, [pc, #68]	; (80037c0 <HAL_RCCEx_PeriphCLKConfig+0x2fc>)
 800377c:	2200      	movs	r2, #0
 800377e:	601a      	str	r2, [r3, #0]
      /* Restore the Content of BDCR register */
      RCC->BDCR = tmpreg1;
 8003780:	4a0c      	ldr	r2, [pc, #48]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003782:	693b      	ldr	r3, [r7, #16]
 8003784:	6713      	str	r3, [r2, #112]	; 0x70

      /* Wait for LSE reactivation if LSE was enable prior to Backup Domain reset */
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8003786:	4b0b      	ldr	r3, [pc, #44]	; (80037b4 <HAL_RCCEx_PeriphCLKConfig+0x2f0>)
 8003788:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800378a:	f003 0301 	and.w	r3, r3, #1
 800378e:	2b01      	cmp	r3, #1
 8003790:	d11e      	bne.n	80037d0 <HAL_RCCEx_PeriphCLKConfig+0x30c>
      {
        /* Get tick */
        tickstart = HAL_GetTick();
 8003792:	f7fd fef3 	bl	800157c <HAL_GetTick>
 8003796:	6178      	str	r0, [r7, #20]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8003798:	e014      	b.n	80037c4 <HAL_RCCEx_PeriphCLKConfig+0x300>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800379a:	f7fd feef 	bl	800157c <HAL_GetTick>
 800379e:	4602      	mov	r2, r0
 80037a0:	697b      	ldr	r3, [r7, #20]
 80037a2:	1ad3      	subs	r3, r2, r3
 80037a4:	f241 3288 	movw	r2, #5000	; 0x1388
 80037a8:	4293      	cmp	r3, r2
 80037aa:	d90b      	bls.n	80037c4 <HAL_RCCEx_PeriphCLKConfig+0x300>
          {
            return HAL_TIMEOUT;
 80037ac:	2303      	movs	r3, #3
 80037ae:	e03f      	b.n	8003830 <HAL_RCCEx_PeriphCLKConfig+0x36c>
 80037b0:	42470068 	.word	0x42470068
 80037b4:	40023800 	.word	0x40023800
 80037b8:	42470070 	.word	0x42470070
 80037bc:	40007000 	.word	0x40007000
 80037c0:	42470e40 	.word	0x42470e40
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80037c4:	4b1c      	ldr	r3, [pc, #112]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80037c6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80037c8:	f003 0302 	and.w	r3, r3, #2
 80037cc:	2b00      	cmp	r3, #0
 80037ce:	d0e4      	beq.n	800379a <HAL_RCCEx_PeriphCLKConfig+0x2d6>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80037d0:	687b      	ldr	r3, [r7, #4]
 80037d2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80037d4:	f403 7340 	and.w	r3, r3, #768	; 0x300
 80037d8:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80037dc:	d10d      	bne.n	80037fa <HAL_RCCEx_PeriphCLKConfig+0x336>
 80037de:	4b16      	ldr	r3, [pc, #88]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80037e0:	689b      	ldr	r3, [r3, #8]
 80037e2:	f423 12f8 	bic.w	r2, r3, #2031616	; 0x1f0000
 80037e6:	687b      	ldr	r3, [r7, #4]
 80037e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80037ea:	f023 4370 	bic.w	r3, r3, #4026531840	; 0xf0000000
 80037ee:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80037f2:	4911      	ldr	r1, [pc, #68]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80037f4:	4313      	orrs	r3, r2
 80037f6:	608b      	str	r3, [r1, #8]
 80037f8:	e005      	b.n	8003806 <HAL_RCCEx_PeriphCLKConfig+0x342>
 80037fa:	4b0f      	ldr	r3, [pc, #60]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 80037fc:	689b      	ldr	r3, [r3, #8]
 80037fe:	4a0e      	ldr	r2, [pc, #56]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8003800:	f423 13f8 	bic.w	r3, r3, #2031616	; 0x1f0000
 8003804:	6093      	str	r3, [r2, #8]
 8003806:	4b0c      	ldr	r3, [pc, #48]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8003808:	6f1a      	ldr	r2, [r3, #112]	; 0x70
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800380e:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003812:	4909      	ldr	r1, [pc, #36]	; (8003838 <HAL_RCCEx_PeriphCLKConfig+0x374>)
 8003814:	4313      	orrs	r3, r2
 8003816:	670b      	str	r3, [r1, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	f003 0310 	and.w	r3, r3, #16
 8003820:	2b00      	cmp	r3, #0
 8003822:	d004      	beq.n	800382e <HAL_RCCEx_PeriphCLKConfig+0x36a>
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8003824:	687b      	ldr	r3, [r7, #4]
 8003826:	f893 202c 	ldrb.w	r2, [r3, #44]	; 0x2c
 800382a:	4b04      	ldr	r3, [pc, #16]	; (800383c <HAL_RCCEx_PeriphCLKConfig+0x378>)
 800382c:	601a      	str	r2, [r3, #0]
  }
  return HAL_OK;
 800382e:	2300      	movs	r3, #0
}
 8003830:	4618      	mov	r0, r3
 8003832:	3718      	adds	r7, #24
 8003834:	46bd      	mov	sp, r7
 8003836:	bd80      	pop	{r7, pc}
 8003838:	40023800 	.word	0x40023800
 800383c:	424711e0 	.word	0x424711e0

08003840 <HAL_SD_Init>:
            SD_HandleTypeDef and create the associated handle.
  * @param  hsd: Pointer to the SD handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_Init(SD_HandleTypeDef *hsd)
{
 8003840:	b580      	push	{r7, lr}
 8003842:	b082      	sub	sp, #8
 8003844:	af00      	add	r7, sp, #0
 8003846:	6078      	str	r0, [r7, #4]
  /* Check the SD handle allocation */
  if(hsd == NULL)
 8003848:	687b      	ldr	r3, [r7, #4]
 800384a:	2b00      	cmp	r3, #0
 800384c:	d101      	bne.n	8003852 <HAL_SD_Init+0x12>
  {
    return HAL_ERROR;
 800384e:	2301      	movs	r3, #1
 8003850:	e022      	b.n	8003898 <HAL_SD_Init+0x58>
  assert_param(IS_SDIO_CLOCK_POWER_SAVE(hsd->Init.ClockPowerSave));
  assert_param(IS_SDIO_BUS_WIDE(hsd->Init.BusWide));
  assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(hsd->Init.HardwareFlowControl));
  assert_param(IS_SDIO_CLKDIV(hsd->Init.ClockDiv));

  if(hsd->State == HAL_SD_STATE_RESET)
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003858:	b2db      	uxtb	r3, r3
 800385a:	2b00      	cmp	r3, #0
 800385c:	d105      	bne.n	800386a <HAL_SD_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    hsd->Lock = HAL_UNLOCKED;
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	2200      	movs	r2, #0
 8003862:	771a      	strb	r2, [r3, #28]

    /* Init the low level hardware */
    hsd->MspInitCallback(hsd);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_SD_MspInit(hsd);
 8003864:	6878      	ldr	r0, [r7, #4]
 8003866:	f7fd fbd1 	bl	800100c <HAL_SD_MspInit>
#endif /* USE_HAL_SD_REGISTER_CALLBACKS */
  }

  hsd->State = HAL_SD_STATE_BUSY;
 800386a:	687b      	ldr	r3, [r7, #4]
 800386c:	2203      	movs	r2, #3
 800386e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  /* Initialize the Card parameters */
  if (HAL_SD_InitCard(hsd) != HAL_OK)
 8003872:	6878      	ldr	r0, [r7, #4]
 8003874:	f000 f814 	bl	80038a0 <HAL_SD_InitCard>
 8003878:	4603      	mov	r3, r0
 800387a:	2b00      	cmp	r3, #0
 800387c:	d001      	beq.n	8003882 <HAL_SD_Init+0x42>
  {
    return HAL_ERROR;
 800387e:	2301      	movs	r3, #1
 8003880:	e00a      	b.n	8003898 <HAL_SD_Init+0x58>
  }

  /* Initialize the error code */
  hsd->ErrorCode = HAL_SD_ERROR_NONE;
 8003882:	687b      	ldr	r3, [r7, #4]
 8003884:	2200      	movs	r2, #0
 8003886:	639a      	str	r2, [r3, #56]	; 0x38

  /* Initialize the SD operation */
  hsd->Context = SD_CONTEXT_NONE;
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	2200      	movs	r2, #0
 800388c:	631a      	str	r2, [r3, #48]	; 0x30

  /* Initialize the SD state */
  hsd->State = HAL_SD_STATE_READY;
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	2201      	movs	r2, #1
 8003892:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  return HAL_OK;
 8003896:	2300      	movs	r3, #0
}
 8003898:	4618      	mov	r0, r3
 800389a:	3708      	adds	r7, #8
 800389c:	46bd      	mov	sp, r7
 800389e:	bd80      	pop	{r7, pc}

080038a0 <HAL_SD_InitCard>:
  * @note   This function initializes the SD card. It could be used when a card
            re-initialization is needed.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_InitCard(SD_HandleTypeDef *hsd)
{
 80038a0:	b5b0      	push	{r4, r5, r7, lr}
 80038a2:	b08e      	sub	sp, #56	; 0x38
 80038a4:	af04      	add	r7, sp, #16
 80038a6:	6078      	str	r0, [r7, #4]
  uint32_t errorstate;
  HAL_StatusTypeDef status;
  SD_InitTypeDef Init;
  
  /* Default SDIO peripheral configuration for SD card initialization */
  Init.ClockEdge           = SDIO_CLOCK_EDGE_RISING;
 80038a8:	2300      	movs	r3, #0
 80038aa:	60bb      	str	r3, [r7, #8]
  Init.ClockBypass         = SDIO_CLOCK_BYPASS_DISABLE;
 80038ac:	2300      	movs	r3, #0
 80038ae:	60fb      	str	r3, [r7, #12]
  Init.ClockPowerSave      = SDIO_CLOCK_POWER_SAVE_DISABLE;
 80038b0:	2300      	movs	r3, #0
 80038b2:	613b      	str	r3, [r7, #16]
  Init.BusWide             = SDIO_BUS_WIDE_1B;
 80038b4:	2300      	movs	r3, #0
 80038b6:	617b      	str	r3, [r7, #20]
  Init.HardwareFlowControl = SDIO_HARDWARE_FLOW_CONTROL_DISABLE;
 80038b8:	2300      	movs	r3, #0
 80038ba:	61bb      	str	r3, [r7, #24]
  Init.ClockDiv            = SDIO_INIT_CLK_DIV;
 80038bc:	2376      	movs	r3, #118	; 0x76
 80038be:	61fb      	str	r3, [r7, #28]

  /* Initialize SDIO peripheral interface with default configuration */
  status = SDIO_Init(hsd->Instance, Init);
 80038c0:	687b      	ldr	r3, [r7, #4]
 80038c2:	681d      	ldr	r5, [r3, #0]
 80038c4:	466c      	mov	r4, sp
 80038c6:	f107 0314 	add.w	r3, r7, #20
 80038ca:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80038ce:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80038d2:	f107 0308 	add.w	r3, r7, #8
 80038d6:	cb0e      	ldmia	r3, {r1, r2, r3}
 80038d8:	4628      	mov	r0, r5
 80038da:	f001 fdc1 	bl	8005460 <SDIO_Init>
 80038de:	4603      	mov	r3, r0
 80038e0:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
  if(status != HAL_OK)
 80038e4:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80038e8:	2b00      	cmp	r3, #0
 80038ea:	d001      	beq.n	80038f0 <HAL_SD_InitCard+0x50>
  {
    return HAL_ERROR;
 80038ec:	2301      	movs	r3, #1
 80038ee:	e031      	b.n	8003954 <HAL_SD_InitCard+0xb4>
  }

  /* Disable SDIO Clock */
  __HAL_SD_DISABLE(hsd);
 80038f0:	4b1a      	ldr	r3, [pc, #104]	; (800395c <HAL_SD_InitCard+0xbc>)
 80038f2:	2200      	movs	r2, #0
 80038f4:	601a      	str	r2, [r3, #0]

  /* Set Power State to ON */
  (void)SDIO_PowerState_ON(hsd->Instance);
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	681b      	ldr	r3, [r3, #0]
 80038fa:	4618      	mov	r0, r3
 80038fc:	f001 fdf9 	bl	80054f2 <SDIO_PowerState_ON>

  /* Enable SDIO Clock */
  __HAL_SD_ENABLE(hsd);
 8003900:	4b16      	ldr	r3, [pc, #88]	; (800395c <HAL_SD_InitCard+0xbc>)
 8003902:	2201      	movs	r2, #1
 8003904:	601a      	str	r2, [r3, #0]

  /* Identify card operating voltage */
  errorstate = SD_PowerON(hsd);
 8003906:	6878      	ldr	r0, [r7, #4]
 8003908:	f000 fe84 	bl	8004614 <SD_PowerON>
 800390c:	6238      	str	r0, [r7, #32]
  if(errorstate != HAL_SD_ERROR_NONE)
 800390e:	6a3b      	ldr	r3, [r7, #32]
 8003910:	2b00      	cmp	r3, #0
 8003912:	d00b      	beq.n	800392c <HAL_SD_InitCard+0x8c>
  {
    hsd->State = HAL_SD_STATE_READY;
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	2201      	movs	r2, #1
 8003918:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    hsd->ErrorCode |= errorstate;
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003920:	6a3b      	ldr	r3, [r7, #32]
 8003922:	431a      	orrs	r2, r3
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 8003928:	2301      	movs	r3, #1
 800392a:	e013      	b.n	8003954 <HAL_SD_InitCard+0xb4>
  }

  /* Card initialization */
  errorstate = SD_InitCard(hsd);
 800392c:	6878      	ldr	r0, [r7, #4]
 800392e:	f000 fda3 	bl	8004478 <SD_InitCard>
 8003932:	6238      	str	r0, [r7, #32]
  if(errorstate != HAL_SD_ERROR_NONE)
 8003934:	6a3b      	ldr	r3, [r7, #32]
 8003936:	2b00      	cmp	r3, #0
 8003938:	d00b      	beq.n	8003952 <HAL_SD_InitCard+0xb2>
  {
    hsd->State = HAL_SD_STATE_READY;
 800393a:	687b      	ldr	r3, [r7, #4]
 800393c:	2201      	movs	r2, #1
 800393e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    hsd->ErrorCode |= errorstate;
 8003942:	687b      	ldr	r3, [r7, #4]
 8003944:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003946:	6a3b      	ldr	r3, [r7, #32]
 8003948:	431a      	orrs	r2, r3
 800394a:	687b      	ldr	r3, [r7, #4]
 800394c:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 800394e:	2301      	movs	r3, #1
 8003950:	e000      	b.n	8003954 <HAL_SD_InitCard+0xb4>
  }

  return HAL_OK;
 8003952:	2300      	movs	r3, #0
}
 8003954:	4618      	mov	r0, r3
 8003956:	3728      	adds	r7, #40	; 0x28
 8003958:	46bd      	mov	sp, r7
 800395a:	bdb0      	pop	{r4, r5, r7, pc}
 800395c:	422580a0 	.word	0x422580a0

08003960 <HAL_SD_ReadBlocks>:
  * @param  NumberOfBlocks: Number of SD blocks to read
  * @param  Timeout: Specify timeout value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_ReadBlocks(SD_HandleTypeDef *hsd, uint8_t *pData, uint32_t BlockAdd, uint32_t NumberOfBlocks, uint32_t Timeout)
{
 8003960:	b580      	push	{r7, lr}
 8003962:	b092      	sub	sp, #72	; 0x48
 8003964:	af00      	add	r7, sp, #0
 8003966:	60f8      	str	r0, [r7, #12]
 8003968:	60b9      	str	r1, [r7, #8]
 800396a:	607a      	str	r2, [r7, #4]
 800396c:	603b      	str	r3, [r7, #0]
  SDIO_DataInitTypeDef config;
  uint32_t errorstate;
  uint32_t tickstart = HAL_GetTick();
 800396e:	f7fd fe05 	bl	800157c <HAL_GetTick>
 8003972:	6338      	str	r0, [r7, #48]	; 0x30
  uint32_t count, data, dataremaining;
  uint32_t add = BlockAdd;
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	63bb      	str	r3, [r7, #56]	; 0x38
  uint8_t *tempbuff = pData;
 8003978:	68bb      	ldr	r3, [r7, #8]
 800397a:	637b      	str	r3, [r7, #52]	; 0x34

  if(NULL == pData)
 800397c:	68bb      	ldr	r3, [r7, #8]
 800397e:	2b00      	cmp	r3, #0
 8003980:	d107      	bne.n	8003992 <HAL_SD_ReadBlocks+0x32>
  {
    hsd->ErrorCode |= HAL_SD_ERROR_PARAM;
 8003982:	68fb      	ldr	r3, [r7, #12]
 8003984:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003986:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 800398a:	68fb      	ldr	r3, [r7, #12]
 800398c:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 800398e:	2301      	movs	r3, #1
 8003990:	e1d9      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
  }

  if(hsd->State == HAL_SD_STATE_READY)
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003998:	b2db      	uxtb	r3, r3
 800399a:	2b01      	cmp	r3, #1
 800399c:	f040 81cc 	bne.w	8003d38 <HAL_SD_ReadBlocks+0x3d8>
  {
    hsd->ErrorCode = HAL_SD_ERROR_NONE;
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	2200      	movs	r2, #0
 80039a4:	639a      	str	r2, [r3, #56]	; 0x38

    if((add + NumberOfBlocks) > (hsd->SdCard.LogBlockNbr))
 80039a6:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80039a8:	683b      	ldr	r3, [r7, #0]
 80039aa:	441a      	add	r2, r3
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80039b0:	429a      	cmp	r2, r3
 80039b2:	d907      	bls.n	80039c4 <HAL_SD_ReadBlocks+0x64>
    {
      hsd->ErrorCode |= HAL_SD_ERROR_ADDR_OUT_OF_RANGE;
 80039b4:	68fb      	ldr	r3, [r7, #12]
 80039b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80039b8:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 80039bc:	68fb      	ldr	r3, [r7, #12]
 80039be:	639a      	str	r2, [r3, #56]	; 0x38
      return HAL_ERROR;
 80039c0:	2301      	movs	r3, #1
 80039c2:	e1c0      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    }

    hsd->State = HAL_SD_STATE_BUSY;
 80039c4:	68fb      	ldr	r3, [r7, #12]
 80039c6:	2203      	movs	r2, #3
 80039c8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Initialize data control register */
    hsd->Instance->DCTRL = 0U;
 80039cc:	68fb      	ldr	r3, [r7, #12]
 80039ce:	681b      	ldr	r3, [r3, #0]
 80039d0:	2200      	movs	r2, #0
 80039d2:	62da      	str	r2, [r3, #44]	; 0x2c

    if(hsd->SdCard.CardType != CARD_SDHC_SDXC)
 80039d4:	68fb      	ldr	r3, [r7, #12]
 80039d6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80039d8:	2b01      	cmp	r3, #1
 80039da:	d002      	beq.n	80039e2 <HAL_SD_ReadBlocks+0x82>
    {
      add *= 512U;
 80039dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80039de:	025b      	lsls	r3, r3, #9
 80039e0:	63bb      	str	r3, [r7, #56]	; 0x38
    }

    /* Set Block Size for Card */
    errorstate = SDMMC_CmdBlockLength(hsd->Instance, BLOCKSIZE);
 80039e2:	68fb      	ldr	r3, [r7, #12]
 80039e4:	681b      	ldr	r3, [r3, #0]
 80039e6:	f44f 7100 	mov.w	r1, #512	; 0x200
 80039ea:	4618      	mov	r0, r3
 80039ec:	f001 fe14 	bl	8005618 <SDMMC_CmdBlockLength>
 80039f0:	6478      	str	r0, [r7, #68]	; 0x44
    if(errorstate != HAL_SD_ERROR_NONE)
 80039f2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80039f4:	2b00      	cmp	r3, #0
 80039f6:	d00f      	beq.n	8003a18 <HAL_SD_ReadBlocks+0xb8>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 80039f8:	68fb      	ldr	r3, [r7, #12]
 80039fa:	681b      	ldr	r3, [r3, #0]
 80039fc:	4a9b      	ldr	r2, [pc, #620]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 80039fe:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= errorstate;
 8003a00:	68fb      	ldr	r3, [r7, #12]
 8003a02:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a04:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003a06:	431a      	orrs	r2, r3
 8003a08:	68fb      	ldr	r3, [r7, #12]
 8003a0a:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	2201      	movs	r2, #1
 8003a10:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      return HAL_ERROR;
 8003a14:	2301      	movs	r3, #1
 8003a16:	e196      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    }

    /* Configure the SD DPSM (Data Path State Machine) */
    config.DataTimeOut   = SDMMC_DATATIMEOUT;
 8003a18:	f04f 33ff 	mov.w	r3, #4294967295
 8003a1c:	617b      	str	r3, [r7, #20]
    config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 8003a1e:	683b      	ldr	r3, [r7, #0]
 8003a20:	025b      	lsls	r3, r3, #9
 8003a22:	61bb      	str	r3, [r7, #24]
    config.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 8003a24:	2390      	movs	r3, #144	; 0x90
 8003a26:	61fb      	str	r3, [r7, #28]
    config.TransferDir   = SDIO_TRANSFER_DIR_TO_SDIO;
 8003a28:	2302      	movs	r3, #2
 8003a2a:	623b      	str	r3, [r7, #32]
    config.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 8003a2c:	2300      	movs	r3, #0
 8003a2e:	627b      	str	r3, [r7, #36]	; 0x24
    config.DPSM          = SDIO_DPSM_ENABLE;
 8003a30:	2301      	movs	r3, #1
 8003a32:	62bb      	str	r3, [r7, #40]	; 0x28
    (void)SDIO_ConfigData(hsd->Instance, &config);
 8003a34:	68fb      	ldr	r3, [r7, #12]
 8003a36:	681b      	ldr	r3, [r3, #0]
 8003a38:	f107 0214 	add.w	r2, r7, #20
 8003a3c:	4611      	mov	r1, r2
 8003a3e:	4618      	mov	r0, r3
 8003a40:	f001 fdbe 	bl	80055c0 <SDIO_ConfigData>

    /* Read block(s) in polling mode */
    if(NumberOfBlocks > 1U)
 8003a44:	683b      	ldr	r3, [r7, #0]
 8003a46:	2b01      	cmp	r3, #1
 8003a48:	d90a      	bls.n	8003a60 <HAL_SD_ReadBlocks+0x100>
    {
      hsd->Context = SD_CONTEXT_READ_MULTIPLE_BLOCK;
 8003a4a:	68fb      	ldr	r3, [r7, #12]
 8003a4c:	2202      	movs	r2, #2
 8003a4e:	631a      	str	r2, [r3, #48]	; 0x30

      /* Read Multi Block command */
      errorstate = SDMMC_CmdReadMultiBlock(hsd->Instance, add);
 8003a50:	68fb      	ldr	r3, [r7, #12]
 8003a52:	681b      	ldr	r3, [r3, #0]
 8003a54:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003a56:	4618      	mov	r0, r3
 8003a58:	f001 fe22 	bl	80056a0 <SDMMC_CmdReadMultiBlock>
 8003a5c:	6478      	str	r0, [r7, #68]	; 0x44
 8003a5e:	e009      	b.n	8003a74 <HAL_SD_ReadBlocks+0x114>
    }
    else
    {
      hsd->Context = SD_CONTEXT_READ_SINGLE_BLOCK;
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	2201      	movs	r2, #1
 8003a64:	631a      	str	r2, [r3, #48]	; 0x30

      /* Read Single Block command */
      errorstate = SDMMC_CmdReadSingleBlock(hsd->Instance, add);
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	681b      	ldr	r3, [r3, #0]
 8003a6a:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003a6c:	4618      	mov	r0, r3
 8003a6e:	f001 fdf5 	bl	800565c <SDMMC_CmdReadSingleBlock>
 8003a72:	6478      	str	r0, [r7, #68]	; 0x44
    }
    if(errorstate != HAL_SD_ERROR_NONE)
 8003a74:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003a76:	2b00      	cmp	r3, #0
 8003a78:	d012      	beq.n	8003aa0 <HAL_SD_ReadBlocks+0x140>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003a7a:	68fb      	ldr	r3, [r7, #12]
 8003a7c:	681b      	ldr	r3, [r3, #0]
 8003a7e:	4a7b      	ldr	r2, [pc, #492]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003a80:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= errorstate;
 8003a82:	68fb      	ldr	r3, [r7, #12]
 8003a84:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003a86:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003a88:	431a      	orrs	r2, r3
 8003a8a:	68fb      	ldr	r3, [r7, #12]
 8003a8c:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003a8e:	68fb      	ldr	r3, [r7, #12]
 8003a90:	2201      	movs	r2, #1
 8003a92:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003a96:	68fb      	ldr	r3, [r7, #12]
 8003a98:	2200      	movs	r2, #0
 8003a9a:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003a9c:	2301      	movs	r3, #1
 8003a9e:	e152      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    }

    /* Poll on SDIO flags */
    dataremaining = config.DataLength;
 8003aa0:	69bb      	ldr	r3, [r7, #24]
 8003aa2:	63fb      	str	r3, [r7, #60]	; 0x3c
#if defined(SDIO_STA_STBITERR)
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND | SDIO_FLAG_STBITERR))
 8003aa4:	e061      	b.n	8003b6a <HAL_SD_ReadBlocks+0x20a>
#else /* SDIO_STA_STBITERR not defined */
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND))
#endif /* SDIO_STA_STBITERR */
    {
      if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXFIFOHF) && (dataremaining > 0U))
 8003aa6:	68fb      	ldr	r3, [r7, #12]
 8003aa8:	681b      	ldr	r3, [r3, #0]
 8003aaa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003aac:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d03c      	beq.n	8003b2e <HAL_SD_ReadBlocks+0x1ce>
 8003ab4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003ab6:	2b00      	cmp	r3, #0
 8003ab8:	d039      	beq.n	8003b2e <HAL_SD_ReadBlocks+0x1ce>
      {
        /* Read data from SDIO Rx FIFO */
        for(count = 0U; count < 8U; count++)
 8003aba:	2300      	movs	r3, #0
 8003abc:	643b      	str	r3, [r7, #64]	; 0x40
 8003abe:	e033      	b.n	8003b28 <HAL_SD_ReadBlocks+0x1c8>
        {
          data = SDIO_ReadFIFO(hsd->Instance);
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	4618      	mov	r0, r3
 8003ac6:	f001 fcf6 	bl	80054b6 <SDIO_ReadFIFO>
 8003aca:	62f8      	str	r0, [r7, #44]	; 0x2c
          *tempbuff = (uint8_t)(data & 0xFFU);
 8003acc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ace:	b2da      	uxtb	r2, r3
 8003ad0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ad2:	701a      	strb	r2, [r3, #0]
          tempbuff++;
 8003ad4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ad6:	3301      	adds	r3, #1
 8003ad8:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003ada:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003adc:	3b01      	subs	r3, #1
 8003ade:	63fb      	str	r3, [r7, #60]	; 0x3c
          *tempbuff = (uint8_t)((data >> 8U) & 0xFFU);
 8003ae0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ae2:	0a1b      	lsrs	r3, r3, #8
 8003ae4:	b2da      	uxtb	r2, r3
 8003ae6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ae8:	701a      	strb	r2, [r3, #0]
          tempbuff++;
 8003aea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003aec:	3301      	adds	r3, #1
 8003aee:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003af0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003af2:	3b01      	subs	r3, #1
 8003af4:	63fb      	str	r3, [r7, #60]	; 0x3c
          *tempbuff = (uint8_t)((data >> 16U) & 0xFFU);
 8003af6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003af8:	0c1b      	lsrs	r3, r3, #16
 8003afa:	b2da      	uxtb	r2, r3
 8003afc:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003afe:	701a      	strb	r2, [r3, #0]
          tempbuff++;
 8003b00:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003b02:	3301      	adds	r3, #1
 8003b04:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003b06:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003b08:	3b01      	subs	r3, #1
 8003b0a:	63fb      	str	r3, [r7, #60]	; 0x3c
          *tempbuff = (uint8_t)((data >> 24U) & 0xFFU);
 8003b0c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003b0e:	0e1b      	lsrs	r3, r3, #24
 8003b10:	b2da      	uxtb	r2, r3
 8003b12:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003b14:	701a      	strb	r2, [r3, #0]
          tempbuff++;
 8003b16:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003b18:	3301      	adds	r3, #1
 8003b1a:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003b1c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003b1e:	3b01      	subs	r3, #1
 8003b20:	63fb      	str	r3, [r7, #60]	; 0x3c
        for(count = 0U; count < 8U; count++)
 8003b22:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003b24:	3301      	adds	r3, #1
 8003b26:	643b      	str	r3, [r7, #64]	; 0x40
 8003b28:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003b2a:	2b07      	cmp	r3, #7
 8003b2c:	d9c8      	bls.n	8003ac0 <HAL_SD_ReadBlocks+0x160>
        }
      }

      if(((HAL_GetTick()-tickstart) >=  Timeout) || (Timeout == 0U))
 8003b2e:	f7fd fd25 	bl	800157c <HAL_GetTick>
 8003b32:	4602      	mov	r2, r0
 8003b34:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003b36:	1ad3      	subs	r3, r2, r3
 8003b38:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8003b3a:	429a      	cmp	r2, r3
 8003b3c:	d902      	bls.n	8003b44 <HAL_SD_ReadBlocks+0x1e4>
 8003b3e:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	d112      	bne.n	8003b6a <HAL_SD_ReadBlocks+0x20a>
      {
        /* Clear all the static flags */
        __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003b44:	68fb      	ldr	r3, [r7, #12]
 8003b46:	681b      	ldr	r3, [r3, #0]
 8003b48:	4a48      	ldr	r2, [pc, #288]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003b4a:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->ErrorCode |= HAL_SD_ERROR_TIMEOUT;
 8003b4c:	68fb      	ldr	r3, [r7, #12]
 8003b4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b50:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8003b54:	68fb      	ldr	r3, [r7, #12]
 8003b56:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->State= HAL_SD_STATE_READY;
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	2201      	movs	r2, #1
 8003b5c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        hsd->Context = SD_CONTEXT_NONE;
 8003b60:	68fb      	ldr	r3, [r7, #12]
 8003b62:	2200      	movs	r2, #0
 8003b64:	631a      	str	r2, [r3, #48]	; 0x30
        return HAL_TIMEOUT;
 8003b66:	2303      	movs	r3, #3
 8003b68:	e0ed      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXOVERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND | SDIO_FLAG_STBITERR))
 8003b6a:	68fb      	ldr	r3, [r7, #12]
 8003b6c:	681b      	ldr	r3, [r3, #0]
 8003b6e:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003b70:	f240 332a 	movw	r3, #810	; 0x32a
 8003b74:	4013      	ands	r3, r2
 8003b76:	2b00      	cmp	r3, #0
 8003b78:	d095      	beq.n	8003aa6 <HAL_SD_ReadBlocks+0x146>
      }
    }
    
    /* Send stop transmission command in case of multiblock read */
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DATAEND) && (NumberOfBlocks > 1U))
 8003b7a:	68fb      	ldr	r3, [r7, #12]
 8003b7c:	681b      	ldr	r3, [r3, #0]
 8003b7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003b80:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003b84:	2b00      	cmp	r3, #0
 8003b86:	d022      	beq.n	8003bce <HAL_SD_ReadBlocks+0x26e>
 8003b88:	683b      	ldr	r3, [r7, #0]
 8003b8a:	2b01      	cmp	r3, #1
 8003b8c:	d91f      	bls.n	8003bce <HAL_SD_ReadBlocks+0x26e>
    {
      if(hsd->SdCard.CardType != CARD_SECURED)
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003b92:	2b03      	cmp	r3, #3
 8003b94:	d01b      	beq.n	8003bce <HAL_SD_ReadBlocks+0x26e>
      {
        /* Send stop transmission command */
        errorstate = SDMMC_CmdStopTransfer(hsd->Instance);
 8003b96:	68fb      	ldr	r3, [r7, #12]
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	4618      	mov	r0, r3
 8003b9c:	f001 fde6 	bl	800576c <SDMMC_CmdStopTransfer>
 8003ba0:	6478      	str	r0, [r7, #68]	; 0x44
        if(errorstate != HAL_SD_ERROR_NONE)
 8003ba2:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003ba4:	2b00      	cmp	r3, #0
 8003ba6:	d012      	beq.n	8003bce <HAL_SD_ReadBlocks+0x26e>
        {
          /* Clear all the static flags */
          __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003ba8:	68fb      	ldr	r3, [r7, #12]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	4a2f      	ldr	r2, [pc, #188]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003bae:	639a      	str	r2, [r3, #56]	; 0x38
          hsd->ErrorCode |= errorstate;
 8003bb0:	68fb      	ldr	r3, [r7, #12]
 8003bb2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003bb4:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003bb6:	431a      	orrs	r2, r3
 8003bb8:	68fb      	ldr	r3, [r7, #12]
 8003bba:	639a      	str	r2, [r3, #56]	; 0x38
          hsd->State = HAL_SD_STATE_READY;
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	2201      	movs	r2, #1
 8003bc0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          hsd->Context = SD_CONTEXT_NONE;
 8003bc4:	68fb      	ldr	r3, [r7, #12]
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	631a      	str	r2, [r3, #48]	; 0x30
          return HAL_ERROR;
 8003bca:	2301      	movs	r3, #1
 8003bcc:	e0bb      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
        }
      }
    }

    /* Get error state */
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 8003bce:	68fb      	ldr	r3, [r7, #12]
 8003bd0:	681b      	ldr	r3, [r3, #0]
 8003bd2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003bd4:	f003 0308 	and.w	r3, r3, #8
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d012      	beq.n	8003c02 <HAL_SD_ReadBlocks+0x2a2>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003bdc:	68fb      	ldr	r3, [r7, #12]
 8003bde:	681b      	ldr	r3, [r3, #0]
 8003be0:	4a22      	ldr	r2, [pc, #136]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003be2:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_TIMEOUT;
 8003be4:	68fb      	ldr	r3, [r7, #12]
 8003be6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003be8:	f043 0208 	orr.w	r2, r3, #8
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003bf0:	68fb      	ldr	r3, [r7, #12]
 8003bf2:	2201      	movs	r2, #1
 8003bf4:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	2200      	movs	r2, #0
 8003bfc:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003bfe:	2301      	movs	r3, #1
 8003c00:	e0a1      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    }
    else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 8003c02:	68fb      	ldr	r3, [r7, #12]
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c08:	f003 0302 	and.w	r3, r3, #2
 8003c0c:	2b00      	cmp	r3, #0
 8003c0e:	d012      	beq.n	8003c36 <HAL_SD_ReadBlocks+0x2d6>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003c10:	68fb      	ldr	r3, [r7, #12]
 8003c12:	681b      	ldr	r3, [r3, #0]
 8003c14:	4a15      	ldr	r2, [pc, #84]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003c16:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_CRC_FAIL;
 8003c18:	68fb      	ldr	r3, [r7, #12]
 8003c1a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c1c:	f043 0202 	orr.w	r2, r3, #2
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	2201      	movs	r2, #1
 8003c28:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003c2c:	68fb      	ldr	r3, [r7, #12]
 8003c2e:	2200      	movs	r2, #0
 8003c30:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003c32:	2301      	movs	r3, #1
 8003c34:	e087      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    }
    else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXOVERR))
 8003c36:	68fb      	ldr	r3, [r7, #12]
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003c3c:	f003 0320 	and.w	r3, r3, #32
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	d064      	beq.n	8003d0e <HAL_SD_ReadBlocks+0x3ae>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003c44:	68fb      	ldr	r3, [r7, #12]
 8003c46:	681b      	ldr	r3, [r3, #0]
 8003c48:	4a08      	ldr	r2, [pc, #32]	; (8003c6c <HAL_SD_ReadBlocks+0x30c>)
 8003c4a:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_RX_OVERRUN;
 8003c4c:	68fb      	ldr	r3, [r7, #12]
 8003c4e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c50:	f043 0220 	orr.w	r2, r3, #32
 8003c54:	68fb      	ldr	r3, [r7, #12]
 8003c56:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003c58:	68fb      	ldr	r3, [r7, #12]
 8003c5a:	2201      	movs	r2, #1
 8003c5c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003c60:	68fb      	ldr	r3, [r7, #12]
 8003c62:	2200      	movs	r2, #0
 8003c64:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003c66:	2301      	movs	r3, #1
 8003c68:	e06d      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
 8003c6a:	bf00      	nop
 8003c6c:	004005ff 	.word	0x004005ff
    }

    /* Empty FIFO if there is still any data */
    while ((__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXDAVL)) && (dataremaining > 0U))
    {
      data = SDIO_ReadFIFO(hsd->Instance);
 8003c70:	68fb      	ldr	r3, [r7, #12]
 8003c72:	681b      	ldr	r3, [r3, #0]
 8003c74:	4618      	mov	r0, r3
 8003c76:	f001 fc1e 	bl	80054b6 <SDIO_ReadFIFO>
 8003c7a:	62f8      	str	r0, [r7, #44]	; 0x2c
      *tempbuff = (uint8_t)(data & 0xFFU);
 8003c7c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c7e:	b2da      	uxtb	r2, r3
 8003c80:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c82:	701a      	strb	r2, [r3, #0]
      tempbuff++;
 8003c84:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c86:	3301      	adds	r3, #1
 8003c88:	637b      	str	r3, [r7, #52]	; 0x34
      dataremaining--;
 8003c8a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003c8c:	3b01      	subs	r3, #1
 8003c8e:	63fb      	str	r3, [r7, #60]	; 0x3c
      *tempbuff = (uint8_t)((data >> 8U) & 0xFFU);
 8003c90:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003c92:	0a1b      	lsrs	r3, r3, #8
 8003c94:	b2da      	uxtb	r2, r3
 8003c96:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c98:	701a      	strb	r2, [r3, #0]
      tempbuff++;
 8003c9a:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003c9c:	3301      	adds	r3, #1
 8003c9e:	637b      	str	r3, [r7, #52]	; 0x34
      dataremaining--;
 8003ca0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003ca2:	3b01      	subs	r3, #1
 8003ca4:	63fb      	str	r3, [r7, #60]	; 0x3c
      *tempbuff = (uint8_t)((data >> 16U) & 0xFFU);
 8003ca6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003ca8:	0c1b      	lsrs	r3, r3, #16
 8003caa:	b2da      	uxtb	r2, r3
 8003cac:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cae:	701a      	strb	r2, [r3, #0]
      tempbuff++;
 8003cb0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cb2:	3301      	adds	r3, #1
 8003cb4:	637b      	str	r3, [r7, #52]	; 0x34
      dataremaining--;
 8003cb6:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003cb8:	3b01      	subs	r3, #1
 8003cba:	63fb      	str	r3, [r7, #60]	; 0x3c
      *tempbuff = (uint8_t)((data >> 24U) & 0xFFU);
 8003cbc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8003cbe:	0e1b      	lsrs	r3, r3, #24
 8003cc0:	b2da      	uxtb	r2, r3
 8003cc2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cc4:	701a      	strb	r2, [r3, #0]
      tempbuff++;
 8003cc6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003cc8:	3301      	adds	r3, #1
 8003cca:	637b      	str	r3, [r7, #52]	; 0x34
      dataremaining--;
 8003ccc:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003cce:	3b01      	subs	r3, #1
 8003cd0:	63fb      	str	r3, [r7, #60]	; 0x3c

      if(((HAL_GetTick()-tickstart) >=  Timeout) || (Timeout == 0U))
 8003cd2:	f7fd fc53 	bl	800157c <HAL_GetTick>
 8003cd6:	4602      	mov	r2, r0
 8003cd8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003cda:	1ad3      	subs	r3, r2, r3
 8003cdc:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8003cde:	429a      	cmp	r2, r3
 8003ce0:	d902      	bls.n	8003ce8 <HAL_SD_ReadBlocks+0x388>
 8003ce2:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d112      	bne.n	8003d0e <HAL_SD_ReadBlocks+0x3ae>
      {
        /* Clear all the static flags */
        __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003ce8:	68fb      	ldr	r3, [r7, #12]
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	4a18      	ldr	r2, [pc, #96]	; (8003d50 <HAL_SD_ReadBlocks+0x3f0>)
 8003cee:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->ErrorCode |= HAL_SD_ERROR_TIMEOUT;
 8003cf0:	68fb      	ldr	r3, [r7, #12]
 8003cf2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003cf4:	f043 4200 	orr.w	r2, r3, #2147483648	; 0x80000000
 8003cf8:	68fb      	ldr	r3, [r7, #12]
 8003cfa:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->State= HAL_SD_STATE_READY;
 8003cfc:	68fb      	ldr	r3, [r7, #12]
 8003cfe:	2201      	movs	r2, #1
 8003d00:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        hsd->Context = SD_CONTEXT_NONE;
 8003d04:	68fb      	ldr	r3, [r7, #12]
 8003d06:	2200      	movs	r2, #0
 8003d08:	631a      	str	r2, [r3, #48]	; 0x30
        return HAL_ERROR;
 8003d0a:	2301      	movs	r3, #1
 8003d0c:	e01b      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
    while ((__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_RXDAVL)) && (dataremaining > 0U))
 8003d0e:	68fb      	ldr	r3, [r7, #12]
 8003d10:	681b      	ldr	r3, [r3, #0]
 8003d12:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003d14:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8003d18:	2b00      	cmp	r3, #0
 8003d1a:	d002      	beq.n	8003d22 <HAL_SD_ReadBlocks+0x3c2>
 8003d1c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003d1e:	2b00      	cmp	r3, #0
 8003d20:	d1a6      	bne.n	8003c70 <HAL_SD_ReadBlocks+0x310>
      }
    }

    /* Clear all the static flags */
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS);
 8003d22:	68fb      	ldr	r3, [r7, #12]
 8003d24:	681b      	ldr	r3, [r3, #0]
 8003d26:	f240 523a 	movw	r2, #1338	; 0x53a
 8003d2a:	639a      	str	r2, [r3, #56]	; 0x38

    hsd->State = HAL_SD_STATE_READY;
 8003d2c:	68fb      	ldr	r3, [r7, #12]
 8003d2e:	2201      	movs	r2, #1
 8003d30:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    return HAL_OK;
 8003d34:	2300      	movs	r3, #0
 8003d36:	e006      	b.n	8003d46 <HAL_SD_ReadBlocks+0x3e6>
  }
  else
  {
    hsd->ErrorCode |= HAL_SD_ERROR_BUSY;
 8003d38:	68fb      	ldr	r3, [r7, #12]
 8003d3a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d3c:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 8003d44:	2301      	movs	r3, #1
  }
}
 8003d46:	4618      	mov	r0, r3
 8003d48:	3748      	adds	r7, #72	; 0x48
 8003d4a:	46bd      	mov	sp, r7
 8003d4c:	bd80      	pop	{r7, pc}
 8003d4e:	bf00      	nop
 8003d50:	004005ff 	.word	0x004005ff

08003d54 <HAL_SD_WriteBlocks>:
  * @param  NumberOfBlocks: Number of SD blocks to write
  * @param  Timeout: Specify timeout value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_WriteBlocks(SD_HandleTypeDef *hsd, uint8_t *pData, uint32_t BlockAdd, uint32_t NumberOfBlocks, uint32_t Timeout)
{
 8003d54:	b580      	push	{r7, lr}
 8003d56:	b092      	sub	sp, #72	; 0x48
 8003d58:	af00      	add	r7, sp, #0
 8003d5a:	60f8      	str	r0, [r7, #12]
 8003d5c:	60b9      	str	r1, [r7, #8]
 8003d5e:	607a      	str	r2, [r7, #4]
 8003d60:	603b      	str	r3, [r7, #0]
  SDIO_DataInitTypeDef config;
  uint32_t errorstate;
  uint32_t tickstart = HAL_GetTick();
 8003d62:	f7fd fc0b 	bl	800157c <HAL_GetTick>
 8003d66:	6338      	str	r0, [r7, #48]	; 0x30
  uint32_t count, data, dataremaining;
  uint32_t add = BlockAdd;
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	63bb      	str	r3, [r7, #56]	; 0x38
  uint8_t *tempbuff = pData;
 8003d6c:	68bb      	ldr	r3, [r7, #8]
 8003d6e:	637b      	str	r3, [r7, #52]	; 0x34

  if(NULL == pData)
 8003d70:	68bb      	ldr	r3, [r7, #8]
 8003d72:	2b00      	cmp	r3, #0
 8003d74:	d107      	bne.n	8003d86 <HAL_SD_WriteBlocks+0x32>
  {
    hsd->ErrorCode |= HAL_SD_ERROR_PARAM;
 8003d76:	68fb      	ldr	r3, [r7, #12]
 8003d78:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003d7a:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 8003d7e:	68fb      	ldr	r3, [r7, #12]
 8003d80:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 8003d82:	2301      	movs	r3, #1
 8003d84:	e184      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
  }

  if(hsd->State == HAL_SD_STATE_READY)
 8003d86:	68fb      	ldr	r3, [r7, #12]
 8003d88:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8003d8c:	b2db      	uxtb	r3, r3
 8003d8e:	2b01      	cmp	r3, #1
 8003d90:	f040 8177 	bne.w	8004082 <HAL_SD_WriteBlocks+0x32e>
  {
    hsd->ErrorCode = HAL_SD_ERROR_NONE;
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	2200      	movs	r2, #0
 8003d98:	639a      	str	r2, [r3, #56]	; 0x38

    if((add + NumberOfBlocks) > (hsd->SdCard.LogBlockNbr))
 8003d9a:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8003d9c:	683b      	ldr	r3, [r7, #0]
 8003d9e:	441a      	add	r2, r3
 8003da0:	68fb      	ldr	r3, [r7, #12]
 8003da2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8003da4:	429a      	cmp	r2, r3
 8003da6:	d907      	bls.n	8003db8 <HAL_SD_WriteBlocks+0x64>
    {
      hsd->ErrorCode |= HAL_SD_ERROR_ADDR_OUT_OF_RANGE;
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003dac:	f043 7200 	orr.w	r2, r3, #33554432	; 0x2000000
 8003db0:	68fb      	ldr	r3, [r7, #12]
 8003db2:	639a      	str	r2, [r3, #56]	; 0x38
      return HAL_ERROR;
 8003db4:	2301      	movs	r3, #1
 8003db6:	e16b      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    }

    hsd->State = HAL_SD_STATE_BUSY;
 8003db8:	68fb      	ldr	r3, [r7, #12]
 8003dba:	2203      	movs	r2, #3
 8003dbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    /* Initialize data control register */
    hsd->Instance->DCTRL = 0U;
 8003dc0:	68fb      	ldr	r3, [r7, #12]
 8003dc2:	681b      	ldr	r3, [r3, #0]
 8003dc4:	2200      	movs	r2, #0
 8003dc6:	62da      	str	r2, [r3, #44]	; 0x2c

    if(hsd->SdCard.CardType != CARD_SDHC_SDXC)
 8003dc8:	68fb      	ldr	r3, [r7, #12]
 8003dca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003dcc:	2b01      	cmp	r3, #1
 8003dce:	d002      	beq.n	8003dd6 <HAL_SD_WriteBlocks+0x82>
    {
      add *= 512U;
 8003dd0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8003dd2:	025b      	lsls	r3, r3, #9
 8003dd4:	63bb      	str	r3, [r7, #56]	; 0x38
    }

    /* Set Block Size for Card */
    errorstate = SDMMC_CmdBlockLength(hsd->Instance, BLOCKSIZE);
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003dde:	4618      	mov	r0, r3
 8003de0:	f001 fc1a 	bl	8005618 <SDMMC_CmdBlockLength>
 8003de4:	6478      	str	r0, [r7, #68]	; 0x44
    if(errorstate != HAL_SD_ERROR_NONE)
 8003de6:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003de8:	2b00      	cmp	r3, #0
 8003dea:	d00f      	beq.n	8003e0c <HAL_SD_WriteBlocks+0xb8>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003dec:	68fb      	ldr	r3, [r7, #12]
 8003dee:	681b      	ldr	r3, [r3, #0]
 8003df0:	4a9d      	ldr	r2, [pc, #628]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8003df2:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= errorstate;
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003df8:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003dfa:	431a      	orrs	r2, r3
 8003dfc:	68fb      	ldr	r3, [r7, #12]
 8003dfe:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	2201      	movs	r2, #1
 8003e04:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      return HAL_ERROR;
 8003e08:	2301      	movs	r3, #1
 8003e0a:	e141      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    }

    /* Configure the SD DPSM (Data Path State Machine) */
    config.DataTimeOut   = SDMMC_DATATIMEOUT;
 8003e0c:	f04f 33ff 	mov.w	r3, #4294967295
 8003e10:	61bb      	str	r3, [r7, #24]
    config.DataLength    = NumberOfBlocks * BLOCKSIZE;
 8003e12:	683b      	ldr	r3, [r7, #0]
 8003e14:	025b      	lsls	r3, r3, #9
 8003e16:	61fb      	str	r3, [r7, #28]
    config.DataBlockSize = SDIO_DATABLOCK_SIZE_512B;
 8003e18:	2390      	movs	r3, #144	; 0x90
 8003e1a:	623b      	str	r3, [r7, #32]
    config.TransferDir   = SDIO_TRANSFER_DIR_TO_CARD;
 8003e1c:	2300      	movs	r3, #0
 8003e1e:	627b      	str	r3, [r7, #36]	; 0x24
    config.TransferMode  = SDIO_TRANSFER_MODE_BLOCK;
 8003e20:	2300      	movs	r3, #0
 8003e22:	62bb      	str	r3, [r7, #40]	; 0x28
    config.DPSM          = SDIO_DPSM_ENABLE;
 8003e24:	2301      	movs	r3, #1
 8003e26:	62fb      	str	r3, [r7, #44]	; 0x2c
    (void)SDIO_ConfigData(hsd->Instance, &config);
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	681b      	ldr	r3, [r3, #0]
 8003e2c:	f107 0218 	add.w	r2, r7, #24
 8003e30:	4611      	mov	r1, r2
 8003e32:	4618      	mov	r0, r3
 8003e34:	f001 fbc4 	bl	80055c0 <SDIO_ConfigData>

    /* Write Blocks in Polling mode */
    if(NumberOfBlocks > 1U)
 8003e38:	683b      	ldr	r3, [r7, #0]
 8003e3a:	2b01      	cmp	r3, #1
 8003e3c:	d90a      	bls.n	8003e54 <HAL_SD_WriteBlocks+0x100>
    {
      hsd->Context = SD_CONTEXT_WRITE_MULTIPLE_BLOCK;
 8003e3e:	68fb      	ldr	r3, [r7, #12]
 8003e40:	2220      	movs	r2, #32
 8003e42:	631a      	str	r2, [r3, #48]	; 0x30

      /* Write Multi Block command */
      errorstate = SDMMC_CmdWriteMultiBlock(hsd->Instance, add);
 8003e44:	68fb      	ldr	r3, [r7, #12]
 8003e46:	681b      	ldr	r3, [r3, #0]
 8003e48:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003e4a:	4618      	mov	r0, r3
 8003e4c:	f001 fc6c 	bl	8005728 <SDMMC_CmdWriteMultiBlock>
 8003e50:	6478      	str	r0, [r7, #68]	; 0x44
 8003e52:	e009      	b.n	8003e68 <HAL_SD_WriteBlocks+0x114>
    }
    else
    {
      hsd->Context = SD_CONTEXT_WRITE_SINGLE_BLOCK;
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	2210      	movs	r2, #16
 8003e58:	631a      	str	r2, [r3, #48]	; 0x30

      /* Write Single Block command */
      errorstate = SDMMC_CmdWriteSingleBlock(hsd->Instance, add);
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	681b      	ldr	r3, [r3, #0]
 8003e5e:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8003e60:	4618      	mov	r0, r3
 8003e62:	f001 fc3f 	bl	80056e4 <SDMMC_CmdWriteSingleBlock>
 8003e66:	6478      	str	r0, [r7, #68]	; 0x44
    }
    if(errorstate != HAL_SD_ERROR_NONE)
 8003e68:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e6a:	2b00      	cmp	r3, #0
 8003e6c:	d012      	beq.n	8003e94 <HAL_SD_WriteBlocks+0x140>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003e6e:	68fb      	ldr	r3, [r7, #12]
 8003e70:	681b      	ldr	r3, [r3, #0]
 8003e72:	4a7d      	ldr	r2, [pc, #500]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8003e74:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= errorstate;
 8003e76:	68fb      	ldr	r3, [r7, #12]
 8003e78:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003e7a:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003e7c:	431a      	orrs	r2, r3
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	2201      	movs	r2, #1
 8003e86:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003e8a:	68fb      	ldr	r3, [r7, #12]
 8003e8c:	2200      	movs	r2, #0
 8003e8e:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003e90:	2301      	movs	r3, #1
 8003e92:	e0fd      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    }

    /* Write block(s) in polling mode */
    dataremaining = config.DataLength;
 8003e94:	69fb      	ldr	r3, [r7, #28]
 8003e96:	63fb      	str	r3, [r7, #60]	; 0x3c
#if defined(SDIO_STA_STBITERR)
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND | SDIO_FLAG_STBITERR))
 8003e98:	e065      	b.n	8003f66 <HAL_SD_WriteBlocks+0x212>
#else /* SDIO_STA_STBITERR not defined */
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND))
#endif /* SDIO_STA_STBITERR */
    {
      if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXFIFOHE) && (dataremaining > 0U))
 8003e9a:	68fb      	ldr	r3, [r7, #12]
 8003e9c:	681b      	ldr	r3, [r3, #0]
 8003e9e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003ea0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8003ea4:	2b00      	cmp	r3, #0
 8003ea6:	d040      	beq.n	8003f2a <HAL_SD_WriteBlocks+0x1d6>
 8003ea8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003eaa:	2b00      	cmp	r3, #0
 8003eac:	d03d      	beq.n	8003f2a <HAL_SD_WriteBlocks+0x1d6>
      {
        /* Write data to SDIO Tx FIFO */
        for(count = 0U; count < 8U; count++)
 8003eae:	2300      	movs	r3, #0
 8003eb0:	643b      	str	r3, [r7, #64]	; 0x40
 8003eb2:	e037      	b.n	8003f24 <HAL_SD_WriteBlocks+0x1d0>
        {
          data = (uint32_t)(*tempbuff);
 8003eb4:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003eb6:	781b      	ldrb	r3, [r3, #0]
 8003eb8:	617b      	str	r3, [r7, #20]
          tempbuff++;
 8003eba:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ebc:	3301      	adds	r3, #1
 8003ebe:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003ec0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003ec2:	3b01      	subs	r3, #1
 8003ec4:	63fb      	str	r3, [r7, #60]	; 0x3c
          data |= ((uint32_t)(*tempbuff) << 8U);
 8003ec6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ec8:	781b      	ldrb	r3, [r3, #0]
 8003eca:	021a      	lsls	r2, r3, #8
 8003ecc:	697b      	ldr	r3, [r7, #20]
 8003ece:	4313      	orrs	r3, r2
 8003ed0:	617b      	str	r3, [r7, #20]
          tempbuff++;
 8003ed2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ed4:	3301      	adds	r3, #1
 8003ed6:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003ed8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003eda:	3b01      	subs	r3, #1
 8003edc:	63fb      	str	r3, [r7, #60]	; 0x3c
          data |= ((uint32_t)(*tempbuff) << 16U);
 8003ede:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ee0:	781b      	ldrb	r3, [r3, #0]
 8003ee2:	041a      	lsls	r2, r3, #16
 8003ee4:	697b      	ldr	r3, [r7, #20]
 8003ee6:	4313      	orrs	r3, r2
 8003ee8:	617b      	str	r3, [r7, #20]
          tempbuff++;
 8003eea:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003eec:	3301      	adds	r3, #1
 8003eee:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003ef0:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003ef2:	3b01      	subs	r3, #1
 8003ef4:	63fb      	str	r3, [r7, #60]	; 0x3c
          data |= ((uint32_t)(*tempbuff) << 24U);
 8003ef6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003ef8:	781b      	ldrb	r3, [r3, #0]
 8003efa:	061a      	lsls	r2, r3, #24
 8003efc:	697b      	ldr	r3, [r7, #20]
 8003efe:	4313      	orrs	r3, r2
 8003f00:	617b      	str	r3, [r7, #20]
          tempbuff++;
 8003f02:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003f04:	3301      	adds	r3, #1
 8003f06:	637b      	str	r3, [r7, #52]	; 0x34
          dataremaining--;
 8003f08:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8003f0a:	3b01      	subs	r3, #1
 8003f0c:	63fb      	str	r3, [r7, #60]	; 0x3c
          (void)SDIO_WriteFIFO(hsd->Instance, &data);
 8003f0e:	68fb      	ldr	r3, [r7, #12]
 8003f10:	681b      	ldr	r3, [r3, #0]
 8003f12:	f107 0214 	add.w	r2, r7, #20
 8003f16:	4611      	mov	r1, r2
 8003f18:	4618      	mov	r0, r3
 8003f1a:	f001 fad9 	bl	80054d0 <SDIO_WriteFIFO>
        for(count = 0U; count < 8U; count++)
 8003f1e:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003f20:	3301      	adds	r3, #1
 8003f22:	643b      	str	r3, [r7, #64]	; 0x40
 8003f24:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8003f26:	2b07      	cmp	r3, #7
 8003f28:	d9c4      	bls.n	8003eb4 <HAL_SD_WriteBlocks+0x160>
        }
      }

      if(((HAL_GetTick()-tickstart) >=  Timeout) || (Timeout == 0U))
 8003f2a:	f7fd fb27 	bl	800157c <HAL_GetTick>
 8003f2e:	4602      	mov	r2, r0
 8003f30:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8003f32:	1ad3      	subs	r3, r2, r3
 8003f34:	6d3a      	ldr	r2, [r7, #80]	; 0x50
 8003f36:	429a      	cmp	r2, r3
 8003f38:	d902      	bls.n	8003f40 <HAL_SD_WriteBlocks+0x1ec>
 8003f3a:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8003f3c:	2b00      	cmp	r3, #0
 8003f3e:	d112      	bne.n	8003f66 <HAL_SD_WriteBlocks+0x212>
      {
        /* Clear all the static flags */
        __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003f40:	68fb      	ldr	r3, [r7, #12]
 8003f42:	681b      	ldr	r3, [r3, #0]
 8003f44:	4a48      	ldr	r2, [pc, #288]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8003f46:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->ErrorCode |= errorstate;
 8003f48:	68fb      	ldr	r3, [r7, #12]
 8003f4a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003f4c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003f4e:	431a      	orrs	r2, r3
 8003f50:	68fb      	ldr	r3, [r7, #12]
 8003f52:	639a      	str	r2, [r3, #56]	; 0x38
        hsd->State = HAL_SD_STATE_READY;
 8003f54:	68fb      	ldr	r3, [r7, #12]
 8003f56:	2201      	movs	r2, #1
 8003f58:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        hsd->Context = SD_CONTEXT_NONE;
 8003f5c:	68fb      	ldr	r3, [r7, #12]
 8003f5e:	2200      	movs	r2, #0
 8003f60:	631a      	str	r2, [r3, #48]	; 0x30
        return HAL_TIMEOUT;
 8003f62:	2303      	movs	r3, #3
 8003f64:	e094      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    while(!__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR | SDIO_FLAG_DCRCFAIL | SDIO_FLAG_DTIMEOUT | SDIO_FLAG_DATAEND | SDIO_FLAG_STBITERR))
 8003f66:	68fb      	ldr	r3, [r7, #12]
 8003f68:	681b      	ldr	r3, [r3, #0]
 8003f6a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003f6c:	f240 331a 	movw	r3, #794	; 0x31a
 8003f70:	4013      	ands	r3, r2
 8003f72:	2b00      	cmp	r3, #0
 8003f74:	d091      	beq.n	8003e9a <HAL_SD_WriteBlocks+0x146>
      }
    }

    /* Send stop transmission command in case of multiblock write */
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DATAEND) && (NumberOfBlocks > 1U))
 8003f76:	68fb      	ldr	r3, [r7, #12]
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003f7c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003f80:	2b00      	cmp	r3, #0
 8003f82:	d022      	beq.n	8003fca <HAL_SD_WriteBlocks+0x276>
 8003f84:	683b      	ldr	r3, [r7, #0]
 8003f86:	2b01      	cmp	r3, #1
 8003f88:	d91f      	bls.n	8003fca <HAL_SD_WriteBlocks+0x276>
    {
      if(hsd->SdCard.CardType != CARD_SECURED)
 8003f8a:	68fb      	ldr	r3, [r7, #12]
 8003f8c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003f8e:	2b03      	cmp	r3, #3
 8003f90:	d01b      	beq.n	8003fca <HAL_SD_WriteBlocks+0x276>
      {
        /* Send stop transmission command */
        errorstate = SDMMC_CmdStopTransfer(hsd->Instance);
 8003f92:	68fb      	ldr	r3, [r7, #12]
 8003f94:	681b      	ldr	r3, [r3, #0]
 8003f96:	4618      	mov	r0, r3
 8003f98:	f001 fbe8 	bl	800576c <SDMMC_CmdStopTransfer>
 8003f9c:	6478      	str	r0, [r7, #68]	; 0x44
        if(errorstate != HAL_SD_ERROR_NONE)
 8003f9e:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003fa0:	2b00      	cmp	r3, #0
 8003fa2:	d012      	beq.n	8003fca <HAL_SD_WriteBlocks+0x276>
        {
          /* Clear all the static flags */
          __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003fa4:	68fb      	ldr	r3, [r7, #12]
 8003fa6:	681b      	ldr	r3, [r3, #0]
 8003fa8:	4a2f      	ldr	r2, [pc, #188]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8003faa:	639a      	str	r2, [r3, #56]	; 0x38
          hsd->ErrorCode |= errorstate;
 8003fac:	68fb      	ldr	r3, [r7, #12]
 8003fae:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003fb0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 8003fb2:	431a      	orrs	r2, r3
 8003fb4:	68fb      	ldr	r3, [r7, #12]
 8003fb6:	639a      	str	r2, [r3, #56]	; 0x38
          hsd->State = HAL_SD_STATE_READY;
 8003fb8:	68fb      	ldr	r3, [r7, #12]
 8003fba:	2201      	movs	r2, #1
 8003fbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
          hsd->Context = SD_CONTEXT_NONE;
 8003fc0:	68fb      	ldr	r3, [r7, #12]
 8003fc2:	2200      	movs	r2, #0
 8003fc4:	631a      	str	r2, [r3, #48]	; 0x30
          return HAL_ERROR;
 8003fc6:	2301      	movs	r3, #1
 8003fc8:	e062      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
        }
      }
    }

    /* Get error state */
    if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DTIMEOUT))
 8003fca:	68fb      	ldr	r3, [r7, #12]
 8003fcc:	681b      	ldr	r3, [r3, #0]
 8003fce:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fd0:	f003 0308 	and.w	r3, r3, #8
 8003fd4:	2b00      	cmp	r3, #0
 8003fd6:	d012      	beq.n	8003ffe <HAL_SD_WriteBlocks+0x2aa>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8003fd8:	68fb      	ldr	r3, [r7, #12]
 8003fda:	681b      	ldr	r3, [r3, #0]
 8003fdc:	4a22      	ldr	r2, [pc, #136]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8003fde:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_TIMEOUT;
 8003fe0:	68fb      	ldr	r3, [r7, #12]
 8003fe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003fe4:	f043 0208 	orr.w	r2, r3, #8
 8003fe8:	68fb      	ldr	r3, [r7, #12]
 8003fea:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8003fec:	68fb      	ldr	r3, [r7, #12]
 8003fee:	2201      	movs	r2, #1
 8003ff0:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8003ff4:	68fb      	ldr	r3, [r7, #12]
 8003ff6:	2200      	movs	r2, #0
 8003ff8:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8003ffa:	2301      	movs	r3, #1
 8003ffc:	e048      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    }
    else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_DCRCFAIL))
 8003ffe:	68fb      	ldr	r3, [r7, #12]
 8004000:	681b      	ldr	r3, [r3, #0]
 8004002:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004004:	f003 0302 	and.w	r3, r3, #2
 8004008:	2b00      	cmp	r3, #0
 800400a:	d012      	beq.n	8004032 <HAL_SD_WriteBlocks+0x2de>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 800400c:	68fb      	ldr	r3, [r7, #12]
 800400e:	681b      	ldr	r3, [r3, #0]
 8004010:	4a15      	ldr	r2, [pc, #84]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8004012:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_DATA_CRC_FAIL;
 8004014:	68fb      	ldr	r3, [r7, #12]
 8004016:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004018:	f043 0202 	orr.w	r2, r3, #2
 800401c:	68fb      	ldr	r3, [r7, #12]
 800401e:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8004020:	68fb      	ldr	r3, [r7, #12]
 8004022:	2201      	movs	r2, #1
 8004024:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 8004028:	68fb      	ldr	r3, [r7, #12]
 800402a:	2200      	movs	r2, #0
 800402c:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 800402e:	2301      	movs	r3, #1
 8004030:	e02e      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
    }
    else if(__HAL_SD_GET_FLAG(hsd, SDIO_FLAG_TXUNDERR))
 8004032:	68fb      	ldr	r3, [r7, #12]
 8004034:	681b      	ldr	r3, [r3, #0]
 8004036:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8004038:	f003 0310 	and.w	r3, r3, #16
 800403c:	2b00      	cmp	r3, #0
 800403e:	d015      	beq.n	800406c <HAL_SD_WriteBlocks+0x318>
    {
      /* Clear all the static flags */
      __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8004040:	68fb      	ldr	r3, [r7, #12]
 8004042:	681b      	ldr	r3, [r3, #0]
 8004044:	4a08      	ldr	r2, [pc, #32]	; (8004068 <HAL_SD_WriteBlocks+0x314>)
 8004046:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->ErrorCode |= HAL_SD_ERROR_TX_UNDERRUN;
 8004048:	68fb      	ldr	r3, [r7, #12]
 800404a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800404c:	f043 0210 	orr.w	r2, r3, #16
 8004050:	68fb      	ldr	r3, [r7, #12]
 8004052:	639a      	str	r2, [r3, #56]	; 0x38
      hsd->State = HAL_SD_STATE_READY;
 8004054:	68fb      	ldr	r3, [r7, #12]
 8004056:	2201      	movs	r2, #1
 8004058:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
      hsd->Context = SD_CONTEXT_NONE;
 800405c:	68fb      	ldr	r3, [r7, #12]
 800405e:	2200      	movs	r2, #0
 8004060:	631a      	str	r2, [r3, #48]	; 0x30
      return HAL_ERROR;
 8004062:	2301      	movs	r3, #1
 8004064:	e014      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
 8004066:	bf00      	nop
 8004068:	004005ff 	.word	0x004005ff
    {
      /* Nothing to do */
    }

    /* Clear all the static flags */
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_DATA_FLAGS);
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	681b      	ldr	r3, [r3, #0]
 8004070:	f240 523a 	movw	r2, #1338	; 0x53a
 8004074:	639a      	str	r2, [r3, #56]	; 0x38

    hsd->State = HAL_SD_STATE_READY;
 8004076:	68fb      	ldr	r3, [r7, #12]
 8004078:	2201      	movs	r2, #1
 800407a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

    return HAL_OK;
 800407e:	2300      	movs	r3, #0
 8004080:	e006      	b.n	8004090 <HAL_SD_WriteBlocks+0x33c>
  }
  else
  {
    hsd->ErrorCode |= HAL_SD_ERROR_BUSY;
 8004082:	68fb      	ldr	r3, [r7, #12]
 8004084:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004086:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 800408a:	68fb      	ldr	r3, [r7, #12]
 800408c:	639a      	str	r2, [r3, #56]	; 0x38
    return HAL_ERROR;
 800408e:	2301      	movs	r3, #1
  }
}
 8004090:	4618      	mov	r0, r3
 8004092:	3748      	adds	r7, #72	; 0x48
 8004094:	46bd      	mov	sp, r7
 8004096:	bd80      	pop	{r7, pc}

08004098 <HAL_SD_GetCardCSD>:
  * @param  pCSD: Pointer to a HAL_SD_CardCSDTypeDef structure that  
  *         contains all CSD register parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_GetCardCSD(SD_HandleTypeDef *hsd, HAL_SD_CardCSDTypeDef *pCSD)
{
 8004098:	b480      	push	{r7}
 800409a:	b083      	sub	sp, #12
 800409c:	af00      	add	r7, sp, #0
 800409e:	6078      	str	r0, [r7, #4]
 80040a0:	6039      	str	r1, [r7, #0]
  pCSD->CSDStruct = (uint8_t)((hsd->CSD[0] & 0xC0000000U) >> 30U);
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040a6:	0f9b      	lsrs	r3, r3, #30
 80040a8:	b2da      	uxtb	r2, r3
 80040aa:	683b      	ldr	r3, [r7, #0]
 80040ac:	701a      	strb	r2, [r3, #0]

  pCSD->SysSpecVersion = (uint8_t)((hsd->CSD[0] & 0x3C000000U) >> 26U);
 80040ae:	687b      	ldr	r3, [r7, #4]
 80040b0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040b2:	0e9b      	lsrs	r3, r3, #26
 80040b4:	b2db      	uxtb	r3, r3
 80040b6:	f003 030f 	and.w	r3, r3, #15
 80040ba:	b2da      	uxtb	r2, r3
 80040bc:	683b      	ldr	r3, [r7, #0]
 80040be:	705a      	strb	r2, [r3, #1]

  pCSD->Reserved1 = (uint8_t)((hsd->CSD[0] & 0x03000000U) >> 24U);
 80040c0:	687b      	ldr	r3, [r7, #4]
 80040c2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040c4:	0e1b      	lsrs	r3, r3, #24
 80040c6:	b2db      	uxtb	r3, r3
 80040c8:	f003 0303 	and.w	r3, r3, #3
 80040cc:	b2da      	uxtb	r2, r3
 80040ce:	683b      	ldr	r3, [r7, #0]
 80040d0:	709a      	strb	r2, [r3, #2]

  pCSD->TAAC = (uint8_t)((hsd->CSD[0] & 0x00FF0000U) >> 16U);
 80040d2:	687b      	ldr	r3, [r7, #4]
 80040d4:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040d6:	0c1b      	lsrs	r3, r3, #16
 80040d8:	b2da      	uxtb	r2, r3
 80040da:	683b      	ldr	r3, [r7, #0]
 80040dc:	70da      	strb	r2, [r3, #3]

  pCSD->NSAC = (uint8_t)((hsd->CSD[0] & 0x0000FF00U) >> 8U);
 80040de:	687b      	ldr	r3, [r7, #4]
 80040e0:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040e2:	0a1b      	lsrs	r3, r3, #8
 80040e4:	b2da      	uxtb	r2, r3
 80040e6:	683b      	ldr	r3, [r7, #0]
 80040e8:	711a      	strb	r2, [r3, #4]

  pCSD->MaxBusClkFrec = (uint8_t)(hsd->CSD[0] & 0x000000FFU);
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80040ee:	b2da      	uxtb	r2, r3
 80040f0:	683b      	ldr	r3, [r7, #0]
 80040f2:	715a      	strb	r2, [r3, #5]

  pCSD->CardComdClasses = (uint16_t)((hsd->CSD[1] & 0xFFF00000U) >> 20U);
 80040f4:	687b      	ldr	r3, [r7, #4]
 80040f6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80040f8:	0d1b      	lsrs	r3, r3, #20
 80040fa:	b29a      	uxth	r2, r3
 80040fc:	683b      	ldr	r3, [r7, #0]
 80040fe:	80da      	strh	r2, [r3, #6]

  pCSD->RdBlockLen = (uint8_t)((hsd->CSD[1] & 0x000F0000U) >> 16U);
 8004100:	687b      	ldr	r3, [r7, #4]
 8004102:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8004104:	0c1b      	lsrs	r3, r3, #16
 8004106:	b2db      	uxtb	r3, r3
 8004108:	f003 030f 	and.w	r3, r3, #15
 800410c:	b2da      	uxtb	r2, r3
 800410e:	683b      	ldr	r3, [r7, #0]
 8004110:	721a      	strb	r2, [r3, #8]

  pCSD->PartBlockRead   = (uint8_t)((hsd->CSD[1] & 0x00008000U) >> 15U);
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8004116:	0bdb      	lsrs	r3, r3, #15
 8004118:	b2db      	uxtb	r3, r3
 800411a:	f003 0301 	and.w	r3, r3, #1
 800411e:	b2da      	uxtb	r2, r3
 8004120:	683b      	ldr	r3, [r7, #0]
 8004122:	725a      	strb	r2, [r3, #9]

  pCSD->WrBlockMisalign = (uint8_t)((hsd->CSD[1] & 0x00004000U) >> 14U);
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 8004128:	0b9b      	lsrs	r3, r3, #14
 800412a:	b2db      	uxtb	r3, r3
 800412c:	f003 0301 	and.w	r3, r3, #1
 8004130:	b2da      	uxtb	r2, r3
 8004132:	683b      	ldr	r3, [r7, #0]
 8004134:	729a      	strb	r2, [r3, #10]

  pCSD->RdBlockMisalign = (uint8_t)((hsd->CSD[1] & 0x00002000U) >> 13U);
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800413a:	0b5b      	lsrs	r3, r3, #13
 800413c:	b2db      	uxtb	r3, r3
 800413e:	f003 0301 	and.w	r3, r3, #1
 8004142:	b2da      	uxtb	r2, r3
 8004144:	683b      	ldr	r3, [r7, #0]
 8004146:	72da      	strb	r2, [r3, #11]

  pCSD->DSRImpl = (uint8_t)((hsd->CSD[1] & 0x00001000U) >> 12U);
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800414c:	0b1b      	lsrs	r3, r3, #12
 800414e:	b2db      	uxtb	r3, r3
 8004150:	f003 0301 	and.w	r3, r3, #1
 8004154:	b2da      	uxtb	r2, r3
 8004156:	683b      	ldr	r3, [r7, #0]
 8004158:	731a      	strb	r2, [r3, #12]

  pCSD->Reserved2 = 0U; /*!< Reserved */
 800415a:	683b      	ldr	r3, [r7, #0]
 800415c:	2200      	movs	r2, #0
 800415e:	735a      	strb	r2, [r3, #13]

  if(hsd->SdCard.CardType == CARD_SDSC)
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004164:	2b00      	cmp	r3, #0
 8004166:	d163      	bne.n	8004230 <HAL_SD_GetCardCSD+0x198>
  {
    pCSD->DeviceSize = (((hsd->CSD[1] & 0x000003FFU) << 2U) | ((hsd->CSD[2] & 0xC0000000U) >> 30U));
 8004168:	687b      	ldr	r3, [r7, #4]
 800416a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800416c:	009a      	lsls	r2, r3, #2
 800416e:	f640 73fc 	movw	r3, #4092	; 0xffc
 8004172:	4013      	ands	r3, r2
 8004174:	687a      	ldr	r2, [r7, #4]
 8004176:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8004178:	0f92      	lsrs	r2, r2, #30
 800417a:	431a      	orrs	r2, r3
 800417c:	683b      	ldr	r3, [r7, #0]
 800417e:	611a      	str	r2, [r3, #16]

    pCSD->MaxRdCurrentVDDMin = (uint8_t)((hsd->CSD[2] & 0x38000000U) >> 27U);
 8004180:	687b      	ldr	r3, [r7, #4]
 8004182:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004184:	0edb      	lsrs	r3, r3, #27
 8004186:	b2db      	uxtb	r3, r3
 8004188:	f003 0307 	and.w	r3, r3, #7
 800418c:	b2da      	uxtb	r2, r3
 800418e:	683b      	ldr	r3, [r7, #0]
 8004190:	751a      	strb	r2, [r3, #20]

    pCSD->MaxRdCurrentVDDMax = (uint8_t)((hsd->CSD[2] & 0x07000000U) >> 24U);
 8004192:	687b      	ldr	r3, [r7, #4]
 8004194:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004196:	0e1b      	lsrs	r3, r3, #24
 8004198:	b2db      	uxtb	r3, r3
 800419a:	f003 0307 	and.w	r3, r3, #7
 800419e:	b2da      	uxtb	r2, r3
 80041a0:	683b      	ldr	r3, [r7, #0]
 80041a2:	755a      	strb	r2, [r3, #21]

    pCSD->MaxWrCurrentVDDMin = (uint8_t)((hsd->CSD[2] & 0x00E00000U) >> 21U);
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80041a8:	0d5b      	lsrs	r3, r3, #21
 80041aa:	b2db      	uxtb	r3, r3
 80041ac:	f003 0307 	and.w	r3, r3, #7
 80041b0:	b2da      	uxtb	r2, r3
 80041b2:	683b      	ldr	r3, [r7, #0]
 80041b4:	759a      	strb	r2, [r3, #22]

    pCSD->MaxWrCurrentVDDMax = (uint8_t)((hsd->CSD[2] & 0x001C0000U) >> 18U);
 80041b6:	687b      	ldr	r3, [r7, #4]
 80041b8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80041ba:	0c9b      	lsrs	r3, r3, #18
 80041bc:	b2db      	uxtb	r3, r3
 80041be:	f003 0307 	and.w	r3, r3, #7
 80041c2:	b2da      	uxtb	r2, r3
 80041c4:	683b      	ldr	r3, [r7, #0]
 80041c6:	75da      	strb	r2, [r3, #23]

    pCSD->DeviceSizeMul = (uint8_t)((hsd->CSD[2] & 0x00038000U) >> 15U);
 80041c8:	687b      	ldr	r3, [r7, #4]
 80041ca:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80041cc:	0bdb      	lsrs	r3, r3, #15
 80041ce:	b2db      	uxtb	r3, r3
 80041d0:	f003 0307 	and.w	r3, r3, #7
 80041d4:	b2da      	uxtb	r2, r3
 80041d6:	683b      	ldr	r3, [r7, #0]
 80041d8:	761a      	strb	r2, [r3, #24]

    hsd->SdCard.BlockNbr  = (pCSD->DeviceSize + 1U) ;
 80041da:	683b      	ldr	r3, [r7, #0]
 80041dc:	691b      	ldr	r3, [r3, #16]
 80041de:	1c5a      	adds	r2, r3, #1
 80041e0:	687b      	ldr	r3, [r7, #4]
 80041e2:	655a      	str	r2, [r3, #84]	; 0x54
    hsd->SdCard.BlockNbr *= (1UL << ((pCSD->DeviceSizeMul & 0x07U) + 2U));
 80041e4:	683b      	ldr	r3, [r7, #0]
 80041e6:	7e1b      	ldrb	r3, [r3, #24]
 80041e8:	b2db      	uxtb	r3, r3
 80041ea:	f003 0307 	and.w	r3, r3, #7
 80041ee:	3302      	adds	r3, #2
 80041f0:	2201      	movs	r2, #1
 80041f2:	fa02 f303 	lsl.w	r3, r2, r3
 80041f6:	687a      	ldr	r2, [r7, #4]
 80041f8:	6d52      	ldr	r2, [r2, #84]	; 0x54
 80041fa:	fb02 f203 	mul.w	r2, r2, r3
 80041fe:	687b      	ldr	r3, [r7, #4]
 8004200:	655a      	str	r2, [r3, #84]	; 0x54
    hsd->SdCard.BlockSize = (1UL << (pCSD->RdBlockLen & 0x0FU));
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	7a1b      	ldrb	r3, [r3, #8]
 8004206:	b2db      	uxtb	r3, r3
 8004208:	f003 030f 	and.w	r3, r3, #15
 800420c:	2201      	movs	r2, #1
 800420e:	409a      	lsls	r2, r3
 8004210:	687b      	ldr	r3, [r7, #4]
 8004212:	659a      	str	r2, [r3, #88]	; 0x58

    hsd->SdCard.LogBlockNbr =  (hsd->SdCard.BlockNbr) * ((hsd->SdCard.BlockSize) / 512U);
 8004214:	687b      	ldr	r3, [r7, #4]
 8004216:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8004218:	687a      	ldr	r2, [r7, #4]
 800421a:	6d92      	ldr	r2, [r2, #88]	; 0x58
 800421c:	0a52      	lsrs	r2, r2, #9
 800421e:	fb02 f203 	mul.w	r2, r2, r3
 8004222:	687b      	ldr	r3, [r7, #4]
 8004224:	65da      	str	r2, [r3, #92]	; 0x5c
    hsd->SdCard.LogBlockSize = 512U;
 8004226:	687b      	ldr	r3, [r7, #4]
 8004228:	f44f 7200 	mov.w	r2, #512	; 0x200
 800422c:	661a      	str	r2, [r3, #96]	; 0x60
 800422e:	e031      	b.n	8004294 <HAL_SD_GetCardCSD+0x1fc>
  }
  else if(hsd->SdCard.CardType == CARD_SDHC_SDXC)
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004234:	2b01      	cmp	r3, #1
 8004236:	d11d      	bne.n	8004274 <HAL_SD_GetCardCSD+0x1dc>
  {
    /* Byte 7 */
    pCSD->DeviceSize = (((hsd->CSD[1] & 0x0000003FU) << 16U) | ((hsd->CSD[2] & 0xFFFF0000U) >> 16U));
 8004238:	687b      	ldr	r3, [r7, #4]
 800423a:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800423c:	041b      	lsls	r3, r3, #16
 800423e:	f403 127c 	and.w	r2, r3, #4128768	; 0x3f0000
 8004242:	687b      	ldr	r3, [r7, #4]
 8004244:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004246:	0c1b      	lsrs	r3, r3, #16
 8004248:	431a      	orrs	r2, r3
 800424a:	683b      	ldr	r3, [r7, #0]
 800424c:	611a      	str	r2, [r3, #16]

    hsd->SdCard.BlockNbr = ((pCSD->DeviceSize + 1U) * 1024U);
 800424e:	683b      	ldr	r3, [r7, #0]
 8004250:	691b      	ldr	r3, [r3, #16]
 8004252:	3301      	adds	r3, #1
 8004254:	029a      	lsls	r2, r3, #10
 8004256:	687b      	ldr	r3, [r7, #4]
 8004258:	655a      	str	r2, [r3, #84]	; 0x54
    hsd->SdCard.LogBlockNbr = hsd->SdCard.BlockNbr;
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800425e:	687b      	ldr	r3, [r7, #4]
 8004260:	65da      	str	r2, [r3, #92]	; 0x5c
    hsd->SdCard.BlockSize = 512U;
 8004262:	687b      	ldr	r3, [r7, #4]
 8004264:	f44f 7200 	mov.w	r2, #512	; 0x200
 8004268:	659a      	str	r2, [r3, #88]	; 0x58
    hsd->SdCard.LogBlockSize = hsd->SdCard.BlockSize;
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 800426e:	687b      	ldr	r3, [r7, #4]
 8004270:	661a      	str	r2, [r3, #96]	; 0x60
 8004272:	e00f      	b.n	8004294 <HAL_SD_GetCardCSD+0x1fc>
  }
  else
  {
    /* Clear all the static flags */
    __HAL_SD_CLEAR_FLAG(hsd, SDIO_STATIC_FLAGS);
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	4a58      	ldr	r2, [pc, #352]	; (80043dc <HAL_SD_GetCardCSD+0x344>)
 800427a:	639a      	str	r2, [r3, #56]	; 0x38
    hsd->ErrorCode |= HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8004280:	f043 5280 	orr.w	r2, r3, #268435456	; 0x10000000
 8004284:	687b      	ldr	r3, [r7, #4]
 8004286:	639a      	str	r2, [r3, #56]	; 0x38
    hsd->State = HAL_SD_STATE_READY;
 8004288:	687b      	ldr	r3, [r7, #4]
 800428a:	2201      	movs	r2, #1
 800428c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    return HAL_ERROR;
 8004290:	2301      	movs	r3, #1
 8004292:	e09d      	b.n	80043d0 <HAL_SD_GetCardCSD+0x338>
  }

  pCSD->EraseGrSize = (uint8_t)((hsd->CSD[2] & 0x00004000U) >> 14U);
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8004298:	0b9b      	lsrs	r3, r3, #14
 800429a:	b2db      	uxtb	r3, r3
 800429c:	f003 0301 	and.w	r3, r3, #1
 80042a0:	b2da      	uxtb	r2, r3
 80042a2:	683b      	ldr	r3, [r7, #0]
 80042a4:	765a      	strb	r2, [r3, #25]

  pCSD->EraseGrMul = (uint8_t)((hsd->CSD[2] & 0x00003F80U) >> 7U);
 80042a6:	687b      	ldr	r3, [r7, #4]
 80042a8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80042aa:	09db      	lsrs	r3, r3, #7
 80042ac:	b2db      	uxtb	r3, r3
 80042ae:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80042b2:	b2da      	uxtb	r2, r3
 80042b4:	683b      	ldr	r3, [r7, #0]
 80042b6:	769a      	strb	r2, [r3, #26]

  pCSD->WrProtectGrSize = (uint8_t)(hsd->CSD[2] & 0x0000007FU);
 80042b8:	687b      	ldr	r3, [r7, #4]
 80042ba:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80042bc:	b2db      	uxtb	r3, r3
 80042be:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80042c2:	b2da      	uxtb	r2, r3
 80042c4:	683b      	ldr	r3, [r7, #0]
 80042c6:	76da      	strb	r2, [r3, #27]

  pCSD->WrProtectGrEnable = (uint8_t)((hsd->CSD[3] & 0x80000000U) >> 31U);
 80042c8:	687b      	ldr	r3, [r7, #4]
 80042ca:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042cc:	0fdb      	lsrs	r3, r3, #31
 80042ce:	b2da      	uxtb	r2, r3
 80042d0:	683b      	ldr	r3, [r7, #0]
 80042d2:	771a      	strb	r2, [r3, #28]

  pCSD->ManDeflECC = (uint8_t)((hsd->CSD[3] & 0x60000000U) >> 29U);
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042d8:	0f5b      	lsrs	r3, r3, #29
 80042da:	b2db      	uxtb	r3, r3
 80042dc:	f003 0303 	and.w	r3, r3, #3
 80042e0:	b2da      	uxtb	r2, r3
 80042e2:	683b      	ldr	r3, [r7, #0]
 80042e4:	775a      	strb	r2, [r3, #29]

  pCSD->WrSpeedFact = (uint8_t)((hsd->CSD[3] & 0x1C000000U) >> 26U);
 80042e6:	687b      	ldr	r3, [r7, #4]
 80042e8:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042ea:	0e9b      	lsrs	r3, r3, #26
 80042ec:	b2db      	uxtb	r3, r3
 80042ee:	f003 0307 	and.w	r3, r3, #7
 80042f2:	b2da      	uxtb	r2, r3
 80042f4:	683b      	ldr	r3, [r7, #0]
 80042f6:	779a      	strb	r2, [r3, #30]

  pCSD->MaxWrBlockLen= (uint8_t)((hsd->CSD[3] & 0x03C00000U) >> 22U);
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80042fc:	0d9b      	lsrs	r3, r3, #22
 80042fe:	b2db      	uxtb	r3, r3
 8004300:	f003 030f 	and.w	r3, r3, #15
 8004304:	b2da      	uxtb	r2, r3
 8004306:	683b      	ldr	r3, [r7, #0]
 8004308:	77da      	strb	r2, [r3, #31]

  pCSD->WriteBlockPaPartial = (uint8_t)((hsd->CSD[3] & 0x00200000U) >> 21U);
 800430a:	687b      	ldr	r3, [r7, #4]
 800430c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800430e:	0d5b      	lsrs	r3, r3, #21
 8004310:	b2db      	uxtb	r3, r3
 8004312:	f003 0301 	and.w	r3, r3, #1
 8004316:	b2da      	uxtb	r2, r3
 8004318:	683b      	ldr	r3, [r7, #0]
 800431a:	f883 2020 	strb.w	r2, [r3, #32]

  pCSD->Reserved3 = 0;
 800431e:	683b      	ldr	r3, [r7, #0]
 8004320:	2200      	movs	r2, #0
 8004322:	f883 2021 	strb.w	r2, [r3, #33]	; 0x21

  pCSD->ContentProtectAppli = (uint8_t)((hsd->CSD[3] & 0x00010000U) >> 16U);
 8004326:	687b      	ldr	r3, [r7, #4]
 8004328:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800432a:	0c1b      	lsrs	r3, r3, #16
 800432c:	b2db      	uxtb	r3, r3
 800432e:	f003 0301 	and.w	r3, r3, #1
 8004332:	b2da      	uxtb	r2, r3
 8004334:	683b      	ldr	r3, [r7, #0]
 8004336:	f883 2022 	strb.w	r2, [r3, #34]	; 0x22

  pCSD->FileFormatGroup = (uint8_t)((hsd->CSD[3] & 0x00008000U) >> 15U);
 800433a:	687b      	ldr	r3, [r7, #4]
 800433c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800433e:	0bdb      	lsrs	r3, r3, #15
 8004340:	b2db      	uxtb	r3, r3
 8004342:	f003 0301 	and.w	r3, r3, #1
 8004346:	b2da      	uxtb	r2, r3
 8004348:	683b      	ldr	r3, [r7, #0]
 800434a:	f883 2023 	strb.w	r2, [r3, #35]	; 0x23

  pCSD->CopyFlag = (uint8_t)((hsd->CSD[3] & 0x00004000U) >> 14U);
 800434e:	687b      	ldr	r3, [r7, #4]
 8004350:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004352:	0b9b      	lsrs	r3, r3, #14
 8004354:	b2db      	uxtb	r3, r3
 8004356:	f003 0301 	and.w	r3, r3, #1
 800435a:	b2da      	uxtb	r2, r3
 800435c:	683b      	ldr	r3, [r7, #0]
 800435e:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24

  pCSD->PermWrProtect = (uint8_t)((hsd->CSD[3] & 0x00002000U) >> 13U);
 8004362:	687b      	ldr	r3, [r7, #4]
 8004364:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8004366:	0b5b      	lsrs	r3, r3, #13
 8004368:	b2db      	uxtb	r3, r3
 800436a:	f003 0301 	and.w	r3, r3, #1
 800436e:	b2da      	uxtb	r2, r3
 8004370:	683b      	ldr	r3, [r7, #0]
 8004372:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25

  pCSD->TempWrProtect = (uint8_t)((hsd->CSD[3] & 0x00001000U) >> 12U);
 8004376:	687b      	ldr	r3, [r7, #4]
 8004378:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800437a:	0b1b      	lsrs	r3, r3, #12
 800437c:	b2db      	uxtb	r3, r3
 800437e:	f003 0301 	and.w	r3, r3, #1
 8004382:	b2da      	uxtb	r2, r3
 8004384:	683b      	ldr	r3, [r7, #0]
 8004386:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26

  pCSD->FileFormat = (uint8_t)((hsd->CSD[3] & 0x00000C00U) >> 10U);
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800438e:	0a9b      	lsrs	r3, r3, #10
 8004390:	b2db      	uxtb	r3, r3
 8004392:	f003 0303 	and.w	r3, r3, #3
 8004396:	b2da      	uxtb	r2, r3
 8004398:	683b      	ldr	r3, [r7, #0]
 800439a:	f883 2027 	strb.w	r2, [r3, #39]	; 0x27

  pCSD->ECC= (uint8_t)((hsd->CSD[3] & 0x00000300U) >> 8U);
 800439e:	687b      	ldr	r3, [r7, #4]
 80043a0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80043a2:	0a1b      	lsrs	r3, r3, #8
 80043a4:	b2db      	uxtb	r3, r3
 80043a6:	f003 0303 	and.w	r3, r3, #3
 80043aa:	b2da      	uxtb	r2, r3
 80043ac:	683b      	ldr	r3, [r7, #0]
 80043ae:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28

  pCSD->CSD_CRC = (uint8_t)((hsd->CSD[3] & 0x000000FEU) >> 1U);
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80043b6:	085b      	lsrs	r3, r3, #1
 80043b8:	b2db      	uxtb	r3, r3
 80043ba:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 80043be:	b2da      	uxtb	r2, r3
 80043c0:	683b      	ldr	r3, [r7, #0]
 80043c2:	f883 2029 	strb.w	r2, [r3, #41]	; 0x29

  pCSD->Reserved4 = 1;
 80043c6:	683b      	ldr	r3, [r7, #0]
 80043c8:	2201      	movs	r2, #1
 80043ca:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a

  return HAL_OK;
 80043ce:	2300      	movs	r3, #0
}
 80043d0:	4618      	mov	r0, r3
 80043d2:	370c      	adds	r7, #12
 80043d4:	46bd      	mov	sp, r7
 80043d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80043da:	4770      	bx	lr
 80043dc:	004005ff 	.word	0x004005ff

080043e0 <HAL_SD_GetCardInfo>:
  * @param  pCardInfo: Pointer to the HAL_SD_CardInfoTypeDef structure that
  *         will contain the SD card status information
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SD_GetCardInfo(SD_HandleTypeDef *hsd, HAL_SD_CardInfoTypeDef *pCardInfo)
{
 80043e0:	b480      	push	{r7}
 80043e2:	b083      	sub	sp, #12
 80043e4:	af00      	add	r7, sp, #0
 80043e6:	6078      	str	r0, [r7, #4]
 80043e8:	6039      	str	r1, [r7, #0]
  pCardInfo->CardType     = (uint32_t)(hsd->SdCard.CardType);
 80043ea:	687b      	ldr	r3, [r7, #4]
 80043ec:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80043ee:	683b      	ldr	r3, [r7, #0]
 80043f0:	601a      	str	r2, [r3, #0]
  pCardInfo->CardVersion  = (uint32_t)(hsd->SdCard.CardVersion);
 80043f2:	687b      	ldr	r3, [r7, #4]
 80043f4:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 80043f6:	683b      	ldr	r3, [r7, #0]
 80043f8:	605a      	str	r2, [r3, #4]
  pCardInfo->Class        = (uint32_t)(hsd->SdCard.Class);
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 80043fe:	683b      	ldr	r3, [r7, #0]
 8004400:	609a      	str	r2, [r3, #8]
  pCardInfo->RelCardAdd   = (uint32_t)(hsd->SdCard.RelCardAdd);
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004406:	683b      	ldr	r3, [r7, #0]
 8004408:	60da      	str	r2, [r3, #12]
  pCardInfo->BlockNbr     = (uint32_t)(hsd->SdCard.BlockNbr);
 800440a:	687b      	ldr	r3, [r7, #4]
 800440c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800440e:	683b      	ldr	r3, [r7, #0]
 8004410:	611a      	str	r2, [r3, #16]
  pCardInfo->BlockSize    = (uint32_t)(hsd->SdCard.BlockSize);
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	6d9a      	ldr	r2, [r3, #88]	; 0x58
 8004416:	683b      	ldr	r3, [r7, #0]
 8004418:	615a      	str	r2, [r3, #20]
  pCardInfo->LogBlockNbr  = (uint32_t)(hsd->SdCard.LogBlockNbr);
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	6dda      	ldr	r2, [r3, #92]	; 0x5c
 800441e:	683b      	ldr	r3, [r7, #0]
 8004420:	619a      	str	r2, [r3, #24]
  pCardInfo->LogBlockSize = (uint32_t)(hsd->SdCard.LogBlockSize);
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8004426:	683b      	ldr	r3, [r7, #0]
 8004428:	61da      	str	r2, [r3, #28]

  return HAL_OK;
 800442a:	2300      	movs	r3, #0
}
 800442c:	4618      	mov	r0, r3
 800442e:	370c      	adds	r7, #12
 8004430:	46bd      	mov	sp, r7
 8004432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004436:	4770      	bx	lr

08004438 <HAL_SD_GetCardState>:
  * @brief  Gets the current sd card data state.
  * @param  hsd: pointer to SD handle
  * @retval Card state
  */
HAL_SD_CardStateTypeDef HAL_SD_GetCardState(SD_HandleTypeDef *hsd)
{
 8004438:	b580      	push	{r7, lr}
 800443a:	b086      	sub	sp, #24
 800443c:	af00      	add	r7, sp, #0
 800443e:	6078      	str	r0, [r7, #4]
  uint32_t cardstate;
  uint32_t errorstate;
  uint32_t resp1 = 0;
 8004440:	2300      	movs	r3, #0
 8004442:	60fb      	str	r3, [r7, #12]

  errorstate = SD_SendStatus(hsd, &resp1);
 8004444:	f107 030c 	add.w	r3, r7, #12
 8004448:	4619      	mov	r1, r3
 800444a:	6878      	ldr	r0, [r7, #4]
 800444c:	f000 f970 	bl	8004730 <SD_SendStatus>
 8004450:	6178      	str	r0, [r7, #20]
  if(errorstate != HAL_SD_ERROR_NONE)
 8004452:	697b      	ldr	r3, [r7, #20]
 8004454:	2b00      	cmp	r3, #0
 8004456:	d005      	beq.n	8004464 <HAL_SD_GetCardState+0x2c>
  {
    hsd->ErrorCode |= errorstate;
 8004458:	687b      	ldr	r3, [r7, #4]
 800445a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800445c:	697b      	ldr	r3, [r7, #20]
 800445e:	431a      	orrs	r2, r3
 8004460:	687b      	ldr	r3, [r7, #4]
 8004462:	639a      	str	r2, [r3, #56]	; 0x38
  }

  cardstate = ((resp1 >> 9U) & 0x0FU);
 8004464:	68fb      	ldr	r3, [r7, #12]
 8004466:	0a5b      	lsrs	r3, r3, #9
 8004468:	f003 030f 	and.w	r3, r3, #15
 800446c:	613b      	str	r3, [r7, #16]

  return (HAL_SD_CardStateTypeDef)cardstate;
 800446e:	693b      	ldr	r3, [r7, #16]
}
 8004470:	4618      	mov	r0, r3
 8004472:	3718      	adds	r7, #24
 8004474:	46bd      	mov	sp, r7
 8004476:	bd80      	pop	{r7, pc}

08004478 <SD_InitCard>:
  * @brief  Initializes the sd card.
  * @param  hsd: Pointer to SD handle
  * @retval SD Card error state
  */
static uint32_t SD_InitCard(SD_HandleTypeDef *hsd)
{
 8004478:	b5b0      	push	{r4, r5, r7, lr}
 800447a:	b094      	sub	sp, #80	; 0x50
 800447c:	af04      	add	r7, sp, #16
 800447e:	6078      	str	r0, [r7, #4]
  HAL_SD_CardCSDTypeDef CSD;
  uint32_t errorstate;
  uint16_t sd_rca = 1U;
 8004480:	2301      	movs	r3, #1
 8004482:	81fb      	strh	r3, [r7, #14]

  /* Check the power State */
  if(SDIO_GetPowerState(hsd->Instance) == 0U)
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	4618      	mov	r0, r3
 800448a:	f001 f841 	bl	8005510 <SDIO_GetPowerState>
 800448e:	4603      	mov	r3, r0
 8004490:	2b00      	cmp	r3, #0
 8004492:	d102      	bne.n	800449a <SD_InitCard+0x22>
  {
    /* Power off */
    return HAL_SD_ERROR_REQUEST_NOT_APPLICABLE;
 8004494:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8004498:	e0b7      	b.n	800460a <SD_InitCard+0x192>
  }

  if(hsd->SdCard.CardType != CARD_SECURED)
 800449a:	687b      	ldr	r3, [r7, #4]
 800449c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800449e:	2b03      	cmp	r3, #3
 80044a0:	d02f      	beq.n	8004502 <SD_InitCard+0x8a>
  {
    /* Send CMD2 ALL_SEND_CID */
    errorstate = SDMMC_CmdSendCID(hsd->Instance);
 80044a2:	687b      	ldr	r3, [r7, #4]
 80044a4:	681b      	ldr	r3, [r3, #0]
 80044a6:	4618      	mov	r0, r3
 80044a8:	f001 fa27 	bl	80058fa <SDMMC_CmdSendCID>
 80044ac:	63f8      	str	r0, [r7, #60]	; 0x3c
    if(errorstate != HAL_SD_ERROR_NONE)
 80044ae:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80044b0:	2b00      	cmp	r3, #0
 80044b2:	d001      	beq.n	80044b8 <SD_InitCard+0x40>
    {
      return errorstate;
 80044b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80044b6:	e0a8      	b.n	800460a <SD_InitCard+0x192>
    }
    else
    {
      /* Get Card identification number data */
      hsd->CID[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	681b      	ldr	r3, [r3, #0]
 80044bc:	2100      	movs	r1, #0
 80044be:	4618      	mov	r0, r3
 80044c0:	f001 f86b 	bl	800559a <SDIO_GetResponse>
 80044c4:	4602      	mov	r2, r0
 80044c6:	687b      	ldr	r3, [r7, #4]
 80044c8:	675a      	str	r2, [r3, #116]	; 0x74
      hsd->CID[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 80044ca:	687b      	ldr	r3, [r7, #4]
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	2104      	movs	r1, #4
 80044d0:	4618      	mov	r0, r3
 80044d2:	f001 f862 	bl	800559a <SDIO_GetResponse>
 80044d6:	4602      	mov	r2, r0
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	679a      	str	r2, [r3, #120]	; 0x78
      hsd->CID[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 80044dc:	687b      	ldr	r3, [r7, #4]
 80044de:	681b      	ldr	r3, [r3, #0]
 80044e0:	2108      	movs	r1, #8
 80044e2:	4618      	mov	r0, r3
 80044e4:	f001 f859 	bl	800559a <SDIO_GetResponse>
 80044e8:	4602      	mov	r2, r0
 80044ea:	687b      	ldr	r3, [r7, #4]
 80044ec:	67da      	str	r2, [r3, #124]	; 0x7c
      hsd->CID[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 80044ee:	687b      	ldr	r3, [r7, #4]
 80044f0:	681b      	ldr	r3, [r3, #0]
 80044f2:	210c      	movs	r1, #12
 80044f4:	4618      	mov	r0, r3
 80044f6:	f001 f850 	bl	800559a <SDIO_GetResponse>
 80044fa:	4602      	mov	r2, r0
 80044fc:	687b      	ldr	r3, [r7, #4]
 80044fe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    }
  }

  if(hsd->SdCard.CardType != CARD_SECURED)
 8004502:	687b      	ldr	r3, [r7, #4]
 8004504:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004506:	2b03      	cmp	r3, #3
 8004508:	d00d      	beq.n	8004526 <SD_InitCard+0xae>
  {
    /* Send CMD3 SET_REL_ADDR with argument 0 */
    /* SD Card publishes its RCA. */
    errorstate = SDMMC_CmdSetRelAdd(hsd->Instance, &sd_rca);
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	681b      	ldr	r3, [r3, #0]
 800450e:	f107 020e 	add.w	r2, r7, #14
 8004512:	4611      	mov	r1, r2
 8004514:	4618      	mov	r0, r3
 8004516:	f001 fa2d 	bl	8005974 <SDMMC_CmdSetRelAdd>
 800451a:	63f8      	str	r0, [r7, #60]	; 0x3c
    if(errorstate != HAL_SD_ERROR_NONE)
 800451c:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800451e:	2b00      	cmp	r3, #0
 8004520:	d001      	beq.n	8004526 <SD_InitCard+0xae>
    {
      return errorstate;
 8004522:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004524:	e071      	b.n	800460a <SD_InitCard+0x192>
    }
  }
  if(hsd->SdCard.CardType != CARD_SECURED)
 8004526:	687b      	ldr	r3, [r7, #4]
 8004528:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800452a:	2b03      	cmp	r3, #3
 800452c:	d036      	beq.n	800459c <SD_InitCard+0x124>
  {
    /* Get the SD card RCA */
    hsd->SdCard.RelCardAdd = sd_rca;
 800452e:	89fb      	ldrh	r3, [r7, #14]
 8004530:	461a      	mov	r2, r3
 8004532:	687b      	ldr	r3, [r7, #4]
 8004534:	651a      	str	r2, [r3, #80]	; 0x50

    /* Send CMD9 SEND_CSD with argument as card's RCA */
    errorstate = SDMMC_CmdSendCSD(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	681a      	ldr	r2, [r3, #0]
 800453a:	687b      	ldr	r3, [r7, #4]
 800453c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800453e:	041b      	lsls	r3, r3, #16
 8004540:	4619      	mov	r1, r3
 8004542:	4610      	mov	r0, r2
 8004544:	f001 f9f7 	bl	8005936 <SDMMC_CmdSendCSD>
 8004548:	63f8      	str	r0, [r7, #60]	; 0x3c
    if(errorstate != HAL_SD_ERROR_NONE)
 800454a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800454c:	2b00      	cmp	r3, #0
 800454e:	d001      	beq.n	8004554 <SD_InitCard+0xdc>
    {
      return errorstate;
 8004550:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 8004552:	e05a      	b.n	800460a <SD_InitCard+0x192>
    }
    else
    {
      /* Get Card Specific Data */
      hsd->CSD[0U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 8004554:	687b      	ldr	r3, [r7, #4]
 8004556:	681b      	ldr	r3, [r3, #0]
 8004558:	2100      	movs	r1, #0
 800455a:	4618      	mov	r0, r3
 800455c:	f001 f81d 	bl	800559a <SDIO_GetResponse>
 8004560:	4602      	mov	r2, r0
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	665a      	str	r2, [r3, #100]	; 0x64
      hsd->CSD[1U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP2);
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	681b      	ldr	r3, [r3, #0]
 800456a:	2104      	movs	r1, #4
 800456c:	4618      	mov	r0, r3
 800456e:	f001 f814 	bl	800559a <SDIO_GetResponse>
 8004572:	4602      	mov	r2, r0
 8004574:	687b      	ldr	r3, [r7, #4]
 8004576:	669a      	str	r2, [r3, #104]	; 0x68
      hsd->CSD[2U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP3);
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	2108      	movs	r1, #8
 800457e:	4618      	mov	r0, r3
 8004580:	f001 f80b 	bl	800559a <SDIO_GetResponse>
 8004584:	4602      	mov	r2, r0
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	66da      	str	r2, [r3, #108]	; 0x6c
      hsd->CSD[3U] = SDIO_GetResponse(hsd->Instance, SDIO_RESP4);
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	210c      	movs	r1, #12
 8004590:	4618      	mov	r0, r3
 8004592:	f001 f802 	bl	800559a <SDIO_GetResponse>
 8004596:	4602      	mov	r2, r0
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	671a      	str	r2, [r3, #112]	; 0x70
    }
  }

  /* Get the Card Class */
  hsd->SdCard.Class = (SDIO_GetResponse(hsd->Instance, SDIO_RESP2) >> 20U);
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	681b      	ldr	r3, [r3, #0]
 80045a0:	2104      	movs	r1, #4
 80045a2:	4618      	mov	r0, r3
 80045a4:	f000 fff9 	bl	800559a <SDIO_GetResponse>
 80045a8:	4603      	mov	r3, r0
 80045aa:	0d1a      	lsrs	r2, r3, #20
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	64da      	str	r2, [r3, #76]	; 0x4c

  /* Get CSD parameters */
  if (HAL_SD_GetCardCSD(hsd, &CSD) != HAL_OK)
 80045b0:	f107 0310 	add.w	r3, r7, #16
 80045b4:	4619      	mov	r1, r3
 80045b6:	6878      	ldr	r0, [r7, #4]
 80045b8:	f7ff fd6e 	bl	8004098 <HAL_SD_GetCardCSD>
 80045bc:	4603      	mov	r3, r0
 80045be:	2b00      	cmp	r3, #0
 80045c0:	d002      	beq.n	80045c8 <SD_InitCard+0x150>
  {
    return HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 80045c2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80045c6:	e020      	b.n	800460a <SD_InitCard+0x192>
  }

  /* Select the Card */
  errorstate = SDMMC_CmdSelDesel(hsd->Instance, (uint32_t)(((uint32_t)hsd->SdCard.RelCardAdd) << 16U));
 80045c8:	687b      	ldr	r3, [r7, #4]
 80045ca:	6819      	ldr	r1, [r3, #0]
 80045cc:	687b      	ldr	r3, [r7, #4]
 80045ce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80045d0:	041b      	lsls	r3, r3, #16
 80045d2:	f04f 0400 	mov.w	r4, #0
 80045d6:	461a      	mov	r2, r3
 80045d8:	4623      	mov	r3, r4
 80045da:	4608      	mov	r0, r1
 80045dc:	f001 f8e8 	bl	80057b0 <SDMMC_CmdSelDesel>
 80045e0:	63f8      	str	r0, [r7, #60]	; 0x3c
  if(errorstate != HAL_SD_ERROR_NONE)
 80045e2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80045e4:	2b00      	cmp	r3, #0
 80045e6:	d001      	beq.n	80045ec <SD_InitCard+0x174>
  {
    return errorstate;
 80045e8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80045ea:	e00e      	b.n	800460a <SD_InitCard+0x192>
  }

  /* Configure SDIO peripheral interface */
  (void)SDIO_Init(hsd->Instance, hsd->Init);
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681d      	ldr	r5, [r3, #0]
 80045f0:	687b      	ldr	r3, [r7, #4]
 80045f2:	466c      	mov	r4, sp
 80045f4:	f103 0210 	add.w	r2, r3, #16
 80045f8:	ca07      	ldmia	r2, {r0, r1, r2}
 80045fa:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80045fe:	3304      	adds	r3, #4
 8004600:	cb0e      	ldmia	r3, {r1, r2, r3}
 8004602:	4628      	mov	r0, r5
 8004604:	f000 ff2c 	bl	8005460 <SDIO_Init>

  /* All cards are initialized */
  return HAL_SD_ERROR_NONE;
 8004608:	2300      	movs	r3, #0
}
 800460a:	4618      	mov	r0, r3
 800460c:	3740      	adds	r7, #64	; 0x40
 800460e:	46bd      	mov	sp, r7
 8004610:	bdb0      	pop	{r4, r5, r7, pc}
	...

08004614 <SD_PowerON>:
  *         in the SD handle.
  * @param  hsd: Pointer to SD handle
  * @retval error state
  */
static uint32_t SD_PowerON(SD_HandleTypeDef *hsd)
{
 8004614:	b580      	push	{r7, lr}
 8004616:	b086      	sub	sp, #24
 8004618:	af00      	add	r7, sp, #0
 800461a:	6078      	str	r0, [r7, #4]
  __IO uint32_t count = 0U;
 800461c:	2300      	movs	r3, #0
 800461e:	60bb      	str	r3, [r7, #8]
  uint32_t response = 0U, validvoltage = 0U;
 8004620:	2300      	movs	r3, #0
 8004622:	617b      	str	r3, [r7, #20]
 8004624:	2300      	movs	r3, #0
 8004626:	613b      	str	r3, [r7, #16]
  uint32_t errorstate;

  /* CMD0: GO_IDLE_STATE */
  errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 8004628:	687b      	ldr	r3, [r7, #4]
 800462a:	681b      	ldr	r3, [r3, #0]
 800462c:	4618      	mov	r0, r3
 800462e:	f001 f8e2 	bl	80057f6 <SDMMC_CmdGoIdleState>
 8004632:	60f8      	str	r0, [r7, #12]
  if(errorstate != HAL_SD_ERROR_NONE)
 8004634:	68fb      	ldr	r3, [r7, #12]
 8004636:	2b00      	cmp	r3, #0
 8004638:	d001      	beq.n	800463e <SD_PowerON+0x2a>
  {
    return errorstate;
 800463a:	68fb      	ldr	r3, [r7, #12]
 800463c:	e072      	b.n	8004724 <SD_PowerON+0x110>
  }

  /* CMD8: SEND_IF_COND: Command available only on V2.0 cards */
  errorstate = SDMMC_CmdOperCond(hsd->Instance);
 800463e:	687b      	ldr	r3, [r7, #4]
 8004640:	681b      	ldr	r3, [r3, #0]
 8004642:	4618      	mov	r0, r3
 8004644:	f001 f8f5 	bl	8005832 <SDMMC_CmdOperCond>
 8004648:	60f8      	str	r0, [r7, #12]
  if(errorstate != HAL_SD_ERROR_NONE)
 800464a:	68fb      	ldr	r3, [r7, #12]
 800464c:	2b00      	cmp	r3, #0
 800464e:	d00d      	beq.n	800466c <SD_PowerON+0x58>
  {
    hsd->SdCard.CardVersion = CARD_V1_X;
 8004650:	687b      	ldr	r3, [r7, #4]
 8004652:	2200      	movs	r2, #0
 8004654:	649a      	str	r2, [r3, #72]	; 0x48
    /* CMD0: GO_IDLE_STATE */
    errorstate = SDMMC_CmdGoIdleState(hsd->Instance);
 8004656:	687b      	ldr	r3, [r7, #4]
 8004658:	681b      	ldr	r3, [r3, #0]
 800465a:	4618      	mov	r0, r3
 800465c:	f001 f8cb 	bl	80057f6 <SDMMC_CmdGoIdleState>
 8004660:	60f8      	str	r0, [r7, #12]
    if(errorstate != HAL_SD_ERROR_NONE)
 8004662:	68fb      	ldr	r3, [r7, #12]
 8004664:	2b00      	cmp	r3, #0
 8004666:	d004      	beq.n	8004672 <SD_PowerON+0x5e>
    {
      return errorstate;
 8004668:	68fb      	ldr	r3, [r7, #12]
 800466a:	e05b      	b.n	8004724 <SD_PowerON+0x110>
    }

  }
  else
  {
    hsd->SdCard.CardVersion = CARD_V2_X;
 800466c:	687b      	ldr	r3, [r7, #4]
 800466e:	2201      	movs	r2, #1
 8004670:	649a      	str	r2, [r3, #72]	; 0x48
  }

  if( hsd->SdCard.CardVersion == CARD_V2_X)
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004676:	2b01      	cmp	r3, #1
 8004678:	d137      	bne.n	80046ea <SD_PowerON+0xd6>
  {
    /* SEND CMD55 APP_CMD with RCA as 0 */
    errorstate = SDMMC_CmdAppCommand(hsd->Instance, 0);
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	681b      	ldr	r3, [r3, #0]
 800467e:	2100      	movs	r1, #0
 8004680:	4618      	mov	r0, r3
 8004682:	f001 f8f5 	bl	8005870 <SDMMC_CmdAppCommand>
 8004686:	60f8      	str	r0, [r7, #12]
    if(errorstate != HAL_SD_ERROR_NONE)
 8004688:	68fb      	ldr	r3, [r7, #12]
 800468a:	2b00      	cmp	r3, #0
 800468c:	d02d      	beq.n	80046ea <SD_PowerON+0xd6>
    {
      return HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 800468e:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8004692:	e047      	b.n	8004724 <SD_PowerON+0x110>
  /* SD CARD */
  /* Send ACMD41 SD_APP_OP_COND with Argument 0x80100000 */
  while((count < SDMMC_MAX_VOLT_TRIAL) && (validvoltage == 0U))
  {
    /* SEND CMD55 APP_CMD with RCA as 0 */
    errorstate = SDMMC_CmdAppCommand(hsd->Instance, 0);
 8004694:	687b      	ldr	r3, [r7, #4]
 8004696:	681b      	ldr	r3, [r3, #0]
 8004698:	2100      	movs	r1, #0
 800469a:	4618      	mov	r0, r3
 800469c:	f001 f8e8 	bl	8005870 <SDMMC_CmdAppCommand>
 80046a0:	60f8      	str	r0, [r7, #12]
    if(errorstate != HAL_SD_ERROR_NONE)
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	2b00      	cmp	r3, #0
 80046a6:	d001      	beq.n	80046ac <SD_PowerON+0x98>
    {
      return errorstate;
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	e03b      	b.n	8004724 <SD_PowerON+0x110>
    }

    /* Send CMD41 */
    errorstate = SDMMC_CmdAppOperCommand(hsd->Instance, SDMMC_VOLTAGE_WINDOW_SD | SDMMC_HIGH_CAPACITY | SD_SWITCH_1_8V_CAPACITY);
 80046ac:	687b      	ldr	r3, [r7, #4]
 80046ae:	681b      	ldr	r3, [r3, #0]
 80046b0:	491e      	ldr	r1, [pc, #120]	; (800472c <SD_PowerON+0x118>)
 80046b2:	4618      	mov	r0, r3
 80046b4:	f001 f8fe 	bl	80058b4 <SDMMC_CmdAppOperCommand>
 80046b8:	60f8      	str	r0, [r7, #12]
    if(errorstate != HAL_SD_ERROR_NONE)
 80046ba:	68fb      	ldr	r3, [r7, #12]
 80046bc:	2b00      	cmp	r3, #0
 80046be:	d002      	beq.n	80046c6 <SD_PowerON+0xb2>
    {
      return HAL_SD_ERROR_UNSUPPORTED_FEATURE;
 80046c0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80046c4:	e02e      	b.n	8004724 <SD_PowerON+0x110>
    }

    /* Get command response */
    response = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 80046c6:	687b      	ldr	r3, [r7, #4]
 80046c8:	681b      	ldr	r3, [r3, #0]
 80046ca:	2100      	movs	r1, #0
 80046cc:	4618      	mov	r0, r3
 80046ce:	f000 ff64 	bl	800559a <SDIO_GetResponse>
 80046d2:	6178      	str	r0, [r7, #20]

    /* Get operating voltage*/
    validvoltage = (((response >> 31U) == 1U) ? 1U : 0U);
 80046d4:	697b      	ldr	r3, [r7, #20]
 80046d6:	0fdb      	lsrs	r3, r3, #31
 80046d8:	2b01      	cmp	r3, #1
 80046da:	d101      	bne.n	80046e0 <SD_PowerON+0xcc>
 80046dc:	2301      	movs	r3, #1
 80046de:	e000      	b.n	80046e2 <SD_PowerON+0xce>
 80046e0:	2300      	movs	r3, #0
 80046e2:	613b      	str	r3, [r7, #16]

    count++;
 80046e4:	68bb      	ldr	r3, [r7, #8]
 80046e6:	3301      	adds	r3, #1
 80046e8:	60bb      	str	r3, [r7, #8]
  while((count < SDMMC_MAX_VOLT_TRIAL) && (validvoltage == 0U))
 80046ea:	68bb      	ldr	r3, [r7, #8]
 80046ec:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80046f0:	4293      	cmp	r3, r2
 80046f2:	d802      	bhi.n	80046fa <SD_PowerON+0xe6>
 80046f4:	693b      	ldr	r3, [r7, #16]
 80046f6:	2b00      	cmp	r3, #0
 80046f8:	d0cc      	beq.n	8004694 <SD_PowerON+0x80>
  }

  if(count >= SDMMC_MAX_VOLT_TRIAL)
 80046fa:	68bb      	ldr	r3, [r7, #8]
 80046fc:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8004700:	4293      	cmp	r3, r2
 8004702:	d902      	bls.n	800470a <SD_PowerON+0xf6>
  {
    return HAL_SD_ERROR_INVALID_VOLTRANGE;
 8004704:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8004708:	e00c      	b.n	8004724 <SD_PowerON+0x110>
  }

  if((response & SDMMC_HIGH_CAPACITY) == SDMMC_HIGH_CAPACITY) /* (response &= SD_HIGH_CAPACITY) */
 800470a:	697b      	ldr	r3, [r7, #20]
 800470c:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8004710:	2b00      	cmp	r3, #0
 8004712:	d003      	beq.n	800471c <SD_PowerON+0x108>
  {
    hsd->SdCard.CardType = CARD_SDHC_SDXC;
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	2201      	movs	r2, #1
 8004718:	645a      	str	r2, [r3, #68]	; 0x44
 800471a:	e002      	b.n	8004722 <SD_PowerON+0x10e>
  }
  else
  {
    hsd->SdCard.CardType = CARD_SDSC;
 800471c:	687b      	ldr	r3, [r7, #4]
 800471e:	2200      	movs	r2, #0
 8004720:	645a      	str	r2, [r3, #68]	; 0x44
  }


  return HAL_SD_ERROR_NONE;
 8004722:	2300      	movs	r3, #0
}
 8004724:	4618      	mov	r0, r3
 8004726:	3718      	adds	r7, #24
 8004728:	46bd      	mov	sp, r7
 800472a:	bd80      	pop	{r7, pc}
 800472c:	c1100000 	.word	0xc1100000

08004730 <SD_SendStatus>:
  * @param  pCardStatus: pointer to the buffer that will contain the SD card
  *         status (Card Status register)
  * @retval error state
  */
static uint32_t SD_SendStatus(SD_HandleTypeDef *hsd, uint32_t *pCardStatus)
{
 8004730:	b580      	push	{r7, lr}
 8004732:	b084      	sub	sp, #16
 8004734:	af00      	add	r7, sp, #0
 8004736:	6078      	str	r0, [r7, #4]
 8004738:	6039      	str	r1, [r7, #0]
  uint32_t errorstate;

  if(pCardStatus == NULL)
 800473a:	683b      	ldr	r3, [r7, #0]
 800473c:	2b00      	cmp	r3, #0
 800473e:	d102      	bne.n	8004746 <SD_SendStatus+0x16>
  {
    return HAL_SD_ERROR_PARAM;
 8004740:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8004744:	e018      	b.n	8004778 <SD_SendStatus+0x48>
  }

  /* Send Status command */
  errorstate = SDMMC_CmdSendStatus(hsd->Instance, (uint32_t)(hsd->SdCard.RelCardAdd << 16U));
 8004746:	687b      	ldr	r3, [r7, #4]
 8004748:	681a      	ldr	r2, [r3, #0]
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800474e:	041b      	lsls	r3, r3, #16
 8004750:	4619      	mov	r1, r3
 8004752:	4610      	mov	r0, r2
 8004754:	f001 f92f 	bl	80059b6 <SDMMC_CmdSendStatus>
 8004758:	60f8      	str	r0, [r7, #12]
  if(errorstate != HAL_SD_ERROR_NONE)
 800475a:	68fb      	ldr	r3, [r7, #12]
 800475c:	2b00      	cmp	r3, #0
 800475e:	d001      	beq.n	8004764 <SD_SendStatus+0x34>
  {
    return errorstate;
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	e009      	b.n	8004778 <SD_SendStatus+0x48>
  }

  /* Get SD card status */
  *pCardStatus = SDIO_GetResponse(hsd->Instance, SDIO_RESP1);
 8004764:	687b      	ldr	r3, [r7, #4]
 8004766:	681b      	ldr	r3, [r3, #0]
 8004768:	2100      	movs	r1, #0
 800476a:	4618      	mov	r0, r3
 800476c:	f000 ff15 	bl	800559a <SDIO_GetResponse>
 8004770:	4602      	mov	r2, r0
 8004772:	683b      	ldr	r3, [r7, #0]
 8004774:	601a      	str	r2, [r3, #0]

  return HAL_SD_ERROR_NONE;
 8004776:	2300      	movs	r3, #0
}
 8004778:	4618      	mov	r0, r3
 800477a:	3710      	adds	r7, #16
 800477c:	46bd      	mov	sp, r7
 800477e:	bd80      	pop	{r7, pc}

08004780 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8004780:	b580      	push	{r7, lr}
 8004782:	b082      	sub	sp, #8
 8004784:	af00      	add	r7, sp, #0
 8004786:	6078      	str	r0, [r7, #4]
 8004788:	6039      	str	r1, [r7, #0]
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 800478a:	687b      	ldr	r3, [r7, #4]
 800478c:	2b00      	cmp	r3, #0
 800478e:	d101      	bne.n	8004794 <HAL_SDRAM_Init+0x14>
  {
    return HAL_ERROR;
 8004790:	2301      	movs	r3, #1
 8004792:	e025      	b.n	80047e0 <HAL_SDRAM_Init+0x60>
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 8004794:	687b      	ldr	r3, [r7, #4]
 8004796:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800479a:	b2db      	uxtb	r3, r3
 800479c:	2b00      	cmp	r3, #0
 800479e:	d106      	bne.n	80047ae <HAL_SDRAM_Init+0x2e>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	2200      	movs	r2, #0
 80047a4:	f883 202d 	strb.w	r2, [r3, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 80047a8:	6878      	ldr	r0, [r7, #4]
 80047aa:	f7fc f86d 	bl	8000888 <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	2202      	movs	r2, #2
 80047b2:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	681a      	ldr	r2, [r3, #0]
 80047ba:	687b      	ldr	r3, [r7, #4]
 80047bc:	3304      	adds	r3, #4
 80047be:	4619      	mov	r1, r3
 80047c0:	4610      	mov	r0, r2
 80047c2:	f000 fd09 	bl	80051d8 <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	6818      	ldr	r0, [r3, #0]
 80047ca:	687b      	ldr	r3, [r7, #4]
 80047cc:	685b      	ldr	r3, [r3, #4]
 80047ce:	461a      	mov	r2, r3
 80047d0:	6839      	ldr	r1, [r7, #0]
 80047d2:	f000 fd74 	bl	80052be <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	2201      	movs	r2, #1
 80047da:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 80047de:	2300      	movs	r3, #0
}
 80047e0:	4618      	mov	r0, r3
 80047e2:	3708      	adds	r7, #8
 80047e4:	46bd      	mov	sp, r7
 80047e6:	bd80      	pop	{r7, pc}

080047e8 <HAL_SDRAM_WriteProtection_Disable>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_WriteProtection_Disable(SDRAM_HandleTypeDef *hsdram)
{
 80047e8:	b580      	push	{r7, lr}
 80047ea:	b082      	sub	sp, #8
 80047ec:	af00      	add	r7, sp, #0
 80047ee:	6078      	str	r0, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80047f0:	687b      	ldr	r3, [r7, #4]
 80047f2:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 80047f6:	b2db      	uxtb	r3, r3
 80047f8:	2b02      	cmp	r3, #2
 80047fa:	d101      	bne.n	8004800 <HAL_SDRAM_WriteProtection_Disable+0x18>
  {
    return HAL_BUSY;
 80047fc:	2302      	movs	r3, #2
 80047fe:	e010      	b.n	8004822 <HAL_SDRAM_WriteProtection_Disable+0x3a>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004800:	687b      	ldr	r3, [r7, #4]
 8004802:	2202      	movs	r2, #2
 8004804:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Disable write protection */
  FMC_SDRAM_WriteProtection_Disable(hsdram->Instance, hsdram->Init.SDBank);
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681a      	ldr	r2, [r3, #0]
 800480c:	687b      	ldr	r3, [r7, #4]
 800480e:	685b      	ldr	r3, [r3, #4]
 8004810:	4619      	mov	r1, r3
 8004812:	4610      	mov	r0, r2
 8004814:	f000 fdd2 	bl	80053bc <FMC_SDRAM_WriteProtection_Disable>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8004818:	687b      	ldr	r3, [r7, #4]
 800481a:	2201      	movs	r2, #1
 800481c:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  return HAL_OK;
 8004820:	2300      	movs	r3, #0
}
 8004822:	4618      	mov	r0, r3
 8004824:	3708      	adds	r7, #8
 8004826:	46bd      	mov	sp, r7
 8004828:	bd80      	pop	{r7, pc}

0800482a <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800482a:	b580      	push	{r7, lr}
 800482c:	b084      	sub	sp, #16
 800482e:	af00      	add	r7, sp, #0
 8004830:	60f8      	str	r0, [r7, #12]
 8004832:	60b9      	str	r1, [r7, #8]
 8004834:	607a      	str	r2, [r7, #4]
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 8004836:	68fb      	ldr	r3, [r7, #12]
 8004838:	f893 302c 	ldrb.w	r3, [r3, #44]	; 0x2c
 800483c:	b2db      	uxtb	r3, r3
 800483e:	2b02      	cmp	r3, #2
 8004840:	d101      	bne.n	8004846 <HAL_SDRAM_SendCommand+0x1c>
  {
    return HAL_BUSY;
 8004842:	2302      	movs	r3, #2
 8004844:	e018      	b.n	8004878 <HAL_SDRAM_SendCommand+0x4e>
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8004846:	68fb      	ldr	r3, [r7, #12]
 8004848:	2202      	movs	r2, #2
 800484a:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 800484e:	68fb      	ldr	r3, [r7, #12]
 8004850:	681b      	ldr	r3, [r3, #0]
 8004852:	687a      	ldr	r2, [r7, #4]
 8004854:	68b9      	ldr	r1, [r7, #8]
 8004856:	4618      	mov	r0, r3
 8004858:	f000 fdc6 	bl	80053e8 <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 800485c:	68bb      	ldr	r3, [r7, #8]
 800485e:	681b      	ldr	r3, [r3, #0]
 8004860:	2b02      	cmp	r3, #2
 8004862:	d104      	bne.n	800486e <HAL_SDRAM_SendCommand+0x44>
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8004864:	68fb      	ldr	r3, [r7, #12]
 8004866:	2205      	movs	r2, #5
 8004868:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
 800486c:	e003      	b.n	8004876 <HAL_SDRAM_SendCommand+0x4c>
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 800486e:	68fb      	ldr	r3, [r7, #12]
 8004870:	2201      	movs	r2, #1
 8004872:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
  }
  
  return HAL_OK;  
 8004876:	2300      	movs	r3, #0
}
 8004878:	4618      	mov	r0, r3
 800487a:	3710      	adds	r7, #16
 800487c:	46bd      	mov	sp, r7
 800487e:	bd80      	pop	{r7, pc}

08004880 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8004880:	b580      	push	{r7, lr}
 8004882:	b082      	sub	sp, #8
 8004884:	af00      	add	r7, sp, #0
 8004886:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	2b00      	cmp	r3, #0
 800488c:	d101      	bne.n	8004892 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 800488e:	2301      	movs	r3, #1
 8004890:	e03f      	b.n	8004912 <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 8004892:	687b      	ldr	r3, [r7, #4]
 8004894:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8004898:	b2db      	uxtb	r3, r3
 800489a:	2b00      	cmp	r3, #0
 800489c:	d106      	bne.n	80048ac <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 800489e:	687b      	ldr	r3, [r7, #4]
 80048a0:	2200      	movs	r2, #0
 80048a2:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 80048a6:	6878      	ldr	r0, [r7, #4]
 80048a8:	f7fc fd90 	bl	80013cc <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 80048ac:	687b      	ldr	r3, [r7, #4]
 80048ae:	2224      	movs	r2, #36	; 0x24
 80048b0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	681b      	ldr	r3, [r3, #0]
 80048b8:	68da      	ldr	r2, [r3, #12]
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80048c2:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 80048c4:	6878      	ldr	r0, [r7, #4]
 80048c6:	f000 f90b 	bl	8004ae0 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 80048ca:	687b      	ldr	r3, [r7, #4]
 80048cc:	681b      	ldr	r3, [r3, #0]
 80048ce:	691a      	ldr	r2, [r3, #16]
 80048d0:	687b      	ldr	r3, [r7, #4]
 80048d2:	681b      	ldr	r3, [r3, #0]
 80048d4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80048d8:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	681b      	ldr	r3, [r3, #0]
 80048de:	695a      	ldr	r2, [r3, #20]
 80048e0:	687b      	ldr	r3, [r7, #4]
 80048e2:	681b      	ldr	r3, [r3, #0]
 80048e4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80048e8:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 80048ea:	687b      	ldr	r3, [r7, #4]
 80048ec:	681b      	ldr	r3, [r3, #0]
 80048ee:	68da      	ldr	r2, [r3, #12]
 80048f0:	687b      	ldr	r3, [r7, #4]
 80048f2:	681b      	ldr	r3, [r3, #0]
 80048f4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80048f8:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80048fa:	687b      	ldr	r3, [r7, #4]
 80048fc:	2200      	movs	r2, #0
 80048fe:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 8004900:	687b      	ldr	r3, [r7, #4]
 8004902:	2220      	movs	r2, #32
 8004904:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 8004908:	687b      	ldr	r3, [r7, #4]
 800490a:	2220      	movs	r2, #32
 800490c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 8004910:	2300      	movs	r3, #0
}
 8004912:	4618      	mov	r0, r3
 8004914:	3708      	adds	r7, #8
 8004916:	46bd      	mov	sp, r7
 8004918:	bd80      	pop	{r7, pc}

0800491a <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800491a:	b580      	push	{r7, lr}
 800491c:	b088      	sub	sp, #32
 800491e:	af02      	add	r7, sp, #8
 8004920:	60f8      	str	r0, [r7, #12]
 8004922:	60b9      	str	r1, [r7, #8]
 8004924:	603b      	str	r3, [r7, #0]
 8004926:	4613      	mov	r3, r2
 8004928:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 800492a:	2300      	movs	r3, #0
 800492c:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 8004934:	b2db      	uxtb	r3, r3
 8004936:	2b20      	cmp	r3, #32
 8004938:	f040 8083 	bne.w	8004a42 <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 800493c:	68bb      	ldr	r3, [r7, #8]
 800493e:	2b00      	cmp	r3, #0
 8004940:	d002      	beq.n	8004948 <HAL_UART_Transmit+0x2e>
 8004942:	88fb      	ldrh	r3, [r7, #6]
 8004944:	2b00      	cmp	r3, #0
 8004946:	d101      	bne.n	800494c <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 8004948:	2301      	movs	r3, #1
 800494a:	e07b      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 800494c:	68fb      	ldr	r3, [r7, #12]
 800494e:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 8004952:	2b01      	cmp	r3, #1
 8004954:	d101      	bne.n	800495a <HAL_UART_Transmit+0x40>
 8004956:	2302      	movs	r3, #2
 8004958:	e074      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
 800495a:	68fb      	ldr	r3, [r7, #12]
 800495c:	2201      	movs	r2, #1
 800495e:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	2200      	movs	r2, #0
 8004966:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004968:	68fb      	ldr	r3, [r7, #12]
 800496a:	2221      	movs	r2, #33	; 0x21
 800496c:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 8004970:	f7fc fe04 	bl	800157c <HAL_GetTick>
 8004974:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 8004976:	68fb      	ldr	r3, [r7, #12]
 8004978:	88fa      	ldrh	r2, [r7, #6]
 800497a:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 800497c:	68fb      	ldr	r3, [r7, #12]
 800497e:	88fa      	ldrh	r2, [r7, #6]
 8004980:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8004982:	68fb      	ldr	r3, [r7, #12]
 8004984:	2200      	movs	r2, #0
 8004986:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 800498a:	e042      	b.n	8004a12 <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 800498c:	68fb      	ldr	r3, [r7, #12]
 800498e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004990:	b29b      	uxth	r3, r3
 8004992:	3b01      	subs	r3, #1
 8004994:	b29a      	uxth	r2, r3
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 800499a:	68fb      	ldr	r3, [r7, #12]
 800499c:	689b      	ldr	r3, [r3, #8]
 800499e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80049a2:	d122      	bne.n	80049ea <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80049a4:	683b      	ldr	r3, [r7, #0]
 80049a6:	9300      	str	r3, [sp, #0]
 80049a8:	697b      	ldr	r3, [r7, #20]
 80049aa:	2200      	movs	r2, #0
 80049ac:	2180      	movs	r1, #128	; 0x80
 80049ae:	68f8      	ldr	r0, [r7, #12]
 80049b0:	f000 f84c 	bl	8004a4c <UART_WaitOnFlagUntilTimeout>
 80049b4:	4603      	mov	r3, r0
 80049b6:	2b00      	cmp	r3, #0
 80049b8:	d001      	beq.n	80049be <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 80049ba:	2303      	movs	r3, #3
 80049bc:	e042      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 80049be:	68bb      	ldr	r3, [r7, #8]
 80049c0:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 80049c2:	693b      	ldr	r3, [r7, #16]
 80049c4:	881b      	ldrh	r3, [r3, #0]
 80049c6:	461a      	mov	r2, r3
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80049d0:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 80049d2:	68fb      	ldr	r3, [r7, #12]
 80049d4:	691b      	ldr	r3, [r3, #16]
 80049d6:	2b00      	cmp	r3, #0
 80049d8:	d103      	bne.n	80049e2 <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 80049da:	68bb      	ldr	r3, [r7, #8]
 80049dc:	3302      	adds	r3, #2
 80049de:	60bb      	str	r3, [r7, #8]
 80049e0:	e017      	b.n	8004a12 <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 80049e2:	68bb      	ldr	r3, [r7, #8]
 80049e4:	3301      	adds	r3, #1
 80049e6:	60bb      	str	r3, [r7, #8]
 80049e8:	e013      	b.n	8004a12 <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 80049ea:	683b      	ldr	r3, [r7, #0]
 80049ec:	9300      	str	r3, [sp, #0]
 80049ee:	697b      	ldr	r3, [r7, #20]
 80049f0:	2200      	movs	r2, #0
 80049f2:	2180      	movs	r1, #128	; 0x80
 80049f4:	68f8      	ldr	r0, [r7, #12]
 80049f6:	f000 f829 	bl	8004a4c <UART_WaitOnFlagUntilTimeout>
 80049fa:	4603      	mov	r3, r0
 80049fc:	2b00      	cmp	r3, #0
 80049fe:	d001      	beq.n	8004a04 <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 8004a00:	2303      	movs	r3, #3
 8004a02:	e01f      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 8004a04:	68bb      	ldr	r3, [r7, #8]
 8004a06:	1c5a      	adds	r2, r3, #1
 8004a08:	60ba      	str	r2, [r7, #8]
 8004a0a:	781a      	ldrb	r2, [r3, #0]
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8004a16:	b29b      	uxth	r3, r3
 8004a18:	2b00      	cmp	r3, #0
 8004a1a:	d1b7      	bne.n	800498c <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8004a1c:	683b      	ldr	r3, [r7, #0]
 8004a1e:	9300      	str	r3, [sp, #0]
 8004a20:	697b      	ldr	r3, [r7, #20]
 8004a22:	2200      	movs	r2, #0
 8004a24:	2140      	movs	r1, #64	; 0x40
 8004a26:	68f8      	ldr	r0, [r7, #12]
 8004a28:	f000 f810 	bl	8004a4c <UART_WaitOnFlagUntilTimeout>
 8004a2c:	4603      	mov	r3, r0
 8004a2e:	2b00      	cmp	r3, #0
 8004a30:	d001      	beq.n	8004a36 <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 8004a32:	2303      	movs	r3, #3
 8004a34:	e006      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	2220      	movs	r2, #32
 8004a3a:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 8004a3e:	2300      	movs	r3, #0
 8004a40:	e000      	b.n	8004a44 <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 8004a42:	2302      	movs	r3, #2
  }
}
 8004a44:	4618      	mov	r0, r3
 8004a46:	3718      	adds	r7, #24
 8004a48:	46bd      	mov	sp, r7
 8004a4a:	bd80      	pop	{r7, pc}

08004a4c <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8004a4c:	b580      	push	{r7, lr}
 8004a4e:	b084      	sub	sp, #16
 8004a50:	af00      	add	r7, sp, #0
 8004a52:	60f8      	str	r0, [r7, #12]
 8004a54:	60b9      	str	r1, [r7, #8]
 8004a56:	603b      	str	r3, [r7, #0]
 8004a58:	4613      	mov	r3, r2
 8004a5a:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004a5c:	e02c      	b.n	8004ab8 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004a5e:	69bb      	ldr	r3, [r7, #24]
 8004a60:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a64:	d028      	beq.n	8004ab8 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8004a66:	69bb      	ldr	r3, [r7, #24]
 8004a68:	2b00      	cmp	r3, #0
 8004a6a:	d007      	beq.n	8004a7c <UART_WaitOnFlagUntilTimeout+0x30>
 8004a6c:	f7fc fd86 	bl	800157c <HAL_GetTick>
 8004a70:	4602      	mov	r2, r0
 8004a72:	683b      	ldr	r3, [r7, #0]
 8004a74:	1ad3      	subs	r3, r2, r3
 8004a76:	69ba      	ldr	r2, [r7, #24]
 8004a78:	429a      	cmp	r2, r3
 8004a7a:	d21d      	bcs.n	8004ab8 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	681b      	ldr	r3, [r3, #0]
 8004a80:	68da      	ldr	r2, [r3, #12]
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	681b      	ldr	r3, [r3, #0]
 8004a86:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 8004a8a:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8004a8c:	68fb      	ldr	r3, [r7, #12]
 8004a8e:	681b      	ldr	r3, [r3, #0]
 8004a90:	695a      	ldr	r2, [r3, #20]
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	681b      	ldr	r3, [r3, #0]
 8004a96:	f022 0201 	bic.w	r2, r2, #1
 8004a9a:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	2220      	movs	r2, #32
 8004aa0:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 8004aa4:	68fb      	ldr	r3, [r7, #12]
 8004aa6:	2220      	movs	r2, #32
 8004aa8:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 8004aac:	68fb      	ldr	r3, [r7, #12]
 8004aae:	2200      	movs	r2, #0
 8004ab0:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 8004ab4:	2303      	movs	r3, #3
 8004ab6:	e00f      	b.n	8004ad8 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8004ab8:	68fb      	ldr	r3, [r7, #12]
 8004aba:	681b      	ldr	r3, [r3, #0]
 8004abc:	681a      	ldr	r2, [r3, #0]
 8004abe:	68bb      	ldr	r3, [r7, #8]
 8004ac0:	4013      	ands	r3, r2
 8004ac2:	68ba      	ldr	r2, [r7, #8]
 8004ac4:	429a      	cmp	r2, r3
 8004ac6:	bf0c      	ite	eq
 8004ac8:	2301      	moveq	r3, #1
 8004aca:	2300      	movne	r3, #0
 8004acc:	b2db      	uxtb	r3, r3
 8004ace:	461a      	mov	r2, r3
 8004ad0:	79fb      	ldrb	r3, [r7, #7]
 8004ad2:	429a      	cmp	r2, r3
 8004ad4:	d0c3      	beq.n	8004a5e <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 8004ad6:	2300      	movs	r3, #0
}
 8004ad8:	4618      	mov	r0, r3
 8004ada:	3710      	adds	r7, #16
 8004adc:	46bd      	mov	sp, r7
 8004ade:	bd80      	pop	{r7, pc}

08004ae0 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 8004ae0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004ae4:	b085      	sub	sp, #20
 8004ae6:	af00      	add	r7, sp, #0
 8004ae8:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	681b      	ldr	r3, [r3, #0]
 8004aee:	691b      	ldr	r3, [r3, #16]
 8004af0:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	68da      	ldr	r2, [r3, #12]
 8004af8:	687b      	ldr	r3, [r7, #4]
 8004afa:	681b      	ldr	r3, [r3, #0]
 8004afc:	430a      	orrs	r2, r1
 8004afe:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8004b00:	687b      	ldr	r3, [r7, #4]
 8004b02:	689a      	ldr	r2, [r3, #8]
 8004b04:	687b      	ldr	r3, [r7, #4]
 8004b06:	691b      	ldr	r3, [r3, #16]
 8004b08:	431a      	orrs	r2, r3
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	695b      	ldr	r3, [r3, #20]
 8004b0e:	431a      	orrs	r2, r3
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	69db      	ldr	r3, [r3, #28]
 8004b14:	4313      	orrs	r3, r2
 8004b16:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 8004b18:	687b      	ldr	r3, [r7, #4]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	68db      	ldr	r3, [r3, #12]
 8004b1e:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 8004b22:	f023 030c 	bic.w	r3, r3, #12
 8004b26:	687a      	ldr	r2, [r7, #4]
 8004b28:	6812      	ldr	r2, [r2, #0]
 8004b2a:	68f9      	ldr	r1, [r7, #12]
 8004b2c:	430b      	orrs	r3, r1
 8004b2e:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8004b30:	687b      	ldr	r3, [r7, #4]
 8004b32:	681b      	ldr	r3, [r3, #0]
 8004b34:	695b      	ldr	r3, [r3, #20]
 8004b36:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	699a      	ldr	r2, [r3, #24]
 8004b3e:	687b      	ldr	r3, [r7, #4]
 8004b40:	681b      	ldr	r3, [r3, #0]
 8004b42:	430a      	orrs	r2, r1
 8004b44:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	69db      	ldr	r3, [r3, #28]
 8004b4a:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8004b4e:	f040 818b 	bne.w	8004e68 <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	4ac1      	ldr	r2, [pc, #772]	; (8004e5c <UART_SetConfig+0x37c>)
 8004b58:	4293      	cmp	r3, r2
 8004b5a:	d005      	beq.n	8004b68 <UART_SetConfig+0x88>
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	681b      	ldr	r3, [r3, #0]
 8004b60:	4abf      	ldr	r2, [pc, #764]	; (8004e60 <UART_SetConfig+0x380>)
 8004b62:	4293      	cmp	r3, r2
 8004b64:	f040 80bd 	bne.w	8004ce2 <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8004b68:	f7fe fc98 	bl	800349c <HAL_RCC_GetPCLK2Freq>
 8004b6c:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8004b6e:	68bb      	ldr	r3, [r7, #8]
 8004b70:	461d      	mov	r5, r3
 8004b72:	f04f 0600 	mov.w	r6, #0
 8004b76:	46a8      	mov	r8, r5
 8004b78:	46b1      	mov	r9, r6
 8004b7a:	eb18 0308 	adds.w	r3, r8, r8
 8004b7e:	eb49 0409 	adc.w	r4, r9, r9
 8004b82:	4698      	mov	r8, r3
 8004b84:	46a1      	mov	r9, r4
 8004b86:	eb18 0805 	adds.w	r8, r8, r5
 8004b8a:	eb49 0906 	adc.w	r9, r9, r6
 8004b8e:	f04f 0100 	mov.w	r1, #0
 8004b92:	f04f 0200 	mov.w	r2, #0
 8004b96:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8004b9a:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8004b9e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8004ba2:	4688      	mov	r8, r1
 8004ba4:	4691      	mov	r9, r2
 8004ba6:	eb18 0005 	adds.w	r0, r8, r5
 8004baa:	eb49 0106 	adc.w	r1, r9, r6
 8004bae:	687b      	ldr	r3, [r7, #4]
 8004bb0:	685b      	ldr	r3, [r3, #4]
 8004bb2:	461d      	mov	r5, r3
 8004bb4:	f04f 0600 	mov.w	r6, #0
 8004bb8:	196b      	adds	r3, r5, r5
 8004bba:	eb46 0406 	adc.w	r4, r6, r6
 8004bbe:	461a      	mov	r2, r3
 8004bc0:	4623      	mov	r3, r4
 8004bc2:	f7fb fb65 	bl	8000290 <__aeabi_uldivmod>
 8004bc6:	4603      	mov	r3, r0
 8004bc8:	460c      	mov	r4, r1
 8004bca:	461a      	mov	r2, r3
 8004bcc:	4ba5      	ldr	r3, [pc, #660]	; (8004e64 <UART_SetConfig+0x384>)
 8004bce:	fba3 2302 	umull	r2, r3, r3, r2
 8004bd2:	095b      	lsrs	r3, r3, #5
 8004bd4:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004bd8:	68bb      	ldr	r3, [r7, #8]
 8004bda:	461d      	mov	r5, r3
 8004bdc:	f04f 0600 	mov.w	r6, #0
 8004be0:	46a9      	mov	r9, r5
 8004be2:	46b2      	mov	sl, r6
 8004be4:	eb19 0309 	adds.w	r3, r9, r9
 8004be8:	eb4a 040a 	adc.w	r4, sl, sl
 8004bec:	4699      	mov	r9, r3
 8004bee:	46a2      	mov	sl, r4
 8004bf0:	eb19 0905 	adds.w	r9, r9, r5
 8004bf4:	eb4a 0a06 	adc.w	sl, sl, r6
 8004bf8:	f04f 0100 	mov.w	r1, #0
 8004bfc:	f04f 0200 	mov.w	r2, #0
 8004c00:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004c04:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004c08:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004c0c:	4689      	mov	r9, r1
 8004c0e:	4692      	mov	sl, r2
 8004c10:	eb19 0005 	adds.w	r0, r9, r5
 8004c14:	eb4a 0106 	adc.w	r1, sl, r6
 8004c18:	687b      	ldr	r3, [r7, #4]
 8004c1a:	685b      	ldr	r3, [r3, #4]
 8004c1c:	461d      	mov	r5, r3
 8004c1e:	f04f 0600 	mov.w	r6, #0
 8004c22:	196b      	adds	r3, r5, r5
 8004c24:	eb46 0406 	adc.w	r4, r6, r6
 8004c28:	461a      	mov	r2, r3
 8004c2a:	4623      	mov	r3, r4
 8004c2c:	f7fb fb30 	bl	8000290 <__aeabi_uldivmod>
 8004c30:	4603      	mov	r3, r0
 8004c32:	460c      	mov	r4, r1
 8004c34:	461a      	mov	r2, r3
 8004c36:	4b8b      	ldr	r3, [pc, #556]	; (8004e64 <UART_SetConfig+0x384>)
 8004c38:	fba3 1302 	umull	r1, r3, r3, r2
 8004c3c:	095b      	lsrs	r3, r3, #5
 8004c3e:	2164      	movs	r1, #100	; 0x64
 8004c40:	fb01 f303 	mul.w	r3, r1, r3
 8004c44:	1ad3      	subs	r3, r2, r3
 8004c46:	00db      	lsls	r3, r3, #3
 8004c48:	3332      	adds	r3, #50	; 0x32
 8004c4a:	4a86      	ldr	r2, [pc, #536]	; (8004e64 <UART_SetConfig+0x384>)
 8004c4c:	fba2 2303 	umull	r2, r3, r2, r3
 8004c50:	095b      	lsrs	r3, r3, #5
 8004c52:	005b      	lsls	r3, r3, #1
 8004c54:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8004c58:	4498      	add	r8, r3
 8004c5a:	68bb      	ldr	r3, [r7, #8]
 8004c5c:	461d      	mov	r5, r3
 8004c5e:	f04f 0600 	mov.w	r6, #0
 8004c62:	46a9      	mov	r9, r5
 8004c64:	46b2      	mov	sl, r6
 8004c66:	eb19 0309 	adds.w	r3, r9, r9
 8004c6a:	eb4a 040a 	adc.w	r4, sl, sl
 8004c6e:	4699      	mov	r9, r3
 8004c70:	46a2      	mov	sl, r4
 8004c72:	eb19 0905 	adds.w	r9, r9, r5
 8004c76:	eb4a 0a06 	adc.w	sl, sl, r6
 8004c7a:	f04f 0100 	mov.w	r1, #0
 8004c7e:	f04f 0200 	mov.w	r2, #0
 8004c82:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004c86:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004c8a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004c8e:	4689      	mov	r9, r1
 8004c90:	4692      	mov	sl, r2
 8004c92:	eb19 0005 	adds.w	r0, r9, r5
 8004c96:	eb4a 0106 	adc.w	r1, sl, r6
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	685b      	ldr	r3, [r3, #4]
 8004c9e:	461d      	mov	r5, r3
 8004ca0:	f04f 0600 	mov.w	r6, #0
 8004ca4:	196b      	adds	r3, r5, r5
 8004ca6:	eb46 0406 	adc.w	r4, r6, r6
 8004caa:	461a      	mov	r2, r3
 8004cac:	4623      	mov	r3, r4
 8004cae:	f7fb faef 	bl	8000290 <__aeabi_uldivmod>
 8004cb2:	4603      	mov	r3, r0
 8004cb4:	460c      	mov	r4, r1
 8004cb6:	461a      	mov	r2, r3
 8004cb8:	4b6a      	ldr	r3, [pc, #424]	; (8004e64 <UART_SetConfig+0x384>)
 8004cba:	fba3 1302 	umull	r1, r3, r3, r2
 8004cbe:	095b      	lsrs	r3, r3, #5
 8004cc0:	2164      	movs	r1, #100	; 0x64
 8004cc2:	fb01 f303 	mul.w	r3, r1, r3
 8004cc6:	1ad3      	subs	r3, r2, r3
 8004cc8:	00db      	lsls	r3, r3, #3
 8004cca:	3332      	adds	r3, #50	; 0x32
 8004ccc:	4a65      	ldr	r2, [pc, #404]	; (8004e64 <UART_SetConfig+0x384>)
 8004cce:	fba2 2303 	umull	r2, r3, r2, r3
 8004cd2:	095b      	lsrs	r3, r3, #5
 8004cd4:	f003 0207 	and.w	r2, r3, #7
 8004cd8:	687b      	ldr	r3, [r7, #4]
 8004cda:	681b      	ldr	r3, [r3, #0]
 8004cdc:	4442      	add	r2, r8
 8004cde:	609a      	str	r2, [r3, #8]
 8004ce0:	e26f      	b.n	80051c2 <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 8004ce2:	f7fe fbc7 	bl	8003474 <HAL_RCC_GetPCLK1Freq>
 8004ce6:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8004ce8:	68bb      	ldr	r3, [r7, #8]
 8004cea:	461d      	mov	r5, r3
 8004cec:	f04f 0600 	mov.w	r6, #0
 8004cf0:	46a8      	mov	r8, r5
 8004cf2:	46b1      	mov	r9, r6
 8004cf4:	eb18 0308 	adds.w	r3, r8, r8
 8004cf8:	eb49 0409 	adc.w	r4, r9, r9
 8004cfc:	4698      	mov	r8, r3
 8004cfe:	46a1      	mov	r9, r4
 8004d00:	eb18 0805 	adds.w	r8, r8, r5
 8004d04:	eb49 0906 	adc.w	r9, r9, r6
 8004d08:	f04f 0100 	mov.w	r1, #0
 8004d0c:	f04f 0200 	mov.w	r2, #0
 8004d10:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8004d14:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8004d18:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8004d1c:	4688      	mov	r8, r1
 8004d1e:	4691      	mov	r9, r2
 8004d20:	eb18 0005 	adds.w	r0, r8, r5
 8004d24:	eb49 0106 	adc.w	r1, r9, r6
 8004d28:	687b      	ldr	r3, [r7, #4]
 8004d2a:	685b      	ldr	r3, [r3, #4]
 8004d2c:	461d      	mov	r5, r3
 8004d2e:	f04f 0600 	mov.w	r6, #0
 8004d32:	196b      	adds	r3, r5, r5
 8004d34:	eb46 0406 	adc.w	r4, r6, r6
 8004d38:	461a      	mov	r2, r3
 8004d3a:	4623      	mov	r3, r4
 8004d3c:	f7fb faa8 	bl	8000290 <__aeabi_uldivmod>
 8004d40:	4603      	mov	r3, r0
 8004d42:	460c      	mov	r4, r1
 8004d44:	461a      	mov	r2, r3
 8004d46:	4b47      	ldr	r3, [pc, #284]	; (8004e64 <UART_SetConfig+0x384>)
 8004d48:	fba3 2302 	umull	r2, r3, r3, r2
 8004d4c:	095b      	lsrs	r3, r3, #5
 8004d4e:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004d52:	68bb      	ldr	r3, [r7, #8]
 8004d54:	461d      	mov	r5, r3
 8004d56:	f04f 0600 	mov.w	r6, #0
 8004d5a:	46a9      	mov	r9, r5
 8004d5c:	46b2      	mov	sl, r6
 8004d5e:	eb19 0309 	adds.w	r3, r9, r9
 8004d62:	eb4a 040a 	adc.w	r4, sl, sl
 8004d66:	4699      	mov	r9, r3
 8004d68:	46a2      	mov	sl, r4
 8004d6a:	eb19 0905 	adds.w	r9, r9, r5
 8004d6e:	eb4a 0a06 	adc.w	sl, sl, r6
 8004d72:	f04f 0100 	mov.w	r1, #0
 8004d76:	f04f 0200 	mov.w	r2, #0
 8004d7a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004d7e:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004d82:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004d86:	4689      	mov	r9, r1
 8004d88:	4692      	mov	sl, r2
 8004d8a:	eb19 0005 	adds.w	r0, r9, r5
 8004d8e:	eb4a 0106 	adc.w	r1, sl, r6
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	685b      	ldr	r3, [r3, #4]
 8004d96:	461d      	mov	r5, r3
 8004d98:	f04f 0600 	mov.w	r6, #0
 8004d9c:	196b      	adds	r3, r5, r5
 8004d9e:	eb46 0406 	adc.w	r4, r6, r6
 8004da2:	461a      	mov	r2, r3
 8004da4:	4623      	mov	r3, r4
 8004da6:	f7fb fa73 	bl	8000290 <__aeabi_uldivmod>
 8004daa:	4603      	mov	r3, r0
 8004dac:	460c      	mov	r4, r1
 8004dae:	461a      	mov	r2, r3
 8004db0:	4b2c      	ldr	r3, [pc, #176]	; (8004e64 <UART_SetConfig+0x384>)
 8004db2:	fba3 1302 	umull	r1, r3, r3, r2
 8004db6:	095b      	lsrs	r3, r3, #5
 8004db8:	2164      	movs	r1, #100	; 0x64
 8004dba:	fb01 f303 	mul.w	r3, r1, r3
 8004dbe:	1ad3      	subs	r3, r2, r3
 8004dc0:	00db      	lsls	r3, r3, #3
 8004dc2:	3332      	adds	r3, #50	; 0x32
 8004dc4:	4a27      	ldr	r2, [pc, #156]	; (8004e64 <UART_SetConfig+0x384>)
 8004dc6:	fba2 2303 	umull	r2, r3, r2, r3
 8004dca:	095b      	lsrs	r3, r3, #5
 8004dcc:	005b      	lsls	r3, r3, #1
 8004dce:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8004dd2:	4498      	add	r8, r3
 8004dd4:	68bb      	ldr	r3, [r7, #8]
 8004dd6:	461d      	mov	r5, r3
 8004dd8:	f04f 0600 	mov.w	r6, #0
 8004ddc:	46a9      	mov	r9, r5
 8004dde:	46b2      	mov	sl, r6
 8004de0:	eb19 0309 	adds.w	r3, r9, r9
 8004de4:	eb4a 040a 	adc.w	r4, sl, sl
 8004de8:	4699      	mov	r9, r3
 8004dea:	46a2      	mov	sl, r4
 8004dec:	eb19 0905 	adds.w	r9, r9, r5
 8004df0:	eb4a 0a06 	adc.w	sl, sl, r6
 8004df4:	f04f 0100 	mov.w	r1, #0
 8004df8:	f04f 0200 	mov.w	r2, #0
 8004dfc:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004e00:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004e04:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004e08:	4689      	mov	r9, r1
 8004e0a:	4692      	mov	sl, r2
 8004e0c:	eb19 0005 	adds.w	r0, r9, r5
 8004e10:	eb4a 0106 	adc.w	r1, sl, r6
 8004e14:	687b      	ldr	r3, [r7, #4]
 8004e16:	685b      	ldr	r3, [r3, #4]
 8004e18:	461d      	mov	r5, r3
 8004e1a:	f04f 0600 	mov.w	r6, #0
 8004e1e:	196b      	adds	r3, r5, r5
 8004e20:	eb46 0406 	adc.w	r4, r6, r6
 8004e24:	461a      	mov	r2, r3
 8004e26:	4623      	mov	r3, r4
 8004e28:	f7fb fa32 	bl	8000290 <__aeabi_uldivmod>
 8004e2c:	4603      	mov	r3, r0
 8004e2e:	460c      	mov	r4, r1
 8004e30:	461a      	mov	r2, r3
 8004e32:	4b0c      	ldr	r3, [pc, #48]	; (8004e64 <UART_SetConfig+0x384>)
 8004e34:	fba3 1302 	umull	r1, r3, r3, r2
 8004e38:	095b      	lsrs	r3, r3, #5
 8004e3a:	2164      	movs	r1, #100	; 0x64
 8004e3c:	fb01 f303 	mul.w	r3, r1, r3
 8004e40:	1ad3      	subs	r3, r2, r3
 8004e42:	00db      	lsls	r3, r3, #3
 8004e44:	3332      	adds	r3, #50	; 0x32
 8004e46:	4a07      	ldr	r2, [pc, #28]	; (8004e64 <UART_SetConfig+0x384>)
 8004e48:	fba2 2303 	umull	r2, r3, r2, r3
 8004e4c:	095b      	lsrs	r3, r3, #5
 8004e4e:	f003 0207 	and.w	r2, r3, #7
 8004e52:	687b      	ldr	r3, [r7, #4]
 8004e54:	681b      	ldr	r3, [r3, #0]
 8004e56:	4442      	add	r2, r8
 8004e58:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 8004e5a:	e1b2      	b.n	80051c2 <UART_SetConfig+0x6e2>
 8004e5c:	40011000 	.word	0x40011000
 8004e60:	40011400 	.word	0x40011400
 8004e64:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4ad7      	ldr	r2, [pc, #860]	; (80051cc <UART_SetConfig+0x6ec>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d005      	beq.n	8004e7e <UART_SetConfig+0x39e>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4ad6      	ldr	r2, [pc, #856]	; (80051d0 <UART_SetConfig+0x6f0>)
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	f040 80d1 	bne.w	8005020 <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 8004e7e:	f7fe fb0d 	bl	800349c <HAL_RCC_GetPCLK2Freq>
 8004e82:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8004e84:	68bb      	ldr	r3, [r7, #8]
 8004e86:	469a      	mov	sl, r3
 8004e88:	f04f 0b00 	mov.w	fp, #0
 8004e8c:	46d0      	mov	r8, sl
 8004e8e:	46d9      	mov	r9, fp
 8004e90:	eb18 0308 	adds.w	r3, r8, r8
 8004e94:	eb49 0409 	adc.w	r4, r9, r9
 8004e98:	4698      	mov	r8, r3
 8004e9a:	46a1      	mov	r9, r4
 8004e9c:	eb18 080a 	adds.w	r8, r8, sl
 8004ea0:	eb49 090b 	adc.w	r9, r9, fp
 8004ea4:	f04f 0100 	mov.w	r1, #0
 8004ea8:	f04f 0200 	mov.w	r2, #0
 8004eac:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8004eb0:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8004eb4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8004eb8:	4688      	mov	r8, r1
 8004eba:	4691      	mov	r9, r2
 8004ebc:	eb1a 0508 	adds.w	r5, sl, r8
 8004ec0:	eb4b 0609 	adc.w	r6, fp, r9
 8004ec4:	687b      	ldr	r3, [r7, #4]
 8004ec6:	685b      	ldr	r3, [r3, #4]
 8004ec8:	4619      	mov	r1, r3
 8004eca:	f04f 0200 	mov.w	r2, #0
 8004ece:	f04f 0300 	mov.w	r3, #0
 8004ed2:	f04f 0400 	mov.w	r4, #0
 8004ed6:	0094      	lsls	r4, r2, #2
 8004ed8:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8004edc:	008b      	lsls	r3, r1, #2
 8004ede:	461a      	mov	r2, r3
 8004ee0:	4623      	mov	r3, r4
 8004ee2:	4628      	mov	r0, r5
 8004ee4:	4631      	mov	r1, r6
 8004ee6:	f7fb f9d3 	bl	8000290 <__aeabi_uldivmod>
 8004eea:	4603      	mov	r3, r0
 8004eec:	460c      	mov	r4, r1
 8004eee:	461a      	mov	r2, r3
 8004ef0:	4bb8      	ldr	r3, [pc, #736]	; (80051d4 <UART_SetConfig+0x6f4>)
 8004ef2:	fba3 2302 	umull	r2, r3, r3, r2
 8004ef6:	095b      	lsrs	r3, r3, #5
 8004ef8:	ea4f 1803 	mov.w	r8, r3, lsl #4
 8004efc:	68bb      	ldr	r3, [r7, #8]
 8004efe:	469b      	mov	fp, r3
 8004f00:	f04f 0c00 	mov.w	ip, #0
 8004f04:	46d9      	mov	r9, fp
 8004f06:	46e2      	mov	sl, ip
 8004f08:	eb19 0309 	adds.w	r3, r9, r9
 8004f0c:	eb4a 040a 	adc.w	r4, sl, sl
 8004f10:	4699      	mov	r9, r3
 8004f12:	46a2      	mov	sl, r4
 8004f14:	eb19 090b 	adds.w	r9, r9, fp
 8004f18:	eb4a 0a0c 	adc.w	sl, sl, ip
 8004f1c:	f04f 0100 	mov.w	r1, #0
 8004f20:	f04f 0200 	mov.w	r2, #0
 8004f24:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004f28:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004f2c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004f30:	4689      	mov	r9, r1
 8004f32:	4692      	mov	sl, r2
 8004f34:	eb1b 0509 	adds.w	r5, fp, r9
 8004f38:	eb4c 060a 	adc.w	r6, ip, sl
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	685b      	ldr	r3, [r3, #4]
 8004f40:	4619      	mov	r1, r3
 8004f42:	f04f 0200 	mov.w	r2, #0
 8004f46:	f04f 0300 	mov.w	r3, #0
 8004f4a:	f04f 0400 	mov.w	r4, #0
 8004f4e:	0094      	lsls	r4, r2, #2
 8004f50:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8004f54:	008b      	lsls	r3, r1, #2
 8004f56:	461a      	mov	r2, r3
 8004f58:	4623      	mov	r3, r4
 8004f5a:	4628      	mov	r0, r5
 8004f5c:	4631      	mov	r1, r6
 8004f5e:	f7fb f997 	bl	8000290 <__aeabi_uldivmod>
 8004f62:	4603      	mov	r3, r0
 8004f64:	460c      	mov	r4, r1
 8004f66:	461a      	mov	r2, r3
 8004f68:	4b9a      	ldr	r3, [pc, #616]	; (80051d4 <UART_SetConfig+0x6f4>)
 8004f6a:	fba3 1302 	umull	r1, r3, r3, r2
 8004f6e:	095b      	lsrs	r3, r3, #5
 8004f70:	2164      	movs	r1, #100	; 0x64
 8004f72:	fb01 f303 	mul.w	r3, r1, r3
 8004f76:	1ad3      	subs	r3, r2, r3
 8004f78:	011b      	lsls	r3, r3, #4
 8004f7a:	3332      	adds	r3, #50	; 0x32
 8004f7c:	4a95      	ldr	r2, [pc, #596]	; (80051d4 <UART_SetConfig+0x6f4>)
 8004f7e:	fba2 2303 	umull	r2, r3, r2, r3
 8004f82:	095b      	lsrs	r3, r3, #5
 8004f84:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8004f88:	4498      	add	r8, r3
 8004f8a:	68bb      	ldr	r3, [r7, #8]
 8004f8c:	469b      	mov	fp, r3
 8004f8e:	f04f 0c00 	mov.w	ip, #0
 8004f92:	46d9      	mov	r9, fp
 8004f94:	46e2      	mov	sl, ip
 8004f96:	eb19 0309 	adds.w	r3, r9, r9
 8004f9a:	eb4a 040a 	adc.w	r4, sl, sl
 8004f9e:	4699      	mov	r9, r3
 8004fa0:	46a2      	mov	sl, r4
 8004fa2:	eb19 090b 	adds.w	r9, r9, fp
 8004fa6:	eb4a 0a0c 	adc.w	sl, sl, ip
 8004faa:	f04f 0100 	mov.w	r1, #0
 8004fae:	f04f 0200 	mov.w	r2, #0
 8004fb2:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8004fb6:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 8004fba:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8004fbe:	4689      	mov	r9, r1
 8004fc0:	4692      	mov	sl, r2
 8004fc2:	eb1b 0509 	adds.w	r5, fp, r9
 8004fc6:	eb4c 060a 	adc.w	r6, ip, sl
 8004fca:	687b      	ldr	r3, [r7, #4]
 8004fcc:	685b      	ldr	r3, [r3, #4]
 8004fce:	4619      	mov	r1, r3
 8004fd0:	f04f 0200 	mov.w	r2, #0
 8004fd4:	f04f 0300 	mov.w	r3, #0
 8004fd8:	f04f 0400 	mov.w	r4, #0
 8004fdc:	0094      	lsls	r4, r2, #2
 8004fde:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8004fe2:	008b      	lsls	r3, r1, #2
 8004fe4:	461a      	mov	r2, r3
 8004fe6:	4623      	mov	r3, r4
 8004fe8:	4628      	mov	r0, r5
 8004fea:	4631      	mov	r1, r6
 8004fec:	f7fb f950 	bl	8000290 <__aeabi_uldivmod>
 8004ff0:	4603      	mov	r3, r0
 8004ff2:	460c      	mov	r4, r1
 8004ff4:	461a      	mov	r2, r3
 8004ff6:	4b77      	ldr	r3, [pc, #476]	; (80051d4 <UART_SetConfig+0x6f4>)
 8004ff8:	fba3 1302 	umull	r1, r3, r3, r2
 8004ffc:	095b      	lsrs	r3, r3, #5
 8004ffe:	2164      	movs	r1, #100	; 0x64
 8005000:	fb01 f303 	mul.w	r3, r1, r3
 8005004:	1ad3      	subs	r3, r2, r3
 8005006:	011b      	lsls	r3, r3, #4
 8005008:	3332      	adds	r3, #50	; 0x32
 800500a:	4a72      	ldr	r2, [pc, #456]	; (80051d4 <UART_SetConfig+0x6f4>)
 800500c:	fba2 2303 	umull	r2, r3, r2, r3
 8005010:	095b      	lsrs	r3, r3, #5
 8005012:	f003 020f 	and.w	r2, r3, #15
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	681b      	ldr	r3, [r3, #0]
 800501a:	4442      	add	r2, r8
 800501c:	609a      	str	r2, [r3, #8]
 800501e:	e0d0      	b.n	80051c2 <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 8005020:	f7fe fa28 	bl	8003474 <HAL_RCC_GetPCLK1Freq>
 8005024:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8005026:	68bb      	ldr	r3, [r7, #8]
 8005028:	469a      	mov	sl, r3
 800502a:	f04f 0b00 	mov.w	fp, #0
 800502e:	46d0      	mov	r8, sl
 8005030:	46d9      	mov	r9, fp
 8005032:	eb18 0308 	adds.w	r3, r8, r8
 8005036:	eb49 0409 	adc.w	r4, r9, r9
 800503a:	4698      	mov	r8, r3
 800503c:	46a1      	mov	r9, r4
 800503e:	eb18 080a 	adds.w	r8, r8, sl
 8005042:	eb49 090b 	adc.w	r9, r9, fp
 8005046:	f04f 0100 	mov.w	r1, #0
 800504a:	f04f 0200 	mov.w	r2, #0
 800504e:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 8005052:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 8005056:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 800505a:	4688      	mov	r8, r1
 800505c:	4691      	mov	r9, r2
 800505e:	eb1a 0508 	adds.w	r5, sl, r8
 8005062:	eb4b 0609 	adc.w	r6, fp, r9
 8005066:	687b      	ldr	r3, [r7, #4]
 8005068:	685b      	ldr	r3, [r3, #4]
 800506a:	4619      	mov	r1, r3
 800506c:	f04f 0200 	mov.w	r2, #0
 8005070:	f04f 0300 	mov.w	r3, #0
 8005074:	f04f 0400 	mov.w	r4, #0
 8005078:	0094      	lsls	r4, r2, #2
 800507a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 800507e:	008b      	lsls	r3, r1, #2
 8005080:	461a      	mov	r2, r3
 8005082:	4623      	mov	r3, r4
 8005084:	4628      	mov	r0, r5
 8005086:	4631      	mov	r1, r6
 8005088:	f7fb f902 	bl	8000290 <__aeabi_uldivmod>
 800508c:	4603      	mov	r3, r0
 800508e:	460c      	mov	r4, r1
 8005090:	461a      	mov	r2, r3
 8005092:	4b50      	ldr	r3, [pc, #320]	; (80051d4 <UART_SetConfig+0x6f4>)
 8005094:	fba3 2302 	umull	r2, r3, r3, r2
 8005098:	095b      	lsrs	r3, r3, #5
 800509a:	ea4f 1803 	mov.w	r8, r3, lsl #4
 800509e:	68bb      	ldr	r3, [r7, #8]
 80050a0:	469b      	mov	fp, r3
 80050a2:	f04f 0c00 	mov.w	ip, #0
 80050a6:	46d9      	mov	r9, fp
 80050a8:	46e2      	mov	sl, ip
 80050aa:	eb19 0309 	adds.w	r3, r9, r9
 80050ae:	eb4a 040a 	adc.w	r4, sl, sl
 80050b2:	4699      	mov	r9, r3
 80050b4:	46a2      	mov	sl, r4
 80050b6:	eb19 090b 	adds.w	r9, r9, fp
 80050ba:	eb4a 0a0c 	adc.w	sl, sl, ip
 80050be:	f04f 0100 	mov.w	r1, #0
 80050c2:	f04f 0200 	mov.w	r2, #0
 80050c6:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 80050ca:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 80050ce:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 80050d2:	4689      	mov	r9, r1
 80050d4:	4692      	mov	sl, r2
 80050d6:	eb1b 0509 	adds.w	r5, fp, r9
 80050da:	eb4c 060a 	adc.w	r6, ip, sl
 80050de:	687b      	ldr	r3, [r7, #4]
 80050e0:	685b      	ldr	r3, [r3, #4]
 80050e2:	4619      	mov	r1, r3
 80050e4:	f04f 0200 	mov.w	r2, #0
 80050e8:	f04f 0300 	mov.w	r3, #0
 80050ec:	f04f 0400 	mov.w	r4, #0
 80050f0:	0094      	lsls	r4, r2, #2
 80050f2:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 80050f6:	008b      	lsls	r3, r1, #2
 80050f8:	461a      	mov	r2, r3
 80050fa:	4623      	mov	r3, r4
 80050fc:	4628      	mov	r0, r5
 80050fe:	4631      	mov	r1, r6
 8005100:	f7fb f8c6 	bl	8000290 <__aeabi_uldivmod>
 8005104:	4603      	mov	r3, r0
 8005106:	460c      	mov	r4, r1
 8005108:	461a      	mov	r2, r3
 800510a:	4b32      	ldr	r3, [pc, #200]	; (80051d4 <UART_SetConfig+0x6f4>)
 800510c:	fba3 1302 	umull	r1, r3, r3, r2
 8005110:	095b      	lsrs	r3, r3, #5
 8005112:	2164      	movs	r1, #100	; 0x64
 8005114:	fb01 f303 	mul.w	r3, r1, r3
 8005118:	1ad3      	subs	r3, r2, r3
 800511a:	011b      	lsls	r3, r3, #4
 800511c:	3332      	adds	r3, #50	; 0x32
 800511e:	4a2d      	ldr	r2, [pc, #180]	; (80051d4 <UART_SetConfig+0x6f4>)
 8005120:	fba2 2303 	umull	r2, r3, r2, r3
 8005124:	095b      	lsrs	r3, r3, #5
 8005126:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 800512a:	4498      	add	r8, r3
 800512c:	68bb      	ldr	r3, [r7, #8]
 800512e:	469b      	mov	fp, r3
 8005130:	f04f 0c00 	mov.w	ip, #0
 8005134:	46d9      	mov	r9, fp
 8005136:	46e2      	mov	sl, ip
 8005138:	eb19 0309 	adds.w	r3, r9, r9
 800513c:	eb4a 040a 	adc.w	r4, sl, sl
 8005140:	4699      	mov	r9, r3
 8005142:	46a2      	mov	sl, r4
 8005144:	eb19 090b 	adds.w	r9, r9, fp
 8005148:	eb4a 0a0c 	adc.w	sl, sl, ip
 800514c:	f04f 0100 	mov.w	r1, #0
 8005150:	f04f 0200 	mov.w	r2, #0
 8005154:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005158:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 800515c:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 8005160:	4689      	mov	r9, r1
 8005162:	4692      	mov	sl, r2
 8005164:	eb1b 0509 	adds.w	r5, fp, r9
 8005168:	eb4c 060a 	adc.w	r6, ip, sl
 800516c:	687b      	ldr	r3, [r7, #4]
 800516e:	685b      	ldr	r3, [r3, #4]
 8005170:	4619      	mov	r1, r3
 8005172:	f04f 0200 	mov.w	r2, #0
 8005176:	f04f 0300 	mov.w	r3, #0
 800517a:	f04f 0400 	mov.w	r4, #0
 800517e:	0094      	lsls	r4, r2, #2
 8005180:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 8005184:	008b      	lsls	r3, r1, #2
 8005186:	461a      	mov	r2, r3
 8005188:	4623      	mov	r3, r4
 800518a:	4628      	mov	r0, r5
 800518c:	4631      	mov	r1, r6
 800518e:	f7fb f87f 	bl	8000290 <__aeabi_uldivmod>
 8005192:	4603      	mov	r3, r0
 8005194:	460c      	mov	r4, r1
 8005196:	461a      	mov	r2, r3
 8005198:	4b0e      	ldr	r3, [pc, #56]	; (80051d4 <UART_SetConfig+0x6f4>)
 800519a:	fba3 1302 	umull	r1, r3, r3, r2
 800519e:	095b      	lsrs	r3, r3, #5
 80051a0:	2164      	movs	r1, #100	; 0x64
 80051a2:	fb01 f303 	mul.w	r3, r1, r3
 80051a6:	1ad3      	subs	r3, r2, r3
 80051a8:	011b      	lsls	r3, r3, #4
 80051aa:	3332      	adds	r3, #50	; 0x32
 80051ac:	4a09      	ldr	r2, [pc, #36]	; (80051d4 <UART_SetConfig+0x6f4>)
 80051ae:	fba2 2303 	umull	r2, r3, r2, r3
 80051b2:	095b      	lsrs	r3, r3, #5
 80051b4:	f003 020f 	and.w	r2, r3, #15
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	681b      	ldr	r3, [r3, #0]
 80051bc:	4442      	add	r2, r8
 80051be:	609a      	str	r2, [r3, #8]
}
 80051c0:	e7ff      	b.n	80051c2 <UART_SetConfig+0x6e2>
 80051c2:	bf00      	nop
 80051c4:	3714      	adds	r7, #20
 80051c6:	46bd      	mov	sp, r7
 80051c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051cc:	40011000 	.word	0x40011000
 80051d0:	40011400 	.word	0x40011400
 80051d4:	51eb851f 	.word	0x51eb851f

080051d8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80051d8:	b480      	push	{r7}
 80051da:	b085      	sub	sp, #20
 80051dc:	af00      	add	r7, sp, #0
 80051de:	6078      	str	r0, [r7, #4]
 80051e0:	6039      	str	r1, [r7, #0]
  uint32_t tmpr1 = 0U;
 80051e2:	2300      	movs	r3, #0
 80051e4:	60fb      	str	r3, [r7, #12]
  uint32_t tmpr2 = 0U;
 80051e6:	2300      	movs	r3, #0
 80051e8:	60bb      	str	r3, [r7, #8]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80051ea:	683b      	ldr	r3, [r7, #0]
 80051ec:	681b      	ldr	r3, [r3, #0]
 80051ee:	2b01      	cmp	r3, #1
 80051f0:	d029      	beq.n	8005246 <FMC_SDRAM_Init+0x6e>
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80051f2:	687b      	ldr	r3, [r7, #4]
 80051f4:	681b      	ldr	r3, [r3, #0]
 80051f6:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80051f8:	68fb      	ldr	r3, [r7, #12]
 80051fa:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 80051fe:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 8005202:	60fb      	str	r3, [r7, #12]
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8005204:	683b      	ldr	r3, [r7, #0]
 8005206:	685a      	ldr	r2, [r3, #4]
                                               Init->RowBitsNumber      |\
 8005208:	683b      	ldr	r3, [r7, #0]
 800520a:	689b      	ldr	r3, [r3, #8]
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800520c:	431a      	orrs	r2, r3
                                               Init->MemoryDataWidth    |\
 800520e:	683b      	ldr	r3, [r7, #0]
 8005210:	68db      	ldr	r3, [r3, #12]
                                               Init->RowBitsNumber      |\
 8005212:	431a      	orrs	r2, r3
                                               Init->InternalBankNumber |\
 8005214:	683b      	ldr	r3, [r7, #0]
 8005216:	691b      	ldr	r3, [r3, #16]
                                               Init->MemoryDataWidth    |\
 8005218:	431a      	orrs	r2, r3
                                               Init->CASLatency         |\
 800521a:	683b      	ldr	r3, [r7, #0]
 800521c:	695b      	ldr	r3, [r3, #20]
                                               Init->InternalBankNumber |\
 800521e:	431a      	orrs	r2, r3
                                               Init->WriteProtection    |\
 8005220:	683b      	ldr	r3, [r7, #0]
 8005222:	699b      	ldr	r3, [r3, #24]
                                               Init->CASLatency         |\
 8005224:	431a      	orrs	r2, r3
                                               Init->SDClockPeriod      |\
 8005226:	683b      	ldr	r3, [r7, #0]
 8005228:	69db      	ldr	r3, [r3, #28]
                                               Init->WriteProtection    |\
 800522a:	431a      	orrs	r2, r3
                                               Init->ReadBurst          |\
 800522c:	683b      	ldr	r3, [r7, #0]
 800522e:	6a1b      	ldr	r3, [r3, #32]
                                               Init->SDClockPeriod      |\
 8005230:	431a      	orrs	r2, r3
                                               Init->ReadPipeDelay
 8005232:	683b      	ldr	r3, [r7, #0]
 8005234:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                                               Init->ReadBurst          |\
 8005236:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8005238:	68fa      	ldr	r2, [r7, #12]
 800523a:	4313      	orrs	r3, r2
 800523c:	60fb      	str	r3, [r7, #12]
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 800523e:	687b      	ldr	r3, [r7, #4]
 8005240:	68fa      	ldr	r2, [r7, #12]
 8005242:	601a      	str	r2, [r3, #0]
 8005244:	e034      	b.n	80052b0 <FMC_SDRAM_Init+0xd8>
  }
  else /* FMC_Bank2_SDRAM */                      
  {
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 8005246:	687b      	ldr	r3, [r7, #4]
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	60fb      	str	r3, [r7, #12]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 800524c:	68fb      	ldr	r3, [r7, #12]
 800524e:	f423 43f8 	bic.w	r3, r3, #31744	; 0x7c00
 8005252:	60fb      	str	r3, [r7, #12]
    
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8005254:	683b      	ldr	r3, [r7, #0]
 8005256:	69da      	ldr	r2, [r3, #28]
                        Init->ReadBurst          |\
 8005258:	683b      	ldr	r3, [r7, #0]
 800525a:	6a1b      	ldr	r3, [r3, #32]
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 800525c:	431a      	orrs	r2, r3
                        Init->ReadPipeDelay);  
 800525e:	683b      	ldr	r3, [r7, #0]
 8005260:	6a5b      	ldr	r3, [r3, #36]	; 0x24
                        Init->ReadBurst          |\
 8005262:	4313      	orrs	r3, r2
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 8005264:	68fa      	ldr	r2, [r7, #12]
 8005266:	4313      	orrs	r3, r2
 8005268:	60fb      	str	r3, [r7, #12]
    
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 800526a:	687b      	ldr	r3, [r7, #4]
 800526c:	685b      	ldr	r3, [r3, #4]
 800526e:	60bb      	str	r3, [r7, #8]
    
    /* Clear NC, NR, MWID, NB, CAS, WP, SDCLK, RBURST, and RPIPE bits */
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 8005270:	68bb      	ldr	r3, [r7, #8]
 8005272:	f423 43ff 	bic.w	r3, r3, #32640	; 0x7f80
 8005276:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800527a:	60bb      	str	r3, [r7, #8]
                          FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                          FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));

    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800527c:	683b      	ldr	r3, [r7, #0]
 800527e:	685a      	ldr	r2, [r3, #4]
                       Init->RowBitsNumber      |\
 8005280:	683b      	ldr	r3, [r7, #0]
 8005282:	689b      	ldr	r3, [r3, #8]
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 8005284:	431a      	orrs	r2, r3
                       Init->MemoryDataWidth    |\
 8005286:	683b      	ldr	r3, [r7, #0]
 8005288:	68db      	ldr	r3, [r3, #12]
                       Init->RowBitsNumber      |\
 800528a:	431a      	orrs	r2, r3
                       Init->InternalBankNumber |\
 800528c:	683b      	ldr	r3, [r7, #0]
 800528e:	691b      	ldr	r3, [r3, #16]
                       Init->MemoryDataWidth    |\
 8005290:	431a      	orrs	r2, r3
                       Init->CASLatency         |\
 8005292:	683b      	ldr	r3, [r7, #0]
 8005294:	695b      	ldr	r3, [r3, #20]
                       Init->InternalBankNumber |\
 8005296:	431a      	orrs	r2, r3
                       Init->WriteProtection);
 8005298:	683b      	ldr	r3, [r7, #0]
 800529a:	699b      	ldr	r3, [r3, #24]
                       Init->CASLatency         |\
 800529c:	4313      	orrs	r3, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 800529e:	68ba      	ldr	r2, [r7, #8]
 80052a0:	4313      	orrs	r3, r2
 80052a2:	60bb      	str	r3, [r7, #8]

    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80052a4:	687b      	ldr	r3, [r7, #4]
 80052a6:	68fa      	ldr	r2, [r7, #12]
 80052a8:	601a      	str	r2, [r3, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	68ba      	ldr	r2, [r7, #8]
 80052ae:	605a      	str	r2, [r3, #4]
  }  
  
  return HAL_OK;
 80052b0:	2300      	movs	r3, #0
}
 80052b2:	4618      	mov	r0, r3
 80052b4:	3714      	adds	r7, #20
 80052b6:	46bd      	mov	sp, r7
 80052b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80052bc:	4770      	bx	lr

080052be <FMC_SDRAM_Timing_Init>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Bank SDRAM bank number   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Timing_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_TimingTypeDef *Timing, uint32_t Bank)
{
 80052be:	b480      	push	{r7}
 80052c0:	b087      	sub	sp, #28
 80052c2:	af00      	add	r7, sp, #0
 80052c4:	60f8      	str	r0, [r7, #12]
 80052c6:	60b9      	str	r1, [r7, #8]
 80052c8:	607a      	str	r2, [r7, #4]
  uint32_t tmpr1 = 0U;
 80052ca:	2300      	movs	r3, #0
 80052cc:	617b      	str	r3, [r7, #20]
  uint32_t tmpr2 = 0U;
 80052ce:	2300      	movs	r3, #0
 80052d0:	613b      	str	r3, [r7, #16]
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	2b01      	cmp	r3, #1
 80052d6:	d02e      	beq.n	8005336 <FMC_SDRAM_Timing_Init+0x78>
  { 
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 80052d8:	68fb      	ldr	r3, [r7, #12]
 80052da:	689b      	ldr	r3, [r3, #8]
 80052dc:	617b      	str	r3, [r7, #20]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 80052de:	697b      	ldr	r3, [r7, #20]
 80052e0:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 80052e4:	617b      	str	r3, [r7, #20]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80052e6:	68bb      	ldr	r3, [r7, #8]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80052ec:	68bb      	ldr	r3, [r7, #8]
 80052ee:	685b      	ldr	r3, [r3, #4]
 80052f0:	3b01      	subs	r3, #1
 80052f2:	011b      	lsls	r3, r3, #4
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 80052f4:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 80052f6:	68bb      	ldr	r3, [r7, #8]
 80052f8:	689b      	ldr	r3, [r3, #8]
 80052fa:	3b01      	subs	r3, #1
 80052fc:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U) |\
 80052fe:	431a      	orrs	r2, r3
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8005300:	68bb      	ldr	r3, [r7, #8]
 8005302:	68db      	ldr	r3, [r3, #12]
 8005304:	3b01      	subs	r3, #1
 8005306:	031b      	lsls	r3, r3, #12
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
 8005308:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800530a:	68bb      	ldr	r3, [r7, #8]
 800530c:	691b      	ldr	r3, [r3, #16]
 800530e:	3b01      	subs	r3, #1
 8005310:	041b      	lsls	r3, r3, #16
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
 8005312:	431a      	orrs	r2, r3
                       (((Timing->RPDelay)-1U) << 20U)             |\
 8005314:	68bb      	ldr	r3, [r7, #8]
 8005316:	695b      	ldr	r3, [r3, #20]
 8005318:	3b01      	subs	r3, #1
 800531a:	051b      	lsls	r3, r3, #20
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
 800531c:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U));
 800531e:	68bb      	ldr	r3, [r7, #8]
 8005320:	699b      	ldr	r3, [r3, #24]
 8005322:	3b01      	subs	r3, #1
 8005324:	061b      	lsls	r3, r3, #24
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8005326:	4313      	orrs	r3, r2
 8005328:	697a      	ldr	r2, [r7, #20]
 800532a:	4313      	orrs	r3, r2
 800532c:	617b      	str	r3, [r7, #20]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 800532e:	68fb      	ldr	r3, [r7, #12]
 8005330:	697a      	ldr	r2, [r7, #20]
 8005332:	609a      	str	r2, [r3, #8]
 8005334:	e03b      	b.n	80053ae <FMC_SDRAM_Timing_Init+0xf0>
  }
   else /* FMC_Bank2_SDRAM */
  {
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8005336:	68fb      	ldr	r3, [r7, #12]
 8005338:	689b      	ldr	r3, [r3, #8]
 800533a:	617b      	str	r3, [r7, #20]
    
    /* Clear TRC and TRP bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800533c:	697b      	ldr	r3, [r7, #20]
 800533e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 8005342:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8005346:	617b      	str	r3, [r7, #20]
    
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8005348:	68bb      	ldr	r3, [r7, #8]
 800534a:	68db      	ldr	r3, [r3, #12]
 800534c:	3b01      	subs	r3, #1
 800534e:	031a      	lsls	r2, r3, #12
                        (((Timing->RPDelay)-1U) << 20U)); 
 8005350:	68bb      	ldr	r3, [r7, #8]
 8005352:	695b      	ldr	r3, [r3, #20]
 8005354:	3b01      	subs	r3, #1
 8005356:	051b      	lsls	r3, r3, #20
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8005358:	4313      	orrs	r3, r2
 800535a:	697a      	ldr	r2, [r7, #20]
 800535c:	4313      	orrs	r3, r2
 800535e:	617b      	str	r3, [r7, #20]
    
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 8005360:	68fb      	ldr	r3, [r7, #12]
 8005362:	68db      	ldr	r3, [r3, #12]
 8005364:	613b      	str	r3, [r7, #16]
    
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8005366:	693b      	ldr	r3, [r7, #16]
 8005368:	f003 4370 	and.w	r3, r3, #4026531840	; 0xf0000000
 800536c:	613b      	str	r3, [r7, #16]
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800536e:	68bb      	ldr	r3, [r7, #8]
 8005370:	681b      	ldr	r3, [r3, #0]
 8005372:	1e5a      	subs	r2, r3, #1
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8005374:	68bb      	ldr	r3, [r7, #8]
 8005376:	685b      	ldr	r3, [r3, #4]
 8005378:	3b01      	subs	r3, #1
 800537a:	011b      	lsls	r3, r3, #4
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800537c:	431a      	orrs	r2, r3
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 800537e:	68bb      	ldr	r3, [r7, #8]
 8005380:	689b      	ldr	r3, [r3, #8]
 8005382:	3b01      	subs	r3, #1
 8005384:	021b      	lsls	r3, r3, #8
                       (((Timing->ExitSelfRefreshDelay)-1U) << 4U)  |\
 8005386:	431a      	orrs	r2, r3
                       (((Timing->WriteRecoveryTime)-1U) <<16U)     |\
 8005388:	68bb      	ldr	r3, [r7, #8]
 800538a:	691b      	ldr	r3, [r3, #16]
 800538c:	3b01      	subs	r3, #1
 800538e:	041b      	lsls	r3, r3, #16
                       (((Timing->SelfRefreshTime)-1U) << 8U)       |\
 8005390:	431a      	orrs	r2, r3
                       (((Timing->RCDDelay)-1U) << 24U)));   
 8005392:	68bb      	ldr	r3, [r7, #8]
 8005394:	699b      	ldr	r3, [r3, #24]
 8005396:	3b01      	subs	r3, #1
 8005398:	061b      	lsls	r3, r3, #24
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800539a:	4313      	orrs	r3, r2
 800539c:	693a      	ldr	r2, [r7, #16]
 800539e:	4313      	orrs	r3, r2
 80053a0:	613b      	str	r3, [r7, #16]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 80053a2:	68fb      	ldr	r3, [r7, #12]
 80053a4:	697a      	ldr	r2, [r7, #20]
 80053a6:	609a      	str	r2, [r3, #8]
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 80053a8:	68fb      	ldr	r3, [r7, #12]
 80053aa:	693a      	ldr	r2, [r7, #16]
 80053ac:	60da      	str	r2, [r3, #12]
  }
  return HAL_OK;
 80053ae:	2300      	movs	r3, #0
}
 80053b0:	4618      	mov	r0, r3
 80053b2:	371c      	adds	r7, #28
 80053b4:	46bd      	mov	sp, r7
 80053b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053ba:	4770      	bx	lr

080053bc <FMC_SDRAM_WriteProtection_Disable>:
  * @brief  Disables dynamically FMC_SDRAM write protection.
  * @param  hsdram FMC_SDRAM handle
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_WriteProtection_Disable(FMC_SDRAM_TypeDef *Device, uint32_t Bank)
{
 80053bc:	b480      	push	{r7}
 80053be:	b083      	sub	sp, #12
 80053c0:	af00      	add	r7, sp, #0
 80053c2:	6078      	str	r0, [r7, #4]
 80053c4:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Disable write protection */
  Device->SDCR[Bank] &= ~FMC_SDRAM_WRITE_PROTECTION_ENABLE;
 80053c6:	687b      	ldr	r3, [r7, #4]
 80053c8:	683a      	ldr	r2, [r7, #0]
 80053ca:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80053ce:	f423 7100 	bic.w	r1, r3, #512	; 0x200
 80053d2:	687b      	ldr	r3, [r7, #4]
 80053d4:	683a      	ldr	r2, [r7, #0]
 80053d6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  
  return HAL_OK;
 80053da:	2300      	movs	r3, #0
}
 80053dc:	4618      	mov	r0, r3
 80053de:	370c      	adds	r7, #12
 80053e0:	46bd      	mov	sp, r7
 80053e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80053e6:	4770      	bx	lr

080053e8 <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80053e8:	b580      	push	{r7, lr}
 80053ea:	b086      	sub	sp, #24
 80053ec:	af00      	add	r7, sp, #0
 80053ee:	60f8      	str	r0, [r7, #12]
 80053f0:	60b9      	str	r1, [r7, #8]
 80053f2:	607a      	str	r2, [r7, #4]
  __IO uint32_t tmpr = 0U;
 80053f4:	2300      	movs	r3, #0
 80053f6:	613b      	str	r3, [r7, #16]
  uint32_t tickstart = 0U;
 80053f8:	2300      	movs	r3, #0
 80053fa:	617b      	str	r3, [r7, #20]
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80053fc:	68bb      	ldr	r3, [r7, #8]
 80053fe:	681a      	ldr	r2, [r3, #0]
                    (Command->CommandTarget)                |\
 8005400:	68bb      	ldr	r3, [r7, #8]
 8005402:	685b      	ldr	r3, [r3, #4]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8005404:	431a      	orrs	r2, r3
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 8005406:	68bb      	ldr	r3, [r7, #8]
 8005408:	689b      	ldr	r3, [r3, #8]
 800540a:	3b01      	subs	r3, #1
 800540c:	015b      	lsls	r3, r3, #5
                    (Command->CommandTarget)                |\
 800540e:	431a      	orrs	r2, r3
                    ((Command->ModeRegisterDefinition) << 9U)
 8005410:	68bb      	ldr	r3, [r7, #8]
 8005412:	68db      	ldr	r3, [r3, #12]
 8005414:	025b      	lsls	r3, r3, #9
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8005416:	4313      	orrs	r3, r2
 8005418:	613b      	str	r3, [r7, #16]
                    );
    
  Device->SDCMR = tmpr;
 800541a:	693a      	ldr	r2, [r7, #16]
 800541c:	68fb      	ldr	r3, [r7, #12]
 800541e:	611a      	str	r2, [r3, #16]

  /* Get tick */ 
  tickstart = HAL_GetTick();
 8005420:	f7fc f8ac 	bl	800157c <HAL_GetTick>
 8005424:	6178      	str	r0, [r7, #20]

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8005426:	e010      	b.n	800544a <FMC_SDRAM_SendCommand+0x62>
  {
    /* Check for the Timeout */
    if(Timeout != HAL_MAX_DELAY)
 8005428:	687b      	ldr	r3, [r7, #4]
 800542a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800542e:	d00c      	beq.n	800544a <FMC_SDRAM_SendCommand+0x62>
    {
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	2b00      	cmp	r3, #0
 8005434:	d007      	beq.n	8005446 <FMC_SDRAM_SendCommand+0x5e>
 8005436:	f7fc f8a1 	bl	800157c <HAL_GetTick>
 800543a:	4602      	mov	r2, r0
 800543c:	697b      	ldr	r3, [r7, #20]
 800543e:	1ad3      	subs	r3, r2, r3
 8005440:	687a      	ldr	r2, [r7, #4]
 8005442:	429a      	cmp	r2, r3
 8005444:	d201      	bcs.n	800544a <FMC_SDRAM_SendCommand+0x62>
      {
        return HAL_TIMEOUT;
 8005446:	2303      	movs	r3, #3
 8005448:	e006      	b.n	8005458 <FMC_SDRAM_SendCommand+0x70>
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	699b      	ldr	r3, [r3, #24]
 800544e:	f003 0320 	and.w	r3, r3, #32
 8005452:	2b20      	cmp	r3, #32
 8005454:	d0e8      	beq.n	8005428 <FMC_SDRAM_SendCommand+0x40>
      }
    }
  }

  return HAL_OK;
 8005456:	2300      	movs	r3, #0
}
 8005458:	4618      	mov	r0, r3
 800545a:	3718      	adds	r7, #24
 800545c:	46bd      	mov	sp, r7
 800545e:	bd80      	pop	{r7, pc}

08005460 <SDIO_Init>:
  * @param  SDIOx: Pointer to SDMMC register base
  * @param  Init: SDMMC initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_Init(SDIO_TypeDef *SDIOx, SDIO_InitTypeDef Init)
{
 8005460:	b084      	sub	sp, #16
 8005462:	b480      	push	{r7}
 8005464:	b085      	sub	sp, #20
 8005466:	af00      	add	r7, sp, #0
 8005468:	6078      	str	r0, [r7, #4]
 800546a:	f107 001c 	add.w	r0, r7, #28
 800546e:	e880 000e 	stmia.w	r0, {r1, r2, r3}
  uint32_t tmpreg = 0;
 8005472:	2300      	movs	r3, #0
 8005474:	60fb      	str	r3, [r7, #12]
  assert_param(IS_SDIO_BUS_WIDE(Init.BusWide));
  assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(Init.HardwareFlowControl));
  assert_param(IS_SDIO_CLKDIV(Init.ClockDiv));
  
  /* Set SDMMC configuration parameters */
  tmpreg |= (Init.ClockEdge           |\
 8005476:	69fa      	ldr	r2, [r7, #28]
             Init.ClockBypass         |\
 8005478:	6a3b      	ldr	r3, [r7, #32]
  tmpreg |= (Init.ClockEdge           |\
 800547a:	431a      	orrs	r2, r3
             Init.ClockPowerSave      |\
 800547c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
             Init.ClockBypass         |\
 800547e:	431a      	orrs	r2, r3
             Init.BusWide             |\
 8005480:	6abb      	ldr	r3, [r7, #40]	; 0x28
             Init.ClockPowerSave      |\
 8005482:	431a      	orrs	r2, r3
             Init.HardwareFlowControl |\
 8005484:	6afb      	ldr	r3, [r7, #44]	; 0x2c
             Init.BusWide             |\
 8005486:	431a      	orrs	r2, r3
             Init.ClockDiv
 8005488:	6b3b      	ldr	r3, [r7, #48]	; 0x30
             Init.HardwareFlowControl |\
 800548a:	4313      	orrs	r3, r2
  tmpreg |= (Init.ClockEdge           |\
 800548c:	68fa      	ldr	r2, [r7, #12]
 800548e:	4313      	orrs	r3, r2
 8005490:	60fb      	str	r3, [r7, #12]
             ); 
  
  /* Write to SDMMC CLKCR */
  MODIFY_REG(SDIOx->CLKCR, CLKCR_CLEAR_MASK, tmpreg);  
 8005492:	687b      	ldr	r3, [r7, #4]
 8005494:	685b      	ldr	r3, [r3, #4]
 8005496:	f423 43fd 	bic.w	r3, r3, #32384	; 0x7e80
 800549a:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
 800549e:	68fa      	ldr	r2, [r7, #12]
 80054a0:	431a      	orrs	r2, r3
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 80054a6:	2300      	movs	r3, #0
}
 80054a8:	4618      	mov	r0, r3
 80054aa:	3714      	adds	r7, #20
 80054ac:	46bd      	mov	sp, r7
 80054ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054b2:	b004      	add	sp, #16
 80054b4:	4770      	bx	lr

080054b6 <SDIO_ReadFIFO>:
  * @brief  Read data (word) from Rx FIFO in blocking mode (polling) 
  * @param  SDIOx: Pointer to SDMMC register base
  * @retval HAL status
  */
uint32_t SDIO_ReadFIFO(SDIO_TypeDef *SDIOx)
{
 80054b6:	b480      	push	{r7}
 80054b8:	b083      	sub	sp, #12
 80054ba:	af00      	add	r7, sp, #0
 80054bc:	6078      	str	r0, [r7, #4]
  /* Read data from Rx FIFO */ 
  return (SDIOx->FIFO);
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
}
 80054c4:	4618      	mov	r0, r3
 80054c6:	370c      	adds	r7, #12
 80054c8:	46bd      	mov	sp, r7
 80054ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054ce:	4770      	bx	lr

080054d0 <SDIO_WriteFIFO>:
  * @param  SDIOx: Pointer to SDMMC register base
  * @param  pWriteData: pointer to data to write
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_WriteFIFO(SDIO_TypeDef *SDIOx, uint32_t *pWriteData)
{ 
 80054d0:	b480      	push	{r7}
 80054d2:	b083      	sub	sp, #12
 80054d4:	af00      	add	r7, sp, #0
 80054d6:	6078      	str	r0, [r7, #4]
 80054d8:	6039      	str	r1, [r7, #0]
  /* Write data to FIFO */ 
  SDIOx->FIFO = *pWriteData;
 80054da:	683b      	ldr	r3, [r7, #0]
 80054dc:	681a      	ldr	r2, [r3, #0]
 80054de:	687b      	ldr	r3, [r7, #4]
 80054e0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80

  return HAL_OK;
 80054e4:	2300      	movs	r3, #0
}
 80054e6:	4618      	mov	r0, r3
 80054e8:	370c      	adds	r7, #12
 80054ea:	46bd      	mov	sp, r7
 80054ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80054f0:	4770      	bx	lr

080054f2 <SDIO_PowerState_ON>:
  * @brief  Set SDMMC Power state to ON. 
  * @param  SDIOx: Pointer to SDMMC register base
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_PowerState_ON(SDIO_TypeDef *SDIOx)
{  
 80054f2:	b580      	push	{r7, lr}
 80054f4:	b082      	sub	sp, #8
 80054f6:	af00      	add	r7, sp, #0
 80054f8:	6078      	str	r0, [r7, #4]
  /* Set power state to ON */ 
  SDIOx->POWER = SDIO_POWER_PWRCTRL;
 80054fa:	687b      	ldr	r3, [r7, #4]
 80054fc:	2203      	movs	r2, #3
 80054fe:	601a      	str	r2, [r3, #0]

  /* 1ms: required power up waiting time before starting the SD initialization
  sequence */
  HAL_Delay(2);
 8005500:	2002      	movs	r0, #2
 8005502:	f7fc f847 	bl	8001594 <HAL_Delay>
  
  return HAL_OK;
 8005506:	2300      	movs	r3, #0
}
 8005508:	4618      	mov	r0, r3
 800550a:	3708      	adds	r7, #8
 800550c:	46bd      	mov	sp, r7
 800550e:	bd80      	pop	{r7, pc}

08005510 <SDIO_GetPowerState>:
  *            - 0x00: Power OFF
  *            - 0x02: Power UP
  *            - 0x03: Power ON 
  */
uint32_t SDIO_GetPowerState(SDIO_TypeDef *SDIOx)  
{
 8005510:	b480      	push	{r7}
 8005512:	b083      	sub	sp, #12
 8005514:	af00      	add	r7, sp, #0
 8005516:	6078      	str	r0, [r7, #4]
  return (SDIOx->POWER & SDIO_POWER_PWRCTRL);
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	f003 0303 	and.w	r3, r3, #3
}
 8005520:	4618      	mov	r0, r3
 8005522:	370c      	adds	r7, #12
 8005524:	46bd      	mov	sp, r7
 8005526:	f85d 7b04 	ldr.w	r7, [sp], #4
 800552a:	4770      	bx	lr

0800552c <SDIO_SendCommand>:
  * @param  Command: pointer to a SDIO_CmdInitTypeDef structure that contains 
  *         the configuration information for the SDMMC command
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_SendCommand(SDIO_TypeDef *SDIOx, SDIO_CmdInitTypeDef *Command)
{
 800552c:	b480      	push	{r7}
 800552e:	b085      	sub	sp, #20
 8005530:	af00      	add	r7, sp, #0
 8005532:	6078      	str	r0, [r7, #4]
 8005534:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0;
 8005536:	2300      	movs	r3, #0
 8005538:	60fb      	str	r3, [r7, #12]
  assert_param(IS_SDIO_RESPONSE(Command->Response));
  assert_param(IS_SDIO_WAIT(Command->WaitForInterrupt));
  assert_param(IS_SDIO_CPSM(Command->CPSM));

  /* Set the SDMMC Argument value */
  SDIOx->ARG = Command->Argument;
 800553a:	683b      	ldr	r3, [r7, #0]
 800553c:	681a      	ldr	r2, [r3, #0]
 800553e:	687b      	ldr	r3, [r7, #4]
 8005540:	609a      	str	r2, [r3, #8]

  /* Set SDMMC command parameters */
  tmpreg |= (uint32_t)(Command->CmdIndex         |\
 8005542:	683b      	ldr	r3, [r7, #0]
 8005544:	685a      	ldr	r2, [r3, #4]
                       Command->Response         |\
 8005546:	683b      	ldr	r3, [r7, #0]
 8005548:	689b      	ldr	r3, [r3, #8]
  tmpreg |= (uint32_t)(Command->CmdIndex         |\
 800554a:	431a      	orrs	r2, r3
                       Command->WaitForInterrupt |\
 800554c:	683b      	ldr	r3, [r7, #0]
 800554e:	68db      	ldr	r3, [r3, #12]
                       Command->Response         |\
 8005550:	431a      	orrs	r2, r3
                       Command->CPSM);
 8005552:	683b      	ldr	r3, [r7, #0]
 8005554:	691b      	ldr	r3, [r3, #16]
                       Command->WaitForInterrupt |\
 8005556:	4313      	orrs	r3, r2
  tmpreg |= (uint32_t)(Command->CmdIndex         |\
 8005558:	68fa      	ldr	r2, [r7, #12]
 800555a:	4313      	orrs	r3, r2
 800555c:	60fb      	str	r3, [r7, #12]
  
  /* Write to SDMMC CMD register */
  MODIFY_REG(SDIOx->CMD, CMD_CLEAR_MASK, tmpreg); 
 800555e:	687b      	ldr	r3, [r7, #4]
 8005560:	68db      	ldr	r3, [r3, #12]
 8005562:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8005566:	f023 030f 	bic.w	r3, r3, #15
 800556a:	68fa      	ldr	r2, [r7, #12]
 800556c:	431a      	orrs	r2, r3
 800556e:	687b      	ldr	r3, [r7, #4]
 8005570:	60da      	str	r2, [r3, #12]
  
  return HAL_OK;  
 8005572:	2300      	movs	r3, #0
}
 8005574:	4618      	mov	r0, r3
 8005576:	3714      	adds	r7, #20
 8005578:	46bd      	mov	sp, r7
 800557a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800557e:	4770      	bx	lr

08005580 <SDIO_GetCommandResponse>:
  * @brief  Return the command index of last command for which response received
  * @param  SDIOx: Pointer to SDMMC register base
  * @retval Command index of the last command response received
  */
uint8_t SDIO_GetCommandResponse(SDIO_TypeDef *SDIOx)
{
 8005580:	b480      	push	{r7}
 8005582:	b083      	sub	sp, #12
 8005584:	af00      	add	r7, sp, #0
 8005586:	6078      	str	r0, [r7, #4]
  return (uint8_t)(SDIOx->RESPCMD);
 8005588:	687b      	ldr	r3, [r7, #4]
 800558a:	691b      	ldr	r3, [r3, #16]
 800558c:	b2db      	uxtb	r3, r3
}
 800558e:	4618      	mov	r0, r3
 8005590:	370c      	adds	r7, #12
 8005592:	46bd      	mov	sp, r7
 8005594:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005598:	4770      	bx	lr

0800559a <SDIO_GetResponse>:
  *            @arg SDIO_RESP3: Response Register 3
  *            @arg SDIO_RESP4: Response Register 4  
  * @retval The Corresponding response register value
  */
uint32_t SDIO_GetResponse(SDIO_TypeDef *SDIOx, uint32_t Response)
{
 800559a:	b480      	push	{r7}
 800559c:	b085      	sub	sp, #20
 800559e:	af00      	add	r7, sp, #0
 80055a0:	6078      	str	r0, [r7, #4]
 80055a2:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_SDIO_RESP(Response));
  
  /* Get the response */
  tmp = (uint32_t)(&(SDIOx->RESP1)) + Response;
 80055a4:	687b      	ldr	r3, [r7, #4]
 80055a6:	3314      	adds	r3, #20
 80055a8:	461a      	mov	r2, r3
 80055aa:	683b      	ldr	r3, [r7, #0]
 80055ac:	4413      	add	r3, r2
 80055ae:	60fb      	str	r3, [r7, #12]
  
  return (*(__IO uint32_t *) tmp);
 80055b0:	68fb      	ldr	r3, [r7, #12]
 80055b2:	681b      	ldr	r3, [r3, #0]
}  
 80055b4:	4618      	mov	r0, r3
 80055b6:	3714      	adds	r7, #20
 80055b8:	46bd      	mov	sp, r7
 80055ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055be:	4770      	bx	lr

080055c0 <SDIO_ConfigData>:
  * @param  Data : pointer to a SDIO_DataInitTypeDef structure 
  *         that contains the configuration information for the SDMMC data.
  * @retval HAL status
  */
HAL_StatusTypeDef SDIO_ConfigData(SDIO_TypeDef *SDIOx, SDIO_DataInitTypeDef* Data)
{
 80055c0:	b480      	push	{r7}
 80055c2:	b085      	sub	sp, #20
 80055c4:	af00      	add	r7, sp, #0
 80055c6:	6078      	str	r0, [r7, #4]
 80055c8:	6039      	str	r1, [r7, #0]
  uint32_t tmpreg = 0;
 80055ca:	2300      	movs	r3, #0
 80055cc:	60fb      	str	r3, [r7, #12]
  assert_param(IS_SDIO_TRANSFER_DIR(Data->TransferDir));
  assert_param(IS_SDIO_TRANSFER_MODE(Data->TransferMode));
  assert_param(IS_SDIO_DPSM(Data->DPSM));

  /* Set the SDMMC Data TimeOut value */
  SDIOx->DTIMER = Data->DataTimeOut;
 80055ce:	683b      	ldr	r3, [r7, #0]
 80055d0:	681a      	ldr	r2, [r3, #0]
 80055d2:	687b      	ldr	r3, [r7, #4]
 80055d4:	625a      	str	r2, [r3, #36]	; 0x24

  /* Set the SDMMC DataLength value */
  SDIOx->DLEN = Data->DataLength;
 80055d6:	683b      	ldr	r3, [r7, #0]
 80055d8:	685a      	ldr	r2, [r3, #4]
 80055da:	687b      	ldr	r3, [r7, #4]
 80055dc:	629a      	str	r2, [r3, #40]	; 0x28

  /* Set the SDMMC data configuration parameters */
  tmpreg |= (uint32_t)(Data->DataBlockSize |\
 80055de:	683b      	ldr	r3, [r7, #0]
 80055e0:	689a      	ldr	r2, [r3, #8]
                       Data->TransferDir   |\
 80055e2:	683b      	ldr	r3, [r7, #0]
 80055e4:	68db      	ldr	r3, [r3, #12]
  tmpreg |= (uint32_t)(Data->DataBlockSize |\
 80055e6:	431a      	orrs	r2, r3
                       Data->TransferMode  |\
 80055e8:	683b      	ldr	r3, [r7, #0]
 80055ea:	691b      	ldr	r3, [r3, #16]
                       Data->TransferDir   |\
 80055ec:	431a      	orrs	r2, r3
                       Data->DPSM);
 80055ee:	683b      	ldr	r3, [r7, #0]
 80055f0:	695b      	ldr	r3, [r3, #20]
                       Data->TransferMode  |\
 80055f2:	4313      	orrs	r3, r2
  tmpreg |= (uint32_t)(Data->DataBlockSize |\
 80055f4:	68fa      	ldr	r2, [r7, #12]
 80055f6:	4313      	orrs	r3, r2
 80055f8:	60fb      	str	r3, [r7, #12]
  
  /* Write to SDMMC DCTRL */
  MODIFY_REG(SDIOx->DCTRL, DCTRL_CLEAR_MASK, tmpreg);
 80055fa:	687b      	ldr	r3, [r7, #4]
 80055fc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80055fe:	f023 02f7 	bic.w	r2, r3, #247	; 0xf7
 8005602:	68fb      	ldr	r3, [r7, #12]
 8005604:	431a      	orrs	r2, r3
 8005606:	687b      	ldr	r3, [r7, #4]
 8005608:	62da      	str	r2, [r3, #44]	; 0x2c

  return HAL_OK;
 800560a:	2300      	movs	r3, #0

}
 800560c:	4618      	mov	r0, r3
 800560e:	3714      	adds	r7, #20
 8005610:	46bd      	mov	sp, r7
 8005612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005616:	4770      	bx	lr

08005618 <SDMMC_CmdBlockLength>:
  * @brief  Send the Data Block Lenght command and check the response
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdBlockLength(SDIO_TypeDef *SDIOx, uint32_t BlockSize)
{
 8005618:	b580      	push	{r7, lr}
 800561a:	b088      	sub	sp, #32
 800561c:	af00      	add	r7, sp, #0
 800561e:	6078      	str	r0, [r7, #4]
 8005620:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Set Block Size for Card */ 
  sdmmc_cmdinit.Argument         = (uint32_t)BlockSize;
 8005622:	683b      	ldr	r3, [r7, #0]
 8005624:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SET_BLOCKLEN;
 8005626:	2310      	movs	r3, #16
 8005628:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800562a:	2340      	movs	r3, #64	; 0x40
 800562c:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800562e:	2300      	movs	r3, #0
 8005630:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005632:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005636:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005638:	f107 0308 	add.w	r3, r7, #8
 800563c:	4619      	mov	r1, r3
 800563e:	6878      	ldr	r0, [r7, #4]
 8005640:	f7ff ff74 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SET_BLOCKLEN, SDIO_CMDTIMEOUT);
 8005644:	f241 3288 	movw	r2, #5000	; 0x1388
 8005648:	2110      	movs	r1, #16
 800564a:	6878      	ldr	r0, [r7, #4]
 800564c:	f000 f9fe 	bl	8005a4c <SDMMC_GetCmdResp1>
 8005650:	61f8      	str	r0, [r7, #28]

  return errorstate;
 8005652:	69fb      	ldr	r3, [r7, #28]
}
 8005654:	4618      	mov	r0, r3
 8005656:	3720      	adds	r7, #32
 8005658:	46bd      	mov	sp, r7
 800565a:	bd80      	pop	{r7, pc}

0800565c <SDMMC_CmdReadSingleBlock>:
  * @brief  Send the Read Single Block command and check the response
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdReadSingleBlock(SDIO_TypeDef *SDIOx, uint32_t ReadAdd)
{
 800565c:	b580      	push	{r7, lr}
 800565e:	b088      	sub	sp, #32
 8005660:	af00      	add	r7, sp, #0
 8005662:	6078      	str	r0, [r7, #4]
 8005664:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Set Block Size for Card */ 
  sdmmc_cmdinit.Argument         = (uint32_t)ReadAdd;
 8005666:	683b      	ldr	r3, [r7, #0]
 8005668:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_READ_SINGLE_BLOCK;
 800566a:	2311      	movs	r3, #17
 800566c:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800566e:	2340      	movs	r3, #64	; 0x40
 8005670:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 8005672:	2300      	movs	r3, #0
 8005674:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005676:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800567a:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800567c:	f107 0308 	add.w	r3, r7, #8
 8005680:	4619      	mov	r1, r3
 8005682:	6878      	ldr	r0, [r7, #4]
 8005684:	f7ff ff52 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_READ_SINGLE_BLOCK, SDIO_CMDTIMEOUT);
 8005688:	f241 3288 	movw	r2, #5000	; 0x1388
 800568c:	2111      	movs	r1, #17
 800568e:	6878      	ldr	r0, [r7, #4]
 8005690:	f000 f9dc 	bl	8005a4c <SDMMC_GetCmdResp1>
 8005694:	61f8      	str	r0, [r7, #28]

  return errorstate;
 8005696:	69fb      	ldr	r3, [r7, #28]
}
 8005698:	4618      	mov	r0, r3
 800569a:	3720      	adds	r7, #32
 800569c:	46bd      	mov	sp, r7
 800569e:	bd80      	pop	{r7, pc}

080056a0 <SDMMC_CmdReadMultiBlock>:
  * @brief  Send the Read Multi Block command and check the response
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdReadMultiBlock(SDIO_TypeDef *SDIOx, uint32_t ReadAdd)
{
 80056a0:	b580      	push	{r7, lr}
 80056a2:	b088      	sub	sp, #32
 80056a4:	af00      	add	r7, sp, #0
 80056a6:	6078      	str	r0, [r7, #4]
 80056a8:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Set Block Size for Card */ 
  sdmmc_cmdinit.Argument         = (uint32_t)ReadAdd;
 80056aa:	683b      	ldr	r3, [r7, #0]
 80056ac:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_READ_MULT_BLOCK;
 80056ae:	2312      	movs	r3, #18
 80056b0:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 80056b2:	2340      	movs	r3, #64	; 0x40
 80056b4:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 80056b6:	2300      	movs	r3, #0
 80056b8:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 80056ba:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80056be:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 80056c0:	f107 0308 	add.w	r3, r7, #8
 80056c4:	4619      	mov	r1, r3
 80056c6:	6878      	ldr	r0, [r7, #4]
 80056c8:	f7ff ff30 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_READ_MULT_BLOCK, SDIO_CMDTIMEOUT);
 80056cc:	f241 3288 	movw	r2, #5000	; 0x1388
 80056d0:	2112      	movs	r1, #18
 80056d2:	6878      	ldr	r0, [r7, #4]
 80056d4:	f000 f9ba 	bl	8005a4c <SDMMC_GetCmdResp1>
 80056d8:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80056da:	69fb      	ldr	r3, [r7, #28]
}
 80056dc:	4618      	mov	r0, r3
 80056de:	3720      	adds	r7, #32
 80056e0:	46bd      	mov	sp, r7
 80056e2:	bd80      	pop	{r7, pc}

080056e4 <SDMMC_CmdWriteSingleBlock>:
  * @brief  Send the Write Single Block command and check the response
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdWriteSingleBlock(SDIO_TypeDef *SDIOx, uint32_t WriteAdd)
{
 80056e4:	b580      	push	{r7, lr}
 80056e6:	b088      	sub	sp, #32
 80056e8:	af00      	add	r7, sp, #0
 80056ea:	6078      	str	r0, [r7, #4]
 80056ec:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Set Block Size for Card */ 
  sdmmc_cmdinit.Argument         = (uint32_t)WriteAdd;
 80056ee:	683b      	ldr	r3, [r7, #0]
 80056f0:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_WRITE_SINGLE_BLOCK;
 80056f2:	2318      	movs	r3, #24
 80056f4:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 80056f6:	2340      	movs	r3, #64	; 0x40
 80056f8:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 80056fa:	2300      	movs	r3, #0
 80056fc:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 80056fe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005702:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005704:	f107 0308 	add.w	r3, r7, #8
 8005708:	4619      	mov	r1, r3
 800570a:	6878      	ldr	r0, [r7, #4]
 800570c:	f7ff ff0e 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_WRITE_SINGLE_BLOCK, SDIO_CMDTIMEOUT);
 8005710:	f241 3288 	movw	r2, #5000	; 0x1388
 8005714:	2118      	movs	r1, #24
 8005716:	6878      	ldr	r0, [r7, #4]
 8005718:	f000 f998 	bl	8005a4c <SDMMC_GetCmdResp1>
 800571c:	61f8      	str	r0, [r7, #28]

  return errorstate;
 800571e:	69fb      	ldr	r3, [r7, #28]
}
 8005720:	4618      	mov	r0, r3
 8005722:	3720      	adds	r7, #32
 8005724:	46bd      	mov	sp, r7
 8005726:	bd80      	pop	{r7, pc}

08005728 <SDMMC_CmdWriteMultiBlock>:
  * @brief  Send the Write Multi Block command and check the response
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdWriteMultiBlock(SDIO_TypeDef *SDIOx, uint32_t WriteAdd)
{
 8005728:	b580      	push	{r7, lr}
 800572a:	b088      	sub	sp, #32
 800572c:	af00      	add	r7, sp, #0
 800572e:	6078      	str	r0, [r7, #4]
 8005730:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Set Block Size for Card */ 
  sdmmc_cmdinit.Argument         = (uint32_t)WriteAdd;
 8005732:	683b      	ldr	r3, [r7, #0]
 8005734:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_WRITE_MULT_BLOCK;
 8005736:	2319      	movs	r3, #25
 8005738:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800573a:	2340      	movs	r3, #64	; 0x40
 800573c:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800573e:	2300      	movs	r3, #0
 8005740:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005742:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005746:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005748:	f107 0308 	add.w	r3, r7, #8
 800574c:	4619      	mov	r1, r3
 800574e:	6878      	ldr	r0, [r7, #4]
 8005750:	f7ff feec 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_WRITE_MULT_BLOCK, SDIO_CMDTIMEOUT);
 8005754:	f241 3288 	movw	r2, #5000	; 0x1388
 8005758:	2119      	movs	r1, #25
 800575a:	6878      	ldr	r0, [r7, #4]
 800575c:	f000 f976 	bl	8005a4c <SDMMC_GetCmdResp1>
 8005760:	61f8      	str	r0, [r7, #28]

  return errorstate;
 8005762:	69fb      	ldr	r3, [r7, #28]
}
 8005764:	4618      	mov	r0, r3
 8005766:	3720      	adds	r7, #32
 8005768:	46bd      	mov	sp, r7
 800576a:	bd80      	pop	{r7, pc}

0800576c <SDMMC_CmdStopTransfer>:
  * @brief  Send the Stop Transfer command and check the response.
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdStopTransfer(SDIO_TypeDef *SDIOx)
{
 800576c:	b580      	push	{r7, lr}
 800576e:	b088      	sub	sp, #32
 8005770:	af00      	add	r7, sp, #0
 8005772:	6078      	str	r0, [r7, #4]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Send CMD12 STOP_TRANSMISSION  */
  sdmmc_cmdinit.Argument         = 0U;
 8005774:	2300      	movs	r3, #0
 8005776:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_STOP_TRANSMISSION;
 8005778:	230c      	movs	r3, #12
 800577a:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 800577c:	2340      	movs	r3, #64	; 0x40
 800577e:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 8005780:	2300      	movs	r3, #0
 8005782:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005784:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005788:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 800578a:	f107 0308 	add.w	r3, r7, #8
 800578e:	4619      	mov	r1, r3
 8005790:	6878      	ldr	r0, [r7, #4]
 8005792:	f7ff fecb 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_STOP_TRANSMISSION, SDIO_STOPTRANSFERTIMEOUT);
 8005796:	4a05      	ldr	r2, [pc, #20]	; (80057ac <SDMMC_CmdStopTransfer+0x40>)
 8005798:	210c      	movs	r1, #12
 800579a:	6878      	ldr	r0, [r7, #4]
 800579c:	f000 f956 	bl	8005a4c <SDMMC_GetCmdResp1>
 80057a0:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80057a2:	69fb      	ldr	r3, [r7, #28]
}
 80057a4:	4618      	mov	r0, r3
 80057a6:	3720      	adds	r7, #32
 80057a8:	46bd      	mov	sp, r7
 80057aa:	bd80      	pop	{r7, pc}
 80057ac:	05f5e100 	.word	0x05f5e100

080057b0 <SDMMC_CmdSelDesel>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  addr: Address of the card to be selected  
  * @retval HAL status
  */
uint32_t SDMMC_CmdSelDesel(SDIO_TypeDef *SDIOx, uint64_t Addr)
{
 80057b0:	b580      	push	{r7, lr}
 80057b2:	b08a      	sub	sp, #40	; 0x28
 80057b4:	af00      	add	r7, sp, #0
 80057b6:	60f8      	str	r0, [r7, #12]
 80057b8:	e9c7 2300 	strd	r2, r3, [r7]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Send CMD7 SDMMC_SEL_DESEL_CARD */
  sdmmc_cmdinit.Argument         = (uint32_t)Addr;
 80057bc:	683b      	ldr	r3, [r7, #0]
 80057be:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SEL_DESEL_CARD;
 80057c0:	2307      	movs	r3, #7
 80057c2:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 80057c4:	2340      	movs	r3, #64	; 0x40
 80057c6:	61bb      	str	r3, [r7, #24]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 80057c8:	2300      	movs	r3, #0
 80057ca:	61fb      	str	r3, [r7, #28]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 80057cc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80057d0:	623b      	str	r3, [r7, #32]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 80057d2:	f107 0310 	add.w	r3, r7, #16
 80057d6:	4619      	mov	r1, r3
 80057d8:	68f8      	ldr	r0, [r7, #12]
 80057da:	f7ff fea7 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SEL_DESEL_CARD, SDIO_CMDTIMEOUT);
 80057de:	f241 3288 	movw	r2, #5000	; 0x1388
 80057e2:	2107      	movs	r1, #7
 80057e4:	68f8      	ldr	r0, [r7, #12]
 80057e6:	f000 f931 	bl	8005a4c <SDMMC_GetCmdResp1>
 80057ea:	6278      	str	r0, [r7, #36]	; 0x24

  return errorstate;
 80057ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
}
 80057ee:	4618      	mov	r0, r3
 80057f0:	3728      	adds	r7, #40	; 0x28
 80057f2:	46bd      	mov	sp, r7
 80057f4:	bd80      	pop	{r7, pc}

080057f6 <SDMMC_CmdGoIdleState>:
  * @brief  Send the Go Idle State command and check the response.
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdGoIdleState(SDIO_TypeDef *SDIOx)
{
 80057f6:	b580      	push	{r7, lr}
 80057f8:	b088      	sub	sp, #32
 80057fa:	af00      	add	r7, sp, #0
 80057fc:	6078      	str	r0, [r7, #4]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  sdmmc_cmdinit.Argument         = 0U;
 80057fe:	2300      	movs	r3, #0
 8005800:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_GO_IDLE_STATE;
 8005802:	2300      	movs	r3, #0
 8005804:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_NO;
 8005806:	2300      	movs	r3, #0
 8005808:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800580a:	2300      	movs	r3, #0
 800580c:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800580e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005812:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005814:	f107 0308 	add.w	r3, r7, #8
 8005818:	4619      	mov	r1, r3
 800581a:	6878      	ldr	r0, [r7, #4]
 800581c:	f7ff fe86 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdError(SDIOx);
 8005820:	6878      	ldr	r0, [r7, #4]
 8005822:	f000 f8eb 	bl	80059fc <SDMMC_GetCmdError>
 8005826:	61f8      	str	r0, [r7, #28]

  return errorstate;
 8005828:	69fb      	ldr	r3, [r7, #28]
}
 800582a:	4618      	mov	r0, r3
 800582c:	3720      	adds	r7, #32
 800582e:	46bd      	mov	sp, r7
 8005830:	bd80      	pop	{r7, pc}

08005832 <SDMMC_CmdOperCond>:
  * @brief  Send the Operating Condition command and check the response.
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdOperCond(SDIO_TypeDef *SDIOx)
{
 8005832:	b580      	push	{r7, lr}
 8005834:	b088      	sub	sp, #32
 8005836:	af00      	add	r7, sp, #0
 8005838:	6078      	str	r0, [r7, #4]
  /* Send CMD8 to verify SD card interface operating condition */
  /* Argument: - [31:12]: Reserved (shall be set to '0')
  - [11:8]: Supply Voltage (VHS) 0x1 (Range: 2.7-3.6 V)
  - [7:0]: Check Pattern (recommended 0xAA) */
  /* CMD Response: R7 */
  sdmmc_cmdinit.Argument         = SDMMC_CHECK_PATTERN;
 800583a:	f44f 73d5 	mov.w	r3, #426	; 0x1aa
 800583e:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_HS_SEND_EXT_CSD;
 8005840:	2308      	movs	r3, #8
 8005842:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 8005844:	2340      	movs	r3, #64	; 0x40
 8005846:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 8005848:	2300      	movs	r3, #0
 800584a:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800584c:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005850:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005852:	f107 0308 	add.w	r3, r7, #8
 8005856:	4619      	mov	r1, r3
 8005858:	6878      	ldr	r0, [r7, #4]
 800585a:	f7ff fe67 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp7(SDIOx);
 800585e:	6878      	ldr	r0, [r7, #4]
 8005860:	f000 fad4 	bl	8005e0c <SDMMC_GetCmdResp7>
 8005864:	61f8      	str	r0, [r7, #28]

  return errorstate;
 8005866:	69fb      	ldr	r3, [r7, #28]
}
 8005868:	4618      	mov	r0, r3
 800586a:	3720      	adds	r7, #32
 800586c:	46bd      	mov	sp, r7
 800586e:	bd80      	pop	{r7, pc}

08005870 <SDMMC_CmdAppCommand>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  Argument: Command Argument 
  * @retval HAL status
  */
uint32_t SDMMC_CmdAppCommand(SDIO_TypeDef *SDIOx, uint32_t Argument)
{
 8005870:	b580      	push	{r7, lr}
 8005872:	b088      	sub	sp, #32
 8005874:	af00      	add	r7, sp, #0
 8005876:	6078      	str	r0, [r7, #4]
 8005878:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  sdmmc_cmdinit.Argument         = (uint32_t)Argument;
 800587a:	683b      	ldr	r3, [r7, #0]
 800587c:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_APP_CMD;
 800587e:	2337      	movs	r3, #55	; 0x37
 8005880:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 8005882:	2340      	movs	r3, #64	; 0x40
 8005884:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 8005886:	2300      	movs	r3, #0
 8005888:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800588a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800588e:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005890:	f107 0308 	add.w	r3, r7, #8
 8005894:	4619      	mov	r1, r3
 8005896:	6878      	ldr	r0, [r7, #4]
 8005898:	f7ff fe48 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  /* If there is a HAL_ERROR, it is a MMC card, else
  it is a SD card: SD card 2.0 (voltage range mismatch)
     or SD card 1.x */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_APP_CMD, SDIO_CMDTIMEOUT);
 800589c:	f241 3288 	movw	r2, #5000	; 0x1388
 80058a0:	2137      	movs	r1, #55	; 0x37
 80058a2:	6878      	ldr	r0, [r7, #4]
 80058a4:	f000 f8d2 	bl	8005a4c <SDMMC_GetCmdResp1>
 80058a8:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80058aa:	69fb      	ldr	r3, [r7, #28]
}
 80058ac:	4618      	mov	r0, r3
 80058ae:	3720      	adds	r7, #32
 80058b0:	46bd      	mov	sp, r7
 80058b2:	bd80      	pop	{r7, pc}

080058b4 <SDMMC_CmdAppOperCommand>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  Argument: Command Argument
  * @retval HAL status
  */
uint32_t SDMMC_CmdAppOperCommand(SDIO_TypeDef *SDIOx, uint32_t Argument)
{
 80058b4:	b580      	push	{r7, lr}
 80058b6:	b088      	sub	sp, #32
 80058b8:	af00      	add	r7, sp, #0
 80058ba:	6078      	str	r0, [r7, #4]
 80058bc:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  sdmmc_cmdinit.Argument         = SDMMC_VOLTAGE_WINDOW_SD | Argument;
 80058be:	683b      	ldr	r3, [r7, #0]
 80058c0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 80058c4:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80058c8:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SD_APP_OP_COND;
 80058ca:	2329      	movs	r3, #41	; 0x29
 80058cc:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 80058ce:	2340      	movs	r3, #64	; 0x40
 80058d0:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 80058d2:	2300      	movs	r3, #0
 80058d4:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 80058d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80058da:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 80058dc:	f107 0308 	add.w	r3, r7, #8
 80058e0:	4619      	mov	r1, r3
 80058e2:	6878      	ldr	r0, [r7, #4]
 80058e4:	f7ff fe22 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp3(SDIOx);
 80058e8:	6878      	ldr	r0, [r7, #4]
 80058ea:	f000 f9e1 	bl	8005cb0 <SDMMC_GetCmdResp3>
 80058ee:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80058f0:	69fb      	ldr	r3, [r7, #28]
}
 80058f2:	4618      	mov	r0, r3
 80058f4:	3720      	adds	r7, #32
 80058f6:	46bd      	mov	sp, r7
 80058f8:	bd80      	pop	{r7, pc}

080058fa <SDMMC_CmdSendCID>:
  * @brief  Send the Send CID command and check the response.
  * @param  SDIOx: Pointer to SDIO register base 
  * @retval HAL status
  */
uint32_t SDMMC_CmdSendCID(SDIO_TypeDef *SDIOx)
{
 80058fa:	b580      	push	{r7, lr}
 80058fc:	b088      	sub	sp, #32
 80058fe:	af00      	add	r7, sp, #0
 8005900:	6078      	str	r0, [r7, #4]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Send CMD2 ALL_SEND_CID */
  sdmmc_cmdinit.Argument         = 0U;
 8005902:	2300      	movs	r3, #0
 8005904:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_ALL_SEND_CID;
 8005906:	2302      	movs	r3, #2
 8005908:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_LONG;
 800590a:	23c0      	movs	r3, #192	; 0xc0
 800590c:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800590e:	2300      	movs	r3, #0
 8005910:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005912:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005916:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005918:	f107 0308 	add.w	r3, r7, #8
 800591c:	4619      	mov	r1, r3
 800591e:	6878      	ldr	r0, [r7, #4]
 8005920:	f7ff fe04 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp2(SDIOx);
 8005924:	6878      	ldr	r0, [r7, #4]
 8005926:	f000 f97d 	bl	8005c24 <SDMMC_GetCmdResp2>
 800592a:	61f8      	str	r0, [r7, #28]

  return errorstate;
 800592c:	69fb      	ldr	r3, [r7, #28]
}
 800592e:	4618      	mov	r0, r3
 8005930:	3720      	adds	r7, #32
 8005932:	46bd      	mov	sp, r7
 8005934:	bd80      	pop	{r7, pc}

08005936 <SDMMC_CmdSendCSD>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  Argument: Command Argument
  * @retval HAL status
  */
uint32_t SDMMC_CmdSendCSD(SDIO_TypeDef *SDIOx, uint32_t Argument)
{
 8005936:	b580      	push	{r7, lr}
 8005938:	b088      	sub	sp, #32
 800593a:	af00      	add	r7, sp, #0
 800593c:	6078      	str	r0, [r7, #4]
 800593e:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Send CMD9 SEND_CSD */
  sdmmc_cmdinit.Argument         = Argument;
 8005940:	683b      	ldr	r3, [r7, #0]
 8005942:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SEND_CSD;
 8005944:	2309      	movs	r3, #9
 8005946:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_LONG;
 8005948:	23c0      	movs	r3, #192	; 0xc0
 800594a:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800594c:	2300      	movs	r3, #0
 800594e:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 8005950:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005954:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005956:	f107 0308 	add.w	r3, r7, #8
 800595a:	4619      	mov	r1, r3
 800595c:	6878      	ldr	r0, [r7, #4]
 800595e:	f7ff fde5 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp2(SDIOx);
 8005962:	6878      	ldr	r0, [r7, #4]
 8005964:	f000 f95e 	bl	8005c24 <SDMMC_GetCmdResp2>
 8005968:	61f8      	str	r0, [r7, #28]

  return errorstate;
 800596a:	69fb      	ldr	r3, [r7, #28]
}
 800596c:	4618      	mov	r0, r3
 800596e:	3720      	adds	r7, #32
 8005970:	46bd      	mov	sp, r7
 8005972:	bd80      	pop	{r7, pc}

08005974 <SDMMC_CmdSetRelAdd>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  pRCA: Card RCA  
  * @retval HAL status
  */
uint32_t SDMMC_CmdSetRelAdd(SDIO_TypeDef *SDIOx, uint16_t *pRCA)
{
 8005974:	b580      	push	{r7, lr}
 8005976:	b088      	sub	sp, #32
 8005978:	af00      	add	r7, sp, #0
 800597a:	6078      	str	r0, [r7, #4]
 800597c:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  /* Send CMD3 SD_CMD_SET_REL_ADDR */
  sdmmc_cmdinit.Argument         = 0U;
 800597e:	2300      	movs	r3, #0
 8005980:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SET_REL_ADDR;
 8005982:	2303      	movs	r3, #3
 8005984:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 8005986:	2340      	movs	r3, #64	; 0x40
 8005988:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 800598a:	2300      	movs	r3, #0
 800598c:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 800598e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005992:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 8005994:	f107 0308 	add.w	r3, r7, #8
 8005998:	4619      	mov	r1, r3
 800599a:	6878      	ldr	r0, [r7, #4]
 800599c:	f7ff fdc6 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp6(SDIOx, SDMMC_CMD_SET_REL_ADDR, pRCA);
 80059a0:	683a      	ldr	r2, [r7, #0]
 80059a2:	2103      	movs	r1, #3
 80059a4:	6878      	ldr	r0, [r7, #4]
 80059a6:	f000 f9bd 	bl	8005d24 <SDMMC_GetCmdResp6>
 80059aa:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80059ac:	69fb      	ldr	r3, [r7, #28]
}
 80059ae:	4618      	mov	r0, r3
 80059b0:	3720      	adds	r7, #32
 80059b2:	46bd      	mov	sp, r7
 80059b4:	bd80      	pop	{r7, pc}

080059b6 <SDMMC_CmdSendStatus>:
  * @param  SDIOx: Pointer to SDIO register base 
  * @param  Argument: Command Argument
  * @retval HAL status
  */
uint32_t SDMMC_CmdSendStatus(SDIO_TypeDef *SDIOx, uint32_t Argument)
{
 80059b6:	b580      	push	{r7, lr}
 80059b8:	b088      	sub	sp, #32
 80059ba:	af00      	add	r7, sp, #0
 80059bc:	6078      	str	r0, [r7, #4]
 80059be:	6039      	str	r1, [r7, #0]
  SDIO_CmdInitTypeDef  sdmmc_cmdinit;
  uint32_t errorstate;
  
  sdmmc_cmdinit.Argument         = Argument;
 80059c0:	683b      	ldr	r3, [r7, #0]
 80059c2:	60bb      	str	r3, [r7, #8]
  sdmmc_cmdinit.CmdIndex         = SDMMC_CMD_SEND_STATUS;
 80059c4:	230d      	movs	r3, #13
 80059c6:	60fb      	str	r3, [r7, #12]
  sdmmc_cmdinit.Response         = SDIO_RESPONSE_SHORT;
 80059c8:	2340      	movs	r3, #64	; 0x40
 80059ca:	613b      	str	r3, [r7, #16]
  sdmmc_cmdinit.WaitForInterrupt = SDIO_WAIT_NO;
 80059cc:	2300      	movs	r3, #0
 80059ce:	617b      	str	r3, [r7, #20]
  sdmmc_cmdinit.CPSM             = SDIO_CPSM_ENABLE;
 80059d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80059d4:	61bb      	str	r3, [r7, #24]
  (void)SDIO_SendCommand(SDIOx, &sdmmc_cmdinit);
 80059d6:	f107 0308 	add.w	r3, r7, #8
 80059da:	4619      	mov	r1, r3
 80059dc:	6878      	ldr	r0, [r7, #4]
 80059de:	f7ff fda5 	bl	800552c <SDIO_SendCommand>
  
  /* Check for error conditions */
  errorstate = SDMMC_GetCmdResp1(SDIOx, SDMMC_CMD_SEND_STATUS, SDIO_CMDTIMEOUT);
 80059e2:	f241 3288 	movw	r2, #5000	; 0x1388
 80059e6:	210d      	movs	r1, #13
 80059e8:	6878      	ldr	r0, [r7, #4]
 80059ea:	f000 f82f 	bl	8005a4c <SDMMC_GetCmdResp1>
 80059ee:	61f8      	str	r0, [r7, #28]

  return errorstate;
 80059f0:	69fb      	ldr	r3, [r7, #28]
}
 80059f2:	4618      	mov	r0, r3
 80059f4:	3720      	adds	r7, #32
 80059f6:	46bd      	mov	sp, r7
 80059f8:	bd80      	pop	{r7, pc}
	...

080059fc <SDMMC_GetCmdError>:
  * @brief  Checks for error conditions for CMD0.
  * @param  hsd: SD handle
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdError(SDIO_TypeDef *SDIOx)
{
 80059fc:	b490      	push	{r4, r7}
 80059fe:	b082      	sub	sp, #8
 8005a00:	af00      	add	r7, sp, #0
 8005a02:	6078      	str	r0, [r7, #4]
  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  register uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 8005a04:	4b0f      	ldr	r3, [pc, #60]	; (8005a44 <SDMMC_GetCmdError+0x48>)
 8005a06:	681b      	ldr	r3, [r3, #0]
 8005a08:	4a0f      	ldr	r2, [pc, #60]	; (8005a48 <SDMMC_GetCmdError+0x4c>)
 8005a0a:	fba2 2303 	umull	r2, r3, r2, r3
 8005a0e:	0a5b      	lsrs	r3, r3, #9
 8005a10:	f241 3288 	movw	r2, #5000	; 0x1388
 8005a14:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005a18:	4623      	mov	r3, r4
 8005a1a:	1e5c      	subs	r4, r3, #1
 8005a1c:	2b00      	cmp	r3, #0
 8005a1e:	d102      	bne.n	8005a26 <SDMMC_GetCmdError+0x2a>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005a20:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005a24:	e009      	b.n	8005a3a <SDMMC_GetCmdError+0x3e>
    }
    
  }while(!__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CMDSENT));
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005a2a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005a2e:	2b00      	cmp	r3, #0
 8005a30:	d0f2      	beq.n	8005a18 <SDMMC_GetCmdError+0x1c>
  
  /* Clear all the static flags */
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 8005a32:	687b      	ldr	r3, [r7, #4]
 8005a34:	22c5      	movs	r2, #197	; 0xc5
 8005a36:	639a      	str	r2, [r3, #56]	; 0x38
  
  return SDMMC_ERROR_NONE;
 8005a38:	2300      	movs	r3, #0
}
 8005a3a:	4618      	mov	r0, r3
 8005a3c:	3708      	adds	r7, #8
 8005a3e:	46bd      	mov	sp, r7
 8005a40:	bc90      	pop	{r4, r7}
 8005a42:	4770      	bx	lr
 8005a44:	20000004 	.word	0x20000004
 8005a48:	10624dd3 	.word	0x10624dd3

08005a4c <SDMMC_GetCmdResp1>:
  * @param  hsd: SD handle
  * @param  SD_CMD: The sent command index  
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdResp1(SDIO_TypeDef *SDIOx, uint8_t SD_CMD, uint32_t Timeout)
{
 8005a4c:	b590      	push	{r4, r7, lr}
 8005a4e:	b087      	sub	sp, #28
 8005a50:	af00      	add	r7, sp, #0
 8005a52:	60f8      	str	r0, [r7, #12]
 8005a54:	460b      	mov	r3, r1
 8005a56:	607a      	str	r2, [r7, #4]
 8005a58:	72fb      	strb	r3, [r7, #11]
  uint32_t response_r1;
  uint32_t sta_reg;
  
  /* 8 is the number of required instructions cycles for the below loop statement.
  The Timeout is expressed in ms */
  register uint32_t count = Timeout * (SystemCoreClock / 8U /1000U);
 8005a5a:	4b6f      	ldr	r3, [pc, #444]	; (8005c18 <SDMMC_GetCmdResp1+0x1cc>)
 8005a5c:	681b      	ldr	r3, [r3, #0]
 8005a5e:	4a6f      	ldr	r2, [pc, #444]	; (8005c1c <SDMMC_GetCmdResp1+0x1d0>)
 8005a60:	fba2 2303 	umull	r2, r3, r2, r3
 8005a64:	0a5b      	lsrs	r3, r3, #9
 8005a66:	687a      	ldr	r2, [r7, #4]
 8005a68:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005a6c:	4623      	mov	r3, r4
 8005a6e:	1e5c      	subs	r4, r3, #1
 8005a70:	2b00      	cmp	r3, #0
 8005a72:	d102      	bne.n	8005a7a <SDMMC_GetCmdResp1+0x2e>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005a74:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005a78:	e0c9      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
    }
    sta_reg = SDIOx->STA;
 8005a7a:	68fb      	ldr	r3, [r7, #12]
 8005a7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005a7e:	617b      	str	r3, [r7, #20]
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005a80:	697b      	ldr	r3, [r7, #20]
 8005a82:	f003 0345 	and.w	r3, r3, #69	; 0x45
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d0f0      	beq.n	8005a6c <SDMMC_GetCmdResp1+0x20>
 8005a8a:	697b      	ldr	r3, [r7, #20]
 8005a8c:	f403 6300 	and.w	r3, r3, #2048	; 0x800
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005a90:	2b00      	cmp	r3, #0
 8005a92:	d1eb      	bne.n	8005a6c <SDMMC_GetCmdResp1+0x20>
    
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 8005a94:	68fb      	ldr	r3, [r7, #12]
 8005a96:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005a98:	f003 0304 	and.w	r3, r3, #4
 8005a9c:	2b00      	cmp	r3, #0
 8005a9e:	d004      	beq.n	8005aaa <SDMMC_GetCmdResp1+0x5e>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 8005aa0:	68fb      	ldr	r3, [r7, #12]
 8005aa2:	2204      	movs	r2, #4
 8005aa4:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 8005aa6:	2304      	movs	r3, #4
 8005aa8:	e0b1      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 8005aaa:	68fb      	ldr	r3, [r7, #12]
 8005aac:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005aae:	f003 0301 	and.w	r3, r3, #1
 8005ab2:	2b00      	cmp	r3, #0
 8005ab4:	d004      	beq.n	8005ac0 <SDMMC_GetCmdResp1+0x74>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 8005ab6:	68fb      	ldr	r3, [r7, #12]
 8005ab8:	2201      	movs	r2, #1
 8005aba:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005abc:	2301      	movs	r3, #1
 8005abe:	e0a6      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  {
    /* Nothing to do */
  }
  
  /* Clear all the static flags */
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 8005ac0:	68fb      	ldr	r3, [r7, #12]
 8005ac2:	22c5      	movs	r2, #197	; 0xc5
 8005ac4:	639a      	str	r2, [r3, #56]	; 0x38
  
  /* Check response received is of desired command */
  if(SDIO_GetCommandResponse(SDIOx) != SD_CMD)
 8005ac6:	68f8      	ldr	r0, [r7, #12]
 8005ac8:	f7ff fd5a 	bl	8005580 <SDIO_GetCommandResponse>
 8005acc:	4603      	mov	r3, r0
 8005ace:	461a      	mov	r2, r3
 8005ad0:	7afb      	ldrb	r3, [r7, #11]
 8005ad2:	4293      	cmp	r3, r2
 8005ad4:	d001      	beq.n	8005ada <SDMMC_GetCmdResp1+0x8e>
  {
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005ad6:	2301      	movs	r3, #1
 8005ad8:	e099      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  
  /* We have received response, retrieve it for analysis  */
  response_r1 = SDIO_GetResponse(SDIOx, SDIO_RESP1);
 8005ada:	2100      	movs	r1, #0
 8005adc:	68f8      	ldr	r0, [r7, #12]
 8005ade:	f7ff fd5c 	bl	800559a <SDIO_GetResponse>
 8005ae2:	6138      	str	r0, [r7, #16]
  
  if((response_r1 & SDMMC_OCR_ERRORBITS) == SDMMC_ALLZERO)
 8005ae4:	693a      	ldr	r2, [r7, #16]
 8005ae6:	4b4e      	ldr	r3, [pc, #312]	; (8005c20 <SDMMC_GetCmdResp1+0x1d4>)
 8005ae8:	4013      	ands	r3, r2
 8005aea:	2b00      	cmp	r3, #0
 8005aec:	d101      	bne.n	8005af2 <SDMMC_GetCmdResp1+0xa6>
  {
    return SDMMC_ERROR_NONE;
 8005aee:	2300      	movs	r3, #0
 8005af0:	e08d      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_ADDR_OUT_OF_RANGE) == SDMMC_OCR_ADDR_OUT_OF_RANGE)
 8005af2:	693b      	ldr	r3, [r7, #16]
 8005af4:	2b00      	cmp	r3, #0
 8005af6:	da02      	bge.n	8005afe <SDMMC_GetCmdResp1+0xb2>
  {
    return SDMMC_ERROR_ADDR_OUT_OF_RANGE;
 8005af8:	f04f 7300 	mov.w	r3, #33554432	; 0x2000000
 8005afc:	e087      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_ADDR_MISALIGNED) == SDMMC_OCR_ADDR_MISALIGNED)
 8005afe:	693b      	ldr	r3, [r7, #16]
 8005b00:	f003 4380 	and.w	r3, r3, #1073741824	; 0x40000000
 8005b04:	2b00      	cmp	r3, #0
 8005b06:	d001      	beq.n	8005b0c <SDMMC_GetCmdResp1+0xc0>
  {
    return SDMMC_ERROR_ADDR_MISALIGNED;
 8005b08:	2340      	movs	r3, #64	; 0x40
 8005b0a:	e080      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_BLOCK_LEN_ERR) == SDMMC_OCR_BLOCK_LEN_ERR)
 8005b0c:	693b      	ldr	r3, [r7, #16]
 8005b0e:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 8005b12:	2b00      	cmp	r3, #0
 8005b14:	d001      	beq.n	8005b1a <SDMMC_GetCmdResp1+0xce>
  {
    return SDMMC_ERROR_BLOCK_LEN_ERR;
 8005b16:	2380      	movs	r3, #128	; 0x80
 8005b18:	e079      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_ERASE_SEQ_ERR) == SDMMC_OCR_ERASE_SEQ_ERR)
 8005b1a:	693b      	ldr	r3, [r7, #16]
 8005b1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005b20:	2b00      	cmp	r3, #0
 8005b22:	d002      	beq.n	8005b2a <SDMMC_GetCmdResp1+0xde>
  {
    return SDMMC_ERROR_ERASE_SEQ_ERR;
 8005b24:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b28:	e071      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_BAD_ERASE_PARAM) == SDMMC_OCR_BAD_ERASE_PARAM)
 8005b2a:	693b      	ldr	r3, [r7, #16]
 8005b2c:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 8005b30:	2b00      	cmp	r3, #0
 8005b32:	d002      	beq.n	8005b3a <SDMMC_GetCmdResp1+0xee>
  {
    return SDMMC_ERROR_BAD_ERASE_PARAM;
 8005b34:	f44f 7300 	mov.w	r3, #512	; 0x200
 8005b38:	e069      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_WRITE_PROT_VIOLATION) == SDMMC_OCR_WRITE_PROT_VIOLATION)
 8005b3a:	693b      	ldr	r3, [r7, #16]
 8005b3c:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8005b40:	2b00      	cmp	r3, #0
 8005b42:	d002      	beq.n	8005b4a <SDMMC_GetCmdResp1+0xfe>
  {
    return SDMMC_ERROR_WRITE_PROT_VIOLATION;
 8005b44:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8005b48:	e061      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_LOCK_UNLOCK_FAILED) == SDMMC_OCR_LOCK_UNLOCK_FAILED)
 8005b4a:	693b      	ldr	r3, [r7, #16]
 8005b4c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8005b50:	2b00      	cmp	r3, #0
 8005b52:	d002      	beq.n	8005b5a <SDMMC_GetCmdResp1+0x10e>
  {
    return SDMMC_ERROR_LOCK_UNLOCK_FAILED;
 8005b54:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8005b58:	e059      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_COM_CRC_FAILED) == SDMMC_OCR_COM_CRC_FAILED)
 8005b5a:	693b      	ldr	r3, [r7, #16]
 8005b5c:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8005b60:	2b00      	cmp	r3, #0
 8005b62:	d002      	beq.n	8005b6a <SDMMC_GetCmdResp1+0x11e>
  {
    return SDMMC_ERROR_COM_CRC_FAILED;
 8005b64:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005b68:	e051      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_ILLEGAL_CMD) == SDMMC_OCR_ILLEGAL_CMD)
 8005b6a:	693b      	ldr	r3, [r7, #16]
 8005b6c:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005b70:	2b00      	cmp	r3, #0
 8005b72:	d002      	beq.n	8005b7a <SDMMC_GetCmdResp1+0x12e>
  {
    return SDMMC_ERROR_ILLEGAL_CMD;
 8005b74:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005b78:	e049      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_CARD_ECC_FAILED) == SDMMC_OCR_CARD_ECC_FAILED)
 8005b7a:	693b      	ldr	r3, [r7, #16]
 8005b7c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005b80:	2b00      	cmp	r3, #0
 8005b82:	d002      	beq.n	8005b8a <SDMMC_GetCmdResp1+0x13e>
  {
    return SDMMC_ERROR_CARD_ECC_FAILED;
 8005b84:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005b88:	e041      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_CC_ERROR) == SDMMC_OCR_CC_ERROR)
 8005b8a:	693b      	ldr	r3, [r7, #16]
 8005b8c:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8005b90:	2b00      	cmp	r3, #0
 8005b92:	d002      	beq.n	8005b9a <SDMMC_GetCmdResp1+0x14e>
  {
    return SDMMC_ERROR_CC_ERR;
 8005b94:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8005b98:	e039      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_STREAM_READ_UNDERRUN) == SDMMC_OCR_STREAM_READ_UNDERRUN)
 8005b9a:	693b      	ldr	r3, [r7, #16]
 8005b9c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8005ba0:	2b00      	cmp	r3, #0
 8005ba2:	d002      	beq.n	8005baa <SDMMC_GetCmdResp1+0x15e>
  {
    return SDMMC_ERROR_STREAM_READ_UNDERRUN;
 8005ba4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8005ba8:	e031      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_STREAM_WRITE_OVERRUN) == SDMMC_OCR_STREAM_WRITE_OVERRUN)
 8005baa:	693b      	ldr	r3, [r7, #16]
 8005bac:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005bb0:	2b00      	cmp	r3, #0
 8005bb2:	d002      	beq.n	8005bba <SDMMC_GetCmdResp1+0x16e>
  {
    return SDMMC_ERROR_STREAM_WRITE_OVERRUN;
 8005bb4:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8005bb8:	e029      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_CID_CSD_OVERWRITE) == SDMMC_OCR_CID_CSD_OVERWRITE)
 8005bba:	693b      	ldr	r3, [r7, #16]
 8005bbc:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8005bc0:	2b00      	cmp	r3, #0
 8005bc2:	d002      	beq.n	8005bca <SDMMC_GetCmdResp1+0x17e>
  {
    return SDMMC_ERROR_CID_CSD_OVERWRITE;
 8005bc4:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 8005bc8:	e021      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_WP_ERASE_SKIP) == SDMMC_OCR_WP_ERASE_SKIP)
 8005bca:	693b      	ldr	r3, [r7, #16]
 8005bcc:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005bd0:	2b00      	cmp	r3, #0
 8005bd2:	d002      	beq.n	8005bda <SDMMC_GetCmdResp1+0x18e>
  {
    return SDMMC_ERROR_WP_ERASE_SKIP;
 8005bd4:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8005bd8:	e019      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_CARD_ECC_DISABLED) == SDMMC_OCR_CARD_ECC_DISABLED)
 8005bda:	693b      	ldr	r3, [r7, #16]
 8005bdc:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005be0:	2b00      	cmp	r3, #0
 8005be2:	d002      	beq.n	8005bea <SDMMC_GetCmdResp1+0x19e>
  {
    return SDMMC_ERROR_CARD_ECC_DISABLED;
 8005be4:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8005be8:	e011      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_ERASE_RESET) == SDMMC_OCR_ERASE_RESET)
 8005bea:	693b      	ldr	r3, [r7, #16]
 8005bec:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8005bf0:	2b00      	cmp	r3, #0
 8005bf2:	d002      	beq.n	8005bfa <SDMMC_GetCmdResp1+0x1ae>
  {
    return SDMMC_ERROR_ERASE_RESET;
 8005bf4:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 8005bf8:	e009      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else if((response_r1 & SDMMC_OCR_AKE_SEQ_ERROR) == SDMMC_OCR_AKE_SEQ_ERROR)
 8005bfa:	693b      	ldr	r3, [r7, #16]
 8005bfc:	f003 0308 	and.w	r3, r3, #8
 8005c00:	2b00      	cmp	r3, #0
 8005c02:	d002      	beq.n	8005c0a <SDMMC_GetCmdResp1+0x1be>
  {
    return SDMMC_ERROR_AKE_SEQ_ERR;
 8005c04:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 8005c08:	e001      	b.n	8005c0e <SDMMC_GetCmdResp1+0x1c2>
  }
  else
  {
    return SDMMC_ERROR_GENERAL_UNKNOWN_ERR;
 8005c0a:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  }
}
 8005c0e:	4618      	mov	r0, r3
 8005c10:	371c      	adds	r7, #28
 8005c12:	46bd      	mov	sp, r7
 8005c14:	bd90      	pop	{r4, r7, pc}
 8005c16:	bf00      	nop
 8005c18:	20000004 	.word	0x20000004
 8005c1c:	10624dd3 	.word	0x10624dd3
 8005c20:	fdffe008 	.word	0xfdffe008

08005c24 <SDMMC_GetCmdResp2>:
  * @brief  Checks for error conditions for R2 (CID or CSD) response.
  * @param  hsd: SD handle
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdResp2(SDIO_TypeDef *SDIOx)
{
 8005c24:	b490      	push	{r4, r7}
 8005c26:	b084      	sub	sp, #16
 8005c28:	af00      	add	r7, sp, #0
 8005c2a:	6078      	str	r0, [r7, #4]
  uint32_t sta_reg;
  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  register uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 8005c2c:	4b1e      	ldr	r3, [pc, #120]	; (8005ca8 <SDMMC_GetCmdResp2+0x84>)
 8005c2e:	681b      	ldr	r3, [r3, #0]
 8005c30:	4a1e      	ldr	r2, [pc, #120]	; (8005cac <SDMMC_GetCmdResp2+0x88>)
 8005c32:	fba2 2303 	umull	r2, r3, r2, r3
 8005c36:	0a5b      	lsrs	r3, r3, #9
 8005c38:	f241 3288 	movw	r2, #5000	; 0x1388
 8005c3c:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005c40:	4623      	mov	r3, r4
 8005c42:	1e5c      	subs	r4, r3, #1
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d102      	bne.n	8005c4e <SDMMC_GetCmdResp2+0x2a>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005c48:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005c4c:	e026      	b.n	8005c9c <SDMMC_GetCmdResp2+0x78>
    }
    sta_reg = SDIOx->STA;
 8005c4e:	687b      	ldr	r3, [r7, #4]
 8005c50:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c52:	60fb      	str	r3, [r7, #12]
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005c54:	68fb      	ldr	r3, [r7, #12]
 8005c56:	f003 0345 	and.w	r3, r3, #69	; 0x45
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 8005c5a:	2b00      	cmp	r3, #0
 8005c5c:	d0f0      	beq.n	8005c40 <SDMMC_GetCmdResp2+0x1c>
 8005c5e:	68fb      	ldr	r3, [r7, #12]
 8005c60:	f403 6300 	and.w	r3, r3, #2048	; 0x800
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005c64:	2b00      	cmp	r3, #0
 8005c66:	d1eb      	bne.n	8005c40 <SDMMC_GetCmdResp2+0x1c>
    
  if (__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c6c:	f003 0304 	and.w	r3, r3, #4
 8005c70:	2b00      	cmp	r3, #0
 8005c72:	d004      	beq.n	8005c7e <SDMMC_GetCmdResp2+0x5a>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 8005c74:	687b      	ldr	r3, [r7, #4]
 8005c76:	2204      	movs	r2, #4
 8005c78:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 8005c7a:	2304      	movs	r3, #4
 8005c7c:	e00e      	b.n	8005c9c <SDMMC_GetCmdResp2+0x78>
  }
  else if (__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 8005c7e:	687b      	ldr	r3, [r7, #4]
 8005c80:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005c82:	f003 0301 	and.w	r3, r3, #1
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d004      	beq.n	8005c94 <SDMMC_GetCmdResp2+0x70>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	2201      	movs	r2, #1
 8005c8e:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005c90:	2301      	movs	r3, #1
 8005c92:	e003      	b.n	8005c9c <SDMMC_GetCmdResp2+0x78>
  }
  else
  {
    /* No error flag set */
    /* Clear all the static flags */
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	22c5      	movs	r2, #197	; 0xc5
 8005c98:	639a      	str	r2, [r3, #56]	; 0x38
  }

  return SDMMC_ERROR_NONE;
 8005c9a:	2300      	movs	r3, #0
}
 8005c9c:	4618      	mov	r0, r3
 8005c9e:	3710      	adds	r7, #16
 8005ca0:	46bd      	mov	sp, r7
 8005ca2:	bc90      	pop	{r4, r7}
 8005ca4:	4770      	bx	lr
 8005ca6:	bf00      	nop
 8005ca8:	20000004 	.word	0x20000004
 8005cac:	10624dd3 	.word	0x10624dd3

08005cb0 <SDMMC_GetCmdResp3>:
  * @brief  Checks for error conditions for R3 (OCR) response.
  * @param  hsd: SD handle
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdResp3(SDIO_TypeDef *SDIOx)
{
 8005cb0:	b490      	push	{r4, r7}
 8005cb2:	b084      	sub	sp, #16
 8005cb4:	af00      	add	r7, sp, #0
 8005cb6:	6078      	str	r0, [r7, #4]
  uint32_t sta_reg;
  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  register uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 8005cb8:	4b18      	ldr	r3, [pc, #96]	; (8005d1c <SDMMC_GetCmdResp3+0x6c>)
 8005cba:	681b      	ldr	r3, [r3, #0]
 8005cbc:	4a18      	ldr	r2, [pc, #96]	; (8005d20 <SDMMC_GetCmdResp3+0x70>)
 8005cbe:	fba2 2303 	umull	r2, r3, r2, r3
 8005cc2:	0a5b      	lsrs	r3, r3, #9
 8005cc4:	f241 3288 	movw	r2, #5000	; 0x1388
 8005cc8:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005ccc:	4623      	mov	r3, r4
 8005cce:	1e5c      	subs	r4, r3, #1
 8005cd0:	2b00      	cmp	r3, #0
 8005cd2:	d102      	bne.n	8005cda <SDMMC_GetCmdResp3+0x2a>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005cd4:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005cd8:	e01b      	b.n	8005d12 <SDMMC_GetCmdResp3+0x62>
    }
    sta_reg = SDIOx->STA;
 8005cda:	687b      	ldr	r3, [r7, #4]
 8005cdc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005cde:	60fb      	str	r3, [r7, #12]
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005ce0:	68fb      	ldr	r3, [r7, #12]
 8005ce2:	f003 0345 	and.w	r3, r3, #69	; 0x45
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 8005ce6:	2b00      	cmp	r3, #0
 8005ce8:	d0f0      	beq.n	8005ccc <SDMMC_GetCmdResp3+0x1c>
 8005cea:	68fb      	ldr	r3, [r7, #12]
 8005cec:	f403 6300 	and.w	r3, r3, #2048	; 0x800
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005cf0:	2b00      	cmp	r3, #0
 8005cf2:	d1eb      	bne.n	8005ccc <SDMMC_GetCmdResp3+0x1c>
    
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 8005cf4:	687b      	ldr	r3, [r7, #4]
 8005cf6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005cf8:	f003 0304 	and.w	r3, r3, #4
 8005cfc:	2b00      	cmp	r3, #0
 8005cfe:	d004      	beq.n	8005d0a <SDMMC_GetCmdResp3+0x5a>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 8005d00:	687b      	ldr	r3, [r7, #4]
 8005d02:	2204      	movs	r2, #4
 8005d04:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 8005d06:	2304      	movs	r3, #4
 8005d08:	e003      	b.n	8005d12 <SDMMC_GetCmdResp3+0x62>
  }
  else
  {  
    /* Clear all the static flags */
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 8005d0a:	687b      	ldr	r3, [r7, #4]
 8005d0c:	22c5      	movs	r2, #197	; 0xc5
 8005d0e:	639a      	str	r2, [r3, #56]	; 0x38
  }
  
  return SDMMC_ERROR_NONE;
 8005d10:	2300      	movs	r3, #0
}
 8005d12:	4618      	mov	r0, r3
 8005d14:	3710      	adds	r7, #16
 8005d16:	46bd      	mov	sp, r7
 8005d18:	bc90      	pop	{r4, r7}
 8005d1a:	4770      	bx	lr
 8005d1c:	20000004 	.word	0x20000004
 8005d20:	10624dd3 	.word	0x10624dd3

08005d24 <SDMMC_GetCmdResp6>:
  * @param  pRCA: Pointer to the variable that will contain the SD card relative 
  *         address RCA   
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdResp6(SDIO_TypeDef *SDIOx, uint8_t SD_CMD, uint16_t *pRCA)
{
 8005d24:	b590      	push	{r4, r7, lr}
 8005d26:	b087      	sub	sp, #28
 8005d28:	af00      	add	r7, sp, #0
 8005d2a:	60f8      	str	r0, [r7, #12]
 8005d2c:	460b      	mov	r3, r1
 8005d2e:	607a      	str	r2, [r7, #4]
 8005d30:	72fb      	strb	r3, [r7, #11]
  uint32_t response_r1;
  uint32_t sta_reg;

  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  register uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 8005d32:	4b34      	ldr	r3, [pc, #208]	; (8005e04 <SDMMC_GetCmdResp6+0xe0>)
 8005d34:	681b      	ldr	r3, [r3, #0]
 8005d36:	4a34      	ldr	r2, [pc, #208]	; (8005e08 <SDMMC_GetCmdResp6+0xe4>)
 8005d38:	fba2 2303 	umull	r2, r3, r2, r3
 8005d3c:	0a5b      	lsrs	r3, r3, #9
 8005d3e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d42:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005d46:	4623      	mov	r3, r4
 8005d48:	1e5c      	subs	r4, r3, #1
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d102      	bne.n	8005d54 <SDMMC_GetCmdResp6+0x30>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005d4e:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005d52:	e052      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
    }
    sta_reg = SDIOx->STA;
 8005d54:	68fb      	ldr	r3, [r7, #12]
 8005d56:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d58:	617b      	str	r3, [r7, #20]
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005d5a:	697b      	ldr	r3, [r7, #20]
 8005d5c:	f003 0345 	and.w	r3, r3, #69	; 0x45
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 8005d60:	2b00      	cmp	r3, #0
 8005d62:	d0f0      	beq.n	8005d46 <SDMMC_GetCmdResp6+0x22>
 8005d64:	697b      	ldr	r3, [r7, #20]
 8005d66:	f403 6300 	and.w	r3, r3, #2048	; 0x800
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005d6a:	2b00      	cmp	r3, #0
 8005d6c:	d1eb      	bne.n	8005d46 <SDMMC_GetCmdResp6+0x22>
    
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 8005d6e:	68fb      	ldr	r3, [r7, #12]
 8005d70:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d72:	f003 0304 	and.w	r3, r3, #4
 8005d76:	2b00      	cmp	r3, #0
 8005d78:	d004      	beq.n	8005d84 <SDMMC_GetCmdResp6+0x60>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 8005d7a:	68fb      	ldr	r3, [r7, #12]
 8005d7c:	2204      	movs	r2, #4
 8005d7e:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 8005d80:	2304      	movs	r3, #4
 8005d82:	e03a      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  }
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 8005d84:	68fb      	ldr	r3, [r7, #12]
 8005d86:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005d88:	f003 0301 	and.w	r3, r3, #1
 8005d8c:	2b00      	cmp	r3, #0
 8005d8e:	d004      	beq.n	8005d9a <SDMMC_GetCmdResp6+0x76>
  {
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 8005d90:	68fb      	ldr	r3, [r7, #12]
 8005d92:	2201      	movs	r2, #1
 8005d94:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005d96:	2301      	movs	r3, #1
 8005d98:	e02f      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  {
    /* Nothing to do */
  }
  
  /* Check response received is of desired command */
  if(SDIO_GetCommandResponse(SDIOx) != SD_CMD)
 8005d9a:	68f8      	ldr	r0, [r7, #12]
 8005d9c:	f7ff fbf0 	bl	8005580 <SDIO_GetCommandResponse>
 8005da0:	4603      	mov	r3, r0
 8005da2:	461a      	mov	r2, r3
 8005da4:	7afb      	ldrb	r3, [r7, #11]
 8005da6:	4293      	cmp	r3, r2
 8005da8:	d001      	beq.n	8005dae <SDMMC_GetCmdResp6+0x8a>
  {
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005daa:	2301      	movs	r3, #1
 8005dac:	e025      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  }
  
  /* Clear all the static flags */
  __SDIO_CLEAR_FLAG(SDIOx, SDIO_STATIC_CMD_FLAGS);
 8005dae:	68fb      	ldr	r3, [r7, #12]
 8005db0:	22c5      	movs	r2, #197	; 0xc5
 8005db2:	639a      	str	r2, [r3, #56]	; 0x38
  
  /* We have received response, retrieve it.  */
  response_r1 = SDIO_GetResponse(SDIOx, SDIO_RESP1);
 8005db4:	2100      	movs	r1, #0
 8005db6:	68f8      	ldr	r0, [r7, #12]
 8005db8:	f7ff fbef 	bl	800559a <SDIO_GetResponse>
 8005dbc:	6138      	str	r0, [r7, #16]
  
  if((response_r1 & (SDMMC_R6_GENERAL_UNKNOWN_ERROR | SDMMC_R6_ILLEGAL_CMD | SDMMC_R6_COM_CRC_FAILED)) == SDMMC_ALLZERO)
 8005dbe:	693b      	ldr	r3, [r7, #16]
 8005dc0:	f403 4360 	and.w	r3, r3, #57344	; 0xe000
 8005dc4:	2b00      	cmp	r3, #0
 8005dc6:	d106      	bne.n	8005dd6 <SDMMC_GetCmdResp6+0xb2>
  {
    *pRCA = (uint16_t) (response_r1 >> 16);
 8005dc8:	693b      	ldr	r3, [r7, #16]
 8005dca:	0c1b      	lsrs	r3, r3, #16
 8005dcc:	b29a      	uxth	r2, r3
 8005dce:	687b      	ldr	r3, [r7, #4]
 8005dd0:	801a      	strh	r2, [r3, #0]
    
    return SDMMC_ERROR_NONE;
 8005dd2:	2300      	movs	r3, #0
 8005dd4:	e011      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  }
  else if((response_r1 & SDMMC_R6_ILLEGAL_CMD) == SDMMC_R6_ILLEGAL_CMD)
 8005dd6:	693b      	ldr	r3, [r7, #16]
 8005dd8:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8005ddc:	2b00      	cmp	r3, #0
 8005dde:	d002      	beq.n	8005de6 <SDMMC_GetCmdResp6+0xc2>
  {
    return SDMMC_ERROR_ILLEGAL_CMD;
 8005de0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005de4:	e009      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  }
  else if((response_r1 & SDMMC_R6_COM_CRC_FAILED) == SDMMC_R6_COM_CRC_FAILED)
 8005de6:	693b      	ldr	r3, [r7, #16]
 8005de8:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8005dec:	2b00      	cmp	r3, #0
 8005dee:	d002      	beq.n	8005df6 <SDMMC_GetCmdResp6+0xd2>
  {
    return SDMMC_ERROR_COM_CRC_FAILED;
 8005df0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005df4:	e001      	b.n	8005dfa <SDMMC_GetCmdResp6+0xd6>
  }
  else
  {
    return SDMMC_ERROR_GENERAL_UNKNOWN_ERR;
 8005df6:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  }
}
 8005dfa:	4618      	mov	r0, r3
 8005dfc:	371c      	adds	r7, #28
 8005dfe:	46bd      	mov	sp, r7
 8005e00:	bd90      	pop	{r4, r7, pc}
 8005e02:	bf00      	nop
 8005e04:	20000004 	.word	0x20000004
 8005e08:	10624dd3 	.word	0x10624dd3

08005e0c <SDMMC_GetCmdResp7>:
  * @brief  Checks for error conditions for R7 response.
  * @param  hsd: SD handle
  * @retval SD Card error state
  */
static uint32_t SDMMC_GetCmdResp7(SDIO_TypeDef *SDIOx)
{
 8005e0c:	b490      	push	{r4, r7}
 8005e0e:	b084      	sub	sp, #16
 8005e10:	af00      	add	r7, sp, #0
 8005e12:	6078      	str	r0, [r7, #4]
  uint32_t sta_reg;
  /* 8 is the number of required instructions cycles for the below loop statement.
  The SDIO_CMDTIMEOUT is expressed in ms */
  register uint32_t count = SDIO_CMDTIMEOUT * (SystemCoreClock / 8U /1000U);
 8005e14:	4b21      	ldr	r3, [pc, #132]	; (8005e9c <SDMMC_GetCmdResp7+0x90>)
 8005e16:	681b      	ldr	r3, [r3, #0]
 8005e18:	4a21      	ldr	r2, [pc, #132]	; (8005ea0 <SDMMC_GetCmdResp7+0x94>)
 8005e1a:	fba2 2303 	umull	r2, r3, r2, r3
 8005e1e:	0a5b      	lsrs	r3, r3, #9
 8005e20:	f241 3288 	movw	r2, #5000	; 0x1388
 8005e24:	fb02 f403 	mul.w	r4, r2, r3
  
  do
  {
    if (count-- == 0U)
 8005e28:	4623      	mov	r3, r4
 8005e2a:	1e5c      	subs	r4, r3, #1
 8005e2c:	2b00      	cmp	r3, #0
 8005e2e:	d102      	bne.n	8005e36 <SDMMC_GetCmdResp7+0x2a>
    {
      return SDMMC_ERROR_TIMEOUT;
 8005e30:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8005e34:	e02c      	b.n	8005e90 <SDMMC_GetCmdResp7+0x84>
    }
    sta_reg = SDIOx->STA;
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e3a:	60fb      	str	r3, [r7, #12]
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005e3c:	68fb      	ldr	r3, [r7, #12]
 8005e3e:	f003 0345 	and.w	r3, r3, #69	; 0x45
         ((sta_reg & SDIO_FLAG_CMDACT) != 0U ));
 8005e42:	2b00      	cmp	r3, #0
 8005e44:	d0f0      	beq.n	8005e28 <SDMMC_GetCmdResp7+0x1c>
 8005e46:	68fb      	ldr	r3, [r7, #12]
 8005e48:	f403 6300 	and.w	r3, r3, #2048	; 0x800
  }while(((sta_reg & (SDIO_FLAG_CCRCFAIL | SDIO_FLAG_CMDREND | SDIO_FLAG_CTIMEOUT)) == 0U) ||
 8005e4c:	2b00      	cmp	r3, #0
 8005e4e:	d1eb      	bne.n	8005e28 <SDMMC_GetCmdResp7+0x1c>
    
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT))
 8005e50:	687b      	ldr	r3, [r7, #4]
 8005e52:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e54:	f003 0304 	and.w	r3, r3, #4
 8005e58:	2b00      	cmp	r3, #0
 8005e5a:	d004      	beq.n	8005e66 <SDMMC_GetCmdResp7+0x5a>
  {
    /* Card is SD V2.0 compliant */
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CTIMEOUT);
 8005e5c:	687b      	ldr	r3, [r7, #4]
 8005e5e:	2204      	movs	r2, #4
 8005e60:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_RSP_TIMEOUT;
 8005e62:	2304      	movs	r3, #4
 8005e64:	e014      	b.n	8005e90 <SDMMC_GetCmdResp7+0x84>
  }
  else if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL))
 8005e66:	687b      	ldr	r3, [r7, #4]
 8005e68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e6a:	f003 0301 	and.w	r3, r3, #1
 8005e6e:	2b00      	cmp	r3, #0
 8005e70:	d004      	beq.n	8005e7c <SDMMC_GetCmdResp7+0x70>
  {
    /* Card is SD V2.0 compliant */
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CCRCFAIL);
 8005e72:	687b      	ldr	r3, [r7, #4]
 8005e74:	2201      	movs	r2, #1
 8005e76:	639a      	str	r2, [r3, #56]	; 0x38
    
    return SDMMC_ERROR_CMD_CRC_FAIL;
 8005e78:	2301      	movs	r3, #1
 8005e7a:	e009      	b.n	8005e90 <SDMMC_GetCmdResp7+0x84>
  else
  {
    /* Nothing to do */
  }
  
  if(__SDIO_GET_FLAG(SDIOx, SDIO_FLAG_CMDREND))
 8005e7c:	687b      	ldr	r3, [r7, #4]
 8005e7e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8005e80:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005e84:	2b00      	cmp	r3, #0
 8005e86:	d002      	beq.n	8005e8e <SDMMC_GetCmdResp7+0x82>
  {
    /* Card is SD V2.0 compliant */
    __SDIO_CLEAR_FLAG(SDIOx, SDIO_FLAG_CMDREND);
 8005e88:	687b      	ldr	r3, [r7, #4]
 8005e8a:	2240      	movs	r2, #64	; 0x40
 8005e8c:	639a      	str	r2, [r3, #56]	; 0x38
  }
  
  return SDMMC_ERROR_NONE;
 8005e8e:	2300      	movs	r3, #0
  
}
 8005e90:	4618      	mov	r0, r3
 8005e92:	3710      	adds	r7, #16
 8005e94:	46bd      	mov	sp, r7
 8005e96:	bc90      	pop	{r4, r7}
 8005e98:	4770      	bx	lr
 8005e9a:	bf00      	nop
 8005e9c:	20000004 	.word	0x20000004
 8005ea0:	10624dd3 	.word	0x10624dd3

08005ea4 <MX_FATFS_Init>:
/* USER CODE BEGIN Variables */

/* USER CODE END Variables */    

void MX_FATFS_Init(void) 
{
 8005ea4:	b580      	push	{r7, lr}
 8005ea6:	af00      	add	r7, sp, #0
  /*## FatFS: Link the SD driver ###########################*/
  retSD = FATFS_LinkDriver(&SD_Driver, SDPath);
 8005ea8:	4904      	ldr	r1, [pc, #16]	; (8005ebc <MX_FATFS_Init+0x18>)
 8005eaa:	4805      	ldr	r0, [pc, #20]	; (8005ec0 <MX_FATFS_Init+0x1c>)
 8005eac:	f000 f9d6 	bl	800625c <FATFS_LinkDriver>
 8005eb0:	4603      	mov	r3, r0
 8005eb2:	461a      	mov	r2, r3
 8005eb4:	4b03      	ldr	r3, [pc, #12]	; (8005ec4 <MX_FATFS_Init+0x20>)
 8005eb6:	701a      	strb	r2, [r3, #0]

  /* USER CODE BEGIN Init */
  /* additional user code for init */     
  /* USER CODE END Init */
}
 8005eb8:	bf00      	nop
 8005eba:	bd80      	pop	{r7, pc}
 8005ebc:	200018ec 	.word	0x200018ec
 8005ec0:	0801cae8 	.word	0x0801cae8
 8005ec4:	200018e8 	.word	0x200018e8

08005ec8 <BSP_SD_Init>:
/**
  * @brief  Initializes the SD card device.
  * @retval SD status
  */
__weak uint8_t BSP_SD_Init(void)
{
 8005ec8:	b580      	push	{r7, lr}
 8005eca:	b082      	sub	sp, #8
 8005ecc:	af00      	add	r7, sp, #0
  uint8_t sd_state = MSD_OK;
 8005ece:	2300      	movs	r3, #0
 8005ed0:	71fb      	strb	r3, [r7, #7]
  /* Check if the SD card is plugged in the slot */
  if (BSP_SD_IsDetected() != SD_PRESENT)
 8005ed2:	f000 f86b 	bl	8005fac <BSP_SD_IsDetected>
 8005ed6:	4603      	mov	r3, r0
 8005ed8:	2b01      	cmp	r3, #1
 8005eda:	d001      	beq.n	8005ee0 <BSP_SD_Init+0x18>
  {
    return MSD_ERROR;
 8005edc:	2301      	movs	r3, #1
 8005ede:	e005      	b.n	8005eec <BSP_SD_Init+0x24>
  }
  /* HAL SD initialization */
  sd_state = HAL_SD_Init(&hsd);
 8005ee0:	4804      	ldr	r0, [pc, #16]	; (8005ef4 <BSP_SD_Init+0x2c>)
 8005ee2:	f7fd fcad 	bl	8003840 <HAL_SD_Init>
 8005ee6:	4603      	mov	r3, r0
 8005ee8:	71fb      	strb	r3, [r7, #7]

  return sd_state;
 8005eea:	79fb      	ldrb	r3, [r7, #7]
}
 8005eec:	4618      	mov	r0, r3
 8005eee:	3708      	adds	r7, #8
 8005ef0:	46bd      	mov	sp, r7
 8005ef2:	bd80      	pop	{r7, pc}
 8005ef4:	20001820 	.word	0x20001820

08005ef8 <BSP_SD_ReadBlocks>:
  * @param  NumOfBlocks: Number of SD blocks to read
  * @param  Timeout: Timeout for read operation
  * @retval SD status
  */
__weak uint8_t BSP_SD_ReadBlocks(uint32_t *pData, uint32_t ReadAddr, uint32_t NumOfBlocks, uint32_t Timeout)
{
 8005ef8:	b580      	push	{r7, lr}
 8005efa:	b088      	sub	sp, #32
 8005efc:	af02      	add	r7, sp, #8
 8005efe:	60f8      	str	r0, [r7, #12]
 8005f00:	60b9      	str	r1, [r7, #8]
 8005f02:	607a      	str	r2, [r7, #4]
 8005f04:	603b      	str	r3, [r7, #0]
  uint8_t sd_state = MSD_OK;
 8005f06:	2300      	movs	r3, #0
 8005f08:	75fb      	strb	r3, [r7, #23]

  if (HAL_SD_ReadBlocks(&hsd, (uint8_t *)pData, ReadAddr, NumOfBlocks, Timeout) != HAL_OK)
 8005f0a:	683b      	ldr	r3, [r7, #0]
 8005f0c:	9300      	str	r3, [sp, #0]
 8005f0e:	687b      	ldr	r3, [r7, #4]
 8005f10:	68ba      	ldr	r2, [r7, #8]
 8005f12:	68f9      	ldr	r1, [r7, #12]
 8005f14:	4806      	ldr	r0, [pc, #24]	; (8005f30 <BSP_SD_ReadBlocks+0x38>)
 8005f16:	f7fd fd23 	bl	8003960 <HAL_SD_ReadBlocks>
 8005f1a:	4603      	mov	r3, r0
 8005f1c:	2b00      	cmp	r3, #0
 8005f1e:	d001      	beq.n	8005f24 <BSP_SD_ReadBlocks+0x2c>
  {
    sd_state = MSD_ERROR;
 8005f20:	2301      	movs	r3, #1
 8005f22:	75fb      	strb	r3, [r7, #23]
  }

  return sd_state;  
 8005f24:	7dfb      	ldrb	r3, [r7, #23]
}
 8005f26:	4618      	mov	r0, r3
 8005f28:	3718      	adds	r7, #24
 8005f2a:	46bd      	mov	sp, r7
 8005f2c:	bd80      	pop	{r7, pc}
 8005f2e:	bf00      	nop
 8005f30:	20001820 	.word	0x20001820

08005f34 <BSP_SD_WriteBlocks>:
  * @param  NumOfBlocks: Number of SD blocks to write
  * @param  Timeout: Timeout for write operation
  * @retval SD status
  */
__weak uint8_t BSP_SD_WriteBlocks(uint32_t *pData, uint32_t WriteAddr, uint32_t NumOfBlocks, uint32_t Timeout)
{
 8005f34:	b580      	push	{r7, lr}
 8005f36:	b088      	sub	sp, #32
 8005f38:	af02      	add	r7, sp, #8
 8005f3a:	60f8      	str	r0, [r7, #12]
 8005f3c:	60b9      	str	r1, [r7, #8]
 8005f3e:	607a      	str	r2, [r7, #4]
 8005f40:	603b      	str	r3, [r7, #0]
  uint8_t sd_state = MSD_OK;
 8005f42:	2300      	movs	r3, #0
 8005f44:	75fb      	strb	r3, [r7, #23]

  if (HAL_SD_WriteBlocks(&hsd, (uint8_t *)pData, WriteAddr, NumOfBlocks, Timeout) != HAL_OK) 
 8005f46:	683b      	ldr	r3, [r7, #0]
 8005f48:	9300      	str	r3, [sp, #0]
 8005f4a:	687b      	ldr	r3, [r7, #4]
 8005f4c:	68ba      	ldr	r2, [r7, #8]
 8005f4e:	68f9      	ldr	r1, [r7, #12]
 8005f50:	4806      	ldr	r0, [pc, #24]	; (8005f6c <BSP_SD_WriteBlocks+0x38>)
 8005f52:	f7fd feff 	bl	8003d54 <HAL_SD_WriteBlocks>
 8005f56:	4603      	mov	r3, r0
 8005f58:	2b00      	cmp	r3, #0
 8005f5a:	d001      	beq.n	8005f60 <BSP_SD_WriteBlocks+0x2c>
  {
    sd_state = MSD_ERROR;
 8005f5c:	2301      	movs	r3, #1
 8005f5e:	75fb      	strb	r3, [r7, #23]
  }

  return sd_state;  
 8005f60:	7dfb      	ldrb	r3, [r7, #23]
}
 8005f62:	4618      	mov	r0, r3
 8005f64:	3718      	adds	r7, #24
 8005f66:	46bd      	mov	sp, r7
 8005f68:	bd80      	pop	{r7, pc}
 8005f6a:	bf00      	nop
 8005f6c:	20001820 	.word	0x20001820

08005f70 <BSP_SD_GetCardState>:
  *          This value can be one of the following values:
  *            @arg  SD_TRANSFER_OK: No data transfer is acting
  *            @arg  SD_TRANSFER_BUSY: Data transfer is acting
  */
__weak uint8_t BSP_SD_GetCardState(void)
{
 8005f70:	b580      	push	{r7, lr}
 8005f72:	af00      	add	r7, sp, #0
  return ((HAL_SD_GetCardState(&hsd) == HAL_SD_CARD_TRANSFER ) ? SD_TRANSFER_OK : SD_TRANSFER_BUSY);
 8005f74:	4805      	ldr	r0, [pc, #20]	; (8005f8c <BSP_SD_GetCardState+0x1c>)
 8005f76:	f7fe fa5f 	bl	8004438 <HAL_SD_GetCardState>
 8005f7a:	4603      	mov	r3, r0
 8005f7c:	2b04      	cmp	r3, #4
 8005f7e:	bf14      	ite	ne
 8005f80:	2301      	movne	r3, #1
 8005f82:	2300      	moveq	r3, #0
 8005f84:	b2db      	uxtb	r3, r3
}
 8005f86:	4618      	mov	r0, r3
 8005f88:	bd80      	pop	{r7, pc}
 8005f8a:	bf00      	nop
 8005f8c:	20001820 	.word	0x20001820

08005f90 <BSP_SD_GetCardInfo>:
  * @brief  Get SD information about specific SD card.
  * @param  CardInfo: Pointer to HAL_SD_CardInfoTypedef structure
  * @retval None 
  */
__weak void BSP_SD_GetCardInfo(HAL_SD_CardInfoTypeDef *CardInfo)
{
 8005f90:	b580      	push	{r7, lr}
 8005f92:	b082      	sub	sp, #8
 8005f94:	af00      	add	r7, sp, #0
 8005f96:	6078      	str	r0, [r7, #4]
  /* Get SD card Information */
  HAL_SD_GetCardInfo(&hsd, CardInfo);
 8005f98:	6879      	ldr	r1, [r7, #4]
 8005f9a:	4803      	ldr	r0, [pc, #12]	; (8005fa8 <BSP_SD_GetCardInfo+0x18>)
 8005f9c:	f7fe fa20 	bl	80043e0 <HAL_SD_GetCardInfo>
}
 8005fa0:	bf00      	nop
 8005fa2:	3708      	adds	r7, #8
 8005fa4:	46bd      	mov	sp, r7
 8005fa6:	bd80      	pop	{r7, pc}
 8005fa8:	20001820 	.word	0x20001820

08005fac <BSP_SD_IsDetected>:
 * @brief  Detects if SD card is correctly plugged in the memory slot or not.
 * @param  None
 * @retval Returns if SD is detected or not
 */
__weak uint8_t BSP_SD_IsDetected(void)
{
 8005fac:	b580      	push	{r7, lr}
 8005fae:	b082      	sub	sp, #8
 8005fb0:	af00      	add	r7, sp, #0
  __IO uint8_t status = SD_PRESENT;
 8005fb2:	2301      	movs	r3, #1
 8005fb4:	71fb      	strb	r3, [r7, #7]

  if (BSP_PlatformIsDetected() == 0x0) 
 8005fb6:	f000 f80b 	bl	8005fd0 <BSP_PlatformIsDetected>
 8005fba:	4603      	mov	r3, r0
 8005fbc:	2b00      	cmp	r3, #0
 8005fbe:	d101      	bne.n	8005fc4 <BSP_SD_IsDetected+0x18>
  {
    status = SD_NOT_PRESENT;
 8005fc0:	2300      	movs	r3, #0
 8005fc2:	71fb      	strb	r3, [r7, #7]
  }

  return status;
 8005fc4:	79fb      	ldrb	r3, [r7, #7]
 8005fc6:	b2db      	uxtb	r3, r3
}
 8005fc8:	4618      	mov	r0, r3
 8005fca:	3708      	adds	r7, #8
 8005fcc:	46bd      	mov	sp, r7
 8005fce:	bd80      	pop	{r7, pc}

08005fd0 <BSP_PlatformIsDetected>:
  *
  ******************************************************************************
*/
#include "fatfs_platform.h"

uint8_t	BSP_PlatformIsDetected(void) {
 8005fd0:	b580      	push	{r7, lr}
 8005fd2:	b082      	sub	sp, #8
 8005fd4:	af00      	add	r7, sp, #0
    uint8_t status = SD_PRESENT;
 8005fd6:	2301      	movs	r3, #1
 8005fd8:	71fb      	strb	r3, [r7, #7]
    /* Check SD card detect pin */
    if(HAL_GPIO_ReadPin(SD_DETECT_GPIO_PORT, SD_DETECT_PIN) != GPIO_PIN_RESET)
 8005fda:	2104      	movs	r1, #4
 8005fdc:	4806      	ldr	r0, [pc, #24]	; (8005ff8 <BSP_PlatformIsDetected+0x28>)
 8005fde:	f7fc f9f9 	bl	80023d4 <HAL_GPIO_ReadPin>
 8005fe2:	4603      	mov	r3, r0
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d001      	beq.n	8005fec <BSP_PlatformIsDetected+0x1c>
    {
        status = SD_NOT_PRESENT;
 8005fe8:	2300      	movs	r3, #0
 8005fea:	71fb      	strb	r3, [r7, #7]
    }
    /* USER CODE BEGIN 1 */
    /* user code can be inserted here */
    /* USER CODE END 1 */ 
    return status;
 8005fec:	79fb      	ldrb	r3, [r7, #7]
}  
 8005fee:	4618      	mov	r0, r3
 8005ff0:	3708      	adds	r7, #8
 8005ff2:	46bd      	mov	sp, r7
 8005ff4:	bd80      	pop	{r7, pc}
 8005ff6:	bf00      	nop
 8005ff8:	40021000 	.word	0x40021000

08005ffc <SD_CheckStatus>:
/* USER CODE END beforeFunctionSection */

/* Private functions ---------------------------------------------------------*/

static DSTATUS SD_CheckStatus(BYTE lun)
{
 8005ffc:	b580      	push	{r7, lr}
 8005ffe:	b082      	sub	sp, #8
 8006000:	af00      	add	r7, sp, #0
 8006002:	4603      	mov	r3, r0
 8006004:	71fb      	strb	r3, [r7, #7]
  Stat = STA_NOINIT;
 8006006:	4b0b      	ldr	r3, [pc, #44]	; (8006034 <SD_CheckStatus+0x38>)
 8006008:	2201      	movs	r2, #1
 800600a:	701a      	strb	r2, [r3, #0]

  if(BSP_SD_GetCardState() == MSD_OK)
 800600c:	f7ff ffb0 	bl	8005f70 <BSP_SD_GetCardState>
 8006010:	4603      	mov	r3, r0
 8006012:	2b00      	cmp	r3, #0
 8006014:	d107      	bne.n	8006026 <SD_CheckStatus+0x2a>
  {
    Stat &= ~STA_NOINIT;
 8006016:	4b07      	ldr	r3, [pc, #28]	; (8006034 <SD_CheckStatus+0x38>)
 8006018:	781b      	ldrb	r3, [r3, #0]
 800601a:	b2db      	uxtb	r3, r3
 800601c:	f023 0301 	bic.w	r3, r3, #1
 8006020:	b2da      	uxtb	r2, r3
 8006022:	4b04      	ldr	r3, [pc, #16]	; (8006034 <SD_CheckStatus+0x38>)
 8006024:	701a      	strb	r2, [r3, #0]
  }

  return Stat;
 8006026:	4b03      	ldr	r3, [pc, #12]	; (8006034 <SD_CheckStatus+0x38>)
 8006028:	781b      	ldrb	r3, [r3, #0]
 800602a:	b2db      	uxtb	r3, r3
}
 800602c:	4618      	mov	r0, r3
 800602e:	3708      	adds	r7, #8
 8006030:	46bd      	mov	sp, r7
 8006032:	bd80      	pop	{r7, pc}
 8006034:	2000000d 	.word	0x2000000d

08006038 <SD_initialize>:
  * @brief  Initializes a Drive
  * @param  lun : not used
  * @retval DSTATUS: Operation status
  */
DSTATUS SD_initialize(BYTE lun)
{
 8006038:	b580      	push	{r7, lr}
 800603a:	b082      	sub	sp, #8
 800603c:	af00      	add	r7, sp, #0
 800603e:	4603      	mov	r3, r0
 8006040:	71fb      	strb	r3, [r7, #7]
Stat = STA_NOINIT;  
 8006042:	4b0b      	ldr	r3, [pc, #44]	; (8006070 <SD_initialize+0x38>)
 8006044:	2201      	movs	r2, #1
 8006046:	701a      	strb	r2, [r3, #0]

#if !defined(DISABLE_SD_INIT)

  if(BSP_SD_Init() == MSD_OK)
 8006048:	f7ff ff3e 	bl	8005ec8 <BSP_SD_Init>
 800604c:	4603      	mov	r3, r0
 800604e:	2b00      	cmp	r3, #0
 8006050:	d107      	bne.n	8006062 <SD_initialize+0x2a>
  {
    Stat = SD_CheckStatus(lun);
 8006052:	79fb      	ldrb	r3, [r7, #7]
 8006054:	4618      	mov	r0, r3
 8006056:	f7ff ffd1 	bl	8005ffc <SD_CheckStatus>
 800605a:	4603      	mov	r3, r0
 800605c:	461a      	mov	r2, r3
 800605e:	4b04      	ldr	r3, [pc, #16]	; (8006070 <SD_initialize+0x38>)
 8006060:	701a      	strb	r2, [r3, #0]

#else
  Stat = SD_CheckStatus(lun);
#endif

  return Stat;
 8006062:	4b03      	ldr	r3, [pc, #12]	; (8006070 <SD_initialize+0x38>)
 8006064:	781b      	ldrb	r3, [r3, #0]
 8006066:	b2db      	uxtb	r3, r3
}
 8006068:	4618      	mov	r0, r3
 800606a:	3708      	adds	r7, #8
 800606c:	46bd      	mov	sp, r7
 800606e:	bd80      	pop	{r7, pc}
 8006070:	2000000d 	.word	0x2000000d

08006074 <SD_status>:
  * @brief  Gets Disk Status
  * @param  lun : not used
  * @retval DSTATUS: Operation status
  */
DSTATUS SD_status(BYTE lun)
{
 8006074:	b580      	push	{r7, lr}
 8006076:	b082      	sub	sp, #8
 8006078:	af00      	add	r7, sp, #0
 800607a:	4603      	mov	r3, r0
 800607c:	71fb      	strb	r3, [r7, #7]
  return SD_CheckStatus(lun);
 800607e:	79fb      	ldrb	r3, [r7, #7]
 8006080:	4618      	mov	r0, r3
 8006082:	f7ff ffbb 	bl	8005ffc <SD_CheckStatus>
 8006086:	4603      	mov	r3, r0
}
 8006088:	4618      	mov	r0, r3
 800608a:	3708      	adds	r7, #8
 800608c:	46bd      	mov	sp, r7
 800608e:	bd80      	pop	{r7, pc}

08006090 <SD_read>:
  * @param  count: Number of sectors to read (1..128)
  * @retval DRESULT: Operation result
  */
              
DRESULT SD_read(BYTE lun, BYTE *buff, DWORD sector, UINT count)
{
 8006090:	b580      	push	{r7, lr}
 8006092:	b086      	sub	sp, #24
 8006094:	af00      	add	r7, sp, #0
 8006096:	60b9      	str	r1, [r7, #8]
 8006098:	607a      	str	r2, [r7, #4]
 800609a:	603b      	str	r3, [r7, #0]
 800609c:	4603      	mov	r3, r0
 800609e:	73fb      	strb	r3, [r7, #15]
  DRESULT res = RES_ERROR;
 80060a0:	2301      	movs	r3, #1
 80060a2:	75fb      	strb	r3, [r7, #23]

  if(BSP_SD_ReadBlocks((uint32_t*)buff,
 80060a4:	f04f 33ff 	mov.w	r3, #4294967295
 80060a8:	683a      	ldr	r2, [r7, #0]
 80060aa:	6879      	ldr	r1, [r7, #4]
 80060ac:	68b8      	ldr	r0, [r7, #8]
 80060ae:	f7ff ff23 	bl	8005ef8 <BSP_SD_ReadBlocks>
 80060b2:	4603      	mov	r3, r0
 80060b4:	2b00      	cmp	r3, #0
 80060b6:	d107      	bne.n	80060c8 <SD_read+0x38>
                       (uint32_t) (sector),
                       count, SD_TIMEOUT) == MSD_OK)
  {
    /* wait until the read operation is finished */
    while(BSP_SD_GetCardState()!= MSD_OK)
 80060b8:	bf00      	nop
 80060ba:	f7ff ff59 	bl	8005f70 <BSP_SD_GetCardState>
 80060be:	4603      	mov	r3, r0
 80060c0:	2b00      	cmp	r3, #0
 80060c2:	d1fa      	bne.n	80060ba <SD_read+0x2a>
    {
    }
    res = RES_OK;
 80060c4:	2300      	movs	r3, #0
 80060c6:	75fb      	strb	r3, [r7, #23]
  }

  return res;
 80060c8:	7dfb      	ldrb	r3, [r7, #23]
}
 80060ca:	4618      	mov	r0, r3
 80060cc:	3718      	adds	r7, #24
 80060ce:	46bd      	mov	sp, r7
 80060d0:	bd80      	pop	{r7, pc}

080060d2 <SD_write>:
  * @retval DRESULT: Operation result
  */
#if _USE_WRITE == 1
              
DRESULT SD_write(BYTE lun, const BYTE *buff, DWORD sector, UINT count)
{
 80060d2:	b580      	push	{r7, lr}
 80060d4:	b086      	sub	sp, #24
 80060d6:	af00      	add	r7, sp, #0
 80060d8:	60b9      	str	r1, [r7, #8]
 80060da:	607a      	str	r2, [r7, #4]
 80060dc:	603b      	str	r3, [r7, #0]
 80060de:	4603      	mov	r3, r0
 80060e0:	73fb      	strb	r3, [r7, #15]
  DRESULT res = RES_ERROR;
 80060e2:	2301      	movs	r3, #1
 80060e4:	75fb      	strb	r3, [r7, #23]

  if(BSP_SD_WriteBlocks((uint32_t*)buff,
 80060e6:	f04f 33ff 	mov.w	r3, #4294967295
 80060ea:	683a      	ldr	r2, [r7, #0]
 80060ec:	6879      	ldr	r1, [r7, #4]
 80060ee:	68b8      	ldr	r0, [r7, #8]
 80060f0:	f7ff ff20 	bl	8005f34 <BSP_SD_WriteBlocks>
 80060f4:	4603      	mov	r3, r0
 80060f6:	2b00      	cmp	r3, #0
 80060f8:	d107      	bne.n	800610a <SD_write+0x38>
                        (uint32_t)(sector),
                        count, SD_TIMEOUT) == MSD_OK)
  {
	/* wait until the Write operation is finished */
    while(BSP_SD_GetCardState() != MSD_OK)
 80060fa:	bf00      	nop
 80060fc:	f7ff ff38 	bl	8005f70 <BSP_SD_GetCardState>
 8006100:	4603      	mov	r3, r0
 8006102:	2b00      	cmp	r3, #0
 8006104:	d1fa      	bne.n	80060fc <SD_write+0x2a>
    {
    }
    res = RES_OK;
 8006106:	2300      	movs	r3, #0
 8006108:	75fb      	strb	r3, [r7, #23]
  }

  return res;
 800610a:	7dfb      	ldrb	r3, [r7, #23]
}
 800610c:	4618      	mov	r0, r3
 800610e:	3718      	adds	r7, #24
 8006110:	46bd      	mov	sp, r7
 8006112:	bd80      	pop	{r7, pc}

08006114 <SD_ioctl>:
  * @param  *buff: Buffer to send/receive control data
  * @retval DRESULT: Operation result
  */
#if _USE_IOCTL == 1
DRESULT SD_ioctl(BYTE lun, BYTE cmd, void *buff)
{
 8006114:	b580      	push	{r7, lr}
 8006116:	b08c      	sub	sp, #48	; 0x30
 8006118:	af00      	add	r7, sp, #0
 800611a:	4603      	mov	r3, r0
 800611c:	603a      	str	r2, [r7, #0]
 800611e:	71fb      	strb	r3, [r7, #7]
 8006120:	460b      	mov	r3, r1
 8006122:	71bb      	strb	r3, [r7, #6]
  DRESULT res = RES_ERROR;
 8006124:	2301      	movs	r3, #1
 8006126:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  BSP_SD_CardInfo CardInfo;

  if (Stat & STA_NOINIT) return RES_NOTRDY;
 800612a:	4b25      	ldr	r3, [pc, #148]	; (80061c0 <SD_ioctl+0xac>)
 800612c:	781b      	ldrb	r3, [r3, #0]
 800612e:	b2db      	uxtb	r3, r3
 8006130:	f003 0301 	and.w	r3, r3, #1
 8006134:	2b00      	cmp	r3, #0
 8006136:	d001      	beq.n	800613c <SD_ioctl+0x28>
 8006138:	2303      	movs	r3, #3
 800613a:	e03c      	b.n	80061b6 <SD_ioctl+0xa2>

  switch (cmd)
 800613c:	79bb      	ldrb	r3, [r7, #6]
 800613e:	2b03      	cmp	r3, #3
 8006140:	d834      	bhi.n	80061ac <SD_ioctl+0x98>
 8006142:	a201      	add	r2, pc, #4	; (adr r2, 8006148 <SD_ioctl+0x34>)
 8006144:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006148:	08006159 	.word	0x08006159
 800614c:	08006161 	.word	0x08006161
 8006150:	08006179 	.word	0x08006179
 8006154:	08006193 	.word	0x08006193
  {
  /* Make sure that no pending write process */
  case CTRL_SYNC :
    res = RES_OK;
 8006158:	2300      	movs	r3, #0
 800615a:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 800615e:	e028      	b.n	80061b2 <SD_ioctl+0x9e>

  /* Get number of sectors on the disk (DWORD) */
  case GET_SECTOR_COUNT :
    BSP_SD_GetCardInfo(&CardInfo);
 8006160:	f107 030c 	add.w	r3, r7, #12
 8006164:	4618      	mov	r0, r3
 8006166:	f7ff ff13 	bl	8005f90 <BSP_SD_GetCardInfo>
    *(DWORD*)buff = CardInfo.LogBlockNbr;
 800616a:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800616c:	683b      	ldr	r3, [r7, #0]
 800616e:	601a      	str	r2, [r3, #0]
    res = RES_OK;
 8006170:	2300      	movs	r3, #0
 8006172:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 8006176:	e01c      	b.n	80061b2 <SD_ioctl+0x9e>

  /* Get R/W sector size (WORD) */
  case GET_SECTOR_SIZE :
    BSP_SD_GetCardInfo(&CardInfo);
 8006178:	f107 030c 	add.w	r3, r7, #12
 800617c:	4618      	mov	r0, r3
 800617e:	f7ff ff07 	bl	8005f90 <BSP_SD_GetCardInfo>
    *(WORD*)buff = CardInfo.LogBlockSize;
 8006182:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006184:	b29a      	uxth	r2, r3
 8006186:	683b      	ldr	r3, [r7, #0]
 8006188:	801a      	strh	r2, [r3, #0]
    res = RES_OK;
 800618a:	2300      	movs	r3, #0
 800618c:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 8006190:	e00f      	b.n	80061b2 <SD_ioctl+0x9e>

  /* Get erase block size in unit of sector (DWORD) */
  case GET_BLOCK_SIZE :
    BSP_SD_GetCardInfo(&CardInfo);
 8006192:	f107 030c 	add.w	r3, r7, #12
 8006196:	4618      	mov	r0, r3
 8006198:	f7ff fefa 	bl	8005f90 <BSP_SD_GetCardInfo>
    *(DWORD*)buff = CardInfo.LogBlockSize / SD_DEFAULT_BLOCK_SIZE;
 800619c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800619e:	0a5a      	lsrs	r2, r3, #9
 80061a0:	683b      	ldr	r3, [r7, #0]
 80061a2:	601a      	str	r2, [r3, #0]
    res = RES_OK;
 80061a4:	2300      	movs	r3, #0
 80061a6:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
    break;
 80061aa:	e002      	b.n	80061b2 <SD_ioctl+0x9e>

  default:
    res = RES_PARERR;
 80061ac:	2304      	movs	r3, #4
 80061ae:	f887 302f 	strb.w	r3, [r7, #47]	; 0x2f
  }

  return res;
 80061b2:	f897 302f 	ldrb.w	r3, [r7, #47]	; 0x2f
}
 80061b6:	4618      	mov	r0, r3
 80061b8:	3730      	adds	r7, #48	; 0x30
 80061ba:	46bd      	mov	sp, r7
 80061bc:	bd80      	pop	{r7, pc}
 80061be:	bf00      	nop
 80061c0:	2000000d 	.word	0x2000000d

080061c4 <FATFS_LinkDriverEx>:
  * @param  lun : only used for USB Key Disk to add multi-lun management
            else the parameter must be equal to 0
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriverEx(const Diskio_drvTypeDef *drv, char *path, uint8_t lun)
{
 80061c4:	b480      	push	{r7}
 80061c6:	b087      	sub	sp, #28
 80061c8:	af00      	add	r7, sp, #0
 80061ca:	60f8      	str	r0, [r7, #12]
 80061cc:	60b9      	str	r1, [r7, #8]
 80061ce:	4613      	mov	r3, r2
 80061d0:	71fb      	strb	r3, [r7, #7]
  uint8_t ret = 1;
 80061d2:	2301      	movs	r3, #1
 80061d4:	75fb      	strb	r3, [r7, #23]
  uint8_t DiskNum = 0;
 80061d6:	2300      	movs	r3, #0
 80061d8:	75bb      	strb	r3, [r7, #22]

  if(disk.nbr < _VOLUMES)
 80061da:	4b1f      	ldr	r3, [pc, #124]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 80061dc:	7a5b      	ldrb	r3, [r3, #9]
 80061de:	b2db      	uxtb	r3, r3
 80061e0:	2b00      	cmp	r3, #0
 80061e2:	d131      	bne.n	8006248 <FATFS_LinkDriverEx+0x84>
  {
    disk.is_initialized[disk.nbr] = 0;
 80061e4:	4b1c      	ldr	r3, [pc, #112]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 80061e6:	7a5b      	ldrb	r3, [r3, #9]
 80061e8:	b2db      	uxtb	r3, r3
 80061ea:	461a      	mov	r2, r3
 80061ec:	4b1a      	ldr	r3, [pc, #104]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 80061ee:	2100      	movs	r1, #0
 80061f0:	5499      	strb	r1, [r3, r2]
    disk.drv[disk.nbr] = drv;
 80061f2:	4b19      	ldr	r3, [pc, #100]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 80061f4:	7a5b      	ldrb	r3, [r3, #9]
 80061f6:	b2db      	uxtb	r3, r3
 80061f8:	4a17      	ldr	r2, [pc, #92]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 80061fa:	009b      	lsls	r3, r3, #2
 80061fc:	4413      	add	r3, r2
 80061fe:	68fa      	ldr	r2, [r7, #12]
 8006200:	605a      	str	r2, [r3, #4]
    disk.lun[disk.nbr] = lun;
 8006202:	4b15      	ldr	r3, [pc, #84]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 8006204:	7a5b      	ldrb	r3, [r3, #9]
 8006206:	b2db      	uxtb	r3, r3
 8006208:	461a      	mov	r2, r3
 800620a:	4b13      	ldr	r3, [pc, #76]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 800620c:	4413      	add	r3, r2
 800620e:	79fa      	ldrb	r2, [r7, #7]
 8006210:	721a      	strb	r2, [r3, #8]
    DiskNum = disk.nbr++;
 8006212:	4b11      	ldr	r3, [pc, #68]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 8006214:	7a5b      	ldrb	r3, [r3, #9]
 8006216:	b2db      	uxtb	r3, r3
 8006218:	1c5a      	adds	r2, r3, #1
 800621a:	b2d1      	uxtb	r1, r2
 800621c:	4a0e      	ldr	r2, [pc, #56]	; (8006258 <FATFS_LinkDriverEx+0x94>)
 800621e:	7251      	strb	r1, [r2, #9]
 8006220:	75bb      	strb	r3, [r7, #22]
    path[0] = DiskNum + '0';
 8006222:	7dbb      	ldrb	r3, [r7, #22]
 8006224:	3330      	adds	r3, #48	; 0x30
 8006226:	b2da      	uxtb	r2, r3
 8006228:	68bb      	ldr	r3, [r7, #8]
 800622a:	701a      	strb	r2, [r3, #0]
    path[1] = ':';
 800622c:	68bb      	ldr	r3, [r7, #8]
 800622e:	3301      	adds	r3, #1
 8006230:	223a      	movs	r2, #58	; 0x3a
 8006232:	701a      	strb	r2, [r3, #0]
    path[2] = '/';
 8006234:	68bb      	ldr	r3, [r7, #8]
 8006236:	3302      	adds	r3, #2
 8006238:	222f      	movs	r2, #47	; 0x2f
 800623a:	701a      	strb	r2, [r3, #0]
    path[3] = 0;
 800623c:	68bb      	ldr	r3, [r7, #8]
 800623e:	3303      	adds	r3, #3
 8006240:	2200      	movs	r2, #0
 8006242:	701a      	strb	r2, [r3, #0]
    ret = 0;
 8006244:	2300      	movs	r3, #0
 8006246:	75fb      	strb	r3, [r7, #23]
  }

  return ret;
 8006248:	7dfb      	ldrb	r3, [r7, #23]
}
 800624a:	4618      	mov	r0, r3
 800624c:	371c      	adds	r7, #28
 800624e:	46bd      	mov	sp, r7
 8006250:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006254:	4770      	bx	lr
 8006256:	bf00      	nop
 8006258:	2000011c 	.word	0x2000011c

0800625c <FATFS_LinkDriver>:
  * @param  drv: pointer to the disk IO Driver structure
  * @param  path: pointer to the logical drive path
  * @retval Returns 0 in case of success, otherwise 1.
  */
uint8_t FATFS_LinkDriver(const Diskio_drvTypeDef *drv, char *path)
{
 800625c:	b580      	push	{r7, lr}
 800625e:	b082      	sub	sp, #8
 8006260:	af00      	add	r7, sp, #0
 8006262:	6078      	str	r0, [r7, #4]
 8006264:	6039      	str	r1, [r7, #0]
  return FATFS_LinkDriverEx(drv, path, 0);
 8006266:	2200      	movs	r2, #0
 8006268:	6839      	ldr	r1, [r7, #0]
 800626a:	6878      	ldr	r0, [r7, #4]
 800626c:	f7ff ffaa 	bl	80061c4 <FATFS_LinkDriverEx>
 8006270:	4603      	mov	r3, r0
}
 8006272:	4618      	mov	r0, r3
 8006274:	3708      	adds	r7, #8
 8006276:	46bd      	mov	sp, r7
 8006278:	bd80      	pop	{r7, pc}

0800627a <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800627a:	b580      	push	{r7, lr}
 800627c:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 800627e:	f003 f859 	bl	8009334 <touchgfx_init>
}
 8006282:	bf00      	nop
 8006284:	bd80      	pop	{r7, pc}

08006286 <MX_TouchGFX_Process>:

/**
 * TouchGFX application entry function
 */
void MX_TouchGFX_Process(void)
{
 8006286:	b580      	push	{r7, lr}
 8006288:	af00      	add	r7, sp, #0
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_taskEntry();
 800628a:	f003 f883 	bl	8009394 <touchgfx_taskEntry>
}
 800628e:	bf00      	nop
 8006290:	bd80      	pop	{r7, pc}
	...

08006294 <_ZN8touchgfx12FontProviderD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~FontProvider()
 8006294:	b480      	push	{r7}
 8006296:	b083      	sub	sp, #12
 8006298:	af00      	add	r7, sp, #0
 800629a:	6078      	str	r0, [r7, #4]
    {
 800629c:	4a04      	ldr	r2, [pc, #16]	; (80062b0 <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800629e:	687b      	ldr	r3, [r7, #4]
 80062a0:	601a      	str	r2, [r3, #0]
    }
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	4618      	mov	r0, r3
 80062a6:	370c      	adds	r7, #12
 80062a8:	46bd      	mov	sp, r7
 80062aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80062ae:	4770      	bx	lr
 80062b0:	0801cb18 	.word	0x0801cb18

080062b4 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 80062b4:	b580      	push	{r7, lr}
 80062b6:	b082      	sub	sp, #8
 80062b8:	af00      	add	r7, sp, #0
 80062ba:	6078      	str	r0, [r7, #4]
    }
 80062bc:	6878      	ldr	r0, [r7, #4]
 80062be:	f7ff ffe9 	bl	8006294 <_ZN8touchgfx12FontProviderD1Ev>
 80062c2:	2104      	movs	r1, #4
 80062c4:	6878      	ldr	r0, [r7, #4]
 80062c6:	f014 fc19 	bl	801aafc <_ZdlPvj>
 80062ca:	687b      	ldr	r3, [r7, #4]
 80062cc:	4618      	mov	r0, r3
 80062ce:	3708      	adds	r7, #8
 80062d0:	46bd      	mov	sp, r7
 80062d2:	bd80      	pop	{r7, pc}

080062d4 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80062d4:	b580      	push	{r7, lr}
 80062d6:	b082      	sub	sp, #8
 80062d8:	af00      	add	r7, sp, #0
 80062da:	6078      	str	r0, [r7, #4]
 80062dc:	460b      	mov	r3, r1
 80062de:	807b      	strh	r3, [r7, #2]
    switch (typography)
 80062e0:	887b      	ldrh	r3, [r7, #2]
 80062e2:	2b01      	cmp	r3, #1
 80062e4:	d008      	beq.n	80062f8 <_ZN23ApplicationFontProvider7getFontEt+0x24>
 80062e6:	2b02      	cmp	r3, #2
 80062e8:	d00b      	beq.n	8006302 <_ZN23ApplicationFontProvider7getFontEt+0x2e>
 80062ea:	2b00      	cmp	r3, #0
 80062ec:	d10e      	bne.n	800630c <_ZN23ApplicationFontProvider7getFontEt+0x38>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80062ee:	f001 fc2b 	bl	8007b48 <_ZN17TypedTextDatabase8getFontsEv>
 80062f2:	4603      	mov	r3, r0
 80062f4:	681b      	ldr	r3, [r3, #0]
 80062f6:	e00a      	b.n	800630e <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::LARGE:
        // verdana_40_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80062f8:	f001 fc26 	bl	8007b48 <_ZN17TypedTextDatabase8getFontsEv>
 80062fc:	4603      	mov	r3, r0
 80062fe:	685b      	ldr	r3, [r3, #4]
 8006300:	e005      	b.n	800630e <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    case Typography::SMALL:
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8006302:	f001 fc21 	bl	8007b48 <_ZN17TypedTextDatabase8getFontsEv>
 8006306:	4603      	mov	r3, r0
 8006308:	689b      	ldr	r3, [r3, #8]
 800630a:	e000      	b.n	800630e <_ZN23ApplicationFontProvider7getFontEt+0x3a>
    default:
        return 0;
 800630c:	2300      	movs	r3, #0
    }
}
 800630e:	4618      	mov	r0, r3
 8006310:	3708      	adds	r7, #8
 8006312:	46bd      	mov	sp, r7
 8006314:	bd80      	pop	{r7, pc}
	...

08006318 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8006318:	b580      	push	{r7, lr}
 800631a:	b082      	sub	sp, #8
 800631c:	af00      	add	r7, sp, #0
 800631e:	6078      	str	r0, [r7, #4]
 8006320:	4a05      	ldr	r2, [pc, #20]	; (8006338 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 8006322:	687b      	ldr	r3, [r7, #4]
 8006324:	601a      	str	r2, [r3, #0]
 8006326:	687b      	ldr	r3, [r7, #4]
 8006328:	4618      	mov	r0, r3
 800632a:	f7ff ffb3 	bl	8006294 <_ZN8touchgfx12FontProviderD1Ev>
 800632e:	687b      	ldr	r3, [r7, #4]
 8006330:	4618      	mov	r0, r3
 8006332:	3708      	adds	r7, #8
 8006334:	46bd      	mov	sp, r7
 8006336:	bd80      	pop	{r7, pc}
 8006338:	0801cb04 	.word	0x0801cb04

0800633c <_ZN23ApplicationFontProviderD0Ev>:
 800633c:	b580      	push	{r7, lr}
 800633e:	b082      	sub	sp, #8
 8006340:	af00      	add	r7, sp, #0
 8006342:	6078      	str	r0, [r7, #4]
 8006344:	6878      	ldr	r0, [r7, #4]
 8006346:	f7ff ffe7 	bl	8006318 <_ZN23ApplicationFontProviderD1Ev>
 800634a:	2104      	movs	r1, #4
 800634c:	6878      	ldr	r0, [r7, #4]
 800634e:	f014 fbd5 	bl	801aafc <_ZdlPvj>
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	4618      	mov	r0, r3
 8006356:	3708      	adds	r7, #8
 8006358:	46bd      	mov	sp, r7
 800635a:	bd80      	pop	{r7, pc}

0800635c <_ZN8touchgfx4FontD1Ev>:
 *        It provides utility functions such as obtaining string width and font height.
 */
class Font
{
public:
    virtual ~Font() { }
 800635c:	b480      	push	{r7}
 800635e:	b083      	sub	sp, #12
 8006360:	af00      	add	r7, sp, #0
 8006362:	6078      	str	r0, [r7, #4]
 8006364:	4a04      	ldr	r2, [pc, #16]	; (8006378 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	601a      	str	r2, [r3, #0]
 800636a:	687b      	ldr	r3, [r7, #4]
 800636c:	4618      	mov	r0, r3
 800636e:	370c      	adds	r7, #12
 8006370:	46bd      	mov	sp, r7
 8006372:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006376:	4770      	bx	lr
 8006378:	0801e4e8 	.word	0x0801e4e8

0800637c <_ZN8touchgfx4FontD0Ev>:
 800637c:	b580      	push	{r7, lr}
 800637e:	b082      	sub	sp, #8
 8006380:	af00      	add	r7, sp, #0
 8006382:	6078      	str	r0, [r7, #4]
 8006384:	6878      	ldr	r0, [r7, #4]
 8006386:	f7ff ffe9 	bl	800635c <_ZN8touchgfx4FontD1Ev>
 800638a:	2110      	movs	r1, #16
 800638c:	6878      	ldr	r0, [r7, #4]
 800638e:	f014 fbb5 	bl	801aafc <_ZdlPvj>
 8006392:	687b      	ldr	r3, [r7, #4]
 8006394:	4618      	mov	r0, r3
 8006396:	3708      	adds	r7, #8
 8006398:	46bd      	mov	sp, r7
 800639a:	bd80      	pop	{r7, pc}

0800639c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getGlyph
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800639c:	b590      	push	{r4, r7, lr}
 800639e:	b087      	sub	sp, #28
 80063a0:	af00      	add	r7, sp, #0
 80063a2:	6078      	str	r0, [r7, #4]
 80063a4:	460b      	mov	r3, r1
 80063a6:	807b      	strh	r3, [r7, #2]
    {
        const uint8_t* dummyPixelDataPointer = 0;
 80063a8:	2300      	movs	r3, #0
 80063aa:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 80063ac:	2300      	movs	r3, #0
 80063ae:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 80063b0:	687b      	ldr	r3, [r7, #4]
 80063b2:	681b      	ldr	r3, [r3, #0]
 80063b4:	3308      	adds	r3, #8
 80063b6:	681c      	ldr	r4, [r3, #0]
 80063b8:	f107 030f 	add.w	r3, r7, #15
 80063bc:	f107 0210 	add.w	r2, r7, #16
 80063c0:	8879      	ldrh	r1, [r7, #2]
 80063c2:	6878      	ldr	r0, [r7, #4]
 80063c4:	47a0      	blx	r4
 80063c6:	6178      	str	r0, [r7, #20]
        return glyph;
 80063c8:	697b      	ldr	r3, [r7, #20]
    }
 80063ca:	4618      	mov	r0, r3
 80063cc:	371c      	adds	r7, #28
 80063ce:	46bd      	mov	sp, r7
 80063d0:	bd90      	pop	{r4, r7, pc}

080063d2 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     *        character, use the glyph for the character returned by this function. If 0 (zero)
     *        is returned, there is no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 80063d2:	b480      	push	{r7}
 80063d4:	b083      	sub	sp, #12
 80063d6:	af00      	add	r7, sp, #0
 80063d8:	6078      	str	r0, [r7, #4]
    {
        return falllbackCharacter;
 80063da:	687b      	ldr	r3, [r7, #4]
 80063dc:	895b      	ldrh	r3, [r3, #10]
    }
 80063de:	4618      	mov	r0, r3
 80063e0:	370c      	adds	r7, #12
 80063e2:	46bd      	mov	sp, r7
 80063e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80063e8:	4770      	bx	lr

080063ea <_ZNK8touchgfx4Font15getEllipsisCharEv>:
    *        Gets ellipsis character for the given font. This is the character which is used
    *        when truncating long lines.
    *
    * @return The ellipsis character for the typography.
    */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 80063ea:	b480      	push	{r7}
 80063ec:	b083      	sub	sp, #12
 80063ee:	af00      	add	r7, sp, #0
 80063f0:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80063f2:	687b      	ldr	r3, [r7, #4]
 80063f4:	899b      	ldrh	r3, [r3, #12]
    }
 80063f6:	4618      	mov	r0, r3
 80063f8:	370c      	adds	r7, #12
 80063fa:	46bd      	mov	sp, r7
 80063fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006400:	4770      	bx	lr

08006402 <_ZNK8touchgfx4Font13getFontHeightEv>:
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getMinimumTextHeight for this.
     *
     * @return The height in pixels of this font.
     */
    virtual uint16_t getFontHeight() const
 8006402:	b480      	push	{r7}
 8006404:	b083      	sub	sp, #12
 8006406:	af00      	add	r7, sp, #0
 8006408:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 800640a:	687b      	ldr	r3, [r7, #4]
 800640c:	889b      	ldrh	r3, [r3, #4]
    }
 800640e:	4618      	mov	r0, r3
 8006410:	370c      	adds	r7, #12
 8006412:	46bd      	mov	sp, r7
 8006414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006418:	4770      	bx	lr

0800641a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *        into account that certain characters (eg 'g') have pixels below the baseline,
     *        thus making the text height larger than the font height.
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    virtual uint16_t getMinimumTextHeight() const
 800641a:	b480      	push	{r7}
 800641c:	b083      	sub	sp, #12
 800641e:	af00      	add	r7, sp, #0
 8006420:	6078      	str	r0, [r7, #4]
    {
        return fontHeight + pixelsBelowBaseline;
 8006422:	687b      	ldr	r3, [r7, #4]
 8006424:	889a      	ldrh	r2, [r3, #4]
 8006426:	687b      	ldr	r3, [r7, #4]
 8006428:	799b      	ldrb	r3, [r3, #6]
 800642a:	b29b      	uxth	r3, r3
 800642c:	4413      	add	r3, r2
 800642e:	b29b      	uxth	r3, r3
    }
 8006430:	4618      	mov	r0, r3
 8006432:	370c      	adds	r7, #12
 8006434:	46bd      	mov	sp, r7
 8006436:	f85d 7b04 	ldr.w	r7, [sp], #4
 800643a:	4770      	bx	lr

0800643c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     *        Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    virtual uint8_t getBitsPerPixel() const
 800643c:	b480      	push	{r7}
 800643e:	b083      	sub	sp, #12
 8006440:	af00      	add	r7, sp, #0
 8006442:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8006444:	687b      	ldr	r3, [r7, #4]
 8006446:	79db      	ldrb	r3, [r3, #7]
 8006448:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800644c:	b2db      	uxtb	r3, r3
    }
 800644e:	4618      	mov	r0, r3
 8006450:	370c      	adds	r7, #12
 8006452:	46bd      	mov	sp, r7
 8006454:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006458:	4770      	bx	lr

0800645a <_ZNK8touchgfx4Font15getDataFormatA4Ev>:
     *
     *        Are the glyphs saved using ST A4 format.
     *
     * @return True if the font is stored using A4 format, false otherwise.
     */
    virtual uint8_t getDataFormatA4() const
 800645a:	b480      	push	{r7}
 800645c:	b083      	sub	sp, #12
 800645e:	af00      	add	r7, sp, #0
 8006460:	6078      	str	r0, [r7, #4]
    {
        return a4;
 8006462:	687b      	ldr	r3, [r7, #4]
 8006464:	79db      	ldrb	r3, [r3, #7]
 8006466:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800646a:	b2db      	uxtb	r3, r3
    }
 800646c:	4618      	mov	r0, r3
 800646e:	370c      	adds	r7, #12
 8006470:	46bd      	mov	sp, r7
 8006472:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006476:	4770      	bx	lr

08006478 <_ZN8touchgfx9ConstFontD1Ev>:
 * @note Pure virtual class. Create an application-
 *          specific implementation of getPixelData.
 *
 * @see Font
 */
class ConstFont : public Font
 8006478:	b580      	push	{r7, lr}
 800647a:	b082      	sub	sp, #8
 800647c:	af00      	add	r7, sp, #0
 800647e:	6078      	str	r0, [r7, #4]
 8006480:	4a05      	ldr	r2, [pc, #20]	; (8006498 <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	601a      	str	r2, [r3, #0]
 8006486:	687b      	ldr	r3, [r7, #4]
 8006488:	4618      	mov	r0, r3
 800648a:	f7ff ff67 	bl	800635c <_ZN8touchgfx4FontD1Ev>
 800648e:	687b      	ldr	r3, [r7, #4]
 8006490:	4618      	mov	r0, r3
 8006492:	3708      	adds	r7, #8
 8006494:	46bd      	mov	sp, r7
 8006496:	bd80      	pop	{r7, pc}
 8006498:	0801e5a0 	.word	0x0801e5a0

0800649c <_ZN8touchgfx9ConstFontD0Ev>:
 800649c:	b580      	push	{r7, lr}
 800649e:	b082      	sub	sp, #8
 80064a0:	af00      	add	r7, sp, #0
 80064a2:	6078      	str	r0, [r7, #4]
 80064a4:	6878      	ldr	r0, [r7, #4]
 80064a6:	f7ff ffe7 	bl	8006478 <_ZN8touchgfx9ConstFontD1Ev>
 80064aa:	2118      	movs	r1, #24
 80064ac:	6878      	ldr	r0, [r7, #4]
 80064ae:	f014 fb25 	bl	801aafc <_ZdlPvj>
 80064b2:	687b      	ldr	r3, [r7, #4]
 80064b4:	4618      	mov	r0, r3
 80064b6:	3708      	adds	r7, #8
 80064b8:	46bd      	mov	sp, r7
 80064ba:	bd80      	pop	{r7, pc}

080064bc <_ZN8touchgfx13GeneratedFontD1Ev>:
 *        An GeneratedFont has both glyph table and glyph data placed in a flash which
 *        supports random access read (i.e. not a NAND flash)
 *
 * @see ConstFont
 */
class GeneratedFont : public ConstFont
 80064bc:	b580      	push	{r7, lr}
 80064be:	b082      	sub	sp, #8
 80064c0:	af00      	add	r7, sp, #0
 80064c2:	6078      	str	r0, [r7, #4]
 80064c4:	4a05      	ldr	r2, [pc, #20]	; (80064dc <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80064c6:	687b      	ldr	r3, [r7, #4]
 80064c8:	601a      	str	r2, [r3, #0]
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	4618      	mov	r0, r3
 80064ce:	f7ff ffd3 	bl	8006478 <_ZN8touchgfx9ConstFontD1Ev>
 80064d2:	687b      	ldr	r3, [r7, #4]
 80064d4:	4618      	mov	r0, r3
 80064d6:	3708      	adds	r7, #8
 80064d8:	46bd      	mov	sp, r7
 80064da:	bd80      	pop	{r7, pc}
 80064dc:	0801cb2c 	.word	0x0801cb2c

080064e0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80064e0:	b580      	push	{r7, lr}
 80064e2:	b082      	sub	sp, #8
 80064e4:	af00      	add	r7, sp, #0
 80064e6:	6078      	str	r0, [r7, #4]
 80064e8:	6878      	ldr	r0, [r7, #4]
 80064ea:	f7ff ffe7 	bl	80064bc <_ZN8touchgfx13GeneratedFontD1Ev>
 80064ee:	2124      	movs	r1, #36	; 0x24
 80064f0:	6878      	ldr	r0, [r7, #4]
 80064f2:	f014 fb03 	bl	801aafc <_ZdlPvj>
 80064f6:	687b      	ldr	r3, [r7, #4]
 80064f8:	4618      	mov	r0, r3
 80064fa:	3708      	adds	r7, #8
 80064fc:	46bd      	mov	sp, r7
 80064fe:	bd80      	pop	{r7, pc}

08006500 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>:
    uint16_t kerningTablePos() const
 8006500:	b480      	push	{r7}
 8006502:	b083      	sub	sp, #12
 8006504:	af00      	add	r7, sp, #0
 8006506:	6078      	str	r0, [r7, #4]
        return (((uint16_t)(flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10)) << 8) | (uint16_t)_kerningTablePos;
 8006508:	687b      	ldr	r3, [r7, #4]
 800650a:	7b5b      	ldrb	r3, [r3, #13]
 800650c:	021b      	lsls	r3, r3, #8
 800650e:	b21b      	sxth	r3, r3
 8006510:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006514:	b21a      	sxth	r2, r3
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	7adb      	ldrb	r3, [r3, #11]
 800651a:	b21b      	sxth	r3, r3
 800651c:	4313      	orrs	r3, r2
 800651e:	b21b      	sxth	r3, r3
 8006520:	b29b      	uxth	r3, r3
    }
 8006522:	4618      	mov	r0, r3
 8006524:	370c      	adds	r7, #12
 8006526:	46bd      	mov	sp, r7
 8006528:	f85d 7b04 	ldr.w	r7, [sp], #4
 800652c:	4770      	bx	lr

0800652e <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     *
     *        Gets GSUB table.
     *
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
 800652e:	b480      	push	{r7}
 8006530:	b083      	sub	sp, #12
 8006532:	af00      	add	r7, sp, #0
 8006534:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 8006536:	687b      	ldr	r3, [r7, #4]
 8006538:	6a1b      	ldr	r3, [r3, #32]
    }
 800653a:	4618      	mov	r0, r3
 800653c:	370c      	adds	r7, #12
 800653e:	46bd      	mov	sp, r7
 8006540:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006544:	4770      	bx	lr
	...

08006548 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>:

#include <fonts/GeneratedFont.hpp>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t dataFormatA4, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData) :
 8006548:	b580      	push	{r7, lr}
 800654a:	b08c      	sub	sp, #48	; 0x30
 800654c:	af08      	add	r7, sp, #32
 800654e:	60f8      	str	r0, [r7, #12]
 8006550:	60b9      	str	r1, [r7, #8]
 8006552:	4611      	mov	r1, r2
 8006554:	461a      	mov	r2, r3
 8006556:	460b      	mov	r3, r1
 8006558:	80fb      	strh	r3, [r7, #6]
 800655a:	4613      	mov	r3, r2
 800655c:	80bb      	strh	r3, [r7, #4]
    ConstFont(list, size, height, pixBelowBase, bitsPerPixel, dataFormatA4, maxLeft, maxRight, fallbackChar, ellipsisChar),
    glyphData(glyphDataInternalFlash),
    kerningData(kerningList),
    gsubTable(gsubData)
 800655e:	68f8      	ldr	r0, [r7, #12]
 8006560:	88b9      	ldrh	r1, [r7, #4]
 8006562:	88fa      	ldrh	r2, [r7, #6]
 8006564:	8f3b      	ldrh	r3, [r7, #56]	; 0x38
 8006566:	9306      	str	r3, [sp, #24]
 8006568:	8ebb      	ldrh	r3, [r7, #52]	; 0x34
 800656a:	9305      	str	r3, [sp, #20]
 800656c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8006570:	9304      	str	r3, [sp, #16]
 8006572:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8006576:	9303      	str	r3, [sp, #12]
 8006578:	f897 3020 	ldrb.w	r3, [r7, #32]
 800657c:	9302      	str	r3, [sp, #8]
 800657e:	7f3b      	ldrb	r3, [r7, #28]
 8006580:	9301      	str	r3, [sp, #4]
 8006582:	7e3b      	ldrb	r3, [r7, #24]
 8006584:	9300      	str	r3, [sp, #0]
 8006586:	460b      	mov	r3, r1
 8006588:	68b9      	ldr	r1, [r7, #8]
 800658a:	f007 f9bd 	bl	800d908 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 800658e:	4a08      	ldr	r2, [pc, #32]	; (80065b0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt+0x68>)
 8006590:	68fb      	ldr	r3, [r7, #12]
 8006592:	601a      	str	r2, [r3, #0]
 8006594:	68fb      	ldr	r3, [r7, #12]
 8006596:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8006598:	619a      	str	r2, [r3, #24]
 800659a:	68fb      	ldr	r3, [r7, #12]
 800659c:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800659e:	61da      	str	r2, [r3, #28]
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80065a4:	621a      	str	r2, [r3, #32]
{
}
 80065a6:	68fb      	ldr	r3, [r7, #12]
 80065a8:	4618      	mov	r0, r3
 80065aa:	3710      	adds	r7, #16
 80065ac:	46bd      	mov	sp, r7
 80065ae:	bd80      	pop	{r7, pc}
 80065b0:	0801cb2c 	.word	0x0801cb2c

080065b4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80065b4:	b480      	push	{r7}
 80065b6:	b085      	sub	sp, #20
 80065b8:	af00      	add	r7, sp, #0
 80065ba:	6078      	str	r0, [r7, #4]
 80065bc:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80065be:	687b      	ldr	r3, [r7, #4]
 80065c0:	699b      	ldr	r3, [r3, #24]
 80065c2:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80065c4:	683b      	ldr	r3, [r7, #0]
 80065c6:	889b      	ldrh	r3, [r3, #4]
 80065c8:	0adb      	lsrs	r3, r3, #11
 80065ca:	b29b      	uxth	r3, r3
 80065cc:	009b      	lsls	r3, r3, #2
 80065ce:	68fa      	ldr	r2, [r7, #12]
 80065d0:	4413      	add	r3, r2
 80065d2:	681a      	ldr	r2, [r3, #0]
 80065d4:	683b      	ldr	r3, [r7, #0]
 80065d6:	681b      	ldr	r3, [r3, #0]
 80065d8:	4413      	add	r3, r2
}
 80065da:	4618      	mov	r0, r3
 80065dc:	3714      	adds	r7, #20
 80065de:	46bd      	mov	sp, r7
 80065e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80065e4:	4770      	bx	lr

080065e6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80065e6:	b580      	push	{r7, lr}
 80065e8:	b086      	sub	sp, #24
 80065ea:	af00      	add	r7, sp, #0
 80065ec:	60f8      	str	r0, [r7, #12]
 80065ee:	460b      	mov	r3, r1
 80065f0:	607a      	str	r2, [r7, #4]
 80065f2:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 80065f4:	687b      	ldr	r3, [r7, #4]
 80065f6:	2b00      	cmp	r3, #0
 80065f8:	d003      	beq.n	8006602 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80065fa:	687b      	ldr	r3, [r7, #4]
 80065fc:	7b1b      	ldrb	r3, [r3, #12]
 80065fe:	2b00      	cmp	r3, #0
 8006600:	d101      	bne.n	8006606 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8006602:	2300      	movs	r3, #0
 8006604:	e023      	b.n	800664e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    }

    uint16_t kerningTablePos = glyph->kerningTablePos();
 8006606:	6878      	ldr	r0, [r7, #4]
 8006608:	f7ff ff7a 	bl	8006500 <_ZNK8touchgfx9GlyphNode15kerningTablePosEv>
 800660c:	4603      	mov	r3, r0
 800660e:	82bb      	strh	r3, [r7, #20]
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8006610:	8abb      	ldrh	r3, [r7, #20]
 8006612:	82fb      	strh	r3, [r7, #22]
 8006614:	8afa      	ldrh	r2, [r7, #22]
 8006616:	8abb      	ldrh	r3, [r7, #20]
 8006618:	6879      	ldr	r1, [r7, #4]
 800661a:	7b09      	ldrb	r1, [r1, #12]
 800661c:	440b      	add	r3, r1
 800661e:	429a      	cmp	r2, r3
 8006620:	da14      	bge.n	800664c <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x66>
    {
        if (prevChar == kerningData[i].unicodePrevChar)
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	69da      	ldr	r2, [r3, #28]
 8006626:	8afb      	ldrh	r3, [r7, #22]
 8006628:	009b      	lsls	r3, r3, #2
 800662a:	4413      	add	r3, r2
 800662c:	881b      	ldrh	r3, [r3, #0]
 800662e:	897a      	ldrh	r2, [r7, #10]
 8006630:	429a      	cmp	r2, r3
 8006632:	d107      	bne.n	8006644 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x5e>
        {
            return kerningData[i].distance;
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	69da      	ldr	r2, [r3, #28]
 8006638:	8afb      	ldrh	r3, [r7, #22]
 800663a:	009b      	lsls	r3, r3, #2
 800663c:	4413      	add	r3, r2
 800663e:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8006642:	e004      	b.n	800664e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x68>
    for (uint16_t i = kerningTablePos; i < kerningTablePos + glyph->kerningTableSize; i++)
 8006644:	8afb      	ldrh	r3, [r7, #22]
 8006646:	3301      	adds	r3, #1
 8006648:	82fb      	strh	r3, [r7, #22]
 800664a:	e7e3      	b.n	8006614 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x2e>
        }
    }
    return 0;
 800664c:	2300      	movs	r3, #0
}
 800664e:	4618      	mov	r0, r3
 8006650:	3718      	adds	r7, #24
 8006652:	46bd      	mov	sp, r7
 8006654:	bd80      	pop	{r7, pc}
	...

08006658 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_10_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 8006658:	b580      	push	{r7, lr}
 800665a:	af00      	add	r7, sp, #0
 800665c:	4801      	ldr	r0, [pc, #4]	; (8006664 <__tcf_0+0xc>)
 800665e:	f7ff ff2d 	bl	80064bc <_ZN8touchgfx13GeneratedFontD1Ev>
 8006662:	bd80      	pop	{r7, pc}
 8006664:	20000128 	.word	0x20000128

08006668 <_Z23getFont_verdana_10_4bppv>:
{
 8006668:	b580      	push	{r7, lr}
 800666a:	b08a      	sub	sp, #40	; 0x28
 800666c:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0);
 800666e:	4b15      	ldr	r3, [pc, #84]	; (80066c4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8006670:	681b      	ldr	r3, [r3, #0]
 8006672:	f003 0301 	and.w	r3, r3, #1
 8006676:	2b00      	cmp	r3, #0
 8006678:	d11f      	bne.n	80066ba <_Z23getFont_verdana_10_4bppv+0x52>
 800667a:	2300      	movs	r3, #0
 800667c:	9309      	str	r3, [sp, #36]	; 0x24
 800667e:	2300      	movs	r3, #0
 8006680:	9308      	str	r3, [sp, #32]
 8006682:	233f      	movs	r3, #63	; 0x3f
 8006684:	9307      	str	r3, [sp, #28]
 8006686:	4b10      	ldr	r3, [pc, #64]	; (80066c8 <_Z23getFont_verdana_10_4bppv+0x60>)
 8006688:	9306      	str	r3, [sp, #24]
 800668a:	4b10      	ldr	r3, [pc, #64]	; (80066cc <_Z23getFont_verdana_10_4bppv+0x64>)
 800668c:	9305      	str	r3, [sp, #20]
 800668e:	2300      	movs	r3, #0
 8006690:	9304      	str	r3, [sp, #16]
 8006692:	2300      	movs	r3, #0
 8006694:	9303      	str	r3, [sp, #12]
 8006696:	2301      	movs	r3, #1
 8006698:	9302      	str	r3, [sp, #8]
 800669a:	2304      	movs	r3, #4
 800669c:	9301      	str	r3, [sp, #4]
 800669e:	2300      	movs	r3, #0
 80066a0:	9300      	str	r3, [sp, #0]
 80066a2:	230a      	movs	r3, #10
 80066a4:	2201      	movs	r2, #1
 80066a6:	490a      	ldr	r1, [pc, #40]	; (80066d0 <_Z23getFont_verdana_10_4bppv+0x68>)
 80066a8:	480a      	ldr	r0, [pc, #40]	; (80066d4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 80066aa:	f7ff ff4d 	bl	8006548 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80066ae:	4b05      	ldr	r3, [pc, #20]	; (80066c4 <_Z23getFont_verdana_10_4bppv+0x5c>)
 80066b0:	2201      	movs	r2, #1
 80066b2:	601a      	str	r2, [r3, #0]
 80066b4:	4808      	ldr	r0, [pc, #32]	; (80066d8 <_Z23getFont_verdana_10_4bppv+0x70>)
 80066b6:	f015 f839 	bl	801b72c <atexit>
    return verdana_10_4bpp;
 80066ba:	4b06      	ldr	r3, [pc, #24]	; (80066d4 <_Z23getFont_verdana_10_4bppv+0x6c>)
}
 80066bc:	4618      	mov	r0, r3
 80066be:	46bd      	mov	sp, r7
 80066c0:	bd80      	pop	{r7, pc}
 80066c2:	bf00      	nop
 80066c4:	2000014c 	.word	0x2000014c
 80066c8:	08020140 	.word	0x08020140
 80066cc:	0801cb78 	.word	0x0801cb78
 80066d0:	0802014c 	.word	0x0802014c
 80066d4:	20000128 	.word	0x20000128
 80066d8:	08006659 	.word	0x08006659

080066dc <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_20_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80066dc:	b580      	push	{r7, lr}
 80066de:	af00      	add	r7, sp, #0
 80066e0:	4801      	ldr	r0, [pc, #4]	; (80066e8 <__tcf_0+0xc>)
 80066e2:	f7ff feeb 	bl	80064bc <_ZN8touchgfx13GeneratedFontD1Ev>
 80066e6:	bd80      	pop	{r7, pc}
 80066e8:	20000150 	.word	0x20000150

080066ec <_Z23getFont_verdana_20_4bppv>:
{
 80066ec:	b580      	push	{r7, lr}
 80066ee:	b08a      	sub	sp, #40	; 0x28
 80066f0:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0);
 80066f2:	4b15      	ldr	r3, [pc, #84]	; (8006748 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80066f4:	681b      	ldr	r3, [r3, #0]
 80066f6:	f003 0301 	and.w	r3, r3, #1
 80066fa:	2b00      	cmp	r3, #0
 80066fc:	d11f      	bne.n	800673e <_Z23getFont_verdana_20_4bppv+0x52>
 80066fe:	2300      	movs	r3, #0
 8006700:	9309      	str	r3, [sp, #36]	; 0x24
 8006702:	2300      	movs	r3, #0
 8006704:	9308      	str	r3, [sp, #32]
 8006706:	233f      	movs	r3, #63	; 0x3f
 8006708:	9307      	str	r3, [sp, #28]
 800670a:	4b10      	ldr	r3, [pc, #64]	; (800674c <_Z23getFont_verdana_20_4bppv+0x60>)
 800670c:	9306      	str	r3, [sp, #24]
 800670e:	4b10      	ldr	r3, [pc, #64]	; (8006750 <_Z23getFont_verdana_20_4bppv+0x64>)
 8006710:	9305      	str	r3, [sp, #20]
 8006712:	2300      	movs	r3, #0
 8006714:	9304      	str	r3, [sp, #16]
 8006716:	2300      	movs	r3, #0
 8006718:	9303      	str	r3, [sp, #12]
 800671a:	2301      	movs	r3, #1
 800671c:	9302      	str	r3, [sp, #8]
 800671e:	2304      	movs	r3, #4
 8006720:	9301      	str	r3, [sp, #4]
 8006722:	2300      	movs	r3, #0
 8006724:	9300      	str	r3, [sp, #0]
 8006726:	2314      	movs	r3, #20
 8006728:	2201      	movs	r2, #1
 800672a:	490a      	ldr	r1, [pc, #40]	; (8006754 <_Z23getFont_verdana_20_4bppv+0x68>)
 800672c:	480a      	ldr	r0, [pc, #40]	; (8006758 <_Z23getFont_verdana_20_4bppv+0x6c>)
 800672e:	f7ff ff0b 	bl	8006548 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 8006732:	4b05      	ldr	r3, [pc, #20]	; (8006748 <_Z23getFont_verdana_20_4bppv+0x5c>)
 8006734:	2201      	movs	r2, #1
 8006736:	601a      	str	r2, [r3, #0]
 8006738:	4808      	ldr	r0, [pc, #32]	; (800675c <_Z23getFont_verdana_20_4bppv+0x70>)
 800673a:	f014 fff7 	bl	801b72c <atexit>
    return verdana_20_4bpp;
 800673e:	4b06      	ldr	r3, [pc, #24]	; (8006758 <_Z23getFont_verdana_20_4bppv+0x6c>)
}
 8006740:	4618      	mov	r0, r3
 8006742:	46bd      	mov	sp, r7
 8006744:	bd80      	pop	{r7, pc}
 8006746:	bf00      	nop
 8006748:	20000174 	.word	0x20000174
 800674c:	08020144 	.word	0x08020144
 8006750:	0801cb7c 	.word	0x0801cb7c
 8006754:	0802015c 	.word	0x0802015c
 8006758:	20000150 	.word	0x20000150
 800675c:	080066dd 	.word	0x080066dd

08006760 <__tcf_0>:
extern const touchgfx::KerningNode kerning_verdana_40_4bpp[];
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8006760:	b580      	push	{r7, lr}
 8006762:	af00      	add	r7, sp, #0
 8006764:	4801      	ldr	r0, [pc, #4]	; (800676c <__tcf_0+0xc>)
 8006766:	f7ff fea9 	bl	80064bc <_ZN8touchgfx13GeneratedFontD1Ev>
 800676a:	bd80      	pop	{r7, pc}
 800676c:	20000178 	.word	0x20000178

08006770 <_Z23getFont_verdana_40_4bppv>:
{
 8006770:	b580      	push	{r7, lr}
 8006772:	b08a      	sub	sp, #40	; 0x28
 8006774:	af0a      	add	r7, sp, #40	; 0x28
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0);
 8006776:	4b15      	ldr	r3, [pc, #84]	; (80067cc <_Z23getFont_verdana_40_4bppv+0x5c>)
 8006778:	681b      	ldr	r3, [r3, #0]
 800677a:	f003 0301 	and.w	r3, r3, #1
 800677e:	2b00      	cmp	r3, #0
 8006780:	d11f      	bne.n	80067c2 <_Z23getFont_verdana_40_4bppv+0x52>
 8006782:	2300      	movs	r3, #0
 8006784:	9309      	str	r3, [sp, #36]	; 0x24
 8006786:	2300      	movs	r3, #0
 8006788:	9308      	str	r3, [sp, #32]
 800678a:	233f      	movs	r3, #63	; 0x3f
 800678c:	9307      	str	r3, [sp, #28]
 800678e:	4b10      	ldr	r3, [pc, #64]	; (80067d0 <_Z23getFont_verdana_40_4bppv+0x60>)
 8006790:	9306      	str	r3, [sp, #24]
 8006792:	4b10      	ldr	r3, [pc, #64]	; (80067d4 <_Z23getFont_verdana_40_4bppv+0x64>)
 8006794:	9305      	str	r3, [sp, #20]
 8006796:	2300      	movs	r3, #0
 8006798:	9304      	str	r3, [sp, #16]
 800679a:	2300      	movs	r3, #0
 800679c:	9303      	str	r3, [sp, #12]
 800679e:	2301      	movs	r3, #1
 80067a0:	9302      	str	r3, [sp, #8]
 80067a2:	2304      	movs	r3, #4
 80067a4:	9301      	str	r3, [sp, #4]
 80067a6:	2300      	movs	r3, #0
 80067a8:	9300      	str	r3, [sp, #0]
 80067aa:	2328      	movs	r3, #40	; 0x28
 80067ac:	2201      	movs	r2, #1
 80067ae:	490a      	ldr	r1, [pc, #40]	; (80067d8 <_Z23getFont_verdana_40_4bppv+0x68>)
 80067b0:	480a      	ldr	r0, [pc, #40]	; (80067dc <_Z23getFont_verdana_40_4bppv+0x6c>)
 80067b2:	f7ff fec9 	bl	8006548 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKt>
 80067b6:	4b05      	ldr	r3, [pc, #20]	; (80067cc <_Z23getFont_verdana_40_4bppv+0x5c>)
 80067b8:	2201      	movs	r2, #1
 80067ba:	601a      	str	r2, [r3, #0]
 80067bc:	4808      	ldr	r0, [pc, #32]	; (80067e0 <_Z23getFont_verdana_40_4bppv+0x70>)
 80067be:	f014 ffb5 	bl	801b72c <atexit>
    return verdana_40_4bpp;
 80067c2:	4b06      	ldr	r3, [pc, #24]	; (80067dc <_Z23getFont_verdana_40_4bppv+0x6c>)
}
 80067c4:	4618      	mov	r0, r3
 80067c6:	46bd      	mov	sp, r7
 80067c8:	bd80      	pop	{r7, pc}
 80067ca:	bf00      	nop
 80067cc:	2000019c 	.word	0x2000019c
 80067d0:	08020148 	.word	0x08020148
 80067d4:	0801cb80 	.word	0x0801cb80
 80067d8:	0802016c 	.word	0x0802016c
 80067dc:	20000178 	.word	0x20000178
 80067e0:	08006761 	.word	0x08006761

080067e4 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 80067e4:	b480      	push	{r7}
 80067e6:	b083      	sub	sp, #12
 80067e8:	af00      	add	r7, sp, #0
 80067ea:	6078      	str	r0, [r7, #4]
 80067ec:	6039      	str	r1, [r7, #0]
 80067ee:	683b      	ldr	r3, [r7, #0]
 80067f0:	4618      	mov	r0, r3
 80067f2:	370c      	adds	r7, #12
 80067f4:	46bd      	mov	sp, r7
 80067f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80067fa:	4770      	bx	lr

080067fc <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     *        This handler is invoked when a mouse click or display touch event has been
     *        detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 80067fc:	b480      	push	{r7}
 80067fe:	b083      	sub	sp, #12
 8006800:	af00      	add	r7, sp, #0
 8006802:	6078      	str	r0, [r7, #4]
 8006804:	6039      	str	r1, [r7, #0]
    {
    }
 8006806:	bf00      	nop
 8006808:	370c      	adds	r7, #12
 800680a:	46bd      	mov	sp, r7
 800680c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006810:	4770      	bx	lr

08006812 <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
     *
     *        This handler is invoked when a drag event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8006812:	b480      	push	{r7}
 8006814:	b083      	sub	sp, #12
 8006816:	af00      	add	r7, sp, #0
 8006818:	6078      	str	r0, [r7, #4]
 800681a:	6039      	str	r1, [r7, #0]
    {
    }
 800681c:	bf00      	nop
 800681e:	370c      	adds	r7, #12
 8006820:	46bd      	mov	sp, r7
 8006822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006826:	4770      	bx	lr

08006828 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
     *
     *        This handler is invoked when a gesture event has been detected by the system.
     *
     * @param event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8006828:	b480      	push	{r7}
 800682a:	b083      	sub	sp, #12
 800682c:	af00      	add	r7, sp, #0
 800682e:	6078      	str	r0, [r7, #4]
 8006830:	6039      	str	r1, [r7, #0]
    {
    }
 8006832:	bf00      	nop
 8006834:	370c      	adds	r7, #12
 8006836:	46bd      	mov	sp, r7
 8006838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800683c:	4770      	bx	lr

0800683e <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
     *        This handler is invoked when a key (or button) event has been detected by the
     *        system.
     *
     * @param c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800683e:	b480      	push	{r7}
 8006840:	b083      	sub	sp, #12
 8006842:	af00      	add	r7, sp, #0
 8006844:	6078      	str	r0, [r7, #4]
 8006846:	460b      	mov	r3, r1
 8006848:	70fb      	strb	r3, [r7, #3]
    {
    }
 800684a:	bf00      	nop
 800684c:	370c      	adds	r7, #12
 800684e:	46bd      	mov	sp, r7
 8006850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006854:	4770      	bx	lr

08006856 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:
     * @brief This handler is invoked when a system tick event has been generated.
     *
     *        This handler is invoked when a system tick event has been generated. The system
     *        tick period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8006856:	b480      	push	{r7}
 8006858:	b083      	sub	sp, #12
 800685a:	af00      	add	r7, sp, #0
 800685c:	6078      	str	r0, [r7, #4]
    {
    }
 800685e:	bf00      	nop
 8006860:	370c      	adds	r7, #12
 8006862:	46bd      	mov	sp, r7
 8006864:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006868:	4770      	bx	lr

0800686a <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:
     *
     * @brief This handler is invoked when a change screen event is pending.
     *
     *        This handler is invoked when a change screen event is pending.
     */
    virtual void handlePendingScreenTransition()
 800686a:	b480      	push	{r7}
 800686c:	b083      	sub	sp, #12
 800686e:	af00      	add	r7, sp, #0
 8006870:	6078      	str	r0, [r7, #4]
    {
    }
 8006872:	bf00      	nop
 8006874:	370c      	adds	r7, #12
 8006876:	46bd      	mov	sp, r7
 8006878:	f85d 7b04 	ldr.w	r7, [sp], #4
 800687c:	4770      	bx	lr
	...

08006880 <_ZN8touchgfx15UIEventListenerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~UIEventListener()
 8006880:	b480      	push	{r7}
 8006882:	b083      	sub	sp, #12
 8006884:	af00      	add	r7, sp, #0
 8006886:	6078      	str	r0, [r7, #4]
    {
 8006888:	4a04      	ldr	r2, [pc, #16]	; (800689c <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 800688a:	687b      	ldr	r3, [r7, #4]
 800688c:	601a      	str	r2, [r3, #0]
    }
 800688e:	687b      	ldr	r3, [r7, #4]
 8006890:	4618      	mov	r0, r3
 8006892:	370c      	adds	r7, #12
 8006894:	46bd      	mov	sp, r7
 8006896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800689a:	4770      	bx	lr
 800689c:	0801cc74 	.word	0x0801cc74

080068a0 <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 80068a0:	b580      	push	{r7, lr}
 80068a2:	b082      	sub	sp, #8
 80068a4:	af00      	add	r7, sp, #0
 80068a6:	6078      	str	r0, [r7, #4]
    }
 80068a8:	6878      	ldr	r0, [r7, #4]
 80068aa:	f7ff ffe9 	bl	8006880 <_ZN8touchgfx15UIEventListenerD1Ev>
 80068ae:	2104      	movs	r1, #4
 80068b0:	6878      	ldr	r0, [r7, #4]
 80068b2:	f014 f923 	bl	801aafc <_ZdlPvj>
 80068b6:	687b      	ldr	r3, [r7, #4]
 80068b8:	4618      	mov	r0, r3
 80068ba:	3708      	adds	r7, #8
 80068bc:	46bd      	mov	sp, r7
 80068be:	bd80      	pop	{r7, pc}

080068c0 <_ZN8touchgfx10TransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs the Transition.
     */
    Transition() :
 80068c0:	b480      	push	{r7}
 80068c2:	b083      	sub	sp, #12
 80068c4:	af00      	add	r7, sp, #0
 80068c6:	6078      	str	r0, [r7, #4]
        screenContainer(0), done(false)
 80068c8:	4a07      	ldr	r2, [pc, #28]	; (80068e8 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80068ca:	687b      	ldr	r3, [r7, #4]
 80068cc:	601a      	str	r2, [r3, #0]
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	2200      	movs	r2, #0
 80068d2:	605a      	str	r2, [r3, #4]
 80068d4:	687b      	ldr	r3, [r7, #4]
 80068d6:	2200      	movs	r2, #0
 80068d8:	721a      	strb	r2, [r3, #8]
    {
    }
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	4618      	mov	r0, r3
 80068de:	370c      	adds	r7, #12
 80068e0:	46bd      	mov	sp, r7
 80068e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80068e6:	4770      	bx	lr
 80068e8:	0801cc54 	.word	0x0801cc54

080068ec <_ZN8touchgfx10TransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Transition()
 80068ec:	b480      	push	{r7}
 80068ee:	b083      	sub	sp, #12
 80068f0:	af00      	add	r7, sp, #0
 80068f2:	6078      	str	r0, [r7, #4]
    {
 80068f4:	4a04      	ldr	r2, [pc, #16]	; (8006908 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 80068f6:	687b      	ldr	r3, [r7, #4]
 80068f8:	601a      	str	r2, [r3, #0]
    }
 80068fa:	687b      	ldr	r3, [r7, #4]
 80068fc:	4618      	mov	r0, r3
 80068fe:	370c      	adds	r7, #12
 8006900:	46bd      	mov	sp, r7
 8006902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006906:	4770      	bx	lr
 8006908:	0801cc54 	.word	0x0801cc54

0800690c <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 800690c:	b580      	push	{r7, lr}
 800690e:	b082      	sub	sp, #8
 8006910:	af00      	add	r7, sp, #0
 8006912:	6078      	str	r0, [r7, #4]
    }
 8006914:	6878      	ldr	r0, [r7, #4]
 8006916:	f7ff ffe9 	bl	80068ec <_ZN8touchgfx10TransitionD1Ev>
 800691a:	210c      	movs	r1, #12
 800691c:	6878      	ldr	r0, [r7, #4]
 800691e:	f014 f8ed 	bl	801aafc <_ZdlPvj>
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	4618      	mov	r0, r3
 8006926:	3708      	adds	r7, #8
 8006928:	46bd      	mov	sp, r7
 800692a:	bd80      	pop	{r7, pc}

0800692c <_ZN8touchgfx10Transition15handleTickEventEv>:
     *
     * @brief Called for every tick when transitioning.
     *
     *        Called for every tick when transitioning. Base does nothing.
     */
    virtual void handleTickEvent() { }
 800692c:	b480      	push	{r7}
 800692e:	b083      	sub	sp, #12
 8006930:	af00      	add	r7, sp, #0
 8006932:	6078      	str	r0, [r7, #4]
 8006934:	bf00      	nop
 8006936:	370c      	adds	r7, #12
 8006938:	46bd      	mov	sp, r7
 800693a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800693e:	4770      	bx	lr

08006940 <_ZN8touchgfx10Transition8tearDownEv>:
     * @brief Tears down the Animation.
     *
     *        Tears down the Animation. Called before the d.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void tearDown() { }
 8006940:	b480      	push	{r7}
 8006942:	b083      	sub	sp, #12
 8006944:	af00      	add	r7, sp, #0
 8006946:	6078      	str	r0, [r7, #4]
 8006948:	bf00      	nop
 800694a:	370c      	adds	r7, #12
 800694c:	46bd      	mov	sp, r7
 800694e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006952:	4770      	bx	lr

08006954 <_ZN8touchgfx10Transition4initEv>:
     * @brief Initializes the transition.
     *
     *        Initializes the transition. Called after the c.tor. when the application changes
     *        the transition. Base version does nothing.
     */
    virtual void init() { }
 8006954:	b480      	push	{r7}
 8006956:	b083      	sub	sp, #12
 8006958:	af00      	add	r7, sp, #0
 800695a:	6078      	str	r0, [r7, #4]
 800695c:	bf00      	nop
 800695e:	370c      	adds	r7, #12
 8006960:	46bd      	mov	sp, r7
 8006962:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006966:	4770      	bx	lr

08006968 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *        Sets the screen container. Is used by Screen to enable the transition to access
     *        the container.
     *
     * @param [in] cont The container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 8006968:	b480      	push	{r7}
 800696a:	b083      	sub	sp, #12
 800696c:	af00      	add	r7, sp, #0
 800696e:	6078      	str	r0, [r7, #4]
 8006970:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 8006972:	687b      	ldr	r3, [r7, #4]
 8006974:	683a      	ldr	r2, [r7, #0]
 8006976:	605a      	str	r2, [r3, #4]
    }
 8006978:	bf00      	nop
 800697a:	370c      	adds	r7, #12
 800697c:	46bd      	mov	sp, r7
 800697e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006982:	4770      	bx	lr

08006984 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *        provide a means to switch screen from places that does not have access to a
     *        pointer to the new screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8006984:	b480      	push	{r7}
 8006986:	b083      	sub	sp, #12
 8006988:	af00      	add	r7, sp, #0
 800698a:	6078      	str	r0, [r7, #4]
 800698c:	460b      	mov	r3, r1
 800698e:	70fb      	strb	r3, [r7, #3]
    {
    }
 8006990:	bf00      	nop
 8006992:	370c      	adds	r7, #12
 8006994:	46bd      	mov	sp, r7
 8006996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800699a:	4770      	bx	lr

0800699c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
     *
     * @brief Destructor.
     *
     *        Empty virtual destructor.
     */
    virtual ~GenericCallback()
 800699c:	b480      	push	{r7}
 800699e:	b083      	sub	sp, #12
 80069a0:	af00      	add	r7, sp, #0
 80069a2:	6078      	str	r0, [r7, #4]
    {
 80069a4:	4a04      	ldr	r2, [pc, #16]	; (80069b8 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 80069a6:	687b      	ldr	r3, [r7, #4]
 80069a8:	601a      	str	r2, [r3, #0]
    }
 80069aa:	687b      	ldr	r3, [r7, #4]
 80069ac:	4618      	mov	r0, r3
 80069ae:	370c      	adds	r7, #12
 80069b0:	46bd      	mov	sp, r7
 80069b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069b6:	4770      	bx	lr
 80069b8:	0801cc3c 	.word	0x0801cc3c

080069bc <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 80069bc:	b580      	push	{r7, lr}
 80069be:	b082      	sub	sp, #8
 80069c0:	af00      	add	r7, sp, #0
 80069c2:	6078      	str	r0, [r7, #4]
    }
 80069c4:	6878      	ldr	r0, [r7, #4]
 80069c6:	f7ff ffe9 	bl	800699c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 80069ca:	2104      	movs	r1, #4
 80069cc:	6878      	ldr	r0, [r7, #4]
 80069ce:	f014 f895 	bl	801aafc <_ZdlPvj>
 80069d2:	687b      	ldr	r3, [r7, #4]
 80069d4:	4618      	mov	r0, r3
 80069d6:	3708      	adds	r7, #8
 80069d8:	46bd      	mov	sp, r7
 80069da:	bd80      	pop	{r7, pc}

080069dc <_ZN8touchgfx3HAL11getInstanceEv>:
     *
     *        Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 80069dc:	b480      	push	{r7}
 80069de:	af00      	add	r7, sp, #0
    {
        return instance;
 80069e0:	4b03      	ldr	r3, [pc, #12]	; (80069f0 <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 80069e2:	681b      	ldr	r3, [r3, #0]
    }
 80069e4:	4618      	mov	r0, r3
 80069e6:	46bd      	mov	sp, r7
 80069e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80069ec:	4770      	bx	lr
 80069ee:	bf00      	nop
 80069f0:	2000143c 	.word	0x2000143c

080069f4 <_ZN8touchgfx3HAL3lcdEv>:
     *
     *        Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80069f4:	b480      	push	{r7}
 80069f6:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80069f8:	4b0b      	ldr	r3, [pc, #44]	; (8006a28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	f893 3076 	ldrb.w	r3, [r3, #118]	; 0x76
 8006a00:	2b00      	cmp	r3, #0
 8006a02:	d008      	beq.n	8006a16 <_ZN8touchgfx3HAL3lcdEv+0x22>
 8006a04:	4b08      	ldr	r3, [pc, #32]	; (8006a28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8006a06:	681b      	ldr	r3, [r3, #0]
 8006a08:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a0a:	2b00      	cmp	r3, #0
 8006a0c:	d003      	beq.n	8006a16 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 8006a0e:	4b06      	ldr	r3, [pc, #24]	; (8006a28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8006a14:	e002      	b.n	8006a1c <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        else
        {
            return instance->lcdRef;
 8006a16:	4b04      	ldr	r3, [pc, #16]	; (8006a28 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	689b      	ldr	r3, [r3, #8]
        }
    }
 8006a1c:	4618      	mov	r0, r3
 8006a1e:	46bd      	mov	sp, r7
 8006a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006a24:	4770      	bx	lr
 8006a26:	bf00      	nop
 8006a28:	2000143c 	.word	0x2000143c

08006a2c <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 8006a2c:	b580      	push	{r7, lr}
 8006a2e:	b082      	sub	sp, #8
 8006a30:	af00      	add	r7, sp, #0
 8006a32:	6078      	str	r0, [r7, #4]
 8006a34:	4a05      	ldr	r2, [pc, #20]	; (8006a4c <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	601a      	str	r2, [r3, #0]
 8006a3a:	687b      	ldr	r3, [r7, #4]
 8006a3c:	4618      	mov	r0, r3
 8006a3e:	f7ff ff1f 	bl	8006880 <_ZN8touchgfx15UIEventListenerD1Ev>
 8006a42:	687b      	ldr	r3, [r7, #4]
 8006a44:	4618      	mov	r0, r3
 8006a46:	3708      	adds	r7, #8
 8006a48:	46bd      	mov	sp, r7
 8006a4a:	bd80      	pop	{r7, pc}
 8006a4c:	0801e3bc 	.word	0x0801e3bc

08006a50 <_ZN8touchgfx11ApplicationD0Ev>:
 8006a50:	b580      	push	{r7, lr}
 8006a52:	b082      	sub	sp, #8
 8006a54:	af00      	add	r7, sp, #0
 8006a56:	6078      	str	r0, [r7, #4]
 8006a58:	6878      	ldr	r0, [r7, #4]
 8006a5a:	f7ff ffe7 	bl	8006a2c <_ZN8touchgfx11ApplicationD1Ev>
 8006a5e:	f44f 7198 	mov.w	r1, #304	; 0x130
 8006a62:	6878      	ldr	r0, [r7, #4]
 8006a64:	f014 f84a 	bl	801aafc <_ZdlPvj>
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	4618      	mov	r0, r3
 8006a6c:	3708      	adds	r7, #8
 8006a6e:	46bd      	mov	sp, r7
 8006a70:	bd80      	pop	{r7, pc}
	...

08006a74 <_ZN8touchgfx14MVPApplicationC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    MVPApplication() :
 8006a74:	b580      	push	{r7, lr}
 8006a76:	b082      	sub	sp, #8
 8006a78:	af00      	add	r7, sp, #0
 8006a7a:	6078      	str	r0, [r7, #4]
        currentPresenter(0),
        pendingScreenTransitionCallback(0)
 8006a7c:	687b      	ldr	r3, [r7, #4]
 8006a7e:	4618      	mov	r0, r3
 8006a80:	f006 fa7e 	bl	800cf80 <_ZN8touchgfx11ApplicationC1Ev>
 8006a84:	4a09      	ldr	r2, [pc, #36]	; (8006aac <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8006a86:	687b      	ldr	r3, [r7, #4]
 8006a88:	601a      	str	r2, [r3, #0]
 8006a8a:	687b      	ldr	r3, [r7, #4]
 8006a8c:	2200      	movs	r2, #0
 8006a8e:	f8c3 2130 	str.w	r2, [r3, #304]	; 0x130
 8006a92:	687b      	ldr	r3, [r7, #4]
 8006a94:	2200      	movs	r2, #0
 8006a96:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
    {
        instance = this;
 8006a9a:	687b      	ldr	r3, [r7, #4]
 8006a9c:	4a04      	ldr	r2, [pc, #16]	; (8006ab0 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 8006a9e:	6013      	str	r3, [r2, #0]
    }
 8006aa0:	687b      	ldr	r3, [r7, #4]
 8006aa2:	4618      	mov	r0, r3
 8006aa4:	3708      	adds	r7, #8
 8006aa6:	46bd      	mov	sp, r7
 8006aa8:	bd80      	pop	{r7, pc}
 8006aaa:	bf00      	nop
 8006aac:	0801cc00 	.word	0x0801cc00
 8006ab0:	200014a8 	.word	0x200014a8

08006ab4 <_ZN8touchgfx14MVPApplicationD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPApplication() { }
 8006ab4:	b580      	push	{r7, lr}
 8006ab6:	b082      	sub	sp, #8
 8006ab8:	af00      	add	r7, sp, #0
 8006aba:	6078      	str	r0, [r7, #4]
 8006abc:	4a05      	ldr	r2, [pc, #20]	; (8006ad4 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 8006abe:	687b      	ldr	r3, [r7, #4]
 8006ac0:	601a      	str	r2, [r3, #0]
 8006ac2:	687b      	ldr	r3, [r7, #4]
 8006ac4:	4618      	mov	r0, r3
 8006ac6:	f7ff ffb1 	bl	8006a2c <_ZN8touchgfx11ApplicationD1Ev>
 8006aca:	687b      	ldr	r3, [r7, #4]
 8006acc:	4618      	mov	r0, r3
 8006ace:	3708      	adds	r7, #8
 8006ad0:	46bd      	mov	sp, r7
 8006ad2:	bd80      	pop	{r7, pc}
 8006ad4:	0801cc00 	.word	0x0801cc00

08006ad8 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8006ad8:	b580      	push	{r7, lr}
 8006ada:	b082      	sub	sp, #8
 8006adc:	af00      	add	r7, sp, #0
 8006ade:	6078      	str	r0, [r7, #4]
 8006ae0:	6878      	ldr	r0, [r7, #4]
 8006ae2:	f7ff ffe7 	bl	8006ab4 <_ZN8touchgfx14MVPApplicationD1Ev>
 8006ae6:	f44f 719c 	mov.w	r1, #312	; 0x138
 8006aea:	6878      	ldr	r0, [r7, #4]
 8006aec:	f014 f806 	bl	801aafc <_ZdlPvj>
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	4618      	mov	r0, r3
 8006af4:	3708      	adds	r7, #8
 8006af6:	46bd      	mov	sp, r7
 8006af8:	bd80      	pop	{r7, pc}

08006afa <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
     *
     * @brief Handles the pending screen transition.
     *
     *        Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8006afa:	b580      	push	{r7, lr}
 8006afc:	b082      	sub	sp, #8
 8006afe:	af00      	add	r7, sp, #0
 8006b00:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 8006b02:	6878      	ldr	r0, [r7, #4]
 8006b04:	f000 f804 	bl	8006b10 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8006b08:	bf00      	nop
 8006b0a:	3708      	adds	r7, #8
 8006b0c:	46bd      	mov	sp, r7
 8006b0e:	bd80      	pop	{r7, pc}

08006b10 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:
     * @brief Evaluates the pending Callback instances.
     *
     *        Evaluates the pending Callback instances. If a callback is valid, it is executed
     *        and a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 8006b10:	b580      	push	{r7, lr}
 8006b12:	b082      	sub	sp, #8
 8006b14:	af00      	add	r7, sp, #0
 8006b16:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8006b18:	687b      	ldr	r3, [r7, #4]
 8006b1a:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8006b1e:	2b00      	cmp	r3, #0
 8006b20:	d00f      	beq.n	8006b42 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8006b28:	687b      	ldr	r3, [r7, #4]
 8006b2a:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8006b2e:	681b      	ldr	r3, [r3, #0]
 8006b30:	330c      	adds	r3, #12
 8006b32:	681b      	ldr	r3, [r3, #0]
 8006b34:	4610      	mov	r0, r2
 8006b36:	4798      	blx	r3
 8006b38:	4603      	mov	r3, r0
 8006b3a:	2b00      	cmp	r3, #0
 8006b3c:	d001      	beq.n	8006b42 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8006b3e:	2301      	movs	r3, #1
 8006b40:	e000      	b.n	8006b44 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 8006b42:	2300      	movs	r3, #0
 8006b44:	2b00      	cmp	r3, #0
 8006b46:	d00e      	beq.n	8006b66 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 8006b48:	687b      	ldr	r3, [r7, #4]
 8006b4a:	f8d3 2134 	ldr.w	r2, [r3, #308]	; 0x134
 8006b4e:	687b      	ldr	r3, [r7, #4]
 8006b50:	f8d3 3134 	ldr.w	r3, [r3, #308]	; 0x134
 8006b54:	681b      	ldr	r3, [r3, #0]
 8006b56:	3308      	adds	r3, #8
 8006b58:	681b      	ldr	r3, [r3, #0]
 8006b5a:	4610      	mov	r0, r2
 8006b5c:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8006b5e:	687b      	ldr	r3, [r7, #4]
 8006b60:	2200      	movs	r2, #0
 8006b62:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
        }
    }
 8006b66:	bf00      	nop
 8006b68:	3708      	adds	r7, #8
 8006b6a:	46bd      	mov	sp, r7
 8006b6c:	bd80      	pop	{r7, pc}

08006b6e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>:
 * @param [in] currentScreen    If non-null, the current screen.
 * @param [in] currentPresenter If non-null, the current presenter.
 * @param [in] currentTrans     If non-null, the current transaction.
 */
static inline void prepareTransition(Screen** currentScreen, Presenter** currentPresenter, Transition** currentTrans)
{
 8006b6e:	b580      	push	{r7, lr}
 8006b70:	b084      	sub	sp, #16
 8006b72:	af00      	add	r7, sp, #0
 8006b74:	60f8      	str	r0, [r7, #12]
 8006b76:	60b9      	str	r1, [r7, #8]
 8006b78:	607a      	str	r2, [r7, #4]
    Application::getInstance()->clearAllTimerWidgets();
 8006b7a:	f006 f999 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 8006b7e:	4603      	mov	r3, r0
 8006b80:	4618      	mov	r0, r3
 8006b82:	f006 f9e3 	bl	800cf4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>

    if (*currentTrans)
 8006b86:	687b      	ldr	r3, [r7, #4]
 8006b88:	681b      	ldr	r3, [r3, #0]
 8006b8a:	2b00      	cmp	r3, #0
 8006b8c:	d008      	beq.n	8006ba0 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x32>
    {
        (*currentTrans)->tearDown();
 8006b8e:	687b      	ldr	r3, [r7, #4]
 8006b90:	681a      	ldr	r2, [r3, #0]
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	681b      	ldr	r3, [r3, #0]
 8006b96:	681b      	ldr	r3, [r3, #0]
 8006b98:	330c      	adds	r3, #12
 8006b9a:	681b      	ldr	r3, [r3, #0]
 8006b9c:	4610      	mov	r0, r2
 8006b9e:	4798      	blx	r3
    }
    if (*currentTrans)
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	2b00      	cmp	r3, #0
 8006ba6:	d007      	beq.n	8006bb8 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x4a>
    {
        (*currentTrans)->~Transition();
 8006ba8:	687b      	ldr	r3, [r7, #4]
 8006baa:	681a      	ldr	r2, [r3, #0]
 8006bac:	687b      	ldr	r3, [r7, #4]
 8006bae:	681b      	ldr	r3, [r3, #0]
 8006bb0:	681b      	ldr	r3, [r3, #0]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	4610      	mov	r0, r2
 8006bb6:	4798      	blx	r3
    }
    if (*currentScreen)
 8006bb8:	68fb      	ldr	r3, [r7, #12]
 8006bba:	681b      	ldr	r3, [r3, #0]
 8006bbc:	2b00      	cmp	r3, #0
 8006bbe:	d008      	beq.n	8006bd2 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x64>
    {
        (*currentScreen)->tearDownScreen();
 8006bc0:	68fb      	ldr	r3, [r7, #12]
 8006bc2:	681a      	ldr	r2, [r3, #0]
 8006bc4:	68fb      	ldr	r3, [r7, #12]
 8006bc6:	681b      	ldr	r3, [r3, #0]
 8006bc8:	681b      	ldr	r3, [r3, #0]
 8006bca:	3314      	adds	r3, #20
 8006bcc:	681b      	ldr	r3, [r3, #0]
 8006bce:	4610      	mov	r0, r2
 8006bd0:	4798      	blx	r3
    }
    if (*currentPresenter)
 8006bd2:	68bb      	ldr	r3, [r7, #8]
 8006bd4:	681b      	ldr	r3, [r3, #0]
 8006bd6:	2b00      	cmp	r3, #0
 8006bd8:	d008      	beq.n	8006bec <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x7e>
    {
        (*currentPresenter)->deactivate();
 8006bda:	68bb      	ldr	r3, [r7, #8]
 8006bdc:	681a      	ldr	r2, [r3, #0]
 8006bde:	68bb      	ldr	r3, [r7, #8]
 8006be0:	681b      	ldr	r3, [r3, #0]
 8006be2:	681b      	ldr	r3, [r3, #0]
 8006be4:	3304      	adds	r3, #4
 8006be6:	681b      	ldr	r3, [r3, #0]
 8006be8:	4610      	mov	r0, r2
 8006bea:	4798      	blx	r3
    }
    if (*currentScreen)
 8006bec:	68fb      	ldr	r3, [r7, #12]
 8006bee:	681b      	ldr	r3, [r3, #0]
 8006bf0:	2b00      	cmp	r3, #0
 8006bf2:	d007      	beq.n	8006c04 <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0x96>
    {
        (*currentScreen)->~Screen();
 8006bf4:	68fb      	ldr	r3, [r7, #12]
 8006bf6:	681a      	ldr	r2, [r3, #0]
 8006bf8:	68fb      	ldr	r3, [r7, #12]
 8006bfa:	681b      	ldr	r3, [r3, #0]
 8006bfc:	681b      	ldr	r3, [r3, #0]
 8006bfe:	681b      	ldr	r3, [r3, #0]
 8006c00:	4610      	mov	r0, r2
 8006c02:	4798      	blx	r3
    }
    if (*currentPresenter)
 8006c04:	68bb      	ldr	r3, [r7, #8]
 8006c06:	681b      	ldr	r3, [r3, #0]
 8006c08:	2b00      	cmp	r3, #0
 8006c0a:	d008      	beq.n	8006c1e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE+0xb0>
    {
        (*currentPresenter)->~Presenter();
 8006c0c:	68bb      	ldr	r3, [r7, #8]
 8006c0e:	681a      	ldr	r2, [r3, #0]
 8006c10:	68bb      	ldr	r3, [r7, #8]
 8006c12:	681b      	ldr	r3, [r3, #0]
 8006c14:	681b      	ldr	r3, [r3, #0]
 8006c16:	3308      	adds	r3, #8
 8006c18:	681b      	ldr	r3, [r3, #0]
 8006c1a:	4610      	mov	r0, r2
 8006c1c:	4798      	blx	r3
    }
}
 8006c1e:	bf00      	nop
 8006c20:	3710      	adds	r7, #16
 8006c22:	46bd      	mov	sp, r7
 8006c24:	bd80      	pop	{r7, pc}

08006c26 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>:
 * @param [in] newScreen     If non-null, the new screen.
 * @param [in] newPresenter  If non-null, the new presenter.
 * @param [in] newTransition If non-null, the new transition.
 */
static inline void finalizeTransition(Screen* newScreen, Presenter* newPresenter, Transition* newTransition)
{
 8006c26:	b580      	push	{r7, lr}
 8006c28:	b084      	sub	sp, #16
 8006c2a:	af00      	add	r7, sp, #0
 8006c2c:	60f8      	str	r0, [r7, #12]
 8006c2e:	60b9      	str	r1, [r7, #8]
 8006c30:	607a      	str	r2, [r7, #4]
    newScreen->setupScreen();
 8006c32:	68fb      	ldr	r3, [r7, #12]
 8006c34:	681b      	ldr	r3, [r3, #0]
 8006c36:	330c      	adds	r3, #12
 8006c38:	681b      	ldr	r3, [r3, #0]
 8006c3a:	68f8      	ldr	r0, [r7, #12]
 8006c3c:	4798      	blx	r3
    newPresenter->activate();
 8006c3e:	68bb      	ldr	r3, [r7, #8]
 8006c40:	681b      	ldr	r3, [r3, #0]
 8006c42:	681b      	ldr	r3, [r3, #0]
 8006c44:	68b8      	ldr	r0, [r7, #8]
 8006c46:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8006c48:	6879      	ldr	r1, [r7, #4]
 8006c4a:	68f8      	ldr	r0, [r7, #12]
 8006c4c:	f007 fa44 	bl	800e0d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8006c50:	687b      	ldr	r3, [r7, #4]
 8006c52:	681b      	ldr	r3, [r3, #0]
 8006c54:	3310      	adds	r3, #16
 8006c56:	681b      	ldr	r3, [r3, #0]
 8006c58:	6878      	ldr	r0, [r7, #4]
 8006c5a:	4798      	blx	r3

    Application::getInstance()->draw();
 8006c5c:	f006 f928 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 8006c60:	4602      	mov	r2, r0
 8006c62:	6813      	ldr	r3, [r2, #0]
 8006c64:	3328      	adds	r3, #40	; 0x28
 8006c66:	681b      	ldr	r3, [r3, #0]
 8006c68:	4610      	mov	r0, r2
 8006c6a:	4798      	blx	r3
}
 8006c6c:	bf00      	nop
 8006c6e:	3710      	adds	r7, #16
 8006c70:	46bd      	mov	sp, r7
 8006c72:	bd80      	pop	{r7, pc}

08006c74 <_ZN5Model4bindEP13ModelListener>:
class Model
{
public:
    Model();

    void bind(ModelListener* listener)
 8006c74:	b480      	push	{r7}
 8006c76:	b083      	sub	sp, #12
 8006c78:	af00      	add	r7, sp, #0
 8006c7a:	6078      	str	r0, [r7, #4]
 8006c7c:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 8006c7e:	687b      	ldr	r3, [r7, #4]
 8006c80:	683a      	ldr	r2, [r7, #0]
 8006c82:	601a      	str	r2, [r3, #0]
    }
 8006c84:	bf00      	nop
 8006c86:	370c      	adds	r7, #12
 8006c88:	46bd      	mov	sp, r7
 8006c8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c8e:	4770      	bx	lr

08006c90 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8006c90:	b580      	push	{r7, lr}
 8006c92:	b082      	sub	sp, #8
 8006c94:	af00      	add	r7, sp, #0
 8006c96:	6078      	str	r0, [r7, #4]
 8006c98:	4a08      	ldr	r2, [pc, #32]	; (8006cbc <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8006c9a:	687b      	ldr	r3, [r7, #4]
 8006c9c:	601a      	str	r2, [r3, #0]
 8006c9e:	687b      	ldr	r3, [r7, #4]
 8006ca0:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8006ca4:	4618      	mov	r0, r3
 8006ca6:	f000 fa5b 	bl	8007160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	4618      	mov	r0, r3
 8006cae:	f7ff ff01 	bl	8006ab4 <_ZN8touchgfx14MVPApplicationD1Ev>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	4618      	mov	r0, r3
 8006cb6:	3708      	adds	r7, #8
 8006cb8:	46bd      	mov	sp, r7
 8006cba:	bd80      	pop	{r7, pc}
 8006cbc:	0801cbac 	.word	0x0801cbac

08006cc0 <_ZN23FrontendApplicationBaseD0Ev>:
 8006cc0:	b580      	push	{r7, lr}
 8006cc2:	b082      	sub	sp, #8
 8006cc4:	af00      	add	r7, sp, #0
 8006cc6:	6078      	str	r0, [r7, #4]
 8006cc8:	6878      	ldr	r0, [r7, #4]
 8006cca:	f7ff ffe1 	bl	8006c90 <_ZN23FrontendApplicationBaseD1Ev>
 8006cce:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8006cd2:	6878      	ldr	r0, [r7, #4]
 8006cd4:	f013 ff12 	bl	801aafc <_ZdlPvj>
 8006cd8:	687b      	ldr	r3, [r7, #4]
 8006cda:	4618      	mov	r0, r3
 8006cdc:	3708      	adds	r7, #8
 8006cde:	46bd      	mov	sp, r7
 8006ce0:	bd80      	pop	{r7, pc}
	...

08006ce4 <_ZN8touchgfx12NoTransitionC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    NoTransition() : Transition() { }
 8006ce4:	b580      	push	{r7, lr}
 8006ce6:	b082      	sub	sp, #8
 8006ce8:	af00      	add	r7, sp, #0
 8006cea:	6078      	str	r0, [r7, #4]
 8006cec:	687b      	ldr	r3, [r7, #4]
 8006cee:	4618      	mov	r0, r3
 8006cf0:	f7ff fde6 	bl	80068c0 <_ZN8touchgfx10TransitionC1Ev>
 8006cf4:	4a03      	ldr	r2, [pc, #12]	; (8006d04 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8006cf6:	687b      	ldr	r3, [r7, #4]
 8006cf8:	601a      	str	r2, [r3, #0]
 8006cfa:	687b      	ldr	r3, [r7, #4]
 8006cfc:	4618      	mov	r0, r3
 8006cfe:	3708      	adds	r7, #8
 8006d00:	46bd      	mov	sp, r7
 8006d02:	bd80      	pop	{r7, pc}
 8006d04:	0801cb8c 	.word	0x0801cb8c

08006d08 <_ZN8touchgfx12NoTransitionD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~NoTransition() { }
 8006d08:	b580      	push	{r7, lr}
 8006d0a:	b082      	sub	sp, #8
 8006d0c:	af00      	add	r7, sp, #0
 8006d0e:	6078      	str	r0, [r7, #4]
 8006d10:	4a05      	ldr	r2, [pc, #20]	; (8006d28 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 8006d12:	687b      	ldr	r3, [r7, #4]
 8006d14:	601a      	str	r2, [r3, #0]
 8006d16:	687b      	ldr	r3, [r7, #4]
 8006d18:	4618      	mov	r0, r3
 8006d1a:	f7ff fde7 	bl	80068ec <_ZN8touchgfx10TransitionD1Ev>
 8006d1e:	687b      	ldr	r3, [r7, #4]
 8006d20:	4618      	mov	r0, r3
 8006d22:	3708      	adds	r7, #8
 8006d24:	46bd      	mov	sp, r7
 8006d26:	bd80      	pop	{r7, pc}
 8006d28:	0801cb8c 	.word	0x0801cb8c

08006d2c <_ZN8touchgfx12NoTransitionD0Ev>:
 8006d2c:	b580      	push	{r7, lr}
 8006d2e:	b082      	sub	sp, #8
 8006d30:	af00      	add	r7, sp, #0
 8006d32:	6078      	str	r0, [r7, #4]
 8006d34:	6878      	ldr	r0, [r7, #4]
 8006d36:	f7ff ffe7 	bl	8006d08 <_ZN8touchgfx12NoTransitionD1Ev>
 8006d3a:	210c      	movs	r1, #12
 8006d3c:	6878      	ldr	r0, [r7, #4]
 8006d3e:	f013 fedd 	bl	801aafc <_ZdlPvj>
 8006d42:	687b      	ldr	r3, [r7, #4]
 8006d44:	4618      	mov	r0, r3
 8006d46:	3708      	adds	r7, #8
 8006d48:	46bd      	mov	sp, r7
 8006d4a:	bd80      	pop	{r7, pc}

08006d4c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
     *
     * @brief Indicates that the transition is done after the first tick.
     *
     *        Indicates that the transition is done after the first tick.
     */
    virtual void handleTickEvent()
 8006d4c:	b480      	push	{r7}
 8006d4e:	b083      	sub	sp, #12
 8006d50:	af00      	add	r7, sp, #0
 8006d52:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8006d54:	687b      	ldr	r3, [r7, #4]
 8006d56:	2201      	movs	r2, #1
 8006d58:	721a      	strb	r2, [r3, #8]
    }
 8006d5a:	bf00      	nop
 8006d5c:	370c      	adds	r7, #12
 8006d5e:	46bd      	mov	sp, r7
 8006d60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d64:	4770      	bx	lr

08006d66 <_ZN13ModelListener4bindEP5Model>:
public:
    ModelListener() : model(0) {}
    
    virtual ~ModelListener() {}

    void bind(Model* m)
 8006d66:	b480      	push	{r7}
 8006d68:	b083      	sub	sp, #12
 8006d6a:	af00      	add	r7, sp, #0
 8006d6c:	6078      	str	r0, [r7, #4]
 8006d6e:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	683a      	ldr	r2, [r7, #0]
 8006d74:	605a      	str	r2, [r3, #4]
    }
 8006d76:	bf00      	nop
 8006d78:	370c      	adds	r7, #12
 8006d7a:	46bd      	mov	sp, r7
 8006d7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d80:	4770      	bx	lr
	...

08006d84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8006d84:	b580      	push	{r7, lr}
 8006d86:	b084      	sub	sp, #16
 8006d88:	af00      	add	r7, sp, #0
 8006d8a:	60f8      	str	r0, [r7, #12]
 8006d8c:	60b9      	str	r1, [r7, #8]
 8006d8e:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8006d90:	68fb      	ldr	r3, [r7, #12]
 8006d92:	4618      	mov	r0, r3
 8006d94:	f7ff fe6e 	bl	8006a74 <_ZN8touchgfx14MVPApplicationC1Ev>
 8006d98:	4a12      	ldr	r2, [pc, #72]	; (8006de4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x60>)
 8006d9a:	68fb      	ldr	r3, [r7, #12]
 8006d9c:	601a      	str	r2, [r3, #0]
 8006d9e:	68fb      	ldr	r3, [r7, #12]
 8006da0:	f503 739c 	add.w	r3, r3, #312	; 0x138
 8006da4:	4618      	mov	r0, r3
 8006da6:	f000 f89d 	bl	8006ee4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
 8006daa:	68fb      	ldr	r3, [r7, #12]
 8006dac:	687a      	ldr	r2, [r7, #4]
 8006dae:	f8c3 2148 	str.w	r2, [r3, #328]	; 0x148
 8006db2:	68fb      	ldr	r3, [r7, #12]
 8006db4:	68ba      	ldr	r2, [r7, #8]
 8006db6:	f8c3 214c 	str.w	r2, [r3, #332]	; 0x14c
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8006dba:	f7ff fe0f 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 8006dbe:	4602      	mov	r2, r0
 8006dc0:	6813      	ldr	r3, [r2, #0]
 8006dc2:	3308      	adds	r3, #8
 8006dc4:	681b      	ldr	r3, [r3, #0]
 8006dc6:	2100      	movs	r1, #0
 8006dc8:	4610      	mov	r0, r2
 8006dca:	4798      	blx	r3
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8006dcc:	f7ff fe12 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 8006dd0:	4603      	mov	r3, r0
 8006dd2:	4618      	mov	r0, r3
 8006dd4:	f00c fe2d 	bl	8013a32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8006dd8:	68fb      	ldr	r3, [r7, #12]
 8006dda:	4618      	mov	r0, r3
 8006ddc:	3710      	adds	r7, #16
 8006dde:	46bd      	mov	sp, r7
 8006de0:	bd80      	pop	{r7, pc}
 8006de2:	bf00      	nop
 8006de4:	0801cbac 	.word	0x0801cbac

08006de8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8006de8:	b480      	push	{r7}
 8006dea:	b083      	sub	sp, #12
 8006dec:	af00      	add	r7, sp, #0
 8006dee:	6078      	str	r0, [r7, #4]
 8006df0:	6039      	str	r1, [r7, #0]
 8006df2:	687b      	ldr	r3, [r7, #4]
 8006df4:	4618      	mov	r0, r3
 8006df6:	370c      	adds	r7, #12
 8006df8:	46bd      	mov	sp, r7
 8006dfa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006dfe:	4770      	bx	lr

08006e00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *       three arguments of any type.
 *
 * @tparam dest_type The type of the class in which the member function resides.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8006e00:	b580      	push	{r7, lr}
 8006e02:	b082      	sub	sp, #8
 8006e04:	af00      	add	r7, sp, #0
 8006e06:	6078      	str	r0, [r7, #4]
 8006e08:	6039      	str	r1, [r7, #0]
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	683a      	ldr	r2, [r7, #0]
 8006e0e:	4611      	mov	r1, r2
 8006e10:	4618      	mov	r0, r3
 8006e12:	f7ff ffe9 	bl	8006de8 <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8006e16:	683b      	ldr	r3, [r7, #0]
 8006e18:	685a      	ldr	r2, [r3, #4]
 8006e1a:	687b      	ldr	r3, [r7, #4]
 8006e1c:	605a      	str	r2, [r3, #4]
 8006e1e:	687b      	ldr	r3, [r7, #4]
 8006e20:	683a      	ldr	r2, [r7, #0]
 8006e22:	3308      	adds	r3, #8
 8006e24:	3208      	adds	r2, #8
 8006e26:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006e2a:	e883 0003 	stmia.w	r3, {r0, r1}
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	4618      	mov	r0, r3
 8006e32:	3708      	adds	r7, #8
 8006e34:	46bd      	mov	sp, r7
 8006e36:	bd80      	pop	{r7, pc}

08006e38 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>:
 */

// screen

void FrontendApplicationBase::gotoscreenScreenNoTransition()
{
 8006e38:	b590      	push	{r4, r7, lr}
 8006e3a:	b089      	sub	sp, #36	; 0x24
 8006e3c:	af00      	add	r7, sp, #0
 8006e3e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoscreenScreenNoTransitionImpl);
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	f503 749c 	add.w	r4, r3, #312	; 0x138
 8006e46:	4b10      	ldr	r3, [pc, #64]	; (8006e88 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv+0x50>)
 8006e48:	61bb      	str	r3, [r7, #24]
 8006e4a:	2300      	movs	r3, #0
 8006e4c:	61fb      	str	r3, [r7, #28]
 8006e4e:	f107 0008 	add.w	r0, r7, #8
 8006e52:	f107 0318 	add.w	r3, r7, #24
 8006e56:	cb0c      	ldmia	r3, {r2, r3}
 8006e58:	6879      	ldr	r1, [r7, #4]
 8006e5a:	f000 f85f 	bl	8006f1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8006e5e:	f107 0308 	add.w	r3, r7, #8
 8006e62:	4619      	mov	r1, r3
 8006e64:	4620      	mov	r0, r4
 8006e66:	f7ff ffcb 	bl	8006e00 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8006e6a:	f107 0308 	add.w	r3, r7, #8
 8006e6e:	4618      	mov	r0, r3
 8006e70:	f000 f976 	bl	8007160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8006e74:	687b      	ldr	r3, [r7, #4]
 8006e76:	f503 729c 	add.w	r2, r3, #312	; 0x138
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	f8c3 2134 	str.w	r2, [r3, #308]	; 0x134
}
 8006e80:	bf00      	nop
 8006e82:	3724      	adds	r7, #36	; 0x24
 8006e84:	46bd      	mov	sp, r7
 8006e86:	bd90      	pop	{r4, r7, pc}
 8006e88:	08006e8d 	.word	0x08006e8d

08006e8c <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoscreenScreenNoTransitionImpl()
{
 8006e8c:	b580      	push	{r7, lr}
 8006e8e:	b084      	sub	sp, #16
 8006e90:	af02      	add	r7, sp, #8
 8006e92:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<screenView, screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8006e94:	687b      	ldr	r3, [r7, #4]
 8006e96:	f503 7198 	add.w	r1, r3, #304	; 0x130
 8006e9a:	687b      	ldr	r3, [r7, #4]
 8006e9c:	f8d3 3148 	ldr.w	r3, [r3, #328]	; 0x148
 8006ea0:	461a      	mov	r2, r3
 8006ea2:	687b      	ldr	r3, [r7, #4]
 8006ea4:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8006ea8:	9300      	str	r3, [sp, #0]
 8006eaa:	4b04      	ldr	r3, [pc, #16]	; (8006ebc <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x30>)
 8006eac:	4804      	ldr	r0, [pc, #16]	; (8006ec0 <_ZN23FrontendApplicationBase32gotoscreenScreenNoTransitionImplEv+0x34>)
 8006eae:	f000 f855 	bl	8006f5c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8006eb2:	bf00      	nop
 8006eb4:	3708      	adds	r7, #8
 8006eb6:	46bd      	mov	sp, r7
 8006eb8:	bd80      	pop	{r7, pc}
 8006eba:	bf00      	nop
 8006ebc:	2000149c 	.word	0x2000149c
 8006ec0:	20001498 	.word	0x20001498

08006ec4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8006ec4:	b480      	push	{r7}
 8006ec6:	b083      	sub	sp, #12
 8006ec8:	af00      	add	r7, sp, #0
 8006eca:	6078      	str	r0, [r7, #4]
 8006ecc:	4a04      	ldr	r2, [pc, #16]	; (8006ee0 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	601a      	str	r2, [r3, #0]
 8006ed2:	687b      	ldr	r3, [r7, #4]
 8006ed4:	4618      	mov	r0, r3
 8006ed6:	370c      	adds	r7, #12
 8006ed8:	46bd      	mov	sp, r7
 8006eda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ede:	4770      	bx	lr
 8006ee0:	0801cc3c 	.word	0x0801cc3c

08006ee4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Initializes an empty callback.
     */
    Callback() : pobject(0), pmemfun_0(0) { }
 8006ee4:	b580      	push	{r7, lr}
 8006ee6:	b082      	sub	sp, #8
 8006ee8:	af00      	add	r7, sp, #0
 8006eea:	6078      	str	r0, [r7, #4]
 8006eec:	687b      	ldr	r3, [r7, #4]
 8006eee:	4618      	mov	r0, r3
 8006ef0:	f7ff ffe8 	bl	8006ec4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8006ef4:	4a08      	ldr	r2, [pc, #32]	; (8006f18 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8006ef6:	687b      	ldr	r3, [r7, #4]
 8006ef8:	601a      	str	r2, [r3, #0]
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	2200      	movs	r2, #0
 8006efe:	605a      	str	r2, [r3, #4]
 8006f00:	687b      	ldr	r3, [r7, #4]
 8006f02:	2200      	movs	r2, #0
 8006f04:	609a      	str	r2, [r3, #8]
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	2200      	movs	r2, #0
 8006f0a:	60da      	str	r2, [r3, #12]
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	4618      	mov	r0, r3
 8006f10:	3708      	adds	r7, #8
 8006f12:	46bd      	mov	sp, r7
 8006f14:	bd80      	pop	{r7, pc}
 8006f16:	bf00      	nop
 8006f18:	0801cbe8 	.word	0x0801cbe8

08006f1c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pobject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function
     *                       takes zero arguments.
     */
    Callback(dest_type* pobject, void (dest_type::*pmemfun_0)())
 8006f1c:	b580      	push	{r7, lr}
 8006f1e:	b084      	sub	sp, #16
 8006f20:	af00      	add	r7, sp, #0
 8006f22:	60f8      	str	r0, [r7, #12]
 8006f24:	60b9      	str	r1, [r7, #8]
 8006f26:	4639      	mov	r1, r7
 8006f28:	e881 000c 	stmia.w	r1, {r2, r3}
    {
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	4618      	mov	r0, r3
 8006f30:	f7ff ffc8 	bl	8006ec4 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8006f34:	4a08      	ldr	r2, [pc, #32]	; (8006f58 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8006f36:	68fb      	ldr	r3, [r7, #12]
 8006f38:	601a      	str	r2, [r3, #0]
        this->pobject = pobject;
 8006f3a:	68fb      	ldr	r3, [r7, #12]
 8006f3c:	68ba      	ldr	r2, [r7, #8]
 8006f3e:	605a      	str	r2, [r3, #4]
        this->pmemfun_0 = pmemfun_0;
 8006f40:	68fb      	ldr	r3, [r7, #12]
 8006f42:	3308      	adds	r3, #8
 8006f44:	463a      	mov	r2, r7
 8006f46:	e892 0003 	ldmia.w	r2, {r0, r1}
 8006f4a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 8006f4e:	68fb      	ldr	r3, [r7, #12]
 8006f50:	4618      	mov	r0, r3
 8006f52:	3710      	adds	r7, #16
 8006f54:	46bd      	mov	sp, r7
 8006f56:	bd80      	pop	{r7, pc}
 8006f58:	0801cbe8 	.word	0x0801cbe8

08006f5c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template< class ScreenType, class PresenterType, class TransType, class ModelType  >
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8006f5c:	b590      	push	{r4, r7, lr}
 8006f5e:	b089      	sub	sp, #36	; 0x24
 8006f60:	af00      	add	r7, sp, #0
 8006f62:	60f8      	str	r0, [r7, #12]
 8006f64:	60b9      	str	r1, [r7, #8]
 8006f66:	607a      	str	r2, [r7, #4]
 8006f68:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8006f6a:	687b      	ldr	r3, [r7, #4]
 8006f6c:	689a      	ldr	r2, [r3, #8]
 8006f6e:	687b      	ldr	r3, [r7, #4]
 8006f70:	689b      	ldr	r3, [r3, #8]
 8006f72:	681b      	ldr	r3, [r3, #0]
 8006f74:	3320      	adds	r3, #32
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	4610      	mov	r0, r2
 8006f7a:	4798      	blx	r3
 8006f7c:	4603      	mov	r3, r0
 8006f7e:	f5b3 7f68 	cmp.w	r3, #928	; 0x3a0
 8006f82:	d205      	bcs.n	8006f90 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8006f84:	4b4d      	ldr	r3, [pc, #308]	; (80070bc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x160>)
 8006f86:	4a4e      	ldr	r2, [pc, #312]	; (80070c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8006f88:	21c2      	movs	r1, #194	; 0xc2
 8006f8a:	484e      	ldr	r0, [pc, #312]	; (80070c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006f8c:	f014 fbb0 	bl	801b6f0 <__assert_func>
 8006f90:	bf00      	nop
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8006f92:	687b      	ldr	r3, [r7, #4]
 8006f94:	685a      	ldr	r2, [r3, #4]
 8006f96:	687b      	ldr	r3, [r7, #4]
 8006f98:	685b      	ldr	r3, [r3, #4]
 8006f9a:	681b      	ldr	r3, [r3, #0]
 8006f9c:	3320      	adds	r3, #32
 8006f9e:	681b      	ldr	r3, [r3, #0]
 8006fa0:	4610      	mov	r0, r2
 8006fa2:	4798      	blx	r3
 8006fa4:	4603      	mov	r3, r0
 8006fa6:	2b0f      	cmp	r3, #15
 8006fa8:	d805      	bhi.n	8006fb6 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x5a>
 8006faa:	4b47      	ldr	r3, [pc, #284]	; (80070c8 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x16c>)
 8006fac:	4a44      	ldr	r2, [pc, #272]	; (80070c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8006fae:	21c3      	movs	r1, #195	; 0xc3
 8006fb0:	4844      	ldr	r0, [pc, #272]	; (80070c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006fb2:	f014 fb9d 	bl	801b6f0 <__assert_func>
 8006fb6:	bf00      	nop
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8006fb8:	687b      	ldr	r3, [r7, #4]
 8006fba:	68da      	ldr	r2, [r3, #12]
 8006fbc:	687b      	ldr	r3, [r7, #4]
 8006fbe:	68db      	ldr	r3, [r3, #12]
 8006fc0:	681b      	ldr	r3, [r3, #0]
 8006fc2:	3320      	adds	r3, #32
 8006fc4:	681b      	ldr	r3, [r3, #0]
 8006fc6:	4610      	mov	r0, r2
 8006fc8:	4798      	blx	r3
 8006fca:	4603      	mov	r3, r0
 8006fcc:	2b0b      	cmp	r3, #11
 8006fce:	d805      	bhi.n	8006fdc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x80>
 8006fd0:	4b3e      	ldr	r3, [pc, #248]	; (80070cc <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x170>)
 8006fd2:	4a3b      	ldr	r2, [pc, #236]	; (80070c0 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x164>)
 8006fd4:	21c4      	movs	r1, #196	; 0xc4
 8006fd6:	483b      	ldr	r0, [pc, #236]	; (80070c4 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x168>)
 8006fd8:	f014 fb8a 	bl	801b6f0 <__assert_func>
 8006fdc:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);
 8006fde:	683a      	ldr	r2, [r7, #0]
 8006fe0:	68b9      	ldr	r1, [r7, #8]
 8006fe2:	68f8      	ldr	r0, [r7, #12]
 8006fe4:	f7ff fdc3 	bl	8006b6e <_ZN8touchgfxL17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE>

    TransType* newTransition = new (&heap.transitionStorage.at< TransType >(0)) TransType;
 8006fe8:	687b      	ldr	r3, [r7, #4]
 8006fea:	68db      	ldr	r3, [r3, #12]
 8006fec:	2100      	movs	r1, #0
 8006fee:	4618      	mov	r0, r3
 8006ff0:	f000 f86e 	bl	80070d0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8006ff4:	4603      	mov	r3, r0
 8006ff6:	4619      	mov	r1, r3
 8006ff8:	200c      	movs	r0, #12
 8006ffa:	f7ff fbf3 	bl	80067e4 <_ZnwjPv>
 8006ffe:	4604      	mov	r4, r0
 8007000:	2c00      	cmp	r4, #0
 8007002:	d004      	beq.n	800700e <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb2>
 8007004:	4620      	mov	r0, r4
 8007006:	f7ff fe6d 	bl	8006ce4 <_ZN8touchgfx12NoTransitionC1Ev>
 800700a:	4623      	mov	r3, r4
 800700c:	e000      	b.n	8007010 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xb4>
 800700e:	4623      	mov	r3, r4
 8007010:	61fb      	str	r3, [r7, #28]
    ScreenType* newScreen = new (&heap.screenStorage.at< ScreenType >(0)) ScreenType;
 8007012:	687b      	ldr	r3, [r7, #4]
 8007014:	689b      	ldr	r3, [r3, #8]
 8007016:	2100      	movs	r1, #0
 8007018:	4618      	mov	r0, r3
 800701a:	f000 f86c 	bl	80070f6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>
 800701e:	4603      	mov	r3, r0
 8007020:	4619      	mov	r1, r3
 8007022:	f44f 7068 	mov.w	r0, #928	; 0x3a0
 8007026:	f7ff fbdd 	bl	80067e4 <_ZnwjPv>
 800702a:	4604      	mov	r4, r0
 800702c:	2c00      	cmp	r4, #0
 800702e:	d004      	beq.n	800703a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xde>
 8007030:	4620      	mov	r0, r4
 8007032:	f000 ff25 	bl	8007e80 <_ZN10screenViewC1Ev>
 8007036:	4623      	mov	r3, r4
 8007038:	e000      	b.n	800703c <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
 800703a:	4623      	mov	r3, r4
 800703c:	61bb      	str	r3, [r7, #24]
    PresenterType* newPresenter = new (&heap.presenterStorage.at< PresenterType >(0)) PresenterType(*newScreen);
 800703e:	687b      	ldr	r3, [r7, #4]
 8007040:	685b      	ldr	r3, [r3, #4]
 8007042:	2100      	movs	r1, #0
 8007044:	4618      	mov	r0, r3
 8007046:	f000 f869 	bl	800711c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>
 800704a:	4603      	mov	r3, r0
 800704c:	4619      	mov	r1, r3
 800704e:	2010      	movs	r0, #16
 8007050:	f7ff fbc8 	bl	80067e4 <_ZnwjPv>
 8007054:	4604      	mov	r4, r0
 8007056:	2c00      	cmp	r4, #0
 8007058:	d005      	beq.n	8007066 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10a>
 800705a:	69b9      	ldr	r1, [r7, #24]
 800705c:	4620      	mov	r0, r4
 800705e:	f000 feb7 	bl	8007dd0 <_ZN15screenPresenterC1ER10screenView>
 8007062:	4623      	mov	r3, r4
 8007064:	e000      	b.n	8007068 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x10c>
 8007066:	4623      	mov	r3, r4
 8007068:	617b      	str	r3, [r7, #20]
    *currentTrans = newTransition;
 800706a:	683b      	ldr	r3, [r7, #0]
 800706c:	69fa      	ldr	r2, [r7, #28]
 800706e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8007070:	68bb      	ldr	r3, [r7, #8]
 8007072:	697a      	ldr	r2, [r7, #20]
 8007074:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8007076:	68fb      	ldr	r3, [r7, #12]
 8007078:	69ba      	ldr	r2, [r7, #24]
 800707a:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800707c:	697b      	ldr	r3, [r7, #20]
 800707e:	2b00      	cmp	r3, #0
 8007080:	d002      	beq.n	8007088 <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
 8007082:	697b      	ldr	r3, [r7, #20]
 8007084:	3304      	adds	r3, #4
 8007086:	e000      	b.n	800708a <_ZN8touchgfx14makeTransitionI10screenView15screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12e>
 8007088:	2300      	movs	r3, #0
 800708a:	4619      	mov	r1, r3
 800708c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800708e:	f7ff fdf1 	bl	8006c74 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8007092:	697b      	ldr	r3, [r7, #20]
 8007094:	3304      	adds	r3, #4
 8007096:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8007098:	4618      	mov	r0, r3
 800709a:	f7ff fe64 	bl	8006d66 <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800709e:	69bb      	ldr	r3, [r7, #24]
 80070a0:	6979      	ldr	r1, [r7, #20]
 80070a2:	4618      	mov	r0, r3
 80070a4:	f000 f84d 	bl	8007142 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);
 80070a8:	69fa      	ldr	r2, [r7, #28]
 80070aa:	6979      	ldr	r1, [r7, #20]
 80070ac:	69b8      	ldr	r0, [r7, #24]
 80070ae:	f7ff fdba 	bl	8006c26 <_ZN8touchgfxL18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE>

    return newPresenter;
 80070b2:	697b      	ldr	r3, [r7, #20]
}
 80070b4:	4618      	mov	r0, r3
 80070b6:	3724      	adds	r7, #36	; 0x24
 80070b8:	46bd      	mov	sp, r7
 80070ba:	bd90      	pop	{r4, r7, pc}
 80070bc:	0801c71c 	.word	0x0801c71c
 80070c0:	0801cc94 	.word	0x0801cc94
 80070c4:	0801c7ac 	.word	0x0801c7ac
 80070c8:	0801c7f0 	.word	0x0801c7f0
 80070cc:	0801c894 	.word	0x0801c894

080070d0 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template< typename T >
    T& at(const uint16_t index)
 80070d0:	b580      	push	{r7, lr}
 80070d2:	b082      	sub	sp, #8
 80070d4:	af00      	add	r7, sp, #0
 80070d6:	6078      	str	r0, [r7, #4]
 80070d8:	460b      	mov	r3, r1
 80070da:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	3324      	adds	r3, #36	; 0x24
 80070e2:	681b      	ldr	r3, [r3, #0]
 80070e4:	887a      	ldrh	r2, [r7, #2]
 80070e6:	4611      	mov	r1, r2
 80070e8:	6878      	ldr	r0, [r7, #4]
 80070ea:	4798      	blx	r3
 80070ec:	4603      	mov	r3, r0
    }
 80070ee:	4618      	mov	r0, r3
 80070f0:	3708      	adds	r7, #8
 80070f2:	46bd      	mov	sp, r7
 80070f4:	bd80      	pop	{r7, pc}

080070f6 <_ZN8touchgfx17AbstractPartition2atI10screenViewEERT_t>:
    T& at(const uint16_t index)
 80070f6:	b580      	push	{r7, lr}
 80070f8:	b082      	sub	sp, #8
 80070fa:	af00      	add	r7, sp, #0
 80070fc:	6078      	str	r0, [r7, #4]
 80070fe:	460b      	mov	r3, r1
 8007100:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8007102:	687b      	ldr	r3, [r7, #4]
 8007104:	681b      	ldr	r3, [r3, #0]
 8007106:	3324      	adds	r3, #36	; 0x24
 8007108:	681b      	ldr	r3, [r3, #0]
 800710a:	887a      	ldrh	r2, [r7, #2]
 800710c:	4611      	mov	r1, r2
 800710e:	6878      	ldr	r0, [r7, #4]
 8007110:	4798      	blx	r3
 8007112:	4603      	mov	r3, r0
    }
 8007114:	4618      	mov	r0, r3
 8007116:	3708      	adds	r7, #8
 8007118:	46bd      	mov	sp, r7
 800711a:	bd80      	pop	{r7, pc}

0800711c <_ZN8touchgfx17AbstractPartition2atI15screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800711c:	b580      	push	{r7, lr}
 800711e:	b082      	sub	sp, #8
 8007120:	af00      	add	r7, sp, #0
 8007122:	6078      	str	r0, [r7, #4]
 8007124:	460b      	mov	r3, r1
 8007126:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	3324      	adds	r3, #36	; 0x24
 800712e:	681b      	ldr	r3, [r3, #0]
 8007130:	887a      	ldrh	r2, [r7, #2]
 8007132:	4611      	mov	r1, r2
 8007134:	6878      	ldr	r0, [r7, #4]
 8007136:	4798      	blx	r3
 8007138:	4603      	mov	r3, r0
    }
 800713a:	4618      	mov	r0, r3
 800713c:	3708      	adds	r7, #8
 800713e:	46bd      	mov	sp, r7
 8007140:	bd80      	pop	{r7, pc}

08007142 <_ZN8touchgfx4ViewI15screenPresenterE4bindERS1_>:
     *        Binds an instance of a specific Presenter type (subclass) to the View instance.
     *        This function is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
 8007142:	b480      	push	{r7}
 8007144:	b083      	sub	sp, #12
 8007146:	af00      	add	r7, sp, #0
 8007148:	6078      	str	r0, [r7, #4]
 800714a:	6039      	str	r1, [r7, #0]
    {
        this->presenter = &presenter;
 800714c:	687b      	ldr	r3, [r7, #4]
 800714e:	683a      	ldr	r2, [r7, #0]
 8007150:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8007152:	bf00      	nop
 8007154:	370c      	adds	r7, #12
 8007156:	46bd      	mov	sp, r7
 8007158:	f85d 7b04 	ldr.w	r7, [sp], #4
 800715c:	4770      	bx	lr
	...

08007160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8007160:	b580      	push	{r7, lr}
 8007162:	b082      	sub	sp, #8
 8007164:	af00      	add	r7, sp, #0
 8007166:	6078      	str	r0, [r7, #4]
 8007168:	4a05      	ldr	r2, [pc, #20]	; (8007180 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800716a:	687b      	ldr	r3, [r7, #4]
 800716c:	601a      	str	r2, [r3, #0]
 800716e:	687b      	ldr	r3, [r7, #4]
 8007170:	4618      	mov	r0, r3
 8007172:	f7ff fc13 	bl	800699c <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	4618      	mov	r0, r3
 800717a:	3708      	adds	r7, #8
 800717c:	46bd      	mov	sp, r7
 800717e:	bd80      	pop	{r7, pc}
 8007180:	0801cbe8 	.word	0x0801cbe8

08007184 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8007184:	b580      	push	{r7, lr}
 8007186:	b082      	sub	sp, #8
 8007188:	af00      	add	r7, sp, #0
 800718a:	6078      	str	r0, [r7, #4]
 800718c:	6878      	ldr	r0, [r7, #4]
 800718e:	f7ff ffe7 	bl	8007160 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8007192:	2110      	movs	r1, #16
 8007194:	6878      	ldr	r0, [r7, #4]
 8007196:	f013 fcb1 	bl	801aafc <_ZdlPvj>
 800719a:	687b      	ldr	r3, [r7, #4]
 800719c:	4618      	mov	r0, r3
 800719e:	3708      	adds	r7, #8
 80071a0:	46bd      	mov	sp, r7
 80071a2:	bd80      	pop	{r7, pc}

080071a4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:
     * @brief Calls the member function.
     *
     *        Calls the member function. Do not call execute unless isValid() returns true (ie.
     *        a pointer to the object and the function has been set).
     */
    virtual void execute()
 80071a4:	b580      	push	{r7, lr}
 80071a6:	b082      	sub	sp, #8
 80071a8:	af00      	add	r7, sp, #0
 80071aa:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun_0)();
 80071ac:	687b      	ldr	r3, [r7, #4]
 80071ae:	685b      	ldr	r3, [r3, #4]
 80071b0:	687a      	ldr	r2, [r7, #4]
 80071b2:	68d2      	ldr	r2, [r2, #12]
 80071b4:	1052      	asrs	r2, r2, #1
 80071b6:	1899      	adds	r1, r3, r2
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	68db      	ldr	r3, [r3, #12]
 80071bc:	f003 0301 	and.w	r3, r3, #1
 80071c0:	2b00      	cmp	r3, #0
 80071c2:	d102      	bne.n	80071ca <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80071c4:	687b      	ldr	r3, [r7, #4]
 80071c6:	689b      	ldr	r3, [r3, #8]
 80071c8:	e00a      	b.n	80071e0 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80071ca:	687b      	ldr	r3, [r7, #4]
 80071cc:	685b      	ldr	r3, [r3, #4]
 80071ce:	687a      	ldr	r2, [r7, #4]
 80071d0:	68d2      	ldr	r2, [r2, #12]
 80071d2:	1052      	asrs	r2, r2, #1
 80071d4:	4413      	add	r3, r2
 80071d6:	681b      	ldr	r3, [r3, #0]
 80071d8:	687a      	ldr	r2, [r7, #4]
 80071da:	6892      	ldr	r2, [r2, #8]
 80071dc:	4413      	add	r3, r2
 80071de:	681b      	ldr	r3, [r3, #0]
 80071e0:	4608      	mov	r0, r1
 80071e2:	4798      	blx	r3
    }
 80071e4:	bf00      	nop
 80071e6:	3708      	adds	r7, #8
 80071e8:	46bd      	mov	sp, r7
 80071ea:	bd80      	pop	{r7, pc}

080071ec <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     *        Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80071ec:	b480      	push	{r7}
 80071ee:	b083      	sub	sp, #12
 80071f0:	af00      	add	r7, sp, #0
 80071f2:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 80071f4:	687b      	ldr	r3, [r7, #4]
 80071f6:	685b      	ldr	r3, [r3, #4]
 80071f8:	2b00      	cmp	r3, #0
 80071fa:	d010      	beq.n	800721e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 80071fc:	687b      	ldr	r3, [r7, #4]
 80071fe:	689b      	ldr	r3, [r3, #8]
 8007200:	2b00      	cmp	r3, #0
 8007202:	d107      	bne.n	8007214 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8007204:	687b      	ldr	r3, [r7, #4]
 8007206:	68db      	ldr	r3, [r3, #12]
 8007208:	f003 0301 	and.w	r3, r3, #1
 800720c:	2b00      	cmp	r3, #0
 800720e:	d101      	bne.n	8007214 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8007210:	2301      	movs	r3, #1
 8007212:	e000      	b.n	8007216 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8007214:	2300      	movs	r3, #0
 8007216:	2b01      	cmp	r3, #1
 8007218:	d001      	beq.n	800721e <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 800721a:	2301      	movs	r3, #1
 800721c:	e000      	b.n	8007220 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 800721e:	2300      	movs	r3, #0
    }
 8007220:	4618      	mov	r0, r3
 8007222:	370c      	adds	r7, #12
 8007224:	46bd      	mov	sp, r7
 8007226:	f85d 7b04 	ldr.w	r7, [sp], #4
 800722a:	4770      	bx	lr

0800722c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param col The color.
     *
     * @see Color::getColorFrom24BitRGB()
     */
    colortype(uint32_t col)
 800722c:	b480      	push	{r7}
 800722e:	b083      	sub	sp, #12
 8007230:	af00      	add	r7, sp, #0
 8007232:	6078      	str	r0, [r7, #4]
 8007234:	6039      	str	r1, [r7, #0]
    {
        color = col;
 8007236:	687b      	ldr	r3, [r7, #4]
 8007238:	683a      	ldr	r2, [r7, #0]
 800723a:	601a      	str	r2, [r3, #0]
    }
 800723c:	687b      	ldr	r3, [r7, #4]
 800723e:	4618      	mov	r0, r3
 8007240:	370c      	adds	r7, #12
 8007242:	46bd      	mov	sp, r7
 8007244:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007248:	4770      	bx	lr

0800724a <_ZN8touchgfx4RectC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Resulting in an empty Rect with coordinates 0,0.
     */
    Rect()
 800724a:	b480      	push	{r7}
 800724c:	b083      	sub	sp, #12
 800724e:	af00      	add	r7, sp, #0
 8007250:	6078      	str	r0, [r7, #4]
    {
        this->x = 0;
 8007252:	687b      	ldr	r3, [r7, #4]
 8007254:	2200      	movs	r2, #0
 8007256:	801a      	strh	r2, [r3, #0]
        this->y = 0;
 8007258:	687b      	ldr	r3, [r7, #4]
 800725a:	2200      	movs	r2, #0
 800725c:	805a      	strh	r2, [r3, #2]
        this->width = 0;
 800725e:	687b      	ldr	r3, [r7, #4]
 8007260:	2200      	movs	r2, #0
 8007262:	809a      	strh	r2, [r3, #4]
        this->height = 0;
 8007264:	687b      	ldr	r3, [r7, #4]
 8007266:	2200      	movs	r2, #0
 8007268:	80da      	strh	r2, [r3, #6]
    }
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	4618      	mov	r0, r3
 800726e:	370c      	adds	r7, #12
 8007270:	46bd      	mov	sp, r7
 8007272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007276:	4770      	bx	lr

08007278 <_ZN8touchgfx4RectC1Essss>:
     * @param x      The x coordinate.
     * @param y      The y coordinate.
     * @param width  The width.
     * @param height The height.
     */
    Rect(int16_t x, int16_t y, int16_t width, int16_t height)
 8007278:	b480      	push	{r7}
 800727a:	b085      	sub	sp, #20
 800727c:	af00      	add	r7, sp, #0
 800727e:	60f8      	str	r0, [r7, #12]
 8007280:	4608      	mov	r0, r1
 8007282:	4611      	mov	r1, r2
 8007284:	461a      	mov	r2, r3
 8007286:	4603      	mov	r3, r0
 8007288:	817b      	strh	r3, [r7, #10]
 800728a:	460b      	mov	r3, r1
 800728c:	813b      	strh	r3, [r7, #8]
 800728e:	4613      	mov	r3, r2
 8007290:	80fb      	strh	r3, [r7, #6]
    {
        this->x = x;
 8007292:	68fb      	ldr	r3, [r7, #12]
 8007294:	897a      	ldrh	r2, [r7, #10]
 8007296:	801a      	strh	r2, [r3, #0]
        this->y = y;
 8007298:	68fb      	ldr	r3, [r7, #12]
 800729a:	893a      	ldrh	r2, [r7, #8]
 800729c:	805a      	strh	r2, [r3, #2]
        this->width = width;
 800729e:	68fb      	ldr	r3, [r7, #12]
 80072a0:	88fa      	ldrh	r2, [r7, #6]
 80072a2:	809a      	strh	r2, [r3, #4]
        this->height = height;
 80072a4:	68fb      	ldr	r3, [r7, #12]
 80072a6:	8b3a      	ldrh	r2, [r7, #24]
 80072a8:	80da      	strh	r2, [r3, #6]
    }
 80072aa:	68fb      	ldr	r3, [r7, #12]
 80072ac:	4618      	mov	r0, r3
 80072ae:	3714      	adds	r7, #20
 80072b0:	46bd      	mov	sp, r7
 80072b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072b6:	4770      	bx	lr

080072b8 <_ZN8touchgfx8DrawableC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Drawable() : rect(0, 0, 0, 0),
 80072b8:	b580      	push	{r7, lr}
 80072ba:	b084      	sub	sp, #16
 80072bc:	af02      	add	r7, sp, #8
 80072be:	6078      	str	r0, [r7, #4]
        parent(0),
        nextSibling(0),
        nextDrawChainElement(0),
        touchable(false),
        visible(true)
 80072c0:	4a13      	ldr	r2, [pc, #76]	; (8007310 <_ZN8touchgfx8DrawableC1Ev+0x58>)
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	601a      	str	r2, [r3, #0]
 80072c6:	687b      	ldr	r3, [r7, #4]
 80072c8:	1d18      	adds	r0, r3, #4
 80072ca:	2300      	movs	r3, #0
 80072cc:	9300      	str	r3, [sp, #0]
 80072ce:	2300      	movs	r3, #0
 80072d0:	2200      	movs	r2, #0
 80072d2:	2100      	movs	r1, #0
 80072d4:	f7ff ffd0 	bl	8007278 <_ZN8touchgfx4RectC1Essss>
 80072d8:	687b      	ldr	r3, [r7, #4]
 80072da:	330c      	adds	r3, #12
 80072dc:	4618      	mov	r0, r3
 80072de:	f7ff ffb4 	bl	800724a <_ZN8touchgfx4RectC1Ev>
 80072e2:	687b      	ldr	r3, [r7, #4]
 80072e4:	2200      	movs	r2, #0
 80072e6:	615a      	str	r2, [r3, #20]
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	2200      	movs	r2, #0
 80072ec:	619a      	str	r2, [r3, #24]
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	2200      	movs	r2, #0
 80072f2:	61da      	str	r2, [r3, #28]
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	2200      	movs	r2, #0
 80072f8:	f883 2024 	strb.w	r2, [r3, #36]	; 0x24
 80072fc:	687b      	ldr	r3, [r7, #4]
 80072fe:	2201      	movs	r2, #1
 8007300:	f883 2025 	strb.w	r2, [r3, #37]	; 0x25
    {
    }
 8007304:	687b      	ldr	r3, [r7, #4]
 8007306:	4618      	mov	r0, r3
 8007308:	3708      	adds	r7, #8
 800730a:	46bd      	mov	sp, r7
 800730c:	bd80      	pop	{r7, pc}
 800730e:	bf00      	nop
 8007310:	0801e538 	.word	0x0801e538

08007314 <_ZN8touchgfx8DrawableD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Drawable() { }
 8007314:	b480      	push	{r7}
 8007316:	b083      	sub	sp, #12
 8007318:	af00      	add	r7, sp, #0
 800731a:	6078      	str	r0, [r7, #4]
 800731c:	4a04      	ldr	r2, [pc, #16]	; (8007330 <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	601a      	str	r2, [r3, #0]
 8007322:	687b      	ldr	r3, [r7, #4]
 8007324:	4618      	mov	r0, r3
 8007326:	370c      	adds	r7, #12
 8007328:	46bd      	mov	sp, r7
 800732a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800732e:	4770      	bx	lr
 8007330:	0801e538 	.word	0x0801e538

08007334 <_ZN8touchgfx8DrawableD0Ev>:
 8007334:	b580      	push	{r7, lr}
 8007336:	b082      	sub	sp, #8
 8007338:	af00      	add	r7, sp, #0
 800733a:	6078      	str	r0, [r7, #4]
 800733c:	6878      	ldr	r0, [r7, #4]
 800733e:	f7ff ffe9 	bl	8007314 <_ZN8touchgfx8DrawableD1Ev>
 8007342:	2128      	movs	r1, #40	; 0x28
 8007344:	6878      	ldr	r0, [r7, #4]
 8007346:	f013 fbd9 	bl	801aafc <_ZdlPvj>
 800734a:	687b      	ldr	r3, [r7, #4]
 800734c:	4618      	mov	r0, r3
 800734e:	3708      	adds	r7, #8
 8007350:	46bd      	mov	sp, r7
 8007352:	bd80      	pop	{r7, pc}

08007354 <_ZN8touchgfx8Drawable11setPositionEssss>:
     * @param x      The x coordinate of this Drawable.
     * @param y      The y coordinate of this Drawable.
     * @param width  The width of this Drawable.
     * @param height The height of this Drawable.
     */
    virtual void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8007354:	b580      	push	{r7, lr}
 8007356:	b084      	sub	sp, #16
 8007358:	af00      	add	r7, sp, #0
 800735a:	60f8      	str	r0, [r7, #12]
 800735c:	4608      	mov	r0, r1
 800735e:	4611      	mov	r1, r2
 8007360:	461a      	mov	r2, r3
 8007362:	4603      	mov	r3, r0
 8007364:	817b      	strh	r3, [r7, #10]
 8007366:	460b      	mov	r3, r1
 8007368:	813b      	strh	r3, [r7, #8]
 800736a:	4613      	mov	r3, r2
 800736c:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 800736e:	68fb      	ldr	r3, [r7, #12]
 8007370:	681b      	ldr	r3, [r3, #0]
 8007372:	3334      	adds	r3, #52	; 0x34
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800737a:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800737e:	68f8      	ldr	r0, [r7, #12]
 8007380:	4798      	blx	r3
        setWidth(width);
 8007382:	68fb      	ldr	r3, [r7, #12]
 8007384:	681b      	ldr	r3, [r3, #0]
 8007386:	3338      	adds	r3, #56	; 0x38
 8007388:	681b      	ldr	r3, [r3, #0]
 800738a:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800738e:	4611      	mov	r1, r2
 8007390:	68f8      	ldr	r0, [r7, #12]
 8007392:	4798      	blx	r3
        setHeight(height);
 8007394:	68fb      	ldr	r3, [r7, #12]
 8007396:	681b      	ldr	r3, [r3, #0]
 8007398:	333c      	adds	r3, #60	; 0x3c
 800739a:	681b      	ldr	r3, [r3, #0]
 800739c:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 80073a0:	4611      	mov	r1, r2
 80073a2:	68f8      	ldr	r0, [r7, #12]
 80073a4:	4798      	blx	r3
    }
 80073a6:	bf00      	nop
 80073a8:	3710      	adds	r7, #16
 80073aa:	46bd      	mov	sp, r7
 80073ac:	bd80      	pop	{r7, pc}

080073ae <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     */
    virtual void setX(int16_t x)
 80073ae:	b480      	push	{r7}
 80073b0:	b083      	sub	sp, #12
 80073b2:	af00      	add	r7, sp, #0
 80073b4:	6078      	str	r0, [r7, #4]
 80073b6:	460b      	mov	r3, r1
 80073b8:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	887a      	ldrh	r2, [r7, #2]
 80073be:	809a      	strh	r2, [r3, #4]
    }
 80073c0:	bf00      	nop
 80073c2:	370c      	adds	r7, #12
 80073c4:	46bd      	mov	sp, r7
 80073c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073ca:	4770      	bx	lr

080073cc <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setY(int16_t y)
 80073cc:	b480      	push	{r7}
 80073ce:	b083      	sub	sp, #12
 80073d0:	af00      	add	r7, sp, #0
 80073d2:	6078      	str	r0, [r7, #4]
 80073d4:	460b      	mov	r3, r1
 80073d6:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 80073d8:	687b      	ldr	r3, [r7, #4]
 80073da:	887a      	ldrh	r2, [r7, #2]
 80073dc:	80da      	strh	r2, [r3, #6]
    }
 80073de:	bf00      	nop
 80073e0:	370c      	adds	r7, #12
 80073e2:	46bd      	mov	sp, r7
 80073e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80073e8:	4770      	bx	lr

080073ea <_ZN8touchgfx8Drawable5setXYEss>:
     * @note Changing this does not automatically yield a redraw.
     *
     * @param x The new x value, relative to the parent. A negative value is allowed.
     * @param y The new y value, relative to the parent. A negative value is allowed.
     */
    virtual void setXY(int16_t x, int16_t y)
 80073ea:	b580      	push	{r7, lr}
 80073ec:	b082      	sub	sp, #8
 80073ee:	af00      	add	r7, sp, #0
 80073f0:	6078      	str	r0, [r7, #4]
 80073f2:	460b      	mov	r3, r1
 80073f4:	807b      	strh	r3, [r7, #2]
 80073f6:	4613      	mov	r3, r2
 80073f8:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 80073fa:	687b      	ldr	r3, [r7, #4]
 80073fc:	681b      	ldr	r3, [r3, #0]
 80073fe:	332c      	adds	r3, #44	; 0x2c
 8007400:	681b      	ldr	r3, [r3, #0]
 8007402:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8007406:	4611      	mov	r1, r2
 8007408:	6878      	ldr	r0, [r7, #4]
 800740a:	4798      	blx	r3
        setY(y);
 800740c:	687b      	ldr	r3, [r7, #4]
 800740e:	681b      	ldr	r3, [r3, #0]
 8007410:	3330      	adds	r3, #48	; 0x30
 8007412:	681b      	ldr	r3, [r3, #0]
 8007414:	f9b7 2000 	ldrsh.w	r2, [r7]
 8007418:	4611      	mov	r1, r2
 800741a:	6878      	ldr	r0, [r7, #4]
 800741c:	4798      	blx	r3
    }
 800741e:	bf00      	nop
 8007420:	3708      	adds	r7, #8
 8007422:	46bd      	mov	sp, r7
 8007424:	bd80      	pop	{r7, pc}

08007426 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param width The new width.
     */
    virtual void setWidth(int16_t width)
 8007426:	b480      	push	{r7}
 8007428:	b083      	sub	sp, #12
 800742a:	af00      	add	r7, sp, #0
 800742c:	6078      	str	r0, [r7, #4]
 800742e:	460b      	mov	r3, r1
 8007430:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8007432:	687b      	ldr	r3, [r7, #4]
 8007434:	887a      	ldrh	r2, [r7, #2]
 8007436:	811a      	strh	r2, [r3, #8]
    }
 8007438:	bf00      	nop
 800743a:	370c      	adds	r7, #12
 800743c:	46bd      	mov	sp, r7
 800743e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007442:	4770      	bx	lr

08007444 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note Changing this does not automatically yield a redraw.
     *
     * @param height The new height.
     */
    virtual void setHeight(int16_t height)
 8007444:	b480      	push	{r7}
 8007446:	b083      	sub	sp, #12
 8007448:	af00      	add	r7, sp, #0
 800744a:	6078      	str	r0, [r7, #4]
 800744c:	460b      	mov	r3, r1
 800744e:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8007450:	687b      	ldr	r3, [r7, #4]
 8007452:	887a      	ldrh	r2, [r7, #2]
 8007454:	815a      	strh	r2, [r3, #10]
    }
 8007456:	bf00      	nop
 8007458:	370c      	adds	r7, #12
 800745a:	46bd      	mov	sp, r7
 800745c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007460:	4770      	bx	lr

08007462 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     *
     *        This function can be called on parent nodes to signal that the size of one or
     *        more of its children has changed. Currently only used in ScrollableContainer to
     *        redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged() { }
 8007462:	b480      	push	{r7}
 8007464:	b083      	sub	sp, #12
 8007466:	af00      	add	r7, sp, #0
 8007468:	6078      	str	r0, [r7, #4]
 800746a:	bf00      	nop
 800746c:	370c      	adds	r7, #12
 800746e:	46bd      	mov	sp, r7
 8007470:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007474:	4770      	bx	lr

08007476 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *        Defines the event handler interface for ClickEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& evt) { }
 8007476:	b480      	push	{r7}
 8007478:	b083      	sub	sp, #12
 800747a:	af00      	add	r7, sp, #0
 800747c:	6078      	str	r0, [r7, #4]
 800747e:	6039      	str	r1, [r7, #0]
 8007480:	bf00      	nop
 8007482:	370c      	adds	r7, #12
 8007484:	46bd      	mov	sp, r7
 8007486:	f85d 7b04 	ldr.w	r7, [sp], #4
 800748a:	4770      	bx	lr

0800748c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *        Defines the event handler interface for GestureEvents. The default implementation
     *        ignores the event. The event is only received if the drawable is touchable.
     *
     * @param evt The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& evt) { }
 800748c:	b480      	push	{r7}
 800748e:	b083      	sub	sp, #12
 8007490:	af00      	add	r7, sp, #0
 8007492:	6078      	str	r0, [r7, #4]
 8007494:	6039      	str	r1, [r7, #0]
 8007496:	bf00      	nop
 8007498:	370c      	adds	r7, #12
 800749a:	46bd      	mov	sp, r7
 800749c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074a0:	4770      	bx	lr

080074a2 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *        Defines the event handler interface for DragEvents. The event is only received if
     *        the drawable is touchable.
     *
     * @param evt The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& evt) { }
 80074a2:	b480      	push	{r7}
 80074a4:	b083      	sub	sp, #12
 80074a6:	af00      	add	r7, sp, #0
 80074a8:	6078      	str	r0, [r7, #4]
 80074aa:	6039      	str	r1, [r7, #0]
 80074ac:	bf00      	nop
 80074ae:	370c      	adds	r7, #12
 80074b0:	46bd      	mov	sp, r7
 80074b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074b6:	4770      	bx	lr

080074b8 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *        Called periodically by the framework if the Drawable instance has subscribed to
     *        timer ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent() { }
 80074b8:	b480      	push	{r7}
 80074ba:	b083      	sub	sp, #12
 80074bc:	af00      	add	r7, sp, #0
 80074be:	6078      	str	r0, [r7, #4]
 80074c0:	bf00      	nop
 80074c2:	370c      	adds	r7, #12
 80074c4:	46bd      	mov	sp, r7
 80074c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074ca:	4770      	bx	lr

080074cc <_ZNK8touchgfx8Drawable9isVisibleEv>:
     * @return true if the Drawable is visible.
     * @return True if visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 80074cc:	b480      	push	{r7}
 80074ce:	b083      	sub	sp, #12
 80074d0:	af00      	add	r7, sp, #0
 80074d2:	6078      	str	r0, [r7, #4]
    {
        return visible;
 80074d4:	687b      	ldr	r3, [r7, #4]
 80074d6:	f893 3025 	ldrb.w	r3, [r3, #37]	; 0x25
    }
 80074da:	4618      	mov	r0, r3
 80074dc:	370c      	adds	r7, #12
 80074de:	46bd      	mov	sp, r7
 80074e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074e4:	4770      	bx	lr

080074e6 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 80074e6:	b480      	push	{r7}
 80074e8:	b083      	sub	sp, #12
 80074ea:	af00      	add	r7, sp, #0
 80074ec:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 80074ee:	687b      	ldr	r3, [r7, #4]
 80074f0:	f893 3024 	ldrb.w	r3, [r3, #36]	; 0x24
    }
 80074f4:	4618      	mov	r0, r3
 80074f6:	370c      	adds	r7, #12
 80074f8:	46bd      	mov	sp, r7
 80074fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80074fe:	4770      	bx	lr

08007500 <_ZN8touchgfx8Drawable6moveToEss>:
     * @note Will redraw the appropriate areas of the screen.
     *
     * @param x The absolute position to move to.
     * @param y The absolute position to move to.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8007500:	b580      	push	{r7, lr}
 8007502:	b082      	sub	sp, #8
 8007504:	af00      	add	r7, sp, #0
 8007506:	6078      	str	r0, [r7, #4]
 8007508:	460b      	mov	r3, r1
 800750a:	807b      	strh	r3, [r7, #2]
 800750c:	4613      	mov	r3, r2
 800750e:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	681b      	ldr	r3, [r3, #0]
 8007514:	3354      	adds	r3, #84	; 0x54
 8007516:	681b      	ldr	r3, [r3, #0]
 8007518:	8879      	ldrh	r1, [r7, #2]
 800751a:	687a      	ldr	r2, [r7, #4]
 800751c:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8007520:	b292      	uxth	r2, r2
 8007522:	1a8a      	subs	r2, r1, r2
 8007524:	b292      	uxth	r2, r2
 8007526:	b210      	sxth	r0, r2
 8007528:	8839      	ldrh	r1, [r7, #0]
 800752a:	687a      	ldr	r2, [r7, #4]
 800752c:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8007530:	b292      	uxth	r2, r2
 8007532:	1a8a      	subs	r2, r1, r2
 8007534:	b292      	uxth	r2, r2
 8007536:	b212      	sxth	r2, r2
 8007538:	4601      	mov	r1, r0
 800753a:	6878      	ldr	r0, [r7, #4]
 800753c:	4798      	blx	r3
    }
 800753e:	bf00      	nop
 8007540:	3708      	adds	r7, #8
 8007542:	46bd      	mov	sp, r7
 8007544:	bd80      	pop	{r7, pc}

08007546 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     *        Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8007546:	b480      	push	{r7}
 8007548:	b083      	sub	sp, #12
 800754a:	af00      	add	r7, sp, #0
 800754c:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800754e:	687b      	ldr	r3, [r7, #4]
 8007550:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007554:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8007556:	687b      	ldr	r3, [r7, #4]
 8007558:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800755c:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 800755e:	687b      	ldr	r3, [r7, #4]
 8007560:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007564:	845a      	strh	r2, [r3, #34]	; 0x22
    }
 8007566:	bf00      	nop
 8007568:	370c      	adds	r7, #12
 800756a:	46bd      	mov	sp, r7
 800756c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007570:	4770      	bx	lr

08007572 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     *
     * @param invalidatedArea              Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8007572:	b580      	push	{r7, lr}
 8007574:	b084      	sub	sp, #16
 8007576:	af00      	add	r7, sp, #0
 8007578:	60f8      	str	r0, [r7, #12]
 800757a:	60b9      	str	r1, [r7, #8]
 800757c:	607a      	str	r2, [r7, #4]
    {
        resetDrawChainCache();
 800757e:	68f8      	ldr	r0, [r7, #12]
 8007580:	f7ff ffe1 	bl	8007546 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8007584:	687b      	ldr	r3, [r7, #4]
 8007586:	681a      	ldr	r2, [r3, #0]
 8007588:	68fb      	ldr	r3, [r7, #12]
 800758a:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 800758c:	687b      	ldr	r3, [r7, #4]
 800758e:	68fa      	ldr	r2, [r7, #12]
 8007590:	601a      	str	r2, [r3, #0]
    }
 8007592:	bf00      	nop
 8007594:	3710      	adds	r7, #16
 8007596:	46bd      	mov	sp, r7
 8007598:	bd80      	pop	{r7, pc}
	...

0800759c <_ZN8touchgfx9ContainerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Container() { }
 800759c:	b580      	push	{r7, lr}
 800759e:	b082      	sub	sp, #8
 80075a0:	af00      	add	r7, sp, #0
 80075a2:	6078      	str	r0, [r7, #4]
 80075a4:	4a05      	ldr	r2, [pc, #20]	; (80075bc <_ZN8touchgfx9ContainerD1Ev+0x20>)
 80075a6:	687b      	ldr	r3, [r7, #4]
 80075a8:	601a      	str	r2, [r3, #0]
 80075aa:	687b      	ldr	r3, [r7, #4]
 80075ac:	4618      	mov	r0, r3
 80075ae:	f7ff feb1 	bl	8007314 <_ZN8touchgfx8DrawableD1Ev>
 80075b2:	687b      	ldr	r3, [r7, #4]
 80075b4:	4618      	mov	r0, r3
 80075b6:	3708      	adds	r7, #8
 80075b8:	46bd      	mov	sp, r7
 80075ba:	bd80      	pop	{r7, pc}
 80075bc:	0801d7c0 	.word	0x0801d7c0

080075c0 <_ZN8touchgfx9ContainerD0Ev>:
 80075c0:	b580      	push	{r7, lr}
 80075c2:	b082      	sub	sp, #8
 80075c4:	af00      	add	r7, sp, #0
 80075c6:	6078      	str	r0, [r7, #4]
 80075c8:	6878      	ldr	r0, [r7, #4]
 80075ca:	f7ff ffe7 	bl	800759c <_ZN8touchgfx9ContainerD1Ev>
 80075ce:	212c      	movs	r1, #44	; 0x2c
 80075d0:	6878      	ldr	r0, [r7, #4]
 80075d2:	f013 fa93 	bl	801aafc <_ZdlPvj>
 80075d6:	687b      	ldr	r3, [r7, #4]
 80075d8:	4618      	mov	r0, r3
 80075da:	3708      	adds	r7, #8
 80075dc:	46bd      	mov	sp, r7
 80075de:	bd80      	pop	{r7, pc}

080075e0 <_ZN8touchgfx6ScreenD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Screen() { }
 80075e0:	b580      	push	{r7, lr}
 80075e2:	b082      	sub	sp, #8
 80075e4:	af00      	add	r7, sp, #0
 80075e6:	6078      	str	r0, [r7, #4]
 80075e8:	4a06      	ldr	r2, [pc, #24]	; (8007604 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 80075ea:	687b      	ldr	r3, [r7, #4]
 80075ec:	601a      	str	r2, [r3, #0]
 80075ee:	687b      	ldr	r3, [r7, #4]
 80075f0:	3304      	adds	r3, #4
 80075f2:	4618      	mov	r0, r3
 80075f4:	f7ff ffd2 	bl	800759c <_ZN8touchgfx9ContainerD1Ev>
 80075f8:	687b      	ldr	r3, [r7, #4]
 80075fa:	4618      	mov	r0, r3
 80075fc:	3708      	adds	r7, #8
 80075fe:	46bd      	mov	sp, r7
 8007600:	bd80      	pop	{r7, pc}
 8007602:	bf00      	nop
 8007604:	0801e630 	.word	0x0801e630

08007608 <_ZN8touchgfx6ScreenD0Ev>:
 8007608:	b580      	push	{r7, lr}
 800760a:	b082      	sub	sp, #8
 800760c:	af00      	add	r7, sp, #0
 800760e:	6078      	str	r0, [r7, #4]
 8007610:	6878      	ldr	r0, [r7, #4]
 8007612:	f7ff ffe5 	bl	80075e0 <_ZN8touchgfx6ScreenD1Ev>
 8007616:	213c      	movs	r1, #60	; 0x3c
 8007618:	6878      	ldr	r0, [r7, #4]
 800761a:	f013 fa6f 	bl	801aafc <_ZdlPvj>
 800761e:	687b      	ldr	r3, [r7, #4]
 8007620:	4618      	mov	r0, r3
 8007622:	3708      	adds	r7, #8
 8007624:	46bd      	mov	sp, r7
 8007626:	bd80      	pop	{r7, pc}

08007628 <_ZN8touchgfx6Screen11setupScreenEv>:
     *        Base version does nothing, but place any screen specific initialization code in
     *        an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void setupScreen() { }
 8007628:	b480      	push	{r7}
 800762a:	b083      	sub	sp, #12
 800762c:	af00      	add	r7, sp, #0
 800762e:	6078      	str	r0, [r7, #4]
 8007630:	bf00      	nop
 8007632:	370c      	adds	r7, #12
 8007634:	46bd      	mov	sp, r7
 8007636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800763a:	4770      	bx	lr

0800763c <_ZN8touchgfx6Screen15afterTransitionEv>:
     *        Base version does nothing, but override to do screen specific initialization code
     *        that has to be done after the transition to the screen.
     *
     * @see touchgfx::Application::handleTick()
     */
    virtual void afterTransition() { }
 800763c:	b480      	push	{r7}
 800763e:	b083      	sub	sp, #12
 8007640:	af00      	add	r7, sp, #0
 8007642:	6078      	str	r0, [r7, #4]
 8007644:	bf00      	nop
 8007646:	370c      	adds	r7, #12
 8007648:	46bd      	mov	sp, r7
 800764a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800764e:	4770      	bx	lr

08007650 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *        displayed. Base version does nothing, but place any screen specific cleanup code
     *        in an overridden version.
     *
     * @see touchgfx::Application::switchScreen()
     */
    virtual void tearDownScreen() { }
 8007650:	b480      	push	{r7}
 8007652:	b083      	sub	sp, #12
 8007654:	af00      	add	r7, sp, #0
 8007656:	6078      	str	r0, [r7, #4]
 8007658:	bf00      	nop
 800765a:	370c      	adds	r7, #12
 800765c:	46bd      	mov	sp, r7
 800765e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007662:	4770      	bx	lr

08007664 <_ZN8touchgfx6Screen15handleTickEventEv>:
     *        Application::TICK_INTERVAL_MS.
     *
     *        Called by the Application on the current screen with a frequency of
     *        Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8007664:	b480      	push	{r7}
 8007666:	b083      	sub	sp, #12
 8007668:	af00      	add	r7, sp, #0
 800766a:	6078      	str	r0, [r7, #4]
    {
    }
 800766c:	bf00      	nop
 800766e:	370c      	adds	r7, #12
 8007670:	46bd      	mov	sp, r7
 8007672:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007676:	4770      	bx	lr

08007678 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *        Called by the Application on the reception of a "key", the meaning of which is
     *        platform/application specific. Default implementation does nothing.
     *
     * @param key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8007678:	b480      	push	{r7}
 800767a:	b083      	sub	sp, #12
 800767c:	af00      	add	r7, sp, #0
 800767e:	6078      	str	r0, [r7, #4]
 8007680:	460b      	mov	r3, r1
 8007682:	70fb      	strb	r3, [r7, #3]
    {
    }
 8007684:	bf00      	nop
 8007686:	370c      	adds	r7, #12
 8007688:	46bd      	mov	sp, r7
 800768a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800768e:	4770      	bx	lr

08007690 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     *
     * @param [in] d The Drawable to add.
     */
    void add(Drawable& d)
 8007690:	b580      	push	{r7, lr}
 8007692:	b082      	sub	sp, #8
 8007694:	af00      	add	r7, sp, #0
 8007696:	6078      	str	r0, [r7, #4]
 8007698:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 800769a:	687b      	ldr	r3, [r7, #4]
 800769c:	3304      	adds	r3, #4
 800769e:	6839      	ldr	r1, [r7, #0]
 80076a0:	4618      	mov	r0, r3
 80076a2:	f002 ff11 	bl	800a4c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 80076a6:	bf00      	nop
 80076a8:	3708      	adds	r7, #8
 80076aa:	46bd      	mov	sp, r7
 80076ac:	bd80      	pop	{r7, pc}
	...

080076b0 <_ZN8touchgfx6WidgetC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Widget() : Drawable() { }
 80076b0:	b580      	push	{r7, lr}
 80076b2:	b082      	sub	sp, #8
 80076b4:	af00      	add	r7, sp, #0
 80076b6:	6078      	str	r0, [r7, #4]
 80076b8:	687b      	ldr	r3, [r7, #4]
 80076ba:	4618      	mov	r0, r3
 80076bc:	f7ff fdfc 	bl	80072b8 <_ZN8touchgfx8DrawableC1Ev>
 80076c0:	4a03      	ldr	r2, [pc, #12]	; (80076d0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	601a      	str	r2, [r3, #0]
 80076c6:	687b      	ldr	r3, [r7, #4]
 80076c8:	4618      	mov	r0, r3
 80076ca:	3708      	adds	r7, #8
 80076cc:	46bd      	mov	sp, r7
 80076ce:	bd80      	pop	{r7, pc}
 80076d0:	0801ce08 	.word	0x0801ce08

080076d4 <_ZN8touchgfx6WidgetD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Widget() { }
 80076d4:	b580      	push	{r7, lr}
 80076d6:	b082      	sub	sp, #8
 80076d8:	af00      	add	r7, sp, #0
 80076da:	6078      	str	r0, [r7, #4]
 80076dc:	4a05      	ldr	r2, [pc, #20]	; (80076f4 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	601a      	str	r2, [r3, #0]
 80076e2:	687b      	ldr	r3, [r7, #4]
 80076e4:	4618      	mov	r0, r3
 80076e6:	f7ff fe15 	bl	8007314 <_ZN8touchgfx8DrawableD1Ev>
 80076ea:	687b      	ldr	r3, [r7, #4]
 80076ec:	4618      	mov	r0, r3
 80076ee:	3708      	adds	r7, #8
 80076f0:	46bd      	mov	sp, r7
 80076f2:	bd80      	pop	{r7, pc}
 80076f4:	0801ce08 	.word	0x0801ce08

080076f8 <_ZN8touchgfx6WidgetD0Ev>:
 80076f8:	b580      	push	{r7, lr}
 80076fa:	b082      	sub	sp, #8
 80076fc:	af00      	add	r7, sp, #0
 80076fe:	6078      	str	r0, [r7, #4]
 8007700:	6878      	ldr	r0, [r7, #4]
 8007702:	f7ff ffe7 	bl	80076d4 <_ZN8touchgfx6WidgetD1Ev>
 8007706:	2128      	movs	r1, #40	; 0x28
 8007708:	6878      	ldr	r0, [r7, #4]
 800770a:	f013 f9f7 	bl	801aafc <_ZdlPvj>
 800770e:	687b      	ldr	r3, [r7, #4]
 8007710:	4618      	mov	r0, r3
 8007712:	3708      	adds	r7, #8
 8007714:	46bd      	mov	sp, r7
 8007716:	bd80      	pop	{r7, pc}

08007718 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param x          The point of intersection expressed in coordinates relative to the parent.
     * @param y          The y coordinate.
     * @param [out] last Result will be placed here.
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
 8007718:	b580      	push	{r7, lr}
 800771a:	b084      	sub	sp, #16
 800771c:	af00      	add	r7, sp, #0
 800771e:	60f8      	str	r0, [r7, #12]
 8007720:	607b      	str	r3, [r7, #4]
 8007722:	460b      	mov	r3, r1
 8007724:	817b      	strh	r3, [r7, #10]
 8007726:	4613      	mov	r3, r2
 8007728:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 800772a:	68fb      	ldr	r3, [r7, #12]
 800772c:	4618      	mov	r0, r3
 800772e:	f7ff fecd 	bl	80074cc <_ZNK8touchgfx8Drawable9isVisibleEv>
 8007732:	4603      	mov	r3, r0
 8007734:	2b00      	cmp	r3, #0
 8007736:	d008      	beq.n	800774a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8007738:	68fb      	ldr	r3, [r7, #12]
 800773a:	4618      	mov	r0, r3
 800773c:	f7ff fed3 	bl	80074e6 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8007740:	4603      	mov	r3, r0
 8007742:	2b00      	cmp	r3, #0
 8007744:	d001      	beq.n	800774a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8007746:	2301      	movs	r3, #1
 8007748:	e000      	b.n	800774c <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 800774a:	2300      	movs	r3, #0
 800774c:	2b00      	cmp	r3, #0
 800774e:	d002      	beq.n	8007756 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8007750:	68fa      	ldr	r2, [r7, #12]
 8007752:	687b      	ldr	r3, [r7, #4]
 8007754:	601a      	str	r2, [r3, #0]
        }
    }
 8007756:	bf00      	nop
 8007758:	3710      	adds	r7, #16
 800775a:	46bd      	mov	sp, r7
 800775c:	bd80      	pop	{r7, pc}
	...

08007760 <_ZN8touchgfx3BoxC1Ev>:
     *
     * @brief Constructor.
     *
     *        Constructs a new Box with a default alpha value of 255 (solid)
     */
    Box() : Widget(), alpha(255), color(0), reportAsSolid(false)
 8007760:	b580      	push	{r7, lr}
 8007762:	b082      	sub	sp, #8
 8007764:	af00      	add	r7, sp, #0
 8007766:	6078      	str	r0, [r7, #4]
 8007768:	687b      	ldr	r3, [r7, #4]
 800776a:	4618      	mov	r0, r3
 800776c:	f7ff ffa0 	bl	80076b0 <_ZN8touchgfx6WidgetC1Ev>
 8007770:	4a0a      	ldr	r2, [pc, #40]	; (800779c <_ZN8touchgfx3BoxC1Ev+0x3c>)
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	601a      	str	r2, [r3, #0]
 8007776:	687b      	ldr	r3, [r7, #4]
 8007778:	22ff      	movs	r2, #255	; 0xff
 800777a:	f883 2026 	strb.w	r2, [r3, #38]	; 0x26
 800777e:	687b      	ldr	r3, [r7, #4]
 8007780:	3328      	adds	r3, #40	; 0x28
 8007782:	2100      	movs	r1, #0
 8007784:	4618      	mov	r0, r3
 8007786:	f7ff fd51 	bl	800722c <_ZN8touchgfx9colortypeC1Em>
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	2200      	movs	r2, #0
 800778e:	f883 202c 	strb.w	r2, [r3, #44]	; 0x2c
    {
    }
 8007792:	687b      	ldr	r3, [r7, #4]
 8007794:	4618      	mov	r0, r3
 8007796:	3708      	adds	r7, #8
 8007798:	46bd      	mov	sp, r7
 800779a:	bd80      	pop	{r7, pc}
 800779c:	0801e1e4 	.word	0x0801e1e4

080077a0 <_ZN8touchgfx3BoxD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Box() {}
 80077a0:	b580      	push	{r7, lr}
 80077a2:	b082      	sub	sp, #8
 80077a4:	af00      	add	r7, sp, #0
 80077a6:	6078      	str	r0, [r7, #4]
 80077a8:	4a05      	ldr	r2, [pc, #20]	; (80077c0 <_ZN8touchgfx3BoxD1Ev+0x20>)
 80077aa:	687b      	ldr	r3, [r7, #4]
 80077ac:	601a      	str	r2, [r3, #0]
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	4618      	mov	r0, r3
 80077b2:	f7ff ff8f 	bl	80076d4 <_ZN8touchgfx6WidgetD1Ev>
 80077b6:	687b      	ldr	r3, [r7, #4]
 80077b8:	4618      	mov	r0, r3
 80077ba:	3708      	adds	r7, #8
 80077bc:	46bd      	mov	sp, r7
 80077be:	bd80      	pop	{r7, pc}
 80077c0:	0801e1e4 	.word	0x0801e1e4

080077c4 <_ZN8touchgfx3BoxD0Ev>:
 80077c4:	b580      	push	{r7, lr}
 80077c6:	b082      	sub	sp, #8
 80077c8:	af00      	add	r7, sp, #0
 80077ca:	6078      	str	r0, [r7, #4]
 80077cc:	6878      	ldr	r0, [r7, #4]
 80077ce:	f7ff ffe7 	bl	80077a0 <_ZN8touchgfx3BoxD1Ev>
 80077d2:	2130      	movs	r1, #48	; 0x30
 80077d4:	6878      	ldr	r0, [r7, #4]
 80077d6:	f013 f991 	bl	801aafc <_ZdlPvj>
 80077da:	687b      	ldr	r3, [r7, #4]
 80077dc:	4618      	mov	r0, r3
 80077de:	3708      	adds	r7, #8
 80077e0:	46bd      	mov	sp, r7
 80077e2:	bd80      	pop	{r7, pc}

080077e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     *        Sets the color of the rectangle.
     *
     * @param color The color of the box.
     */
    void setColor(colortype color)
 80077e4:	b480      	push	{r7}
 80077e6:	b083      	sub	sp, #12
 80077e8:	af00      	add	r7, sp, #0
 80077ea:	6078      	str	r0, [r7, #4]
 80077ec:	6039      	str	r1, [r7, #0]
    {
        this->color = color;
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	683a      	ldr	r2, [r7, #0]
 80077f2:	629a      	str	r2, [r3, #40]	; 0x28
    }
 80077f4:	bf00      	nop
 80077f6:	370c      	adds	r7, #12
 80077f8:	46bd      	mov	sp, r7
 80077fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80077fe:	4770      	bx	lr

08007800 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>:
class View : public Screen
 8007800:	b580      	push	{r7, lr}
 8007802:	b082      	sub	sp, #8
 8007804:	af00      	add	r7, sp, #0
 8007806:	6078      	str	r0, [r7, #4]
 8007808:	4a05      	ldr	r2, [pc, #20]	; (8007820 <_ZN8touchgfx4ViewI15screenPresenterED1Ev+0x20>)
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	601a      	str	r2, [r3, #0]
 800780e:	687b      	ldr	r3, [r7, #4]
 8007810:	4618      	mov	r0, r3
 8007812:	f7ff fee5 	bl	80075e0 <_ZN8touchgfx6ScreenD1Ev>
 8007816:	687b      	ldr	r3, [r7, #4]
 8007818:	4618      	mov	r0, r3
 800781a:	3708      	adds	r7, #8
 800781c:	46bd      	mov	sp, r7
 800781e:	bd80      	pop	{r7, pc}
 8007820:	0801cdd4 	.word	0x0801cdd4

08007824 <_ZN8touchgfx4ViewI15screenPresenterED0Ev>:
 8007824:	b580      	push	{r7, lr}
 8007826:	b082      	sub	sp, #8
 8007828:	af00      	add	r7, sp, #0
 800782a:	6078      	str	r0, [r7, #4]
 800782c:	6878      	ldr	r0, [r7, #4]
 800782e:	f7ff ffe7 	bl	8007800 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 8007832:	2140      	movs	r1, #64	; 0x40
 8007834:	6878      	ldr	r0, [r7, #4]
 8007836:	f013 f961 	bl	801aafc <_ZdlPvj>
 800783a:	687b      	ldr	r3, [r7, #4]
 800783c:	4618      	mov	r0, r3
 800783e:	3708      	adds	r7, #8
 8007840:	46bd      	mov	sp, r7
 8007842:	bd80      	pop	{r7, pc}

08007844 <_ZN14screenViewBaseD1Ev>:

class screenViewBase : public touchgfx::View<screenPresenter>
{
public:
    screenViewBase();
    virtual ~screenViewBase() {}
 8007844:	b580      	push	{r7, lr}
 8007846:	b082      	sub	sp, #8
 8007848:	af00      	add	r7, sp, #0
 800784a:	6078      	str	r0, [r7, #4]
 800784c:	4a0a      	ldr	r2, [pc, #40]	; (8007878 <_ZN14screenViewBaseD1Ev+0x34>)
 800784e:	687b      	ldr	r3, [r7, #4]
 8007850:	601a      	str	r2, [r3, #0]
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	3370      	adds	r3, #112	; 0x70
 8007856:	4618      	mov	r0, r3
 8007858:	f002 fc14 	bl	800a084 <_ZN8touchgfx11AnalogClockD1Ev>
 800785c:	687b      	ldr	r3, [r7, #4]
 800785e:	3340      	adds	r3, #64	; 0x40
 8007860:	4618      	mov	r0, r3
 8007862:	f7ff ff9d 	bl	80077a0 <_ZN8touchgfx3BoxD1Ev>
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	4618      	mov	r0, r3
 800786a:	f7ff ffc9 	bl	8007800 <_ZN8touchgfx4ViewI15screenPresenterED1Ev>
 800786e:	687b      	ldr	r3, [r7, #4]
 8007870:	4618      	mov	r0, r3
 8007872:	3708      	adds	r7, #8
 8007874:	46bd      	mov	sp, r7
 8007876:	bd80      	pop	{r7, pc}
 8007878:	0801cda0 	.word	0x0801cda0

0800787c <_ZN14screenViewBaseD0Ev>:
 800787c:	b580      	push	{r7, lr}
 800787e:	b082      	sub	sp, #8
 8007880:	af00      	add	r7, sp, #0
 8007882:	6078      	str	r0, [r7, #4]
 8007884:	6878      	ldr	r0, [r7, #4]
 8007886:	f7ff ffdd 	bl	8007844 <_ZN14screenViewBaseD1Ev>
 800788a:	f44f 7168 	mov.w	r1, #928	; 0x3a0
 800788e:	6878      	ldr	r0, [r7, #4]
 8007890:	f013 f934 	bl	801aafc <_ZdlPvj>
 8007894:	687b      	ldr	r3, [r7, #4]
 8007896:	4618      	mov	r0, r3
 8007898:	3708      	adds	r7, #8
 800789a:	46bd      	mov	sp, r7
 800789c:	bd80      	pop	{r7, pc}
	...

080078a0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>:
     * @param green Value of the green part (0-255).
     * @param blue  Value of the blue part (0-255).
     *
     * @return The color representation depending on LCD color format.
     */
    static colortype getColorFrom24BitRGB(uint8_t red, uint8_t green, uint8_t blue)
 80078a0:	b590      	push	{r4, r7, lr}
 80078a2:	b083      	sub	sp, #12
 80078a4:	af00      	add	r7, sp, #0
 80078a6:	4603      	mov	r3, r0
 80078a8:	71fb      	strb	r3, [r7, #7]
 80078aa:	460b      	mov	r3, r1
 80078ac:	71bb      	strb	r3, [r7, #6]
 80078ae:	4613      	mov	r3, r2
 80078b0:	717b      	strb	r3, [r7, #5]
    {
        assert(HAL::getInstance() && "Cannot set color before HAL is initialized");
 80078b2:	f7ff f893 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 80078b6:	4603      	mov	r3, r0
 80078b8:	2b00      	cmp	r3, #0
 80078ba:	d105      	bne.n	80078c8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x28>
 80078bc:	4b0a      	ldr	r3, [pc, #40]	; (80078e8 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x48>)
 80078be:	4a0b      	ldr	r2, [pc, #44]	; (80078ec <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x4c>)
 80078c0:	2138      	movs	r1, #56	; 0x38
 80078c2:	480b      	ldr	r0, [pc, #44]	; (80078f0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh+0x50>)
 80078c4:	f013 ff14 	bl	801b6f0 <__assert_func>
 80078c8:	bf00      	nop
        return HAL::lcd().getColorFrom24BitRGB(red, green, blue);
 80078ca:	f7ff f893 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 80078ce:	6803      	ldr	r3, [r0, #0]
 80078d0:	332c      	adds	r3, #44	; 0x2c
 80078d2:	681c      	ldr	r4, [r3, #0]
 80078d4:	797b      	ldrb	r3, [r7, #5]
 80078d6:	79ba      	ldrb	r2, [r7, #6]
 80078d8:	79f9      	ldrb	r1, [r7, #7]
 80078da:	47a0      	blx	r4
 80078dc:	4603      	mov	r3, r0
    }
 80078de:	4618      	mov	r0, r3
 80078e0:	370c      	adds	r7, #12
 80078e2:	46bd      	mov	sp, r7
 80078e4:	bd90      	pop	{r4, r7, pc}
 80078e6:	bf00      	nop
 80078e8:	0801c938 	.word	0x0801c938
 80078ec:	0801ce68 	.word	0x0801ce68
 80078f0:	0801c97c 	.word	0x0801c97c

080078f4 <_ZN14screenViewBaseC1Ev>:
/*********************************************************************************/
#include <gui_generated/screen_screen/screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"

screenViewBase::screenViewBase()
 80078f4:	b590      	push	{r4, r7, lr}
 80078f6:	b085      	sub	sp, #20
 80078f8:	af02      	add	r7, sp, #8
 80078fa:	6078      	str	r0, [r7, #4]
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4618      	mov	r0, r3
 8007900:	f000 f882 	bl	8007a08 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>
 8007904:	4a3a      	ldr	r2, [pc, #232]	; (80079f0 <_ZN14screenViewBaseC1Ev+0xfc>)
 8007906:	687b      	ldr	r3, [r7, #4]
 8007908:	601a      	str	r2, [r3, #0]
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	3340      	adds	r3, #64	; 0x40
 800790e:	4618      	mov	r0, r3
 8007910:	f7ff ff26 	bl	8007760 <_ZN8touchgfx3BoxC1Ev>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	3370      	adds	r3, #112	; 0x70
 8007918:	4618      	mov	r0, r3
 800791a:	f002 fb41 	bl	8009fa0 <_ZN8touchgfx11AnalogClockC1Ev>
{

    box1.setPosition(0, 0, 800, 480);
 800791e:	687b      	ldr	r3, [r7, #4]
 8007920:	f103 0040 	add.w	r0, r3, #64	; 0x40
 8007924:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8007928:	9300      	str	r3, [sp, #0]
 800792a:	f44f 7348 	mov.w	r3, #800	; 0x320
 800792e:	2200      	movs	r2, #0
 8007930:	2100      	movs	r1, #0
 8007932:	f7ff fd0f 	bl	8007354 <_ZN8touchgfx8Drawable11setPositionEssss>
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(30, 148, 82));
 8007936:	687b      	ldr	r3, [r7, #4]
 8007938:	f103 0440 	add.w	r4, r3, #64	; 0x40
 800793c:	2252      	movs	r2, #82	; 0x52
 800793e:	2194      	movs	r1, #148	; 0x94
 8007940:	201e      	movs	r0, #30
 8007942:	f7ff ffad 	bl	80078a0 <_ZN8touchgfx5Color20getColorFrom24BitRGBEhhh>
 8007946:	4603      	mov	r3, r0
 8007948:	4619      	mov	r1, r3
 800794a:	4620      	mov	r0, r4
 800794c:	f7ff ff4a 	bl	80077e4 <_ZN8touchgfx3Box8setColorENS_9colortypeE>

    analogClock1.setXY(284, 119);
 8007950:	687b      	ldr	r3, [r7, #4]
 8007952:	3370      	adds	r3, #112	; 0x70
 8007954:	2277      	movs	r2, #119	; 0x77
 8007956:	f44f 718e 	mov.w	r1, #284	; 0x11c
 800795a:	4618      	mov	r0, r3
 800795c:	f7ff fd45 	bl	80073ea <_ZN8touchgfx8Drawable5setXYEss>
    analogClock1.setBackground(BITMAP_BLUE_CLOCKS_BACKGROUNDS_CLOCK_STANDARD_BACKGROUND_ID, 116, 116);
 8007960:	687b      	ldr	r3, [r7, #4]
 8007962:	f103 0070 	add.w	r0, r3, #112	; 0x70
 8007966:	2374      	movs	r3, #116	; 0x74
 8007968:	2274      	movs	r2, #116	; 0x74
 800796a:	2100      	movs	r1, #0
 800796c:	f002 faa2 	bl	8009eb4 <_ZN8touchgfx11AnalogClock13setBackgroundEtss>
    analogClock1.setupSecondHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_SECOND_HAND_ID, 3, 66);
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	f103 0070 	add.w	r0, r3, #112	; 0x70
 8007976:	2342      	movs	r3, #66	; 0x42
 8007978:	2203      	movs	r2, #3
 800797a:	2103      	movs	r1, #3
 800797c:	f002 f9b4 	bl	8009ce8 <_ZN8touchgfx11AnalogClock15setupSecondHandEtss>
    analogClock1.setupMinuteHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_MINUTE_HAND_ID, 7, 67);
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	f103 0070 	add.w	r0, r3, #112	; 0x70
 8007986:	2343      	movs	r3, #67	; 0x43
 8007988:	2207      	movs	r2, #7
 800798a:	2102      	movs	r1, #2
 800798c:	f002 f9a0 	bl	8009cd0 <_ZN8touchgfx11AnalogClock15setupMinuteHandEtss>
    analogClock1.setMinuteHandSecondCorrection(false);
 8007990:	687b      	ldr	r3, [r7, #4]
 8007992:	3370      	adds	r3, #112	; 0x70
 8007994:	2100      	movs	r1, #0
 8007996:	4618      	mov	r0, r3
 8007998:	f002 fade 	bl	8009f58 <_ZN8touchgfx11AnalogClock29setMinuteHandSecondCorrectionEb>
    analogClock1.setupHourHand(BITMAP_BLUE_CLOCKS_HANDS_CLOCK_STANDARD_HOUR_HAND_ID, 7, 52);
 800799c:	687b      	ldr	r3, [r7, #4]
 800799e:	f103 0070 	add.w	r0, r3, #112	; 0x70
 80079a2:	2334      	movs	r3, #52	; 0x34
 80079a4:	2207      	movs	r2, #7
 80079a6:	2101      	movs	r1, #1
 80079a8:	f002 f986 	bl	8009cb8 <_ZN8touchgfx11AnalogClock13setupHourHandEtss>
    analogClock1.setHourHandMinuteCorrection(false);
 80079ac:	687b      	ldr	r3, [r7, #4]
 80079ae:	3370      	adds	r3, #112	; 0x70
 80079b0:	2100      	movs	r1, #0
 80079b2:	4618      	mov	r0, r3
 80079b4:	f002 fab6 	bl	8009f24 <_ZN8touchgfx11AnalogClock27setHourHandMinuteCorrectionEb>
    analogClock1.initializeTime24Hour(10, 10, 0);
 80079b8:	687b      	ldr	r3, [r7, #4]
 80079ba:	f103 0070 	add.w	r0, r3, #112	; 0x70
 80079be:	2300      	movs	r3, #0
 80079c0:	220a      	movs	r2, #10
 80079c2:	210a      	movs	r1, #10
 80079c4:	f002 fa16 	bl	8009df4 <_ZN8touchgfx11AnalogClock20initializeTime24HourEhhh>

    add(box1);
 80079c8:	687a      	ldr	r2, [r7, #4]
 80079ca:	687b      	ldr	r3, [r7, #4]
 80079cc:	3340      	adds	r3, #64	; 0x40
 80079ce:	4619      	mov	r1, r3
 80079d0:	4610      	mov	r0, r2
 80079d2:	f7ff fe5d 	bl	8007690 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
    add(analogClock1);
 80079d6:	687a      	ldr	r2, [r7, #4]
 80079d8:	687b      	ldr	r3, [r7, #4]
 80079da:	3370      	adds	r3, #112	; 0x70
 80079dc:	4619      	mov	r1, r3
 80079de:	4610      	mov	r0, r2
 80079e0:	f7ff fe56 	bl	8007690 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 80079e4:	687b      	ldr	r3, [r7, #4]
 80079e6:	4618      	mov	r0, r3
 80079e8:	370c      	adds	r7, #12
 80079ea:	46bd      	mov	sp, r7
 80079ec:	bd90      	pop	{r4, r7, pc}
 80079ee:	bf00      	nop
 80079f0:	0801cda0 	.word	0x0801cda0

080079f4 <_ZN14screenViewBase11setupScreenEv>:

void screenViewBase::setupScreen()
{
 80079f4:	b480      	push	{r7}
 80079f6:	b083      	sub	sp, #12
 80079f8:	af00      	add	r7, sp, #0
 80079fa:	6078      	str	r0, [r7, #4]

}
 80079fc:	bf00      	nop
 80079fe:	370c      	adds	r7, #12
 8007a00:	46bd      	mov	sp, r7
 8007a02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a06:	4770      	bx	lr

08007a08 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev>:
    View() : presenter(0)
 8007a08:	b580      	push	{r7, lr}
 8007a0a:	b082      	sub	sp, #8
 8007a0c:	af00      	add	r7, sp, #0
 8007a0e:	6078      	str	r0, [r7, #4]
 8007a10:	687b      	ldr	r3, [r7, #4]
 8007a12:	4618      	mov	r0, r3
 8007a14:	f006 f9e6 	bl	800dde4 <_ZN8touchgfx6ScreenC1Ev>
 8007a18:	4a05      	ldr	r2, [pc, #20]	; (8007a30 <_ZN8touchgfx4ViewI15screenPresenterEC1Ev+0x28>)
 8007a1a:	687b      	ldr	r3, [r7, #4]
 8007a1c:	601a      	str	r2, [r3, #0]
 8007a1e:	687b      	ldr	r3, [r7, #4]
 8007a20:	2200      	movs	r2, #0
 8007a22:	63da      	str	r2, [r3, #60]	; 0x3c
    }
 8007a24:	687b      	ldr	r3, [r7, #4]
 8007a26:	4618      	mov	r0, r3
 8007a28:	3708      	adds	r7, #8
 8007a2a:	46bd      	mov	sp, r7
 8007a2c:	bd80      	pop	{r7, pc}
 8007a2e:	bf00      	nop
 8007a30:	0801cdd4 	.word	0x0801cdd4

08007a34 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 8007a34:	b480      	push	{r7}
 8007a36:	af00      	add	r7, sp, #0
    return bitmap_database;
 8007a38:	4b02      	ldr	r3, [pc, #8]	; (8007a44 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 8007a3a:	4618      	mov	r0, r3
 8007a3c:	46bd      	mov	sp, r7
 8007a3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a42:	4770      	bx	lr
 8007a44:	0801cec4 	.word	0x0801cec4

08007a48 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 8007a48:	b480      	push	{r7}
 8007a4a:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 8007a4c:	2304      	movs	r3, #4
}
 8007a4e:	4618      	mov	r0, r3
 8007a50:	46bd      	mov	sp, r7
 8007a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a56:	4770      	bx	lr

08007a58 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param data A reference to the TypedTextData storage array.
     * @param f    The fonts associated with the array.
     * @param n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 8007a58:	b480      	push	{r7}
 8007a5a:	b085      	sub	sp, #20
 8007a5c:	af00      	add	r7, sp, #0
 8007a5e:	60f8      	str	r0, [r7, #12]
 8007a60:	60b9      	str	r1, [r7, #8]
 8007a62:	4613      	mov	r3, r2
 8007a64:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 8007a66:	4a07      	ldr	r2, [pc, #28]	; (8007a84 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 8007a68:	68fb      	ldr	r3, [r7, #12]
 8007a6a:	6013      	str	r3, [r2, #0]
        fonts = f;
 8007a6c:	4a06      	ldr	r2, [pc, #24]	; (8007a88 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 8007a6e:	68bb      	ldr	r3, [r7, #8]
 8007a70:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 8007a72:	4a06      	ldr	r2, [pc, #24]	; (8007a8c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 8007a74:	88fb      	ldrh	r3, [r7, #6]
 8007a76:	8013      	strh	r3, [r2, #0]
    }
 8007a78:	bf00      	nop
 8007a7a:	3714      	adds	r7, #20
 8007a7c:	46bd      	mov	sp, r7
 8007a7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a82:	4770      	bx	lr
 8007a84:	200014ac 	.word	0x200014ac
 8007a88:	200014b4 	.word	0x200014b4
 8007a8c:	200014b0 	.word	0x200014b0

08007a90 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8007a90:	b590      	push	{r4, r7, lr}
 8007a92:	b085      	sub	sp, #20
 8007a94:	af00      	add	r7, sp, #0
 8007a96:	4603      	mov	r3, r0
 8007a98:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 8007a9e:	88fb      	ldrh	r3, [r7, #6]
 8007aa0:	2b00      	cmp	r3, #0
 8007aa2:	d127      	bne.n	8007af4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 8007aa4:	88fb      	ldrh	r3, [r7, #6]
 8007aa6:	4a1e      	ldr	r2, [pc, #120]	; (8007b20 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8007aa8:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007aac:	2b00      	cmp	r3, #0
 8007aae:	d016      	beq.n	8007ade <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 8007ab0:	88fb      	ldrh	r3, [r7, #6]
 8007ab2:	4a1b      	ldr	r2, [pc, #108]	; (8007b20 <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 8007ab4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007ab8:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8007aba:	68bb      	ldr	r3, [r7, #8]
 8007abc:	681b      	ldr	r3, [r3, #0]
 8007abe:	68ba      	ldr	r2, [r7, #8]
 8007ac0:	4413      	add	r3, r2
 8007ac2:	4a18      	ldr	r2, [pc, #96]	; (8007b24 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8007ac4:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8007ac6:	68bb      	ldr	r3, [r7, #8]
 8007ac8:	685b      	ldr	r3, [r3, #4]
 8007aca:	68ba      	ldr	r2, [r7, #8]
 8007acc:	4413      	add	r3, r2
 8007ace:	4a16      	ldr	r2, [pc, #88]	; (8007b28 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8007ad0:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8007ad2:	68bb      	ldr	r3, [r7, #8]
 8007ad4:	689b      	ldr	r3, [r3, #8]
 8007ad6:	68ba      	ldr	r2, [r7, #8]
 8007ad8:	4413      	add	r3, r2
 8007ada:	60fb      	str	r3, [r7, #12]
 8007adc:	e00a      	b.n	8007af4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            //compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 8007ade:	4b11      	ldr	r3, [pc, #68]	; (8007b24 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 8007ae0:	4a12      	ldr	r2, [pc, #72]	; (8007b2c <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 8007ae2:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8007ae4:	2200      	movs	r2, #0
 8007ae6:	4b10      	ldr	r3, [pc, #64]	; (8007b28 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 8007ae8:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8007aea:	88fb      	ldrh	r3, [r7, #6]
 8007aec:	4a10      	ldr	r2, [pc, #64]	; (8007b30 <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 8007aee:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8007af2:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 8007af4:	68fb      	ldr	r3, [r7, #12]
 8007af6:	2b00      	cmp	r3, #0
 8007af8:	d00d      	beq.n	8007b16 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 8007afa:	4a0e      	ldr	r2, [pc, #56]	; (8007b34 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 8007afc:	88fb      	ldrh	r3, [r7, #6]
 8007afe:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8007b00:	f000 f822 	bl	8007b48 <_ZN17TypedTextDatabase8getFontsEv>
 8007b04:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8007b06:	f000 f817 	bl	8007b38 <_ZN17TypedTextDatabase15getInstanceSizeEv>
 8007b0a:	4603      	mov	r3, r0
 8007b0c:	461a      	mov	r2, r3
 8007b0e:	4621      	mov	r1, r4
 8007b10:	68f8      	ldr	r0, [r7, #12]
 8007b12:	f7ff ffa1 	bl	8007a58 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 8007b16:	bf00      	nop
 8007b18:	3714      	adds	r7, #20
 8007b1a:	46bd      	mov	sp, r7
 8007b1c:	bd90      	pop	{r4, r7, pc}
 8007b1e:	bf00      	nop
 8007b20:	200001b0 	.word	0x200001b0
 8007b24:	200001b8 	.word	0x200001b8
 8007b28:	200001bc 	.word	0x200001bc
 8007b2c:	08059fe8 	.word	0x08059fe8
 8007b30:	08059ff0 	.word	0x08059ff0
 8007b34:	200001b4 	.word	0x200001b4

08007b38 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 8007b38:	b480      	push	{r7}
 8007b3a:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 8007b3c:	2301      	movs	r3, #1
}
 8007b3e:	4618      	mov	r0, r3
 8007b40:	46bd      	mov	sp, r7
 8007b42:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b46:	4770      	bx	lr

08007b48 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 8007b48:	b480      	push	{r7}
 8007b4a:	af00      	add	r7, sp, #0
    return _fonts;
 8007b4c:	4b02      	ldr	r3, [pc, #8]	; (8007b58 <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 8007b4e:	4618      	mov	r0, r3
 8007b50:	46bd      	mov	sp, r7
 8007b52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b56:	4770      	bx	lr
 8007b58:	200001c0 	.word	0x200001c0

08007b5c <_Z41__static_initialization_and_destruction_0ii>:
    case 2:
        _fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
}  // namespace TypedTextDatabase
 8007b5c:	b580      	push	{r7, lr}
 8007b5e:	b082      	sub	sp, #8
 8007b60:	af00      	add	r7, sp, #0
 8007b62:	6078      	str	r0, [r7, #4]
 8007b64:	6039      	str	r1, [r7, #0]
 8007b66:	687b      	ldr	r3, [r7, #4]
 8007b68:	2b01      	cmp	r3, #1
 8007b6a:	d113      	bne.n	8007b94 <_Z41__static_initialization_and_destruction_0ii+0x38>
 8007b6c:	683b      	ldr	r3, [r7, #0]
 8007b6e:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007b72:	4293      	cmp	r3, r2
 8007b74:	d10e      	bne.n	8007b94 <_Z41__static_initialization_and_destruction_0ii+0x38>
    &(getFont_verdana_20_4bpp()),
 8007b76:	f7fe fdb9 	bl	80066ec <_Z23getFont_verdana_20_4bppv>
 8007b7a:	4602      	mov	r2, r0
};
 8007b7c:	4b07      	ldr	r3, [pc, #28]	; (8007b9c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8007b7e:	601a      	str	r2, [r3, #0]
    &(getFont_verdana_40_4bpp()),
 8007b80:	f7fe fdf6 	bl	8006770 <_Z23getFont_verdana_40_4bppv>
 8007b84:	4602      	mov	r2, r0
};
 8007b86:	4b05      	ldr	r3, [pc, #20]	; (8007b9c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8007b88:	605a      	str	r2, [r3, #4]
    &(getFont_verdana_10_4bpp())
 8007b8a:	f7fe fd6d 	bl	8006668 <_Z23getFont_verdana_10_4bppv>
 8007b8e:	4602      	mov	r2, r0
};
 8007b90:	4b02      	ldr	r3, [pc, #8]	; (8007b9c <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8007b92:	609a      	str	r2, [r3, #8]
}  // namespace TypedTextDatabase
 8007b94:	bf00      	nop
 8007b96:	3708      	adds	r7, #8
 8007b98:	46bd      	mov	sp, r7
 8007b9a:	bd80      	pop	{r7, pc}
 8007b9c:	200001c0 	.word	0x200001c0

08007ba0 <_GLOBAL__sub_I__fonts>:
 8007ba0:	b580      	push	{r7, lr}
 8007ba2:	af00      	add	r7, sp, #0
 8007ba4:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8007ba8:	2001      	movs	r0, #1
 8007baa:	f7ff ffd7 	bl	8007b5c <_Z41__static_initialization_and_destruction_0ii>
 8007bae:	bd80      	pop	{r7, pc}

08007bb0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 8007bb0:	b580      	push	{r7, lr}
 8007bb2:	b082      	sub	sp, #8
 8007bb4:	af00      	add	r7, sp, #0
 8007bb6:	6078      	str	r0, [r7, #4]
 8007bb8:	4a05      	ldr	r2, [pc, #20]	; (8007bd0 <_ZN19FrontendApplicationD1Ev+0x20>)
 8007bba:	687b      	ldr	r3, [r7, #4]
 8007bbc:	601a      	str	r2, [r3, #0]
 8007bbe:	687b      	ldr	r3, [r7, #4]
 8007bc0:	4618      	mov	r0, r3
 8007bc2:	f7ff f865 	bl	8006c90 <_ZN23FrontendApplicationBaseD1Ev>
 8007bc6:	687b      	ldr	r3, [r7, #4]
 8007bc8:	4618      	mov	r0, r3
 8007bca:	3708      	adds	r7, #8
 8007bcc:	46bd      	mov	sp, r7
 8007bce:	bd80      	pop	{r7, pc}
 8007bd0:	0801cf1c 	.word	0x0801cf1c

08007bd4 <_ZN19FrontendApplicationD0Ev>:
 8007bd4:	b580      	push	{r7, lr}
 8007bd6:	b082      	sub	sp, #8
 8007bd8:	af00      	add	r7, sp, #0
 8007bda:	6078      	str	r0, [r7, #4]
 8007bdc:	6878      	ldr	r0, [r7, #4]
 8007bde:	f7ff ffe7 	bl	8007bb0 <_ZN19FrontendApplicationD1Ev>
 8007be2:	f44f 71a8 	mov.w	r1, #336	; 0x150
 8007be6:	6878      	ldr	r0, [r7, #4]
 8007be8:	f012 ff88 	bl	801aafc <_ZdlPvj>
 8007bec:	687b      	ldr	r3, [r7, #4]
 8007bee:	4618      	mov	r0, r3
 8007bf0:	3708      	adds	r7, #8
 8007bf2:	46bd      	mov	sp, r7
 8007bf4:	bd80      	pop	{r7, pc}

08007bf6 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8007bf6:	b580      	push	{r7, lr}
 8007bf8:	b082      	sub	sp, #8
 8007bfa:	af00      	add	r7, sp, #0
 8007bfc:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 8007bfe:	687b      	ldr	r3, [r7, #4]
 8007c00:	f8d3 314c 	ldr.w	r3, [r3, #332]	; 0x14c
 8007c04:	4618      	mov	r0, r3
 8007c06:	f000 f82d 	bl	8007c64 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 8007c0a:	687b      	ldr	r3, [r7, #4]
 8007c0c:	4618      	mov	r0, r3
 8007c0e:	f005 f823 	bl	800cc58 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 8007c12:	bf00      	nop
 8007c14:	3708      	adds	r7, #8
 8007c16:	46bd      	mov	sp, r7
 8007c18:	bd80      	pop	{r7, pc}
	...

08007c1c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8007c1c:	b580      	push	{r7, lr}
 8007c1e:	b084      	sub	sp, #16
 8007c20:	af00      	add	r7, sp, #0
 8007c22:	60f8      	str	r0, [r7, #12]
 8007c24:	60b9      	str	r1, [r7, #8]
 8007c26:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 8007c28:	68fb      	ldr	r3, [r7, #12]
 8007c2a:	687a      	ldr	r2, [r7, #4]
 8007c2c:	68b9      	ldr	r1, [r7, #8]
 8007c2e:	4618      	mov	r0, r3
 8007c30:	f7ff f8a8 	bl	8006d84 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8007c34:	4a03      	ldr	r2, [pc, #12]	; (8007c44 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 8007c36:	68fb      	ldr	r3, [r7, #12]
 8007c38:	601a      	str	r2, [r3, #0]
{

}
 8007c3a:	68fb      	ldr	r3, [r7, #12]
 8007c3c:	4618      	mov	r0, r3
 8007c3e:	3710      	adds	r7, #16
 8007c40:	46bd      	mov	sp, r7
 8007c42:	bd80      	pop	{r7, pc}
 8007c44:	0801cf1c 	.word	0x0801cf1c

08007c48 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 8007c48:	b480      	push	{r7}
 8007c4a:	b083      	sub	sp, #12
 8007c4c:	af00      	add	r7, sp, #0
 8007c4e:	6078      	str	r0, [r7, #4]
 8007c50:	687b      	ldr	r3, [r7, #4]
 8007c52:	2200      	movs	r2, #0
 8007c54:	601a      	str	r2, [r3, #0]
{

}
 8007c56:	687b      	ldr	r3, [r7, #4]
 8007c58:	4618      	mov	r0, r3
 8007c5a:	370c      	adds	r7, #12
 8007c5c:	46bd      	mov	sp, r7
 8007c5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c62:	4770      	bx	lr

08007c64 <_ZN5Model4tickEv>:

void Model::tick()
{
 8007c64:	b480      	push	{r7}
 8007c66:	b083      	sub	sp, #12
 8007c68:	af00      	add	r7, sp, #0
 8007c6a:	6078      	str	r0, [r7, #4]

}
 8007c6c:	bf00      	nop
 8007c6e:	370c      	adds	r7, #12
 8007c70:	46bd      	mov	sp, r7
 8007c72:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c76:	4770      	bx	lr

08007c78 <_ZN8touchgfx9Presenter8activateEv>:
     * @brief Place initialization code for the Presenter here.
     *
     *        The activate function is called automatically when a screen transition causes
     *        this Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 8007c78:	b480      	push	{r7}
 8007c7a:	b083      	sub	sp, #12
 8007c7c:	af00      	add	r7, sp, #0
 8007c7e:	6078      	str	r0, [r7, #4]
    {
    }
 8007c80:	bf00      	nop
 8007c82:	370c      	adds	r7, #12
 8007c84:	46bd      	mov	sp, r7
 8007c86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c8a:	4770      	bx	lr

08007c8c <_ZN8touchgfx9Presenter10deactivateEv>:
     * @brief Place cleanup code for the Presenter here.
     *
     *        The deactivate function is called automatically when a screen transition causes
     *        this Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 8007c8c:	b480      	push	{r7}
 8007c8e:	b083      	sub	sp, #12
 8007c90:	af00      	add	r7, sp, #0
 8007c92:	6078      	str	r0, [r7, #4]
    {
    }
 8007c94:	bf00      	nop
 8007c96:	370c      	adds	r7, #12
 8007c98:	46bd      	mov	sp, r7
 8007c9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c9e:	4770      	bx	lr

08007ca0 <_ZN8touchgfx9PresenterD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~Presenter()
 8007ca0:	b480      	push	{r7}
 8007ca2:	b083      	sub	sp, #12
 8007ca4:	af00      	add	r7, sp, #0
 8007ca6:	6078      	str	r0, [r7, #4]
    {
 8007ca8:	4a04      	ldr	r2, [pc, #16]	; (8007cbc <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 8007caa:	687b      	ldr	r3, [r7, #4]
 8007cac:	601a      	str	r2, [r3, #0]
    }
 8007cae:	687b      	ldr	r3, [r7, #4]
 8007cb0:	4618      	mov	r0, r3
 8007cb2:	370c      	adds	r7, #12
 8007cb4:	46bd      	mov	sp, r7
 8007cb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cba:	4770      	bx	lr
 8007cbc:	0801cf90 	.word	0x0801cf90

08007cc0 <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 8007cc0:	b580      	push	{r7, lr}
 8007cc2:	b082      	sub	sp, #8
 8007cc4:	af00      	add	r7, sp, #0
 8007cc6:	6078      	str	r0, [r7, #4]
    }
 8007cc8:	6878      	ldr	r0, [r7, #4]
 8007cca:	f7ff ffe9 	bl	8007ca0 <_ZN8touchgfx9PresenterD1Ev>
 8007cce:	2104      	movs	r1, #4
 8007cd0:	6878      	ldr	r0, [r7, #4]
 8007cd2:	f012 ff13 	bl	801aafc <_ZdlPvj>
 8007cd6:	687b      	ldr	r3, [r7, #4]
 8007cd8:	4618      	mov	r0, r3
 8007cda:	3708      	adds	r7, #8
 8007cdc:	46bd      	mov	sp, r7
 8007cde:	bd80      	pop	{r7, pc}

08007ce0 <_ZN8touchgfx9PresenterC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor.
     */
    Presenter()
 8007ce0:	b480      	push	{r7}
 8007ce2:	b083      	sub	sp, #12
 8007ce4:	af00      	add	r7, sp, #0
 8007ce6:	6078      	str	r0, [r7, #4]
    {
 8007ce8:	4a04      	ldr	r2, [pc, #16]	; (8007cfc <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 8007cea:	687b      	ldr	r3, [r7, #4]
 8007cec:	601a      	str	r2, [r3, #0]
    }
 8007cee:	687b      	ldr	r3, [r7, #4]
 8007cf0:	4618      	mov	r0, r3
 8007cf2:	370c      	adds	r7, #12
 8007cf4:	46bd      	mov	sp, r7
 8007cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cfa:	4770      	bx	lr
 8007cfc:	0801cf90 	.word	0x0801cf90

08007d00 <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 8007d00:	b480      	push	{r7}
 8007d02:	b083      	sub	sp, #12
 8007d04:	af00      	add	r7, sp, #0
 8007d06:	6078      	str	r0, [r7, #4]
 8007d08:	4a06      	ldr	r2, [pc, #24]	; (8007d24 <_ZN13ModelListenerC1Ev+0x24>)
 8007d0a:	687b      	ldr	r3, [r7, #4]
 8007d0c:	601a      	str	r2, [r3, #0]
 8007d0e:	687b      	ldr	r3, [r7, #4]
 8007d10:	2200      	movs	r2, #0
 8007d12:	605a      	str	r2, [r3, #4]
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	4618      	mov	r0, r3
 8007d18:	370c      	adds	r7, #12
 8007d1a:	46bd      	mov	sp, r7
 8007d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d20:	4770      	bx	lr
 8007d22:	bf00      	nop
 8007d24:	0801cf80 	.word	0x0801cf80

08007d28 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 8007d28:	b480      	push	{r7}
 8007d2a:	b083      	sub	sp, #12
 8007d2c:	af00      	add	r7, sp, #0
 8007d2e:	6078      	str	r0, [r7, #4]
 8007d30:	4a04      	ldr	r2, [pc, #16]	; (8007d44 <_ZN13ModelListenerD1Ev+0x1c>)
 8007d32:	687b      	ldr	r3, [r7, #4]
 8007d34:	601a      	str	r2, [r3, #0]
 8007d36:	687b      	ldr	r3, [r7, #4]
 8007d38:	4618      	mov	r0, r3
 8007d3a:	370c      	adds	r7, #12
 8007d3c:	46bd      	mov	sp, r7
 8007d3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d42:	4770      	bx	lr
 8007d44:	0801cf80 	.word	0x0801cf80

08007d48 <_ZN13ModelListenerD0Ev>:
 8007d48:	b580      	push	{r7, lr}
 8007d4a:	b082      	sub	sp, #8
 8007d4c:	af00      	add	r7, sp, #0
 8007d4e:	6078      	str	r0, [r7, #4]
 8007d50:	6878      	ldr	r0, [r7, #4]
 8007d52:	f7ff ffe9 	bl	8007d28 <_ZN13ModelListenerD1Ev>
 8007d56:	2108      	movs	r1, #8
 8007d58:	6878      	ldr	r0, [r7, #4]
 8007d5a:	f012 fecf 	bl	801aafc <_ZdlPvj>
 8007d5e:	687b      	ldr	r3, [r7, #4]
 8007d60:	4618      	mov	r0, r3
 8007d62:	3708      	adds	r7, #8
 8007d64:	46bd      	mov	sp, r7
 8007d66:	bd80      	pop	{r7, pc}

08007d68 <_ZN15screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~screenPresenter() {};
 8007d68:	b580      	push	{r7, lr}
 8007d6a:	b082      	sub	sp, #8
 8007d6c:	af00      	add	r7, sp, #0
 8007d6e:	6078      	str	r0, [r7, #4]
 8007d70:	4a09      	ldr	r2, [pc, #36]	; (8007d98 <_ZN15screenPresenterD1Ev+0x30>)
 8007d72:	687b      	ldr	r3, [r7, #4]
 8007d74:	601a      	str	r2, [r3, #0]
 8007d76:	4a09      	ldr	r2, [pc, #36]	; (8007d9c <_ZN15screenPresenterD1Ev+0x34>)
 8007d78:	687b      	ldr	r3, [r7, #4]
 8007d7a:	605a      	str	r2, [r3, #4]
 8007d7c:	687b      	ldr	r3, [r7, #4]
 8007d7e:	3304      	adds	r3, #4
 8007d80:	4618      	mov	r0, r3
 8007d82:	f7ff ffd1 	bl	8007d28 <_ZN13ModelListenerD1Ev>
 8007d86:	687b      	ldr	r3, [r7, #4]
 8007d88:	4618      	mov	r0, r3
 8007d8a:	f7ff ff89 	bl	8007ca0 <_ZN8touchgfx9PresenterD1Ev>
 8007d8e:	687b      	ldr	r3, [r7, #4]
 8007d90:	4618      	mov	r0, r3
 8007d92:	3708      	adds	r7, #8
 8007d94:	46bd      	mov	sp, r7
 8007d96:	bd80      	pop	{r7, pc}
 8007d98:	0801cf58 	.word	0x0801cf58
 8007d9c:	0801cf70 	.word	0x0801cf70

08007da0 <_ZThn4_N15screenPresenterD1Ev>:
 8007da0:	f1a0 0004 	sub.w	r0, r0, #4
 8007da4:	e7e0      	b.n	8007d68 <_ZN15screenPresenterD1Ev>
 8007da6:	bf00      	nop

08007da8 <_ZN15screenPresenterD0Ev>:
 8007da8:	b580      	push	{r7, lr}
 8007daa:	b082      	sub	sp, #8
 8007dac:	af00      	add	r7, sp, #0
 8007dae:	6078      	str	r0, [r7, #4]
 8007db0:	6878      	ldr	r0, [r7, #4]
 8007db2:	f7ff ffd9 	bl	8007d68 <_ZN15screenPresenterD1Ev>
 8007db6:	2110      	movs	r1, #16
 8007db8:	6878      	ldr	r0, [r7, #4]
 8007dba:	f012 fe9f 	bl	801aafc <_ZdlPvj>
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	4618      	mov	r0, r3
 8007dc2:	3708      	adds	r7, #8
 8007dc4:	46bd      	mov	sp, r7
 8007dc6:	bd80      	pop	{r7, pc}

08007dc8 <_ZThn4_N15screenPresenterD0Ev>:
 8007dc8:	f1a0 0004 	sub.w	r0, r0, #4
 8007dcc:	e7ec      	b.n	8007da8 <_ZN15screenPresenterD0Ev>
	...

08007dd0 <_ZN15screenPresenterC1ER10screenView>:
#include <gui/screen_screen/screenView.hpp>
#include <gui/screen_screen/screenPresenter.hpp>

screenPresenter::screenPresenter(screenView& v)
 8007dd0:	b580      	push	{r7, lr}
 8007dd2:	b082      	sub	sp, #8
 8007dd4:	af00      	add	r7, sp, #0
 8007dd6:	6078      	str	r0, [r7, #4]
 8007dd8:	6039      	str	r1, [r7, #0]
    : view(v)
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	4618      	mov	r0, r3
 8007dde:	f7ff ff7f 	bl	8007ce0 <_ZN8touchgfx9PresenterC1Ev>
 8007de2:	687b      	ldr	r3, [r7, #4]
 8007de4:	3304      	adds	r3, #4
 8007de6:	4618      	mov	r0, r3
 8007de8:	f7ff ff8a 	bl	8007d00 <_ZN13ModelListenerC1Ev>
 8007dec:	4a06      	ldr	r2, [pc, #24]	; (8007e08 <_ZN15screenPresenterC1ER10screenView+0x38>)
 8007dee:	687b      	ldr	r3, [r7, #4]
 8007df0:	601a      	str	r2, [r3, #0]
 8007df2:	4a06      	ldr	r2, [pc, #24]	; (8007e0c <_ZN15screenPresenterC1ER10screenView+0x3c>)
 8007df4:	687b      	ldr	r3, [r7, #4]
 8007df6:	605a      	str	r2, [r3, #4]
 8007df8:	687b      	ldr	r3, [r7, #4]
 8007dfa:	683a      	ldr	r2, [r7, #0]
 8007dfc:	60da      	str	r2, [r3, #12]
{

}
 8007dfe:	687b      	ldr	r3, [r7, #4]
 8007e00:	4618      	mov	r0, r3
 8007e02:	3708      	adds	r7, #8
 8007e04:	46bd      	mov	sp, r7
 8007e06:	bd80      	pop	{r7, pc}
 8007e08:	0801cf58 	.word	0x0801cf58
 8007e0c:	0801cf70 	.word	0x0801cf70

08007e10 <_ZN15screenPresenter8activateEv>:

void screenPresenter::activate()
{
 8007e10:	b480      	push	{r7}
 8007e12:	b083      	sub	sp, #12
 8007e14:	af00      	add	r7, sp, #0
 8007e16:	6078      	str	r0, [r7, #4]

}
 8007e18:	bf00      	nop
 8007e1a:	370c      	adds	r7, #12
 8007e1c:	46bd      	mov	sp, r7
 8007e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e22:	4770      	bx	lr

08007e24 <_ZN15screenPresenter10deactivateEv>:

void screenPresenter::deactivate()
{
 8007e24:	b480      	push	{r7}
 8007e26:	b083      	sub	sp, #12
 8007e28:	af00      	add	r7, sp, #0
 8007e2a:	6078      	str	r0, [r7, #4]

}
 8007e2c:	bf00      	nop
 8007e2e:	370c      	adds	r7, #12
 8007e30:	46bd      	mov	sp, r7
 8007e32:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e36:	4770      	bx	lr

08007e38 <_ZN10screenViewD1Ev>:

class screenView : public screenViewBase
{
public:
    screenView();
    virtual ~screenView() {}
 8007e38:	b580      	push	{r7, lr}
 8007e3a:	b082      	sub	sp, #8
 8007e3c:	af00      	add	r7, sp, #0
 8007e3e:	6078      	str	r0, [r7, #4]
 8007e40:	4a05      	ldr	r2, [pc, #20]	; (8007e58 <_ZN10screenViewD1Ev+0x20>)
 8007e42:	687b      	ldr	r3, [r7, #4]
 8007e44:	601a      	str	r2, [r3, #0]
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	4618      	mov	r0, r3
 8007e4a:	f7ff fcfb 	bl	8007844 <_ZN14screenViewBaseD1Ev>
 8007e4e:	687b      	ldr	r3, [r7, #4]
 8007e50:	4618      	mov	r0, r3
 8007e52:	3708      	adds	r7, #8
 8007e54:	46bd      	mov	sp, r7
 8007e56:	bd80      	pop	{r7, pc}
 8007e58:	0801cfa8 	.word	0x0801cfa8

08007e5c <_ZN10screenViewD0Ev>:
 8007e5c:	b580      	push	{r7, lr}
 8007e5e:	b082      	sub	sp, #8
 8007e60:	af00      	add	r7, sp, #0
 8007e62:	6078      	str	r0, [r7, #4]
 8007e64:	6878      	ldr	r0, [r7, #4]
 8007e66:	f7ff ffe7 	bl	8007e38 <_ZN10screenViewD1Ev>
 8007e6a:	f44f 7168 	mov.w	r1, #928	; 0x3a0
 8007e6e:	6878      	ldr	r0, [r7, #4]
 8007e70:	f012 fe44 	bl	801aafc <_ZdlPvj>
 8007e74:	687b      	ldr	r3, [r7, #4]
 8007e76:	4618      	mov	r0, r3
 8007e78:	3708      	adds	r7, #8
 8007e7a:	46bd      	mov	sp, r7
 8007e7c:	bd80      	pop	{r7, pc}
	...

08007e80 <_ZN10screenViewC1Ev>:
#include <gui/screen_screen/screenView.hpp>

screenView::screenView()
 8007e80:	b580      	push	{r7, lr}
 8007e82:	b082      	sub	sp, #8
 8007e84:	af00      	add	r7, sp, #0
 8007e86:	6078      	str	r0, [r7, #4]
 8007e88:	687b      	ldr	r3, [r7, #4]
 8007e8a:	4618      	mov	r0, r3
 8007e8c:	f7ff fd32 	bl	80078f4 <_ZN14screenViewBaseC1Ev>
 8007e90:	4a03      	ldr	r2, [pc, #12]	; (8007ea0 <_ZN10screenViewC1Ev+0x20>)
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	601a      	str	r2, [r3, #0]
{

}
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	4618      	mov	r0, r3
 8007e9a:	3708      	adds	r7, #8
 8007e9c:	46bd      	mov	sp, r7
 8007e9e:	bd80      	pop	{r7, pc}
 8007ea0:	0801cfa8 	.word	0x0801cfa8

08007ea4 <_ZN10screenView11setupScreenEv>:

void screenView::setupScreen()
{
 8007ea4:	b580      	push	{r7, lr}
 8007ea6:	b082      	sub	sp, #8
 8007ea8:	af00      	add	r7, sp, #0
 8007eaa:	6078      	str	r0, [r7, #4]
    screenViewBase::setupScreen();
 8007eac:	687b      	ldr	r3, [r7, #4]
 8007eae:	4618      	mov	r0, r3
 8007eb0:	f7ff fda0 	bl	80079f4 <_ZN14screenViewBase11setupScreenEv>
}
 8007eb4:	bf00      	nop
 8007eb6:	3708      	adds	r7, #8
 8007eb8:	46bd      	mov	sp, r7
 8007eba:	bd80      	pop	{r7, pc}

08007ebc <_ZN10screenView14tearDownScreenEv>:

void screenView::tearDownScreen()
{
 8007ebc:	b580      	push	{r7, lr}
 8007ebe:	b082      	sub	sp, #8
 8007ec0:	af00      	add	r7, sp, #0
 8007ec2:	6078      	str	r0, [r7, #4]
    screenViewBase::tearDownScreen();
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	4618      	mov	r0, r3
 8007ec8:	f7ff fbc2 	bl	8007650 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 8007ecc:	bf00      	nop
 8007ece:	3708      	adds	r7, #8
 8007ed0:	46bd      	mov	sp, r7
 8007ed2:	bd80      	pop	{r7, pc}

08007ed4 <_ZN8touchgfx15TouchControllerD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~TouchController()
 8007ed4:	b480      	push	{r7}
 8007ed6:	b083      	sub	sp, #12
 8007ed8:	af00      	add	r7, sp, #0
 8007eda:	6078      	str	r0, [r7, #4]
    {
 8007edc:	4a04      	ldr	r2, [pc, #16]	; (8007ef0 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	601a      	str	r2, [r3, #0]
    }
 8007ee2:	687b      	ldr	r3, [r7, #4]
 8007ee4:	4618      	mov	r0, r3
 8007ee6:	370c      	adds	r7, #12
 8007ee8:	46bd      	mov	sp, r7
 8007eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007eee:	4770      	bx	lr
 8007ef0:	0801cff4 	.word	0x0801cff4

08007ef4 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 8007ef4:	b580      	push	{r7, lr}
 8007ef6:	b082      	sub	sp, #8
 8007ef8:	af00      	add	r7, sp, #0
 8007efa:	6078      	str	r0, [r7, #4]
    }
 8007efc:	6878      	ldr	r0, [r7, #4]
 8007efe:	f7ff ffe9 	bl	8007ed4 <_ZN8touchgfx15TouchControllerD1Ev>
 8007f02:	2104      	movs	r1, #4
 8007f04:	6878      	ldr	r0, [r7, #4]
 8007f06:	f012 fdf9 	bl	801aafc <_ZdlPvj>
 8007f0a:	687b      	ldr	r3, [r7, #4]
 8007f0c:	4618      	mov	r0, r3
 8007f0e:	3708      	adds	r7, #8
 8007f10:	46bd      	mov	sp, r7
 8007f12:	bd80      	pop	{r7, pc}

08007f14 <_ZN20STM32TouchController4initEv>:
/* USER CODE BEGIN STM32TouchController */

#include <STM32TouchController.hpp>

void STM32TouchController::init()
{
 8007f14:	b480      	push	{r7}
 8007f16:	b083      	sub	sp, #12
 8007f18:	af00      	add	r7, sp, #0
 8007f1a:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 8007f1c:	bf00      	nop
 8007f1e:	370c      	adds	r7, #12
 8007f20:	46bd      	mov	sp, r7
 8007f22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f26:	4770      	bx	lr

08007f28 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8007f28:	b480      	push	{r7}
 8007f2a:	b085      	sub	sp, #20
 8007f2c:	af00      	add	r7, sp, #0
 8007f2e:	60f8      	str	r0, [r7, #12]
 8007f30:	60b9      	str	r1, [r7, #8]
 8007f32:	607a      	str	r2, [r7, #4]
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    return false;
 8007f34:	2300      	movs	r3, #0
}
 8007f36:	4618      	mov	r0, r3
 8007f38:	3714      	adds	r7, #20
 8007f3a:	46bd      	mov	sp, r7
 8007f3c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f40:	4770      	bx	lr
	...

08007f44 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8007f44:	b580      	push	{r7, lr}
 8007f46:	b082      	sub	sp, #8
 8007f48:	af00      	add	r7, sp, #0
 8007f4a:	6078      	str	r0, [r7, #4]
 8007f4c:	4a05      	ldr	r2, [pc, #20]	; (8007f64 <_ZN20STM32TouchControllerD1Ev+0x20>)
 8007f4e:	687b      	ldr	r3, [r7, #4]
 8007f50:	601a      	str	r2, [r3, #0]
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	4618      	mov	r0, r3
 8007f56:	f7ff ffbd 	bl	8007ed4 <_ZN8touchgfx15TouchControllerD1Ev>
 8007f5a:	687b      	ldr	r3, [r7, #4]
 8007f5c:	4618      	mov	r0, r3
 8007f5e:	3708      	adds	r7, #8
 8007f60:	46bd      	mov	sp, r7
 8007f62:	bd80      	pop	{r7, pc}
 8007f64:	0801cfdc 	.word	0x0801cfdc

08007f68 <_ZN20STM32TouchControllerD0Ev>:
 8007f68:	b580      	push	{r7, lr}
 8007f6a:	b082      	sub	sp, #8
 8007f6c:	af00      	add	r7, sp, #0
 8007f6e:	6078      	str	r0, [r7, #4]
 8007f70:	6878      	ldr	r0, [r7, #4]
 8007f72:	f7ff ffe7 	bl	8007f44 <_ZN20STM32TouchControllerD1Ev>
 8007f76:	2104      	movs	r1, #4
 8007f78:	6878      	ldr	r0, [r7, #4]
 8007f7a:	f012 fdbf 	bl	801aafc <_ZdlPvj>
 8007f7e:	687b      	ldr	r3, [r7, #4]
 8007f80:	4618      	mov	r0, r3
 8007f82:	3708      	adds	r7, #8
 8007f84:	46bd      	mov	sp, r7
 8007f86:	bd80      	pop	{r7, pc}

08007f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 8007f88:	b480      	push	{r7}
 8007f8a:	b083      	sub	sp, #12
 8007f8c:	af00      	add	r7, sp, #0
 8007f8e:	4603      	mov	r3, r0
 8007f90:	71fb      	strb	r3, [r7, #7]

}
 8007f92:	bf00      	nop
 8007f94:	370c      	adds	r7, #12
 8007f96:	46bd      	mov	sp, r7
 8007f98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f9c:	4770      	bx	lr

08007f9e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 8007f9e:	b480      	push	{r7}
 8007fa0:	b083      	sub	sp, #12
 8007fa2:	af00      	add	r7, sp, #0
 8007fa4:	4603      	mov	r3, r0
 8007fa6:	71fb      	strb	r3, [r7, #7]

}
 8007fa8:	bf00      	nop
 8007faa:	370c      	adds	r7, #12
 8007fac:	46bd      	mov	sp, r7
 8007fae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fb2:	4770      	bx	lr

08007fb4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 8007fb4:	b480      	push	{r7}
 8007fb6:	b083      	sub	sp, #12
 8007fb8:	af00      	add	r7, sp, #0
 8007fba:	4603      	mov	r3, r0
 8007fbc:	71fb      	strb	r3, [r7, #7]

}
 8007fbe:	bf00      	nop
 8007fc0:	370c      	adds	r7, #12
 8007fc2:	46bd      	mov	sp, r7
 8007fc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fc8:	4770      	bx	lr
	...

08007fcc <_ZN8touchgfx3HALD1Ev>:
    virtual ~HAL()
 8007fcc:	b480      	push	{r7}
 8007fce:	b083      	sub	sp, #12
 8007fd0:	af00      	add	r7, sp, #0
 8007fd2:	6078      	str	r0, [r7, #4]
    {
 8007fd4:	4a04      	ldr	r2, [pc, #16]	; (8007fe8 <_ZN8touchgfx3HALD1Ev+0x1c>)
 8007fd6:	687b      	ldr	r3, [r7, #4]
 8007fd8:	601a      	str	r2, [r3, #0]
    }
 8007fda:	687b      	ldr	r3, [r7, #4]
 8007fdc:	4618      	mov	r0, r3
 8007fde:	370c      	adds	r7, #12
 8007fe0:	46bd      	mov	sp, r7
 8007fe2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007fe6:	4770      	bx	lr
 8007fe8:	0801da68 	.word	0x0801da68

08007fec <_ZN8touchgfx3HALD0Ev>:
    virtual ~HAL()
 8007fec:	b580      	push	{r7, lr}
 8007fee:	b082      	sub	sp, #8
 8007ff0:	af00      	add	r7, sp, #0
 8007ff2:	6078      	str	r0, [r7, #4]
    }
 8007ff4:	6878      	ldr	r0, [r7, #4]
 8007ff6:	f7ff ffe9 	bl	8007fcc <_ZN8touchgfx3HALD1Ev>
 8007ffa:	2178      	movs	r1, #120	; 0x78
 8007ffc:	6878      	ldr	r0, [r7, #4]
 8007ffe:	f012 fd7d 	bl	801aafc <_ZdlPvj>
 8008002:	687b      	ldr	r3, [r7, #4]
 8008004:	4618      	mov	r0, r3
 8008006:	3708      	adds	r7, #8
 8008008:	46bd      	mov	sp, r7
 800800a:	bd80      	pop	{r7, pc}

0800800c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
    virtual void setDisplayOrientation(DisplayOrientation orientation)
 800800c:	b480      	push	{r7}
 800800e:	b083      	sub	sp, #12
 8008010:	af00      	add	r7, sp, #0
 8008012:	6078      	str	r0, [r7, #4]
 8008014:	460b      	mov	r3, r1
 8008016:	70fb      	strb	r3, [r7, #3]
        requestedOrientation = orientation;
 8008018:	687b      	ldr	r3, [r7, #4]
 800801a:	78fa      	ldrb	r2, [r7, #3]
 800801c:	f883 2074 	strb.w	r2, [r3, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8008020:	687b      	ldr	r3, [r7, #4]
 8008022:	2201      	movs	r2, #1
 8008024:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
    }
 8008028:	bf00      	nop
 800802a:	370c      	adds	r7, #12
 800802c:	46bd      	mov	sp, r7
 800802e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008032:	4770      	bx	lr

08008034 <_ZN8touchgfx3HAL11getBlitCapsEv>:
     *        As default, will return whatever blitcaps are reported by the associated DMA
     *        object.
     *
     * @return a bitmask of the supported blitcaps.
     */
    virtual BlitOperations getBlitCaps()
 8008034:	b580      	push	{r7, lr}
 8008036:	b082      	sub	sp, #8
 8008038:	af00      	add	r7, sp, #0
 800803a:	6078      	str	r0, [r7, #4]
    {
        return dma.getBlitCaps();
 800803c:	687b      	ldr	r3, [r7, #4]
 800803e:	685a      	ldr	r2, [r3, #4]
 8008040:	687b      	ldr	r3, [r7, #4]
 8008042:	685b      	ldr	r3, [r3, #4]
 8008044:	681b      	ldr	r3, [r3, #0]
 8008046:	681b      	ldr	r3, [r3, #0]
 8008048:	4610      	mov	r0, r2
 800804a:	4798      	blx	r3
 800804c:	4603      	mov	r3, r0
    }
 800804e:	4618      	mov	r0, r3
 8008050:	3708      	adds	r7, #8
 8008052:	46bd      	mov	sp, r7
 8008054:	bd80      	pop	{r7, pc}

08008056 <_ZN8touchgfx3HAL15backPorchExitedEv>:
     * @brief Has to be called from within the LCD IRQ rutine when the Back Porch Exit is reached.
     *
     *        Has to be called from within the LCD IRQ rutine when the Back Porch Exit is
     *        reached.
     */
    virtual void backPorchExited()
 8008056:	b580      	push	{r7, lr}
 8008058:	b082      	sub	sp, #8
 800805a:	af00      	add	r7, sp, #0
 800805c:	6078      	str	r0, [r7, #4]
    {
        swapFrameBuffers();
 800805e:	6878      	ldr	r0, [r7, #4]
 8008060:	f003 f8f2 	bl	800b248 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8008064:	687b      	ldr	r3, [r7, #4]
 8008066:	681b      	ldr	r3, [r3, #0]
 8008068:	3390      	adds	r3, #144	; 0x90
 800806a:	681b      	ldr	r3, [r3, #0]
 800806c:	6878      	ldr	r0, [r7, #4]
 800806e:	4798      	blx	r3
    }
 8008070:	bf00      	nop
 8008072:	3708      	adds	r7, #8
 8008074:	46bd      	mov	sp, r7
 8008076:	bd80      	pop	{r7, pc}

08008078 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @param [out] key Output parameter that will be set to the key value if a keypress was
     *                  detected.
     *
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
 8008078:	b480      	push	{r7}
 800807a:	b083      	sub	sp, #12
 800807c:	af00      	add	r7, sp, #0
 800807e:	6078      	str	r0, [r7, #4]
 8008080:	6039      	str	r1, [r7, #0]
    {
        return false;
 8008082:	2300      	movs	r3, #0
    }
 8008084:	4618      	mov	r0, r3
 8008086:	370c      	adds	r7, #12
 8008088:	46bd      	mov	sp, r7
 800808a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800808e:	4770      	bx	lr

08008090 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb>:
     * @param      useDoubleBuffering  (Optional) If true, reserve memory for an extra frame buffer.
     * @param      useAnimationStorage (Optional) If true, reserve memory for animation storage.
     *
     * @deprecated Use the setFramaBufferStartAddress with 'format' parameter instead of 'depth'
     */
    virtual void setFrameBufferStartAddress(void* adr, uint16_t depth = 16, bool useDoubleBuffering = true, bool useAnimationStorage = true)
 8008090:	b590      	push	{r4, r7, lr}
 8008092:	b08b      	sub	sp, #44	; 0x2c
 8008094:	af00      	add	r7, sp, #0
 8008096:	60f8      	str	r0, [r7, #12]
 8008098:	60b9      	str	r1, [r7, #8]
 800809a:	4611      	mov	r1, r2
 800809c:	461a      	mov	r2, r3
 800809e:	460b      	mov	r3, r1
 80080a0:	80fb      	strh	r3, [r7, #6]
 80080a2:	4613      	mov	r3, r2
 80080a4:	717b      	strb	r3, [r7, #5]
    {
        uint16_t stride = lcd().framebufferStride();
 80080a6:	f7fe fca5 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 80080aa:	4602      	mov	r2, r0
 80080ac:	6813      	ldr	r3, [r2, #0]
 80080ae:	3328      	adds	r3, #40	; 0x28
 80080b0:	681b      	ldr	r3, [r3, #0]
 80080b2:	4610      	mov	r0, r2
 80080b4:	4798      	blx	r3
 80080b6:	4603      	mov	r3, r0
 80080b8:	837b      	strh	r3, [r7, #26]
        uint32_t bufferSizeInBytes = stride * FRAME_BUFFER_HEIGHT;
 80080ba:	8b7b      	ldrh	r3, [r7, #26]
 80080bc:	4a3d      	ldr	r2, [pc, #244]	; (80081b4 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x124>)
 80080be:	8812      	ldrh	r2, [r2, #0]
 80080c0:	fb02 f303 	mul.w	r3, r2, r3
 80080c4:	617b      	str	r3, [r7, #20]
        uint8_t* ptr = (uint8_t*)adr;
 80080c6:	68bb      	ldr	r3, [r7, #8]
 80080c8:	627b      	str	r3, [r7, #36]	; 0x24
        void* double_buf = 0;
 80080ca:	2300      	movs	r3, #0
 80080cc:	623b      	str	r3, [r7, #32]
        void* anim_store = 0;
 80080ce:	2300      	movs	r3, #0
 80080d0:	61fb      	str	r3, [r7, #28]
        if (useDoubleBuffering)
 80080d2:	797b      	ldrb	r3, [r7, #5]
 80080d4:	2b00      	cmp	r3, #0
 80080d6:	d005      	beq.n	80080e4 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x54>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer)
 80080d8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80080da:	697b      	ldr	r3, [r7, #20]
 80080dc:	4413      	add	r3, r2
 80080de:	627b      	str	r3, [r7, #36]	; 0x24
            double_buf = (void*)ptr;
 80080e0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080e2:	623b      	str	r3, [r7, #32]
        }
        if (useAnimationStorage)
 80080e4:	f897 3038 	ldrb.w	r3, [r7, #56]	; 0x38
 80080e8:	2b00      	cmp	r3, #0
 80080ea:	d005      	beq.n	80080f8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x68>
        {
            ptr += bufferSizeInBytes; // Move past used buffer (framebuffer and possibly double buffer)
 80080ec:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80080ee:	697b      	ldr	r3, [r7, #20]
 80080f0:	4413      	add	r3, r2
 80080f2:	627b      	str	r3, [r7, #36]	; 0x24
            anim_store = (void*)ptr;
 80080f4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80080f6:	61fb      	str	r3, [r7, #28]
        }
        switch (depth)
 80080f8:	88fb      	ldrh	r3, [r7, #6]
 80080fa:	3b01      	subs	r3, #1
 80080fc:	2b1f      	cmp	r3, #31
 80080fe:	d84d      	bhi.n	800819c <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x10c>
 8008100:	a201      	add	r2, pc, #4	; (adr r2, 8008108 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x78>)
 8008102:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8008106:	bf00      	nop
 8008108:	08008189 	.word	0x08008189
 800810c:	08008189 	.word	0x08008189
 8008110:	0800819d 	.word	0x0800819d
 8008114:	08008189 	.word	0x08008189
 8008118:	0800819d 	.word	0x0800819d
 800811c:	0800819d 	.word	0x0800819d
 8008120:	0800819d 	.word	0x0800819d
 8008124:	08008189 	.word	0x08008189
 8008128:	0800819d 	.word	0x0800819d
 800812c:	0800819d 	.word	0x0800819d
 8008130:	0800819d 	.word	0x0800819d
 8008134:	0800819d 	.word	0x0800819d
 8008138:	0800819d 	.word	0x0800819d
 800813c:	0800819d 	.word	0x0800819d
 8008140:	0800819d 	.word	0x0800819d
 8008144:	08008189 	.word	0x08008189
 8008148:	0800819d 	.word	0x0800819d
 800814c:	0800819d 	.word	0x0800819d
 8008150:	0800819d 	.word	0x0800819d
 8008154:	0800819d 	.word	0x0800819d
 8008158:	0800819d 	.word	0x0800819d
 800815c:	0800819d 	.word	0x0800819d
 8008160:	0800819d 	.word	0x0800819d
 8008164:	08008189 	.word	0x08008189
 8008168:	0800819d 	.word	0x0800819d
 800816c:	0800819d 	.word	0x0800819d
 8008170:	0800819d 	.word	0x0800819d
 8008174:	0800819d 	.word	0x0800819d
 8008178:	0800819d 	.word	0x0800819d
 800817c:	0800819d 	.word	0x0800819d
 8008180:	0800819d 	.word	0x0800819d
 8008184:	08008189 	.word	0x08008189
        case 16:
        case 8:
        case 4:
        case 2:
        case 1:
            setFrameBufferStartAddresses(adr, double_buf, anim_store);
 8008188:	68fb      	ldr	r3, [r7, #12]
 800818a:	681b      	ldr	r3, [r3, #0]
 800818c:	3374      	adds	r3, #116	; 0x74
 800818e:	681c      	ldr	r4, [r3, #0]
 8008190:	69fb      	ldr	r3, [r7, #28]
 8008192:	6a3a      	ldr	r2, [r7, #32]
 8008194:	68b9      	ldr	r1, [r7, #8]
 8008196:	68f8      	ldr	r0, [r7, #12]
 8008198:	47a0      	blx	r4
            break;
 800819a:	e006      	b.n	80081aa <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x11a>
        default:
            assert(0 && "Unsupported bit depth");
 800819c:	4b06      	ldr	r3, [pc, #24]	; (80081b8 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x128>)
 800819e:	4a07      	ldr	r2, [pc, #28]	; (80081bc <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x12c>)
 80081a0:	f240 3125 	movw	r1, #805	; 0x325
 80081a4:	4806      	ldr	r0, [pc, #24]	; (80081c0 <_ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb+0x130>)
 80081a6:	f013 faa3 	bl	801b6f0 <__assert_func>
            break;
        }
    }
 80081aa:	bf00      	nop
 80081ac:	372c      	adds	r7, #44	; 0x2c
 80081ae:	46bd      	mov	sp, r7
 80081b0:	bd90      	pop	{r4, r7, pc}
 80081b2:	bf00      	nop
 80081b4:	20001438 	.word	0x20001438
 80081b8:	0801c9bc 	.word	0x0801c9bc
 80081bc:	0801d108 	.word	0x0801d108
 80081c0:	0801c9dc 	.word	0x0801c9dc

080081c4 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
     *
     * @param [in] frameBuffer      Buffer for frame buffer data, must be non-null.
     * @param [in] doubleBuffer     If non-null, buffer for double buffer data. If null double buffering is disabled.
     * @param [in] animationStorage If non-null, the animation storage. If null animation storage is disabled.
     */
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 80081c4:	b580      	push	{r7, lr}
 80081c6:	b084      	sub	sp, #16
 80081c8:	af00      	add	r7, sp, #0
 80081ca:	60f8      	str	r0, [r7, #12]
 80081cc:	60b9      	str	r1, [r7, #8]
 80081ce:	607a      	str	r2, [r7, #4]
 80081d0:	603b      	str	r3, [r7, #0]
    {
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80081d2:	68bb      	ldr	r3, [r7, #8]
 80081d4:	2b00      	cmp	r3, #0
 80081d6:	d106      	bne.n	80081e6 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 80081d8:	4b11      	ldr	r3, [pc, #68]	; (8008220 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 80081da:	4a12      	ldr	r2, [pc, #72]	; (8008224 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 80081dc:	f240 3137 	movw	r1, #823	; 0x337
 80081e0:	4811      	ldr	r0, [pc, #68]	; (8008228 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x64>)
 80081e2:	f013 fa85 	bl	801b6f0 <__assert_func>
        frameBuffer0 = reinterpret_cast<uint16_t*>(frameBuffer);
 80081e6:	68fb      	ldr	r3, [r7, #12]
 80081e8:	68ba      	ldr	r2, [r7, #8]
 80081ea:	63da      	str	r2, [r3, #60]	; 0x3c
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80081ec:	68fb      	ldr	r3, [r7, #12]
 80081ee:	687a      	ldr	r2, [r7, #4]
 80081f0:	641a      	str	r2, [r3, #64]	; 0x40
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80081f2:	68fb      	ldr	r3, [r7, #12]
 80081f4:	683a      	ldr	r2, [r7, #0]
 80081f6:	645a      	str	r2, [r3, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80081f8:	687b      	ldr	r3, [r7, #4]
 80081fa:	2b00      	cmp	r3, #0
 80081fc:	bf14      	ite	ne
 80081fe:	2301      	movne	r3, #1
 8008200:	2300      	moveq	r3, #0
 8008202:	b2da      	uxtb	r2, r3
 8008204:	4b09      	ldr	r3, [pc, #36]	; (800822c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x68>)
 8008206:	701a      	strb	r2, [r3, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8008208:	683b      	ldr	r3, [r7, #0]
 800820a:	2b00      	cmp	r3, #0
 800820c:	bf14      	ite	ne
 800820e:	2301      	movne	r3, #1
 8008210:	2300      	moveq	r3, #0
 8008212:	b2da      	uxtb	r2, r3
 8008214:	4b06      	ldr	r3, [pc, #24]	; (8008230 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x6c>)
 8008216:	701a      	strb	r2, [r3, #0]
    }
 8008218:	bf00      	nop
 800821a:	3710      	adds	r7, #16
 800821c:	46bd      	mov	sp, r7
 800821e:	bd80      	pop	{r7, pc}
 8008220:	0801ca20 	.word	0x0801ca20
 8008224:	0801d0b8 	.word	0x0801d0b8
 8008228:	0801c9dc 	.word	0x0801c9dc
 800822c:	2000143a 	.word	0x2000143a
 8008230:	2000143b 	.word	0x2000143b

08008234 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @param ms Number of milliseconds to wait.
     *
     * @see void registerTaskDelayFunction(void (*delayF)(uint16_t))
     */
    virtual void taskDelay(uint16_t ms)
 8008234:	b580      	push	{r7, lr}
 8008236:	b082      	sub	sp, #8
 8008238:	af00      	add	r7, sp, #0
 800823a:	6078      	str	r0, [r7, #4]
 800823c:	460b      	mov	r3, r1
 800823e:	807b      	strh	r3, [r7, #2]
    {
        if (taskDelayFunc)
 8008240:	687b      	ldr	r3, [r7, #4]
 8008242:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008244:	2b00      	cmp	r3, #0
 8008246:	d004      	beq.n	8008252 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
        {
            taskDelayFunc(ms);
 8008248:	687b      	ldr	r3, [r7, #4]
 800824a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800824c:	887a      	ldrh	r2, [r7, #2]
 800824e:	4610      	mov	r0, r2
 8008250:	4798      	blx	r3
        }
    }
 8008252:	bf00      	nop
 8008254:	3708      	adds	r7, #8
 8008256:	46bd      	mov	sp, r7
 8008258:	bd80      	pop	{r7, pc}

0800825a <_ZN8touchgfx3HAL10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
 800825a:	b580      	push	{r7, lr}
 800825c:	b082      	sub	sp, #8
 800825e:	af00      	add	r7, sp, #0
 8008260:	6078      	str	r0, [r7, #4]
    {
        return dma.getDMAType();
 8008262:	687b      	ldr	r3, [r7, #4]
 8008264:	685a      	ldr	r2, [r3, #4]
 8008266:	687b      	ldr	r3, [r7, #4]
 8008268:	685b      	ldr	r3, [r3, #4]
 800826a:	681b      	ldr	r3, [r3, #0]
 800826c:	3318      	adds	r3, #24
 800826e:	681b      	ldr	r3, [r3, #0]
 8008270:	4610      	mov	r0, r2
 8008272:	4798      	blx	r3
 8008274:	4603      	mov	r3, r0
    }
 8008276:	4618      	mov	r0, r3
 8008278:	3708      	adds	r7, #8
 800827a:	46bd      	mov	sp, r7
 800827c:	bd80      	pop	{r7, pc}
	...

08008280 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
     *
     * @brief Perform the actual display orientation change.
     *
     *        Perform the actual display orientation change.
     */
    virtual void performDisplayOrientationChange()
 8008280:	b480      	push	{r7}
 8008282:	b083      	sub	sp, #12
 8008284:	af00      	add	r7, sp, #0
 8008286:	6078      	str	r0, [r7, #4]
    {
        if (requestedOrientation != nativeDisplayOrientation)
 8008288:	687b      	ldr	r3, [r7, #4]
 800828a:	f893 2074 	ldrb.w	r2, [r3, #116]	; 0x74
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	f893 3034 	ldrb.w	r3, [r3, #52]	; 0x34
 8008294:	429a      	cmp	r2, r3
 8008296:	d017      	beq.n	80082c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x48>
        {
            if (DISPLAY_ROTATION == rotate0)
 8008298:	4b1a      	ldr	r3, [pc, #104]	; (8008304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 800829a:	781b      	ldrb	r3, [r3, #0]
 800829c:	2b00      	cmp	r3, #0
 800829e:	d12a      	bne.n	80082f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            {
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 80082a0:	4b19      	ldr	r3, [pc, #100]	; (8008308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80082a2:	881a      	ldrh	r2, [r3, #0]
 80082a4:	4b19      	ldr	r3, [pc, #100]	; (800830c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80082a6:	801a      	strh	r2, [r3, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 80082a8:	4b19      	ldr	r3, [pc, #100]	; (8008310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80082aa:	881a      	ldrh	r2, [r3, #0]
 80082ac:	4b19      	ldr	r3, [pc, #100]	; (8008314 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80082ae:	801a      	strh	r2, [r3, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 80082b0:	4b16      	ldr	r3, [pc, #88]	; (800830c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80082b2:	881a      	ldrh	r2, [r3, #0]
 80082b4:	4b16      	ldr	r3, [pc, #88]	; (8008310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80082b6:	801a      	strh	r2, [r3, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 80082b8:	4b16      	ldr	r3, [pc, #88]	; (8008314 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80082ba:	881a      	ldrh	r2, [r3, #0]
 80082bc:	4b12      	ldr	r3, [pc, #72]	; (8008308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80082be:	801a      	strh	r2, [r3, #0]
                DISPLAY_ROTATION = rotate90;
 80082c0:	4b10      	ldr	r3, [pc, #64]	; (8008304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 80082c2:	2201      	movs	r2, #1
 80082c4:	701a      	strb	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
            DISPLAY_ROTATION = rotate0;
        }
    }
 80082c6:	e016      	b.n	80082f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
        else if (DISPLAY_ROTATION != rotate0)
 80082c8:	4b0e      	ldr	r3, [pc, #56]	; (8008304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 80082ca:	781b      	ldrb	r3, [r3, #0]
 80082cc:	2b00      	cmp	r3, #0
 80082ce:	d012      	beq.n	80082f6 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x76>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 80082d0:	4b0f      	ldr	r3, [pc, #60]	; (8008310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80082d2:	881a      	ldrh	r2, [r3, #0]
 80082d4:	4b0d      	ldr	r3, [pc, #52]	; (800830c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80082d6:	801a      	strh	r2, [r3, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80082d8:	4b0b      	ldr	r3, [pc, #44]	; (8008308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80082da:	881a      	ldrh	r2, [r3, #0]
 80082dc:	4b0d      	ldr	r3, [pc, #52]	; (8008314 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80082de:	801a      	strh	r2, [r3, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80082e0:	4b0c      	ldr	r3, [pc, #48]	; (8008314 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x94>)
 80082e2:	881a      	ldrh	r2, [r3, #0]
 80082e4:	4b0a      	ldr	r3, [pc, #40]	; (8008310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x90>)
 80082e6:	801a      	strh	r2, [r3, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80082e8:	4b08      	ldr	r3, [pc, #32]	; (800830c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x8c>)
 80082ea:	881a      	ldrh	r2, [r3, #0]
 80082ec:	4b06      	ldr	r3, [pc, #24]	; (8008308 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x88>)
 80082ee:	801a      	strh	r2, [r3, #0]
            DISPLAY_ROTATION = rotate0;
 80082f0:	4b04      	ldr	r3, [pc, #16]	; (8008304 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x84>)
 80082f2:	2200      	movs	r2, #0
 80082f4:	701a      	strb	r2, [r3, #0]
    }
 80082f6:	bf00      	nop
 80082f8:	370c      	adds	r7, #12
 80082fa:	46bd      	mov	sp, r7
 80082fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008300:	4770      	bx	lr
 8008302:	bf00      	nop
 8008304:	20001434 	.word	0x20001434
 8008308:	20001430 	.word	0x20001430
 800830c:	20001436 	.word	0x20001436
 8008310:	20001432 	.word	0x20001432
 8008314:	20001438 	.word	0x20001438

08008318 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8008318:	b580      	push	{r7, lr}
 800831a:	b082      	sub	sp, #8
 800831c:	af00      	add	r7, sp, #0
 800831e:	6078      	str	r0, [r7, #4]
    {
        HAL::flushFrameBuffer();
 8008320:	687b      	ldr	r3, [r7, #4]
 8008322:	4618      	mov	r0, r3
 8008324:	f002 fa12 	bl	800a74c <_ZN8touchgfx3HAL16flushFrameBufferEv>
    }
 8008328:	bf00      	nop
 800832a:	3708      	adds	r7, #8
 800832c:	46bd      	mov	sp, r7
 800832e:	bd80      	pop	{r7, pc}

08008330 <_ZN20TouchGFXGeneratedHALD1Ev>:
class TouchGFXGeneratedHAL : public touchgfx::HAL
 8008330:	b580      	push	{r7, lr}
 8008332:	b082      	sub	sp, #8
 8008334:	af00      	add	r7, sp, #0
 8008336:	6078      	str	r0, [r7, #4]
 8008338:	4a05      	ldr	r2, [pc, #20]	; (8008350 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800833a:	687b      	ldr	r3, [r7, #4]
 800833c:	601a      	str	r2, [r3, #0]
 800833e:	687b      	ldr	r3, [r7, #4]
 8008340:	4618      	mov	r0, r3
 8008342:	f7ff fe43 	bl	8007fcc <_ZN8touchgfx3HALD1Ev>
 8008346:	687b      	ldr	r3, [r7, #4]
 8008348:	4618      	mov	r0, r3
 800834a:	3708      	adds	r7, #8
 800834c:	46bd      	mov	sp, r7
 800834e:	bd80      	pop	{r7, pc}
 8008350:	0801d2e0 	.word	0x0801d2e0

08008354 <_ZN20TouchGFXGeneratedHALD0Ev>:
 8008354:	b580      	push	{r7, lr}
 8008356:	b082      	sub	sp, #8
 8008358:	af00      	add	r7, sp, #0
 800835a:	6078      	str	r0, [r7, #4]
 800835c:	6878      	ldr	r0, [r7, #4]
 800835e:	f7ff ffe7 	bl	8008330 <_ZN20TouchGFXGeneratedHALD1Ev>
 8008362:	2178      	movs	r1, #120	; 0x78
 8008364:	6878      	ldr	r0, [r7, #4]
 8008366:	f012 fbc9 	bl	801aafc <_ZdlPvj>
 800836a:	687b      	ldr	r3, [r7, #4]
 800836c:	4618      	mov	r0, r3
 800836e:	3708      	adds	r7, #8
 8008370:	46bd      	mov	sp, r7
 8008372:	bd80      	pop	{r7, pc}

08008374 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     *
     * This specialization is only in place to keep compilers happy. Base impl. will call the
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
 8008374:	b580      	push	{r7, lr}
 8008376:	b082      	sub	sp, #8
 8008378:	af00      	add	r7, sp, #0
 800837a:	6078      	str	r0, [r7, #4]
    {
        TouchGFXGeneratedHAL::flushFrameBuffer();
 800837c:	687b      	ldr	r3, [r7, #4]
 800837e:	4618      	mov	r0, r3
 8008380:	f7ff ffca 	bl	8008318 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
    }
 8008384:	bf00      	nop
 8008386:	3708      	adds	r7, #8
 8008388:	46bd      	mov	sp, r7
 800838a:	bd80      	pop	{r7, pc}

0800838c <_ZN11TouchGFXHAL10initializeEv>:
#include "stm32f4xx.h"

using namespace touchgfx;

void TouchGFXHAL::initialize()
{
 800838c:	b580      	push	{r7, lr}
 800838e:	b082      	sub	sp, #8
 8008390:	af00      	add	r7, sp, #0
 8008392:	6078      	str	r0, [r7, #4]
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8008394:	687b      	ldr	r3, [r7, #4]
 8008396:	4618      	mov	r0, r3
 8008398:	f001 fad8 	bl	800994c <_ZN20TouchGFXGeneratedHAL10initializeEv>
}
 800839c:	bf00      	nop
 800839e:	3708      	adds	r7, #8
 80083a0:	46bd      	mov	sp, r7
 80083a2:	bd80      	pop	{r7, pc}

080083a4 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 * Gets the frame buffer address used by the TFT controller.
 *
 * @return The address of the frame buffer currently being displayed on the TFT.
 */
uint16_t* TouchGFXHAL::getTFTFrameBuffer() const
{
 80083a4:	b580      	push	{r7, lr}
 80083a6:	b082      	sub	sp, #8
 80083a8:	af00      	add	r7, sp, #0
 80083aa:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80083ac:	687b      	ldr	r3, [r7, #4]
 80083ae:	4618      	mov	r0, r3
 80083b0:	f001 fb58 	bl	8009a64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 80083b4:	4603      	mov	r3, r0
}
 80083b6:	4618      	mov	r0, r3
 80083b8:	3708      	adds	r7, #8
 80083ba:	46bd      	mov	sp, r7
 80083bc:	bd80      	pop	{r7, pc}

080083be <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 * Sets the frame buffer address used by the TFT controller.
 *
 * @param [in] address New frame buffer address.
 */
void TouchGFXHAL::setTFTFrameBuffer(uint16_t* address)
{
 80083be:	b580      	push	{r7, lr}
 80083c0:	b082      	sub	sp, #8
 80083c2:	af00      	add	r7, sp, #0
 80083c4:	6078      	str	r0, [r7, #4]
 80083c6:	6039      	str	r1, [r7, #0]
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80083c8:	687b      	ldr	r3, [r7, #4]
 80083ca:	6839      	ldr	r1, [r7, #0]
 80083cc:	4618      	mov	r0, r3
 80083ce:	f001 fb57 	bl	8009a80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
}
 80083d2:	bf00      	nop
 80083d4:	3708      	adds	r7, #8
 80083d6:	46bd      	mov	sp, r7
 80083d8:	bd80      	pop	{r7, pc}

080083da <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 * @param rect The area of the screen that has been drawn, expressed in absolute coordinates.
 *
 * @see flushFrameBuffer().
 */
void TouchGFXHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80083da:	b580      	push	{r7, lr}
 80083dc:	b082      	sub	sp, #8
 80083de:	af00      	add	r7, sp, #0
 80083e0:	6078      	str	r0, [r7, #4]
 80083e2:	6039      	str	r1, [r7, #0]
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80083e4:	687b      	ldr	r3, [r7, #4]
 80083e6:	6839      	ldr	r1, [r7, #0]
 80083e8:	4618      	mov	r0, r3
 80083ea:	f001 fb5f 	bl	8009aac <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
}
 80083ee:	bf00      	nop
 80083f0:	3708      	adds	r7, #8
 80083f2:	46bd      	mov	sp, r7
 80083f4:	bd80      	pop	{r7, pc}

080083f6 <_ZN11TouchGFXHAL19configureInterruptsEv>:
/**
 * Configures the interrupts relevant for TouchGFX. This primarily entails setting
 * the interrupt priorities for the DMA and LCD interrupts.
 */
void TouchGFXHAL::configureInterrupts()
{
 80083f6:	b580      	push	{r7, lr}
 80083f8:	b082      	sub	sp, #8
 80083fa:	af00      	add	r7, sp, #0
 80083fc:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80083fe:	687b      	ldr	r3, [r7, #4]
 8008400:	4618      	mov	r0, r3
 8008402:	f001 fad5 	bl	80099b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
}
 8008406:	bf00      	nop
 8008408:	3708      	adds	r7, #8
 800840a:	46bd      	mov	sp, r7
 800840c:	bd80      	pop	{r7, pc}

0800840e <_ZN11TouchGFXHAL16enableInterruptsEv>:

/**
 * Used for enabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::enableInterrupts()
{
 800840e:	b580      	push	{r7, lr}
 8008410:	b082      	sub	sp, #8
 8008412:	af00      	add	r7, sp, #0
 8008414:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8008416:	687b      	ldr	r3, [r7, #4]
 8008418:	4618      	mov	r0, r3
 800841a:	f001 fad9 	bl	80099d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
}
 800841e:	bf00      	nop
 8008420:	3708      	adds	r7, #8
 8008422:	46bd      	mov	sp, r7
 8008424:	bd80      	pop	{r7, pc}

08008426 <_ZN11TouchGFXHAL17disableInterruptsEv>:

/**
 * Used for disabling interrupts set in configureInterrupts()
 */
void TouchGFXHAL::disableInterrupts()
{
 8008426:	b580      	push	{r7, lr}
 8008428:	b082      	sub	sp, #8
 800842a:	af00      	add	r7, sp, #0
 800842c:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 800842e:	687b      	ldr	r3, [r7, #4]
 8008430:	4618      	mov	r0, r3
 8008432:	f001 fadb 	bl	80099ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
}
 8008436:	bf00      	nop
 8008438:	3708      	adds	r7, #8
 800843a:	46bd      	mov	sp, r7
 800843c:	bd80      	pop	{r7, pc}

0800843e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
/**
 * Configure the LCD controller to fire interrupts at VSYNC. Called automatically
 * once TouchGFX initialization has completed.
 */
void TouchGFXHAL::enableLCDControllerInterrupt()
{
 800843e:	b580      	push	{r7, lr}
 8008440:	b082      	sub	sp, #8
 8008442:	af00      	add	r7, sp, #0
 8008444:	6078      	str	r0, [r7, #4]
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8008446:	687b      	ldr	r3, [r7, #4]
 8008448:	4618      	mov	r0, r3
 800844a:	f001 fadd 	bl	8009a08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
}
 800844e:	bf00      	nop
 8008450:	3708      	adds	r7, #8
 8008452:	46bd      	mov	sp, r7
 8008454:	bd80      	pop	{r7, pc}
	...

08008458 <_ZN11TouchGFXHALD1Ev>:
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8008458:	b580      	push	{r7, lr}
 800845a:	b082      	sub	sp, #8
 800845c:	af00      	add	r7, sp, #0
 800845e:	6078      	str	r0, [r7, #4]
 8008460:	4a05      	ldr	r2, [pc, #20]	; (8008478 <_ZN11TouchGFXHALD1Ev+0x20>)
 8008462:	687b      	ldr	r3, [r7, #4]
 8008464:	601a      	str	r2, [r3, #0]
 8008466:	687b      	ldr	r3, [r7, #4]
 8008468:	4618      	mov	r0, r3
 800846a:	f7ff ff61 	bl	8008330 <_ZN20TouchGFXGeneratedHALD1Ev>
 800846e:	687b      	ldr	r3, [r7, #4]
 8008470:	4618      	mov	r0, r3
 8008472:	3708      	adds	r7, #8
 8008474:	46bd      	mov	sp, r7
 8008476:	bd80      	pop	{r7, pc}
 8008478:	0801d00c 	.word	0x0801d00c

0800847c <_ZN11TouchGFXHALD0Ev>:
 800847c:	b580      	push	{r7, lr}
 800847e:	b082      	sub	sp, #8
 8008480:	af00      	add	r7, sp, #0
 8008482:	6078      	str	r0, [r7, #4]
 8008484:	6878      	ldr	r0, [r7, #4]
 8008486:	f7ff ffe7 	bl	8008458 <_ZN11TouchGFXHALD1Ev>
 800848a:	2178      	movs	r1, #120	; 0x78
 800848c:	6878      	ldr	r0, [r7, #4]
 800848e:	f012 fb35 	bl	801aafc <_ZdlPvj>
 8008492:	687b      	ldr	r3, [r7, #4]
 8008494:	4618      	mov	r0, r3
 8008496:	3708      	adds	r7, #8
 8008498:	46bd      	mov	sp, r7
 800849a:	bd80      	pop	{r7, pc}

0800849c <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800849c:	b480      	push	{r7}
 800849e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 80084a0:	4b05      	ldr	r3, [pc, #20]	; (80084b8 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 80084a2:	2200      	movs	r2, #0
 80084a4:	601a      	str	r2, [r3, #0]
  vsync_sem = 0;
 80084a6:	4b05      	ldr	r3, [pc, #20]	; (80084bc <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 80084a8:	2200      	movs	r2, #0
 80084aa:	601a      	str	r2, [r3, #0]
}
 80084ac:	bf00      	nop
 80084ae:	46bd      	mov	sp, r7
 80084b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b4:	4770      	bx	lr
 80084b6:	bf00      	nop
 80084b8:	200001cc 	.word	0x200001cc
 80084bc:	200001d0 	.word	0x200001d0

080084c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 80084c0:	b480      	push	{r7}
 80084c2:	af00      	add	r7, sp, #0
  while(fb_sem);
 80084c4:	4b08      	ldr	r3, [pc, #32]	; (80084e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80084c6:	681b      	ldr	r3, [r3, #0]
 80084c8:	2b00      	cmp	r3, #0
 80084ca:	bf14      	ite	ne
 80084cc:	2301      	movne	r3, #1
 80084ce:	2300      	moveq	r3, #0
 80084d0:	b2db      	uxtb	r3, r3
 80084d2:	2b00      	cmp	r3, #0
 80084d4:	d000      	beq.n	80084d8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x18>
 80084d6:	e7f5      	b.n	80084c4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x4>
  fb_sem = 1;
 80084d8:	4b03      	ldr	r3, [pc, #12]	; (80084e8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 80084da:	2201      	movs	r2, #1
 80084dc:	601a      	str	r2, [r3, #0]
}
 80084de:	bf00      	nop
 80084e0:	46bd      	mov	sp, r7
 80084e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084e6:	4770      	bx	lr
 80084e8:	200001cc 	.word	0x200001cc

080084ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 80084ec:	b480      	push	{r7}
 80084ee:	af00      	add	r7, sp, #0
  fb_sem = 0;
 80084f0:	4b03      	ldr	r3, [pc, #12]	; (8008500 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 80084f2:	2200      	movs	r2, #0
 80084f4:	601a      	str	r2, [r3, #0]
}
 80084f6:	bf00      	nop
 80084f8:	46bd      	mov	sp, r7
 80084fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084fe:	4770      	bx	lr
 8008500:	200001cc 	.word	0x200001cc

08008504 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 8008504:	b480      	push	{r7}
 8008506:	af00      	add	r7, sp, #0
  fb_sem = 1;
 8008508:	4b03      	ldr	r3, [pc, #12]	; (8008518 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800850a:	2201      	movs	r2, #1
 800850c:	601a      	str	r2, [r3, #0]
}
 800850e:	bf00      	nop
 8008510:	46bd      	mov	sp, r7
 8008512:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008516:	4770      	bx	lr
 8008518:	200001cc 	.word	0x200001cc

0800851c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800851c:	b480      	push	{r7}
 800851e:	af00      	add	r7, sp, #0
  fb_sem = 0;
 8008520:	4b03      	ldr	r3, [pc, #12]	; (8008530 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 8008522:	2200      	movs	r2, #0
 8008524:	601a      	str	r2, [r3, #0]
}
 8008526:	bf00      	nop
 8008528:	46bd      	mov	sp, r7
 800852a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800852e:	4770      	bx	lr
 8008530:	200001cc 	.word	0x200001cc

08008534 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 8008534:	b480      	push	{r7}
 8008536:	af00      	add	r7, sp, #0
  vsync_sem = 1;
 8008538:	4b03      	ldr	r3, [pc, #12]	; (8008548 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800853a:	2201      	movs	r2, #1
 800853c:	601a      	str	r2, [r3, #0]
}
 800853e:	bf00      	nop
 8008540:	46bd      	mov	sp, r7
 8008542:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008546:	4770      	bx	lr
 8008548:	200001d0 	.word	0x200001d0

0800854c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800854c:	b580      	push	{r7, lr}
 800854e:	af00      	add	r7, sp, #0
  if(vsync_sem)
 8008550:	4b0a      	ldr	r3, [pc, #40]	; (800857c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8008552:	681b      	ldr	r3, [r3, #0]
 8008554:	2b00      	cmp	r3, #0
 8008556:	bf14      	ite	ne
 8008558:	2301      	movne	r3, #1
 800855a:	2300      	moveq	r3, #0
 800855c:	b2db      	uxtb	r3, r3
 800855e:	2b00      	cmp	r3, #0
 8008560:	d00a      	beq.n	8008578 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
  {
    vsync_sem = 0;
 8008562:	4b06      	ldr	r3, [pc, #24]	; (800857c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 8008564:	2200      	movs	r2, #0
 8008566:	601a      	str	r2, [r3, #0]
    HAL::getInstance()->backPorchExited();
 8008568:	f7fe fa38 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 800856c:	4602      	mov	r2, r0
 800856e:	6813      	ldr	r3, [r2, #0]
 8008570:	3358      	adds	r3, #88	; 0x58
 8008572:	681b      	ldr	r3, [r3, #0]
 8008574:	4610      	mov	r0, r2
 8008576:	4798      	blx	r3
  }
}
 8008578:	bf00      	nop
 800857a:	bd80      	pop	{r7, pc}
 800857c:	200001d0 	.word	0x200001d0

08008580 <_ZN8touchgfx10OSWrappers9taskDelayEt>:
 *
 * see HAL::setFrameRefreshStrategy(FrameRefreshStrategy s)
 * see HAL::registerTaskDelayFunction(void (*delayF)(uint16_t))
 */
void OSWrappers::taskDelay(uint16_t ms)
{
 8008580:	b580      	push	{r7, lr}
 8008582:	b082      	sub	sp, #8
 8008584:	af00      	add	r7, sp, #0
 8008586:	4603      	mov	r3, r0
 8008588:	80fb      	strh	r3, [r7, #6]
    HAL_Delay(ms);
 800858a:	88fb      	ldrh	r3, [r7, #6]
 800858c:	4618      	mov	r0, r3
 800858e:	f7f9 f801 	bl	8001594 <HAL_Delay>
}
 8008592:	bf00      	nop
 8008594:	3708      	adds	r7, #8
 8008596:	46bd      	mov	sp, r7
 8008598:	bd80      	pop	{r7, pc}
	...

0800859c <__NVIC_EnableIRQ>:
{
 800859c:	b480      	push	{r7}
 800859e:	b083      	sub	sp, #12
 80085a0:	af00      	add	r7, sp, #0
 80085a2:	4603      	mov	r3, r0
 80085a4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80085a6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085aa:	2b00      	cmp	r3, #0
 80085ac:	db0d      	blt.n	80085ca <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80085ae:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085b2:	b2db      	uxtb	r3, r3
 80085b4:	f003 021f 	and.w	r2, r3, #31
 80085b8:	4907      	ldr	r1, [pc, #28]	; (80085d8 <__NVIC_EnableIRQ+0x3c>)
 80085ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085be:	095b      	lsrs	r3, r3, #5
 80085c0:	2001      	movs	r0, #1
 80085c2:	fa00 f202 	lsl.w	r2, r0, r2
 80085c6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 80085ca:	bf00      	nop
 80085cc:	370c      	adds	r7, #12
 80085ce:	46bd      	mov	sp, r7
 80085d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085d4:	4770      	bx	lr
 80085d6:	bf00      	nop
 80085d8:	e000e100 	.word	0xe000e100

080085dc <__NVIC_DisableIRQ>:
{
 80085dc:	b480      	push	{r7}
 80085de:	b083      	sub	sp, #12
 80085e0:	af00      	add	r7, sp, #0
 80085e2:	4603      	mov	r3, r0
 80085e4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80085e6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085ea:	2b00      	cmp	r3, #0
 80085ec:	db12      	blt.n	8008614 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80085ee:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085f2:	b2db      	uxtb	r3, r3
 80085f4:	f003 021f 	and.w	r2, r3, #31
 80085f8:	4909      	ldr	r1, [pc, #36]	; (8008620 <__NVIC_DisableIRQ+0x44>)
 80085fa:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80085fe:	095b      	lsrs	r3, r3, #5
 8008600:	2001      	movs	r0, #1
 8008602:	fa00 f202 	lsl.w	r2, r0, r2
 8008606:	3320      	adds	r3, #32
 8008608:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 800860c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8008610:	f3bf 8f6f 	isb	sy
}
 8008614:	bf00      	nop
 8008616:	370c      	adds	r7, #12
 8008618:	46bd      	mov	sp, r7
 800861a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800861e:	4770      	bx	lr
 8008620:	e000e100 	.word	0xe000e100

08008624 <_ZN8touchgfx9colortypeC1Ev>:
    colortype() : color(0) {}
 8008624:	b480      	push	{r7}
 8008626:	b083      	sub	sp, #12
 8008628:	af00      	add	r7, sp, #0
 800862a:	6078      	str	r0, [r7, #4]
 800862c:	687b      	ldr	r3, [r7, #4]
 800862e:	2200      	movs	r2, #0
 8008630:	601a      	str	r2, [r3, #0]
 8008632:	687b      	ldr	r3, [r7, #4]
 8008634:	4618      	mov	r0, r3
 8008636:	370c      	adds	r7, #12
 8008638:	46bd      	mov	sp, r7
 800863a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800863e:	4770      	bx	lr

08008640 <_ZNK8touchgfx9colortype10getColor32Ev>:
    inline uint32_t getColor32() const
 8008640:	b480      	push	{r7}
 8008642:	b083      	sub	sp, #12
 8008644:	af00      	add	r7, sp, #0
 8008646:	6078      	str	r0, [r7, #4]
        return color;
 8008648:	687b      	ldr	r3, [r7, #4]
 800864a:	681b      	ldr	r3, [r3, #0]
    }
 800864c:	4618      	mov	r0, r3
 800864e:	370c      	adds	r7, #12
 8008650:	46bd      	mov	sp, r7
 8008652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008656:	4770      	bx	lr

08008658 <_ZNK8touchgfx9colortypecvtEv>:
    operator uint16_t() const
 8008658:	b480      	push	{r7}
 800865a:	b083      	sub	sp, #12
 800865c:	af00      	add	r7, sp, #0
 800865e:	6078      	str	r0, [r7, #4]
        return (uint16_t)color;
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	681b      	ldr	r3, [r3, #0]
 8008664:	b29b      	uxth	r3, r3
    }
 8008666:	4618      	mov	r0, r3
 8008668:	370c      	adds	r7, #12
 800866a:	46bd      	mov	sp, r7
 800866c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008670:	4770      	bx	lr
	...

08008674 <_ZN8touchgfx9DMA_QueueD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Queue()
 8008674:	b480      	push	{r7}
 8008676:	b083      	sub	sp, #12
 8008678:	af00      	add	r7, sp, #0
 800867a:	6078      	str	r0, [r7, #4]
    {
 800867c:	4a04      	ldr	r2, [pc, #16]	; (8008690 <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800867e:	687b      	ldr	r3, [r7, #4]
 8008680:	601a      	str	r2, [r3, #0]
    }
 8008682:	687b      	ldr	r3, [r7, #4]
 8008684:	4618      	mov	r0, r3
 8008686:	370c      	adds	r7, #12
 8008688:	46bd      	mov	sp, r7
 800868a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800868e:	4770      	bx	lr
 8008690:	0801d1b4 	.word	0x0801d1b4

08008694 <_ZN8touchgfx9DMA_QueueD0Ev>:
    virtual ~DMA_Queue()
 8008694:	b580      	push	{r7, lr}
 8008696:	b082      	sub	sp, #8
 8008698:	af00      	add	r7, sp, #0
 800869a:	6078      	str	r0, [r7, #4]
    }
 800869c:	6878      	ldr	r0, [r7, #4]
 800869e:	f7ff ffe9 	bl	8008674 <_ZN8touchgfx9DMA_QueueD1Ev>
 80086a2:	2104      	movs	r1, #4
 80086a4:	6878      	ldr	r0, [r7, #4]
 80086a6:	f012 fa29 	bl	801aafc <_ZdlPvj>
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	4618      	mov	r0, r3
 80086ae:	3708      	adds	r7, #8
 80086b0:	46bd      	mov	sp, r7
 80086b2:	bd80      	pop	{r7, pc}

080086b4 <_ZN8touchgfx13DMA_Interface5flushEv>:
     *
     * @brief This function blocks until all DMA transfers in the queue have been completed.
     *
     *        This function blocks until all DMA transfers in the queue have been completed.
     */
    virtual void flush()
 80086b4:	b580      	push	{r7, lr}
 80086b6:	b082      	sub	sp, #8
 80086b8:	af00      	add	r7, sp, #0
 80086ba:	6078      	str	r0, [r7, #4]
    {
        waitForFrameBufferSemaphore();
 80086bc:	687b      	ldr	r3, [r7, #4]
 80086be:	681b      	ldr	r3, [r3, #0]
 80086c0:	3344      	adds	r3, #68	; 0x44
 80086c2:	681b      	ldr	r3, [r3, #0]
 80086c4:	6878      	ldr	r0, [r7, #4]
 80086c6:	4798      	blx	r3
    }
 80086c8:	bf00      	nop
 80086ca:	3708      	adds	r7, #8
 80086cc:	46bd      	mov	sp, r7
 80086ce:	bd80      	pop	{r7, pc}

080086d0 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
     *        Function for obtaining the DMA type of the concrete DMA_Interface implementation.
     *        As default, will return DMA_TYPE_GENERIC type value.
     *
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual DMAType getDMAType(void)
 80086d0:	b480      	push	{r7}
 80086d2:	b083      	sub	sp, #12
 80086d4:	af00      	add	r7, sp, #0
 80086d6:	6078      	str	r0, [r7, #4]
    {
        return DMA_TYPE_GENERIC;
 80086d8:	2300      	movs	r3, #0
    }
 80086da:	4618      	mov	r0, r3
 80086dc:	370c      	adds	r7, #12
 80086de:	46bd      	mov	sp, r7
 80086e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086e4:	4770      	bx	lr
	...

080086e8 <_ZN8touchgfx13DMA_InterfaceD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~DMA_Interface()
 80086e8:	b480      	push	{r7}
 80086ea:	b083      	sub	sp, #12
 80086ec:	af00      	add	r7, sp, #0
 80086ee:	6078      	str	r0, [r7, #4]
    {
 80086f0:	4a04      	ldr	r2, [pc, #16]	; (8008704 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 80086f2:	687b      	ldr	r3, [r7, #4]
 80086f4:	601a      	str	r2, [r3, #0]
    }
 80086f6:	687b      	ldr	r3, [r7, #4]
 80086f8:	4618      	mov	r0, r3
 80086fa:	370c      	adds	r7, #12
 80086fc:	46bd      	mov	sp, r7
 80086fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008702:	4770      	bx	lr
 8008704:	0801deac 	.word	0x0801deac

08008708 <_ZN8touchgfx13DMA_InterfaceD0Ev>:
    virtual ~DMA_Interface()
 8008708:	b580      	push	{r7, lr}
 800870a:	b082      	sub	sp, #8
 800870c:	af00      	add	r7, sp, #0
 800870e:	6078      	str	r0, [r7, #4]
    }
 8008710:	6878      	ldr	r0, [r7, #4]
 8008712:	f7ff ffe9 	bl	80086e8 <_ZN8touchgfx13DMA_InterfaceD1Ev>
 8008716:	210c      	movs	r1, #12
 8008718:	6878      	ldr	r0, [r7, #4]
 800871a:	f012 f9ef 	bl	801aafc <_ZdlPvj>
 800871e:	687b      	ldr	r3, [r7, #4]
 8008720:	4618      	mov	r0, r3
 8008722:	3708      	adds	r7, #8
 8008724:	46bd      	mov	sp, r7
 8008726:	bd80      	pop	{r7, pc}

08008728 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
     *
     *        Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
 8008728:	b480      	push	{r7}
 800872a:	b083      	sub	sp, #12
 800872c:	af00      	add	r7, sp, #0
 800872e:	6078      	str	r0, [r7, #4]
 8008730:	6039      	str	r1, [r7, #0]
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8008732:	4a09      	ldr	r2, [pc, #36]	; (8008758 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 8008734:	687b      	ldr	r3, [r7, #4]
 8008736:	601a      	str	r2, [r3, #0]
 8008738:	687b      	ldr	r3, [r7, #4]
 800873a:	683a      	ldr	r2, [r7, #0]
 800873c:	605a      	str	r2, [r3, #4]
 800873e:	687b      	ldr	r3, [r7, #4]
 8008740:	2200      	movs	r2, #0
 8008742:	721a      	strb	r2, [r3, #8]
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	2200      	movs	r2, #0
 8008748:	725a      	strb	r2, [r3, #9]
    {
    }
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	4618      	mov	r0, r3
 800874e:	370c      	adds	r7, #12
 8008750:	46bd      	mov	sp, r7
 8008752:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008756:	4770      	bx	lr
 8008758:	0801deac 	.word	0x0801deac

0800875c <_ZN8touchgfx3HAL18signalDMAInterruptEv>:
    void signalDMAInterrupt()
 800875c:	b580      	push	{r7, lr}
 800875e:	b082      	sub	sp, #8
 8008760:	af00      	add	r7, sp, #0
 8008762:	6078      	str	r0, [r7, #4]
        dma.signalDMAInterrupt();
 8008764:	687b      	ldr	r3, [r7, #4]
 8008766:	685a      	ldr	r2, [r3, #4]
 8008768:	687b      	ldr	r3, [r7, #4]
 800876a:	685b      	ldr	r3, [r3, #4]
 800876c:	681b      	ldr	r3, [r3, #0]
 800876e:	3314      	adds	r3, #20
 8008770:	681b      	ldr	r3, [r3, #0]
 8008772:	4610      	mov	r0, r2
 8008774:	4798      	blx	r3
    }
 8008776:	bf00      	nop
 8008778:	3708      	adds	r7, #8
 800877a:	46bd      	mov	sp, r7
 800877c:	bd80      	pop	{r7, pc}

0800877e <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     * @brief Raises a DMA interrupt signal.
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
 800877e:	b580      	push	{r7, lr}
 8008780:	b082      	sub	sp, #8
 8008782:	af00      	add	r7, sp, #0
 8008784:	6078      	str	r0, [r7, #4]
    {
        executeCompleted();
 8008786:	687a      	ldr	r2, [r7, #4]
 8008788:	687b      	ldr	r3, [r7, #4]
 800878a:	681b      	ldr	r3, [r3, #0]
 800878c:	3328      	adds	r3, #40	; 0x28
 800878e:	681b      	ldr	r3, [r3, #0]
 8008790:	4610      	mov	r0, r2
 8008792:	4798      	blx	r3
    }
 8008794:	bf00      	nop
 8008796:	3708      	adds	r7, #8
 8008798:	46bd      	mov	sp, r7
 800879a:	bd80      	pop	{r7, pc}

0800879c <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>:
/* USER CODE END user includes */

extern DMA2D_HandleTypeDef hdma2d;

static HAL_StatusTypeDef HAL_DMA2D_SetMode(DMA2D_HandleTypeDef *hdma2d, uint32_t mode, uint32_t color, uint32_t offset)
{
 800879c:	b480      	push	{r7}
 800879e:	b085      	sub	sp, #20
 80087a0:	af00      	add	r7, sp, #0
 80087a2:	60f8      	str	r0, [r7, #12]
 80087a4:	60b9      	str	r1, [r7, #8]
 80087a6:	607a      	str	r2, [r7, #4]
 80087a8:	603b      	str	r3, [r7, #0]
    assert_param(IS_DMA2D_ALL_INSTANCE(hdma2d->Instance));

    MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, mode);
 80087aa:	68fb      	ldr	r3, [r7, #12]
 80087ac:	681b      	ldr	r3, [r3, #0]
 80087ae:	681b      	ldr	r3, [r3, #0]
 80087b0:	f423 3140 	bic.w	r1, r3, #196608	; 0x30000
 80087b4:	68ba      	ldr	r2, [r7, #8]
 80087b6:	68fb      	ldr	r3, [r7, #12]
 80087b8:	681b      	ldr	r3, [r3, #0]
 80087ba:	430a      	orrs	r2, r1
 80087bc:	601a      	str	r2, [r3, #0]
    MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, color);
 80087be:	68fb      	ldr	r3, [r7, #12]
 80087c0:	681b      	ldr	r3, [r3, #0]
 80087c2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80087c4:	f023 0107 	bic.w	r1, r3, #7
 80087c8:	687a      	ldr	r2, [r7, #4]
 80087ca:	68fb      	ldr	r3, [r7, #12]
 80087cc:	681b      	ldr	r3, [r3, #0]
 80087ce:	430a      	orrs	r2, r1
 80087d0:	635a      	str	r2, [r3, #52]	; 0x34
    MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, offset);
 80087d2:	68fb      	ldr	r3, [r7, #12]
 80087d4:	681b      	ldr	r3, [r3, #0]
 80087d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80087d8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80087dc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80087e0:	6839      	ldr	r1, [r7, #0]
 80087e2:	68fa      	ldr	r2, [r7, #12]
 80087e4:	6812      	ldr	r2, [r2, #0]
 80087e6:	430b      	orrs	r3, r1
 80087e8:	6413      	str	r3, [r2, #64]	; 0x40

    return HAL_OK;
 80087ea:	2300      	movs	r3, #0
}
 80087ec:	4618      	mov	r0, r3
 80087ee:	3714      	adds	r7, #20
 80087f0:	46bd      	mov	sp, r7
 80087f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087f6:	4770      	bx	lr

080087f8 <DMA2D_XferCpltCallback>:

extern "C" {

static void DMA2D_XferCpltCallback(DMA2D_HandleTypeDef* handle)
{
 80087f8:	b580      	push	{r7, lr}
 80087fa:	b082      	sub	sp, #8
 80087fc:	af00      	add	r7, sp, #0
 80087fe:	6078      	str	r0, [r7, #4]
    touchgfx::HAL::getInstance()->signalDMAInterrupt();
 8008800:	f7fe f8ec 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 8008804:	4603      	mov	r3, r0
 8008806:	4618      	mov	r0, r3
 8008808:	f7ff ffa8 	bl	800875c <_ZN8touchgfx3HAL18signalDMAInterruptEv>
}
 800880c:	bf00      	nop
 800880e:	3708      	adds	r7, #8
 8008810:	46bd      	mov	sp, r7
 8008812:	bd80      	pop	{r7, pc}

08008814 <DMA2D_XferErrorCallback>:

static void DMA2D_XferErrorCallback(DMA2D_HandleTypeDef* handle)
{
 8008814:	b580      	push	{r7, lr}
 8008816:	b082      	sub	sp, #8
 8008818:	af00      	add	r7, sp, #0
 800881a:	6078      	str	r0, [r7, #4]
    assert(0);
 800881c:	4b02      	ldr	r3, [pc, #8]	; (8008828 <DMA2D_XferErrorCallback+0x14>)
 800881e:	4a03      	ldr	r2, [pc, #12]	; (800882c <DMA2D_XferErrorCallback+0x18>)
 8008820:	2136      	movs	r1, #54	; 0x36
 8008822:	4803      	ldr	r0, [pc, #12]	; (8008830 <DMA2D_XferErrorCallback+0x1c>)
 8008824:	f012 ff64 	bl	801b6f0 <__assert_func>
 8008828:	0801ca58 	.word	0x0801ca58
 800882c:	0801d1d0 	.word	0x0801d1d0
 8008830:	0801ca5c 	.word	0x0801ca5c

08008834 <_ZN8touchgfx6BlitOpC1Ev>:
 *        (frame buffer) using DMA.
 *
 *        BlitOp instances carry the required information for performing operations on the LCD
 *        (frame buffer) using DMA.
 */
struct BlitOp
 8008834:	b580      	push	{r7, lr}
 8008836:	b082      	sub	sp, #8
 8008838:	af00      	add	r7, sp, #0
 800883a:	6078      	str	r0, [r7, #4]
 800883c:	687b      	ldr	r3, [r7, #4]
 800883e:	3318      	adds	r3, #24
 8008840:	4618      	mov	r0, r3
 8008842:	f7ff feef 	bl	8008624 <_ZN8touchgfx9colortypeC1Ev>
 8008846:	687b      	ldr	r3, [r7, #4]
 8008848:	4618      	mov	r0, r3
 800884a:	3708      	adds	r7, #8
 800884c:	46bd      	mov	sp, r7
 800884e:	bd80      	pop	{r7, pc}

08008850 <_ZN10STM32F4DMAC1Ev>:
}

}

STM32F4DMA::STM32F4DMA()
 8008850:	b5b0      	push	{r4, r5, r7, lr}
 8008852:	b082      	sub	sp, #8
 8008854:	af00      	add	r7, sp, #0
 8008856:	6078      	str	r0, [r7, #4]
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8008858:	687a      	ldr	r2, [r7, #4]
 800885a:	687b      	ldr	r3, [r7, #4]
 800885c:	330c      	adds	r3, #12
 800885e:	4619      	mov	r1, r3
 8008860:	4610      	mov	r0, r2
 8008862:	f7ff ff61 	bl	8008728 <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 8008866:	4a0e      	ldr	r2, [pc, #56]	; (80088a0 <_ZN10STM32F4DMAC1Ev+0x50>)
 8008868:	687b      	ldr	r3, [r7, #4]
 800886a:	601a      	str	r2, [r3, #0]
 800886c:	687b      	ldr	r3, [r7, #4]
 800886e:	f103 000c 	add.w	r0, r3, #12
 8008872:	687b      	ldr	r3, [r7, #4]
 8008874:	3320      	adds	r3, #32
 8008876:	2260      	movs	r2, #96	; 0x60
 8008878:	4619      	mov	r1, r3
 800887a:	f002 fe0b 	bl	800b494 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800887e:	687b      	ldr	r3, [r7, #4]
 8008880:	3320      	adds	r3, #32
 8008882:	245f      	movs	r4, #95	; 0x5f
 8008884:	461d      	mov	r5, r3
 8008886:	2c00      	cmp	r4, #0
 8008888:	db05      	blt.n	8008896 <_ZN10STM32F4DMAC1Ev+0x46>
 800888a:	4628      	mov	r0, r5
 800888c:	f7ff ffd2 	bl	8008834 <_ZN8touchgfx6BlitOpC1Ev>
 8008890:	3520      	adds	r5, #32
 8008892:	3c01      	subs	r4, #1
 8008894:	e7f7      	b.n	8008886 <_ZN10STM32F4DMAC1Ev+0x36>
{}
 8008896:	687b      	ldr	r3, [r7, #4]
 8008898:	4618      	mov	r0, r3
 800889a:	3708      	adds	r7, #8
 800889c:	46bd      	mov	sp, r7
 800889e:	bdb0      	pop	{r4, r5, r7, pc}
 80088a0:	0801d164 	.word	0x0801d164

080088a4 <_ZN10STM32F4DMAD1Ev>:

STM32F4DMA::~STM32F4DMA()
 80088a4:	b580      	push	{r7, lr}
 80088a6:	b082      	sub	sp, #8
 80088a8:	af00      	add	r7, sp, #0
 80088aa:	6078      	str	r0, [r7, #4]
 80088ac:	4a0b      	ldr	r2, [pc, #44]	; (80088dc <_ZN10STM32F4DMAD1Ev+0x38>)
 80088ae:	687b      	ldr	r3, [r7, #4]
 80088b0:	601a      	str	r2, [r3, #0]
{
    HAL_DMA2D_DeInit(&hdma2d);
 80088b2:	480b      	ldr	r0, [pc, #44]	; (80088e0 <_ZN10STM32F4DMAD1Ev+0x3c>)
 80088b4:	f7f9 f836 	bl	8001924 <HAL_DMA2D_DeInit>
    NVIC_DisableIRQ(DMA2D_IRQn);
 80088b8:	205a      	movs	r0, #90	; 0x5a
 80088ba:	f7ff fe8f 	bl	80085dc <__NVIC_DisableIRQ>
STM32F4DMA::~STM32F4DMA()
 80088be:	687b      	ldr	r3, [r7, #4]
 80088c0:	330c      	adds	r3, #12
 80088c2:	4618      	mov	r0, r3
 80088c4:	f000 faa0 	bl	8008e08 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	4618      	mov	r0, r3
 80088cc:	f7ff ff0c 	bl	80086e8 <_ZN8touchgfx13DMA_InterfaceD1Ev>
}
 80088d0:	687b      	ldr	r3, [r7, #4]
 80088d2:	4618      	mov	r0, r3
 80088d4:	3708      	adds	r7, #8
 80088d6:	46bd      	mov	sp, r7
 80088d8:	bd80      	pop	{r7, pc}
 80088da:	bf00      	nop
 80088dc:	0801d164 	.word	0x0801d164
 80088e0:	20001700 	.word	0x20001700

080088e4 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 80088e4:	b580      	push	{r7, lr}
 80088e6:	b082      	sub	sp, #8
 80088e8:	af00      	add	r7, sp, #0
 80088ea:	6078      	str	r0, [r7, #4]
}
 80088ec:	6878      	ldr	r0, [r7, #4]
 80088ee:	f7ff ffd9 	bl	80088a4 <_ZN10STM32F4DMAD1Ev>
 80088f2:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 80088f6:	6878      	ldr	r0, [r7, #4]
 80088f8:	f012 f900 	bl	801aafc <_ZdlPvj>
 80088fc:	687b      	ldr	r3, [r7, #4]
 80088fe:	4618      	mov	r0, r3
 8008900:	3708      	adds	r7, #8
 8008902:	46bd      	mov	sp, r7
 8008904:	bd80      	pop	{r7, pc}
	...

08008908 <_ZN10STM32F4DMA10initializeEv>:

void STM32F4DMA::initialize()
{
 8008908:	b580      	push	{r7, lr}
 800890a:	b082      	sub	sp, #8
 800890c:	af00      	add	r7, sp, #0
 800890e:	6078      	str	r0, [r7, #4]
    hdma2d.Instance = DMA2D;
 8008910:	4b09      	ldr	r3, [pc, #36]	; (8008938 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8008912:	4a0a      	ldr	r2, [pc, #40]	; (800893c <_ZN10STM32F4DMA10initializeEv+0x34>)
 8008914:	601a      	str	r2, [r3, #0]
    HAL_DMA2D_Init(&hdma2d);
 8008916:	4808      	ldr	r0, [pc, #32]	; (8008938 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8008918:	f7f8 ffbb 	bl	8001892 <HAL_DMA2D_Init>

    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 800891c:	4b06      	ldr	r3, [pc, #24]	; (8008938 <_ZN10STM32F4DMA10initializeEv+0x30>)
 800891e:	4a08      	ldr	r2, [pc, #32]	; (8008940 <_ZN10STM32F4DMA10initializeEv+0x38>)
 8008920:	611a      	str	r2, [r3, #16]
    hdma2d.XferErrorCallback = DMA2D_XferErrorCallback;
 8008922:	4b05      	ldr	r3, [pc, #20]	; (8008938 <_ZN10STM32F4DMA10initializeEv+0x30>)
 8008924:	4a07      	ldr	r2, [pc, #28]	; (8008944 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8008926:	615a      	str	r2, [r3, #20]

    NVIC_EnableIRQ(DMA2D_IRQn);
 8008928:	205a      	movs	r0, #90	; 0x5a
 800892a:	f7ff fe37 	bl	800859c <__NVIC_EnableIRQ>
}
 800892e:	bf00      	nop
 8008930:	3708      	adds	r7, #8
 8008932:	46bd      	mov	sp, r7
 8008934:	bd80      	pop	{r7, pc}
 8008936:	bf00      	nop
 8008938:	20001700 	.word	0x20001700
 800893c:	4002b000 	.word	0x4002b000
 8008940:	080087f9 	.word	0x080087f9
 8008944:	08008815 	.word	0x08008815

08008948 <_ZN10STM32F4DMA11getBlitCapsEv>:

BlitOperations STM32F4DMA::getBlitCaps()
{
 8008948:	b480      	push	{r7}
 800894a:	b083      	sub	sp, #12
 800894c:	af00      	add	r7, sp, #0
 800894e:	6078      	str	r0, [r7, #4]
                                        | BLIT_OP_COPY
                                        | BLIT_OP_COPY_WITH_ALPHA
                                        | BLIT_OP_COPY_ARGB8888
                                        | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                        | BLIT_OP_COPY_A4
                                        | BLIT_OP_COPY_A8);
 8008950:	f240 13ef 	movw	r3, #495	; 0x1ef
}
 8008954:	4618      	mov	r0, r3
 8008956:	370c      	adds	r7, #12
 8008958:	46bd      	mov	sp, r7
 800895a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800895e:	4770      	bx	lr

08008960 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8008960:	b590      	push	{r4, r7, lr}
 8008962:	b08d      	sub	sp, #52	; 0x34
 8008964:	af02      	add	r7, sp, #8
 8008966:	6078      	str	r0, [r7, #4]
 8008968:	6039      	str	r1, [r7, #0]
    uint32_t dma2dTransferMode = DMA2D_M2M_BLEND;
 800896a:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800896e:	627b      	str	r3, [r7, #36]	; 0x24
    uint32_t dma2dColorMode = 0;
 8008970:	2300      	movs	r3, #0
 8008972:	623b      	str	r3, [r7, #32]

    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8008974:	683b      	ldr	r3, [r7, #0]
 8008976:	681b      	ldr	r3, [r3, #0]
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8008978:	2b20      	cmp	r3, #32
 800897a:	d007      	beq.n	800898c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 800897c:	683b      	ldr	r3, [r7, #0]
 800897e:	681b      	ldr	r3, [r3, #0]
 8008980:	2b40      	cmp	r3, #64	; 0x40
 8008982:	d003      	beq.n	800898c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2c>
                          || blitOp.operation == BLIT_OP_COPY_WITH_ALPHA);
 8008984:	683b      	ldr	r3, [r7, #0]
 8008986:	681b      	ldr	r3, [r3, #0]
 8008988:	2b04      	cmp	r3, #4
 800898a:	d101      	bne.n	8008990 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x30>
 800898c:	2301      	movs	r3, #1
 800898e:	e000      	b.n	8008992 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x32>
 8008990:	2300      	movs	r3, #0
    bool blendingImage = (blitOp.operation == BLIT_OP_COPY_ARGB8888
 8008992:	77fb      	strb	r3, [r7, #31]

    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 8008994:	683b      	ldr	r3, [r7, #0]
 8008996:	681b      	ldr	r3, [r3, #0]
                         || blitOp.operation == BLIT_OP_COPY_A8);
 8008998:	2b80      	cmp	r3, #128	; 0x80
 800899a:	d004      	beq.n	80089a6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x46>
 800899c:	683b      	ldr	r3, [r7, #0]
 800899e:	681b      	ldr	r3, [r3, #0]
 80089a0:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80089a4:	d101      	bne.n	80089aa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4a>
 80089a6:	2301      	movs	r3, #1
 80089a8:	e000      	b.n	80089ac <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x4c>
 80089aa:	2300      	movs	r3, #0
    bool blendingText = (blitOp.operation == BLIT_OP_COPY_A4
 80089ac:	77bb      	strb	r3, [r7, #30]

    uint8_t bitDepth = HAL::lcd().bitDepth();
 80089ae:	f7fe f821 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 80089b2:	4602      	mov	r2, r0
 80089b4:	6813      	ldr	r3, [r2, #0]
 80089b6:	3320      	adds	r3, #32
 80089b8:	681b      	ldr	r3, [r3, #0]
 80089ba:	4610      	mov	r0, r2
 80089bc:	4798      	blx	r3
 80089be:	4603      	mov	r3, r0
 80089c0:	777b      	strb	r3, [r7, #29]

    switch (blitOp.operation)
 80089c2:	683b      	ldr	r3, [r7, #0]
 80089c4:	681b      	ldr	r3, [r3, #0]
 80089c6:	2b40      	cmp	r3, #64	; 0x40
 80089c8:	d01d      	beq.n	8008a06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 80089ca:	2b40      	cmp	r3, #64	; 0x40
 80089cc:	d804      	bhi.n	80089d8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x78>
 80089ce:	2b04      	cmp	r3, #4
 80089d0:	d00e      	beq.n	80089f0 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x90>
 80089d2:	2b20      	cmp	r3, #32
 80089d4:	d017      	beq.n	8008a06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
 80089d6:	e019      	b.n	8008a0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
 80089d8:	2b80      	cmp	r3, #128	; 0x80
 80089da:	d003      	beq.n	80089e4 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x84>
 80089dc:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80089e0:	d003      	beq.n	80089ea <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x8a>
 80089e2:	e013      	b.n	8008a0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xac>
    {
    case BLIT_OP_COPY_A4:
        dma2dColorMode = CM_A4;
 80089e4:	230a      	movs	r3, #10
 80089e6:	623b      	str	r3, [r7, #32]
        break;
 80089e8:	e01a      	b.n	8008a20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_A8:
        dma2dColorMode = CM_A8;
 80089ea:	2309      	movs	r3, #9
 80089ec:	623b      	str	r3, [r7, #32]
        break;
 80089ee:	e017      	b.n	8008a20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 80089f0:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 80089f4:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 80089f6:	7f7b      	ldrb	r3, [r7, #29]
 80089f8:	2b10      	cmp	r3, #16
 80089fa:	d101      	bne.n	8008a00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa0>
 80089fc:	2302      	movs	r3, #2
 80089fe:	e000      	b.n	8008a02 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
 8008a00:	2301      	movs	r3, #1
 8008a02:	623b      	str	r3, [r7, #32]
        break;
 8008a04:	e00c      	b.n	8008a20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    case BLIT_OP_COPY_ARGB8888:
    case BLIT_OP_COPY_ARGB8888_WITH_ALPHA:
        dma2dColorMode = CM_ARGB8888;
 8008a06:	2300      	movs	r3, #0
 8008a08:	623b      	str	r3, [r7, #32]
        break;
 8008a0a:	e009      	b.n	8008a20 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
    default:
        dma2dTransferMode = DMA2D_M2M;
 8008a0c:	2300      	movs	r3, #0
 8008a0e:	627b      	str	r3, [r7, #36]	; 0x24
        dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8008a10:	7f7b      	ldrb	r3, [r7, #29]
 8008a12:	2b10      	cmp	r3, #16
 8008a14:	d101      	bne.n	8008a1a <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xba>
 8008a16:	2302      	movs	r3, #2
 8008a18:	e000      	b.n	8008a1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xbc>
 8008a1a:	2301      	movs	r3, #1
 8008a1c:	623b      	str	r3, [r7, #32]
        break;
 8008a1e:	bf00      	nop
    }

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8008a20:	4a76      	ldr	r2, [pc, #472]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a22:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008a24:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8008a26:	7f7b      	ldrb	r3, [r7, #29]
 8008a28:	2b10      	cmp	r3, #16
 8008a2a:	d101      	bne.n	8008a30 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 8008a2c:	2302      	movs	r3, #2
 8008a2e:	e000      	b.n	8008a32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8008a30:	2301      	movs	r3, #1
 8008a32:	4a72      	ldr	r2, [pc, #456]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a34:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8008a36:	683b      	ldr	r3, [r7, #0]
 8008a38:	8adb      	ldrh	r3, [r3, #22]
 8008a3a:	461a      	mov	r2, r3
 8008a3c:	683b      	ldr	r3, [r7, #0]
 8008a3e:	8a1b      	ldrh	r3, [r3, #16]
 8008a40:	1ad3      	subs	r3, r2, r3
 8008a42:	461a      	mov	r2, r3
 8008a44:	4b6d      	ldr	r3, [pc, #436]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a46:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8008a48:	7f7b      	ldrb	r3, [r7, #29]
 8008a4a:	2b10      	cmp	r3, #16
 8008a4c:	d101      	bne.n	8008a52 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf2>
 8008a4e:	2202      	movs	r2, #2
 8008a50:	e000      	b.n	8008a54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf4>
 8008a52:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 8008a54:	683b      	ldr	r3, [r7, #0]
 8008a56:	8adb      	ldrh	r3, [r3, #22]
 8008a58:	4619      	mov	r1, r3
 8008a5a:	683b      	ldr	r3, [r7, #0]
 8008a5c:	8a1b      	ldrh	r3, [r3, #16]
 8008a5e:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8008a60:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008a62:	4866      	ldr	r0, [pc, #408]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a64:	f7ff fe9a 	bl	800879c <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8008a68:	4a64      	ldr	r2, [pc, #400]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a6a:	6a3b      	ldr	r3, [r7, #32]
 8008a6c:	62d3      	str	r3, [r2, #44]	; 0x2c
    hdma2d.LayerCfg[1].InputOffset = blitOp.srcLoopStride - blitOp.nSteps;
 8008a6e:	683b      	ldr	r3, [r7, #0]
 8008a70:	8a9b      	ldrh	r3, [r3, #20]
 8008a72:	461a      	mov	r2, r3
 8008a74:	683b      	ldr	r3, [r7, #0]
 8008a76:	8a1b      	ldrh	r3, [r3, #16]
 8008a78:	1ad3      	subs	r3, r2, r3
 8008a7a:	461a      	mov	r2, r3
 8008a7c:	4b5f      	ldr	r3, [pc, #380]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a7e:	629a      	str	r2, [r3, #40]	; 0x28

    if (blendingImage || blendingText)
 8008a80:	7ffb      	ldrb	r3, [r7, #31]
 8008a82:	2b00      	cmp	r3, #0
 8008a84:	d103      	bne.n	8008a8e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x12e>
 8008a86:	7fbb      	ldrb	r3, [r7, #30]
 8008a88:	2b00      	cmp	r3, #0
 8008a8a:	f000 8082 	beq.w	8008b92 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x232>
    {
        if (blitOp.alpha < 255)
 8008a8e:	683b      	ldr	r3, [r7, #0]
 8008a90:	7f1b      	ldrb	r3, [r3, #28]
 8008a92:	2bff      	cmp	r3, #255	; 0xff
 8008a94:	d008      	beq.n	8008aa8 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_COMBINE_ALPHA;
 8008a96:	4b59      	ldr	r3, [pc, #356]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008a98:	2202      	movs	r2, #2
 8008a9a:	631a      	str	r2, [r3, #48]	; 0x30
            hdma2d.LayerCfg[1].InputAlpha = blitOp.alpha;
 8008a9c:	683b      	ldr	r3, [r7, #0]
 8008a9e:	7f1b      	ldrb	r3, [r3, #28]
 8008aa0:	461a      	mov	r2, r3
 8008aa2:	4b56      	ldr	r3, [pc, #344]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008aa4:	635a      	str	r2, [r3, #52]	; 0x34
 8008aa6:	e002      	b.n	8008aae <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14e>
        }
        else
        {
            hdma2d.LayerCfg[1].AlphaMode = DMA2D_NO_MODIF_ALPHA;
 8008aa8:	4b54      	ldr	r3, [pc, #336]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008aaa:	2200      	movs	r2, #0
 8008aac:	631a      	str	r2, [r3, #48]	; 0x30
        }

        if (blendingText)
 8008aae:	7fbb      	ldrb	r3, [r7, #30]
 8008ab0:	2b00      	cmp	r3, #0
 8008ab2:	d059      	beq.n	8008b68 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
        {
            if (bitDepth == 16)
 8008ab4:	7f7b      	ldrb	r3, [r7, #29]
 8008ab6:	2b10      	cmp	r3, #16
 8008ab8:	d14a      	bne.n	8008b50 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1f0>
            {
                uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8008aba:	683b      	ldr	r3, [r7, #0]
 8008abc:	3318      	adds	r3, #24
 8008abe:	4618      	mov	r0, r3
 8008ac0:	f7ff fdca 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008ac4:	4603      	mov	r3, r0
 8008ac6:	12db      	asrs	r3, r3, #11
 8008ac8:	f003 021f 	and.w	r2, r3, #31
 8008acc:	4613      	mov	r3, r2
 8008ace:	021b      	lsls	r3, r3, #8
 8008ad0:	1a9b      	subs	r3, r3, r2
 8008ad2:	4a4b      	ldr	r2, [pc, #300]	; (8008c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 8008ad4:	fb82 1203 	smull	r1, r2, r2, r3
 8008ad8:	441a      	add	r2, r3
 8008ada:	1112      	asrs	r2, r2, #4
 8008adc:	17db      	asrs	r3, r3, #31
 8008ade:	1ad3      	subs	r3, r2, r3
 8008ae0:	61bb      	str	r3, [r7, #24]
                uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8008ae2:	683b      	ldr	r3, [r7, #0]
 8008ae4:	3318      	adds	r3, #24
 8008ae6:	4618      	mov	r0, r3
 8008ae8:	f7ff fdb6 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008aec:	4603      	mov	r3, r0
 8008aee:	115b      	asrs	r3, r3, #5
 8008af0:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008af4:	4613      	mov	r3, r2
 8008af6:	021b      	lsls	r3, r3, #8
 8008af8:	1a9b      	subs	r3, r3, r2
 8008afa:	4a42      	ldr	r2, [pc, #264]	; (8008c04 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a4>)
 8008afc:	fb82 1203 	smull	r1, r2, r2, r3
 8008b00:	441a      	add	r2, r3
 8008b02:	1152      	asrs	r2, r2, #5
 8008b04:	17db      	asrs	r3, r3, #31
 8008b06:	1ad3      	subs	r3, r2, r3
 8008b08:	617b      	str	r3, [r7, #20]
                uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8008b0a:	683b      	ldr	r3, [r7, #0]
 8008b0c:	3318      	adds	r3, #24
 8008b0e:	4618      	mov	r0, r3
 8008b10:	f7ff fda2 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008b14:	4603      	mov	r3, r0
 8008b16:	f003 021f 	and.w	r2, r3, #31
 8008b1a:	4613      	mov	r3, r2
 8008b1c:	021b      	lsls	r3, r3, #8
 8008b1e:	1a9b      	subs	r3, r3, r2
 8008b20:	4a37      	ldr	r2, [pc, #220]	; (8008c00 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x2a0>)
 8008b22:	fb82 1203 	smull	r1, r2, r2, r3
 8008b26:	441a      	add	r2, r3
 8008b28:	1112      	asrs	r2, r2, #4
 8008b2a:	17db      	asrs	r3, r3, #31
 8008b2c:	1ad3      	subs	r3, r2, r3
 8008b2e:	613b      	str	r3, [r7, #16]
                uint32_t alpha = blitOp.alpha;
 8008b30:	683b      	ldr	r3, [r7, #0]
 8008b32:	7f1b      	ldrb	r3, [r3, #28]
 8008b34:	60fb      	str	r3, [r7, #12]
                hdma2d.LayerCfg[1].InputAlpha = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8008b36:	68fb      	ldr	r3, [r7, #12]
 8008b38:	061a      	lsls	r2, r3, #24
 8008b3a:	69bb      	ldr	r3, [r7, #24]
 8008b3c:	041b      	lsls	r3, r3, #16
 8008b3e:	431a      	orrs	r2, r3
 8008b40:	697b      	ldr	r3, [r7, #20]
 8008b42:	021b      	lsls	r3, r3, #8
 8008b44:	431a      	orrs	r2, r3
 8008b46:	693b      	ldr	r3, [r7, #16]
 8008b48:	4313      	orrs	r3, r2
 8008b4a:	4a2c      	ldr	r2, [pc, #176]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b4c:	6353      	str	r3, [r2, #52]	; 0x34
 8008b4e:	e00b      	b.n	8008b68 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x208>
            }
            else
            {
                hdma2d.LayerCfg[1].InputAlpha = blitOp.color.getColor32() | (blitOp.alpha << 24);
 8008b50:	683b      	ldr	r3, [r7, #0]
 8008b52:	3318      	adds	r3, #24
 8008b54:	4618      	mov	r0, r3
 8008b56:	f7ff fd73 	bl	8008640 <_ZNK8touchgfx9colortype10getColor32Ev>
 8008b5a:	4602      	mov	r2, r0
 8008b5c:	683b      	ldr	r3, [r7, #0]
 8008b5e:	7f1b      	ldrb	r3, [r3, #28]
 8008b60:	061b      	lsls	r3, r3, #24
 8008b62:	4313      	orrs	r3, r2
 8008b64:	4a25      	ldr	r2, [pc, #148]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b66:	6353      	str	r3, [r2, #52]	; 0x34
            }
        }

        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8008b68:	683b      	ldr	r3, [r7, #0]
 8008b6a:	8adb      	ldrh	r3, [r3, #22]
 8008b6c:	461a      	mov	r2, r3
 8008b6e:	683b      	ldr	r3, [r7, #0]
 8008b70:	8a1b      	ldrh	r3, [r3, #16]
 8008b72:	1ad3      	subs	r3, r2, r3
 8008b74:	461a      	mov	r2, r3
 8008b76:	4b21      	ldr	r3, [pc, #132]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b78:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8008b7a:	7f7b      	ldrb	r3, [r7, #29]
 8008b7c:	2b10      	cmp	r3, #16
 8008b7e:	d101      	bne.n	8008b84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x224>
 8008b80:	2302      	movs	r3, #2
 8008b82:	e000      	b.n	8008b86 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x226>
 8008b84:	2301      	movs	r3, #1
 8008b86:	4a1d      	ldr	r2, [pc, #116]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b88:	61d3      	str	r3, [r2, #28]

        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8008b8a:	2100      	movs	r1, #0
 8008b8c:	481b      	ldr	r0, [pc, #108]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b8e:	f7f9 f949 	bl	8001e24 <HAL_DMA2D_ConfigLayer>
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8008b92:	2101      	movs	r1, #1
 8008b94:	4819      	ldr	r0, [pc, #100]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008b96:	f7f9 f945 	bl	8001e24 <HAL_DMA2D_ConfigLayer>

    if (blendingImage || blendingText)
 8008b9a:	7ffb      	ldrb	r3, [r7, #31]
 8008b9c:	2b00      	cmp	r3, #0
 8008b9e:	d102      	bne.n	8008ba6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x246>
 8008ba0:	7fbb      	ldrb	r3, [r7, #30]
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d015      	beq.n	8008bd2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x272>
    {
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pSrc,
 8008ba6:	683b      	ldr	r3, [r7, #0]
 8008ba8:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008baa:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 8008bac:	683b      	ldr	r3, [r7, #0]
 8008bae:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008bb0:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 8008bb2:	683b      	ldr	r3, [r7, #0]
 8008bb4:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008bb6:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8008bb8:	683b      	ldr	r3, [r7, #0]
 8008bba:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008bbc:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8008bbe:	683b      	ldr	r3, [r7, #0]
 8008bc0:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008bc2:	9301      	str	r3, [sp, #4]
 8008bc4:	9200      	str	r2, [sp, #0]
 8008bc6:	4623      	mov	r3, r4
 8008bc8:	4602      	mov	r2, r0
 8008bca:	480c      	ldr	r0, [pc, #48]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008bcc:	f7f8 ff4d 	bl	8001a6a <HAL_DMA2D_BlendingStart_IT>
 8008bd0:	e00f      	b.n	8008bf2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x292>
    }
    else
    {
        HAL_DMA2D_Start_IT(&hdma2d,
                           (unsigned int)blitOp.pSrc,
 8008bd2:	683b      	ldr	r3, [r7, #0]
 8008bd4:	685b      	ldr	r3, [r3, #4]
        HAL_DMA2D_Start_IT(&hdma2d,
 8008bd6:	4619      	mov	r1, r3
                           (unsigned int)blitOp.pDst,
 8008bd8:	683b      	ldr	r3, [r7, #0]
 8008bda:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_Start_IT(&hdma2d,
 8008bdc:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 8008bde:	683b      	ldr	r3, [r7, #0]
 8008be0:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d,
 8008be2:	4618      	mov	r0, r3
                           blitOp.nSteps, blitOp.nLoops);
 8008be4:	683b      	ldr	r3, [r7, #0]
 8008be6:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d,
 8008be8:	9300      	str	r3, [sp, #0]
 8008bea:	4603      	mov	r3, r0
 8008bec:	4803      	ldr	r0, [pc, #12]	; (8008bfc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x29c>)
 8008bee:	f7f8 ff09 	bl	8001a04 <HAL_DMA2D_Start_IT>
    }
}
 8008bf2:	bf00      	nop
 8008bf4:	372c      	adds	r7, #44	; 0x2c
 8008bf6:	46bd      	mov	sp, r7
 8008bf8:	bd90      	pop	{r4, r7, pc}
 8008bfa:	bf00      	nop
 8008bfc:	20001700 	.word	0x20001700
 8008c00:	84210843 	.word	0x84210843
 8008c04:	82082083 	.word	0x82082083

08008c08 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:

void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8008c08:	b590      	push	{r4, r7, lr}
 8008c0a:	b08d      	sub	sp, #52	; 0x34
 8008c0c:	af02      	add	r7, sp, #8
 8008c0e:	6078      	str	r0, [r7, #4]
 8008c10:	6039      	str	r1, [r7, #0]
    uint8_t bitDepth = HAL::lcd().bitDepth();
 8008c12:	f7fd feef 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 8008c16:	4602      	mov	r2, r0
 8008c18:	6813      	ldr	r3, [r2, #0]
 8008c1a:	3320      	adds	r3, #32
 8008c1c:	681b      	ldr	r3, [r3, #0]
 8008c1e:	4610      	mov	r0, r2
 8008c20:	4798      	blx	r3
 8008c22:	4603      	mov	r3, r0
 8008c24:	77fb      	strb	r3, [r7, #31]
    uint32_t dma2dTransferMode;
    uint32_t dma2dColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8008c26:	7ffb      	ldrb	r3, [r7, #31]
 8008c28:	2b10      	cmp	r3, #16
 8008c2a:	d101      	bne.n	8008c30 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x28>
 8008c2c:	2302      	movs	r3, #2
 8008c2e:	e000      	b.n	8008c32 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x2a>
 8008c30:	2301      	movs	r3, #1
 8008c32:	61bb      	str	r3, [r7, #24]

    uint32_t color = 0;
 8008c34:	2300      	movs	r3, #0
 8008c36:	623b      	str	r3, [r7, #32]
    if (bitDepth == 16)
 8008c38:	7ffb      	ldrb	r3, [r7, #31]
 8008c3a:	2b10      	cmp	r3, #16
 8008c3c:	d149      	bne.n	8008cd2 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xca>
    {
        uint32_t red = (((blitOp.color & 0xF800) >> 11) * 255) / 31;
 8008c3e:	683b      	ldr	r3, [r7, #0]
 8008c40:	3318      	adds	r3, #24
 8008c42:	4618      	mov	r0, r3
 8008c44:	f7ff fd08 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008c48:	4603      	mov	r3, r0
 8008c4a:	12db      	asrs	r3, r3, #11
 8008c4c:	f003 021f 	and.w	r2, r3, #31
 8008c50:	4613      	mov	r3, r2
 8008c52:	021b      	lsls	r3, r3, #8
 8008c54:	1a9b      	subs	r3, r3, r2
 8008c56:	4a69      	ldr	r2, [pc, #420]	; (8008dfc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 8008c58:	fb82 1203 	smull	r1, r2, r2, r3
 8008c5c:	441a      	add	r2, r3
 8008c5e:	1112      	asrs	r2, r2, #4
 8008c60:	17db      	asrs	r3, r3, #31
 8008c62:	1ad3      	subs	r3, r2, r3
 8008c64:	617b      	str	r3, [r7, #20]
        uint32_t green = (((blitOp.color & 0x7E0) >> 5) * 255) / 63;
 8008c66:	683b      	ldr	r3, [r7, #0]
 8008c68:	3318      	adds	r3, #24
 8008c6a:	4618      	mov	r0, r3
 8008c6c:	f7ff fcf4 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008c70:	4603      	mov	r3, r0
 8008c72:	115b      	asrs	r3, r3, #5
 8008c74:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8008c78:	4613      	mov	r3, r2
 8008c7a:	021b      	lsls	r3, r3, #8
 8008c7c:	1a9b      	subs	r3, r3, r2
 8008c7e:	4a60      	ldr	r2, [pc, #384]	; (8008e00 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f8>)
 8008c80:	fb82 1203 	smull	r1, r2, r2, r3
 8008c84:	441a      	add	r2, r3
 8008c86:	1152      	asrs	r2, r2, #5
 8008c88:	17db      	asrs	r3, r3, #31
 8008c8a:	1ad3      	subs	r3, r2, r3
 8008c8c:	613b      	str	r3, [r7, #16]
        uint32_t blue = (((blitOp.color & 0x1F)) * 255) / 31;
 8008c8e:	683b      	ldr	r3, [r7, #0]
 8008c90:	3318      	adds	r3, #24
 8008c92:	4618      	mov	r0, r3
 8008c94:	f7ff fce0 	bl	8008658 <_ZNK8touchgfx9colortypecvtEv>
 8008c98:	4603      	mov	r3, r0
 8008c9a:	f003 021f 	and.w	r2, r3, #31
 8008c9e:	4613      	mov	r3, r2
 8008ca0:	021b      	lsls	r3, r3, #8
 8008ca2:	1a9b      	subs	r3, r3, r2
 8008ca4:	4a55      	ldr	r2, [pc, #340]	; (8008dfc <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1f4>)
 8008ca6:	fb82 1203 	smull	r1, r2, r2, r3
 8008caa:	441a      	add	r2, r3
 8008cac:	1112      	asrs	r2, r2, #4
 8008cae:	17db      	asrs	r3, r3, #31
 8008cb0:	1ad3      	subs	r3, r2, r3
 8008cb2:	60fb      	str	r3, [r7, #12]
        uint32_t alpha = blitOp.alpha;
 8008cb4:	683b      	ldr	r3, [r7, #0]
 8008cb6:	7f1b      	ldrb	r3, [r3, #28]
 8008cb8:	60bb      	str	r3, [r7, #8]
        color = (alpha << 24) | (red << 16) | (green << 8) | blue;
 8008cba:	68bb      	ldr	r3, [r7, #8]
 8008cbc:	061a      	lsls	r2, r3, #24
 8008cbe:	697b      	ldr	r3, [r7, #20]
 8008cc0:	041b      	lsls	r3, r3, #16
 8008cc2:	431a      	orrs	r2, r3
 8008cc4:	693b      	ldr	r3, [r7, #16]
 8008cc6:	021b      	lsls	r3, r3, #8
 8008cc8:	4313      	orrs	r3, r2
 8008cca:	68fa      	ldr	r2, [r7, #12]
 8008ccc:	4313      	orrs	r3, r2
 8008cce:	623b      	str	r3, [r7, #32]
 8008cd0:	e00b      	b.n	8008cea <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xe2>
    }
    else
    {
        color = (blitOp.alpha << 24) | blitOp.color.getColor32();
 8008cd2:	683b      	ldr	r3, [r7, #0]
 8008cd4:	7f1b      	ldrb	r3, [r3, #28]
 8008cd6:	061b      	lsls	r3, r3, #24
 8008cd8:	461c      	mov	r4, r3
 8008cda:	683b      	ldr	r3, [r7, #0]
 8008cdc:	3318      	adds	r3, #24
 8008cde:	4618      	mov	r0, r3
 8008ce0:	f7ff fcae 	bl	8008640 <_ZNK8touchgfx9colortype10getColor32Ev>
 8008ce4:	4603      	mov	r3, r0
 8008ce6:	4323      	orrs	r3, r4
 8008ce8:	623b      	str	r3, [r7, #32]
    }

    switch (blitOp.operation)
 8008cea:	683b      	ldr	r3, [r7, #0]
 8008cec:	681b      	ldr	r3, [r3, #0]
 8008cee:	2b08      	cmp	r3, #8
 8008cf0:	d103      	bne.n	8008cfa <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xf2>
    {
    case BLIT_OP_FILL_WITH_ALPHA:
        dma2dTransferMode = DMA2D_M2M_BLEND;
 8008cf2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8008cf6:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8008cf8:	e003      	b.n	8008d02 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0xfa>
    default:
        dma2dTransferMode = DMA2D_R2M;
 8008cfa:	f44f 3340 	mov.w	r3, #196608	; 0x30000
 8008cfe:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8008d00:	bf00      	nop
    };

    /* HAL_DMA2D_ConfigLayer() depends on hdma2d.Init */
    hdma2d.Init.Mode = dma2dTransferMode;
 8008d02:	4a40      	ldr	r2, [pc, #256]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d04:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008d06:	6053      	str	r3, [r2, #4]
    hdma2d.Init.ColorMode = (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888;
 8008d08:	7ffb      	ldrb	r3, [r7, #31]
 8008d0a:	2b10      	cmp	r3, #16
 8008d0c:	d101      	bne.n	8008d12 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10a>
 8008d0e:	2302      	movs	r3, #2
 8008d10:	e000      	b.n	8008d14 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x10c>
 8008d12:	2301      	movs	r3, #1
 8008d14:	4a3b      	ldr	r2, [pc, #236]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d16:	6093      	str	r3, [r2, #8]
    hdma2d.Init.OutputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8008d18:	683b      	ldr	r3, [r7, #0]
 8008d1a:	8adb      	ldrh	r3, [r3, #22]
 8008d1c:	461a      	mov	r2, r3
 8008d1e:	683b      	ldr	r3, [r7, #0]
 8008d20:	8a1b      	ldrh	r3, [r3, #16]
 8008d22:	1ad3      	subs	r3, r2, r3
 8008d24:	461a      	mov	r2, r3
 8008d26:	4b37      	ldr	r3, [pc, #220]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d28:	60da      	str	r2, [r3, #12]

    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8008d2a:	7ffb      	ldrb	r3, [r7, #31]
 8008d2c:	2b10      	cmp	r3, #16
 8008d2e:	d101      	bne.n	8008d34 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12c>
 8008d30:	2202      	movs	r2, #2
 8008d32:	e000      	b.n	8008d36 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x12e>
 8008d34:	2201      	movs	r2, #1
                      (bitDepth == 16) ? DMA2D_RGB565 : DMA2D_RGB888,
                      blitOp.dstLoopStride - blitOp.nSteps);
 8008d36:	683b      	ldr	r3, [r7, #0]
 8008d38:	8adb      	ldrh	r3, [r3, #22]
 8008d3a:	4619      	mov	r1, r3
 8008d3c:	683b      	ldr	r3, [r7, #0]
 8008d3e:	8a1b      	ldrh	r3, [r3, #16]
 8008d40:	1acb      	subs	r3, r1, r3
    HAL_DMA2D_SetMode(&hdma2d, dma2dTransferMode,
 8008d42:	6a79      	ldr	r1, [r7, #36]	; 0x24
 8008d44:	482f      	ldr	r0, [pc, #188]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d46:	f7ff fd29 	bl	800879c <_ZL17HAL_DMA2D_SetModeP21__DMA2D_HandleTypeDefmmm>

    if (dma2dTransferMode == DMA2D_M2M_BLEND) {
 8008d4a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008d4c:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008d50:	d11e      	bne.n	8008d90 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x188>
        hdma2d.LayerCfg[1].AlphaMode = DMA2D_REPLACE_ALPHA;
 8008d52:	4b2c      	ldr	r3, [pc, #176]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d54:	2201      	movs	r2, #1
 8008d56:	631a      	str	r2, [r3, #48]	; 0x30
        hdma2d.LayerCfg[1].InputAlpha = color;
 8008d58:	4a2a      	ldr	r2, [pc, #168]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d5a:	6a3b      	ldr	r3, [r7, #32]
 8008d5c:	6353      	str	r3, [r2, #52]	; 0x34
        hdma2d.LayerCfg[1].InputColorMode = CM_A8;
 8008d5e:	4b29      	ldr	r3, [pc, #164]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d60:	2209      	movs	r2, #9
 8008d62:	62da      	str	r2, [r3, #44]	; 0x2c
        hdma2d.LayerCfg[0].InputOffset = blitOp.dstLoopStride - blitOp.nSteps;
 8008d64:	683b      	ldr	r3, [r7, #0]
 8008d66:	8adb      	ldrh	r3, [r3, #22]
 8008d68:	461a      	mov	r2, r3
 8008d6a:	683b      	ldr	r3, [r7, #0]
 8008d6c:	8a1b      	ldrh	r3, [r3, #16]
 8008d6e:	1ad3      	subs	r3, r2, r3
 8008d70:	461a      	mov	r2, r3
 8008d72:	4b24      	ldr	r3, [pc, #144]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d74:	619a      	str	r2, [r3, #24]
        hdma2d.LayerCfg[0].InputColorMode = (bitDepth == 16) ? CM_RGB565 : CM_RGB888;
 8008d76:	7ffb      	ldrb	r3, [r7, #31]
 8008d78:	2b10      	cmp	r3, #16
 8008d7a:	d101      	bne.n	8008d80 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x178>
 8008d7c:	2302      	movs	r3, #2
 8008d7e:	e000      	b.n	8008d82 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x17a>
 8008d80:	2301      	movs	r3, #1
 8008d82:	4a20      	ldr	r2, [pc, #128]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d84:	61d3      	str	r3, [r2, #28]
        HAL_DMA2D_ConfigLayer(&hdma2d, 0);
 8008d86:	2100      	movs	r1, #0
 8008d88:	481e      	ldr	r0, [pc, #120]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d8a:	f7f9 f84b 	bl	8001e24 <HAL_DMA2D_ConfigLayer>
 8008d8e:	e005      	b.n	8008d9c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x194>
    } else {
        hdma2d.LayerCfg[1].InputColorMode = dma2dColorMode;
 8008d90:	4a1c      	ldr	r2, [pc, #112]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d92:	69bb      	ldr	r3, [r7, #24]
 8008d94:	62d3      	str	r3, [r2, #44]	; 0x2c
        hdma2d.LayerCfg[1].InputOffset = 0;
 8008d96:	4b1b      	ldr	r3, [pc, #108]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008d98:	2200      	movs	r2, #0
 8008d9a:	629a      	str	r2, [r3, #40]	; 0x28
    }

    HAL_DMA2D_ConfigLayer(&hdma2d, 1);
 8008d9c:	2101      	movs	r1, #1
 8008d9e:	4819      	ldr	r0, [pc, #100]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008da0:	f7f9 f840 	bl	8001e24 <HAL_DMA2D_ConfigLayer>

    if (dma2dTransferMode == DMA2D_M2M_BLEND)
 8008da4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8008da6:	f5b3 3f00 	cmp.w	r3, #131072	; 0x20000
 8008daa:	d115      	bne.n	8008dd8 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1d0>
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
                                   (unsigned int)blitOp.pDst,
 8008dac:	683b      	ldr	r3, [r7, #0]
 8008dae:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008db0:	4619      	mov	r1, r3
                                   (unsigned int)blitOp.pDst,
 8008db2:	683b      	ldr	r3, [r7, #0]
 8008db4:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008db6:	4618      	mov	r0, r3
                                   (unsigned int)blitOp.pDst,
 8008db8:	683b      	ldr	r3, [r7, #0]
 8008dba:	68db      	ldr	r3, [r3, #12]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008dbc:	461c      	mov	r4, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8008dbe:	683b      	ldr	r3, [r7, #0]
 8008dc0:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008dc2:	461a      	mov	r2, r3
                                   blitOp.nSteps, blitOp.nLoops);
 8008dc4:	683b      	ldr	r3, [r7, #0]
 8008dc6:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_BlendingStart_IT(&hdma2d,
 8008dc8:	9301      	str	r3, [sp, #4]
 8008dca:	9200      	str	r2, [sp, #0]
 8008dcc:	4623      	mov	r3, r4
 8008dce:	4602      	mov	r2, r0
 8008dd0:	480c      	ldr	r0, [pc, #48]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008dd2:	f7f8 fe4a 	bl	8001a6a <HAL_DMA2D_BlendingStart_IT>
    else
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
                           blitOp.nSteps, blitOp.nLoops);
}
 8008dd6:	e00d      	b.n	8008df4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1ec>
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8008dd8:	683b      	ldr	r3, [r7, #0]
 8008dda:	68db      	ldr	r3, [r3, #12]
 8008ddc:	461a      	mov	r2, r3
                           blitOp.nSteps, blitOp.nLoops);
 8008dde:	683b      	ldr	r3, [r7, #0]
 8008de0:	8a1b      	ldrh	r3, [r3, #16]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8008de2:	4619      	mov	r1, r3
                           blitOp.nSteps, blitOp.nLoops);
 8008de4:	683b      	ldr	r3, [r7, #0]
 8008de6:	8a5b      	ldrh	r3, [r3, #18]
        HAL_DMA2D_Start_IT(&hdma2d, color, (unsigned int)blitOp.pDst,
 8008de8:	9300      	str	r3, [sp, #0]
 8008dea:	460b      	mov	r3, r1
 8008dec:	6a39      	ldr	r1, [r7, #32]
 8008dee:	4805      	ldr	r0, [pc, #20]	; (8008e04 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1fc>)
 8008df0:	f7f8 fe08 	bl	8001a04 <HAL_DMA2D_Start_IT>
}
 8008df4:	bf00      	nop
 8008df6:	372c      	adds	r7, #44	; 0x2c
 8008df8:	46bd      	mov	sp, r7
 8008dfa:	bd90      	pop	{r4, r7, pc}
 8008dfc:	84210843 	.word	0x84210843
 8008e00:	82082083 	.word	0x82082083
 8008e04:	20001700 	.word	0x20001700

08008e08 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
class LockFreeDMA_Queue : public DMA_Queue
 8008e08:	b580      	push	{r7, lr}
 8008e0a:	b082      	sub	sp, #8
 8008e0c:	af00      	add	r7, sp, #0
 8008e0e:	6078      	str	r0, [r7, #4]
 8008e10:	4a05      	ldr	r2, [pc, #20]	; (8008e28 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 8008e12:	687b      	ldr	r3, [r7, #4]
 8008e14:	601a      	str	r2, [r3, #0]
 8008e16:	687b      	ldr	r3, [r7, #4]
 8008e18:	4618      	mov	r0, r3
 8008e1a:	f7ff fc2b 	bl	8008674 <_ZN8touchgfx9DMA_QueueD1Ev>
 8008e1e:	687b      	ldr	r3, [r7, #4]
 8008e20:	4618      	mov	r0, r3
 8008e22:	3708      	adds	r7, #8
 8008e24:	46bd      	mov	sp, r7
 8008e26:	bd80      	pop	{r7, pc}
 8008e28:	0801defc 	.word	0x0801defc

08008e2c <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8008e2c:	b580      	push	{r7, lr}
 8008e2e:	b082      	sub	sp, #8
 8008e30:	af00      	add	r7, sp, #0
 8008e32:	6078      	str	r0, [r7, #4]
 8008e34:	6878      	ldr	r0, [r7, #4]
 8008e36:	f7ff ffe7 	bl	8008e08 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 8008e3a:	2114      	movs	r1, #20
 8008e3c:	6878      	ldr	r0, [r7, #4]
 8008e3e:	f011 fe5d 	bl	801aafc <_ZdlPvj>
 8008e42:	687b      	ldr	r3, [r7, #4]
 8008e44:	4618      	mov	r0, r3
 8008e46:	3708      	adds	r7, #8
 8008e48:	46bd      	mov	sp, r7
 8008e4a:	bd80      	pop	{r7, pc}

08008e4c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     *
     *        Registers an array of texts.
     *
     * @param t The array of texts.
     */
    static void registerTexts(const Texts* t)
 8008e4c:	b480      	push	{r7}
 8008e4e:	b083      	sub	sp, #12
 8008e50:	af00      	add	r7, sp, #0
 8008e52:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 8008e54:	4a04      	ldr	r2, [pc, #16]	; (8008e68 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 8008e56:	687b      	ldr	r3, [r7, #4]
 8008e58:	6013      	str	r3, [r2, #0]
    }
 8008e5a:	bf00      	nop
 8008e5c:	370c      	adds	r7, #12
 8008e5e:	46bd      	mov	sp, r7
 8008e60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008e64:	4770      	bx	lr
 8008e66:	bf00      	nop
 8008e68:	200014b8 	.word	0x200014b8

08008e6c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 8008e6c:	b480      	push	{r7}
 8008e6e:	b085      	sub	sp, #20
 8008e70:	af00      	add	r7, sp, #0
 8008e72:	60f8      	str	r0, [r7, #12]
 8008e74:	60b9      	str	r1, [r7, #8]
 8008e76:	607a      	str	r2, [r7, #4]
 8008e78:	603b      	str	r3, [r7, #0]
            AbstractPartition& scr,
            AbstractPartition& tra,
            MVPApplication& app) : presenterStorage(pres),
        screenStorage(scr),
        transitionStorage(tra),
        frontendApplication(app)
 8008e7a:	4a0b      	ldr	r2, [pc, #44]	; (8008ea8 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 8008e7c:	68fb      	ldr	r3, [r7, #12]
 8008e7e:	601a      	str	r2, [r3, #0]
 8008e80:	68fb      	ldr	r3, [r7, #12]
 8008e82:	68ba      	ldr	r2, [r7, #8]
 8008e84:	605a      	str	r2, [r3, #4]
 8008e86:	68fb      	ldr	r3, [r7, #12]
 8008e88:	687a      	ldr	r2, [r7, #4]
 8008e8a:	609a      	str	r2, [r3, #8]
 8008e8c:	68fb      	ldr	r3, [r7, #12]
 8008e8e:	683a      	ldr	r2, [r7, #0]
 8008e90:	60da      	str	r2, [r3, #12]
 8008e92:	68fb      	ldr	r3, [r7, #12]
 8008e94:	69ba      	ldr	r2, [r7, #24]
 8008e96:	611a      	str	r2, [r3, #16]
    {
    }
 8008e98:	68fb      	ldr	r3, [r7, #12]
 8008e9a:	4618      	mov	r0, r3
 8008e9c:	3714      	adds	r7, #20
 8008e9e:	46bd      	mov	sp, r7
 8008ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ea4:	4770      	bx	lr
 8008ea6:	bf00      	nop
 8008ea8:	0801d2d0 	.word	0x0801d2d0

08008eac <_ZN8touchgfx7MVPHeapD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~MVPHeap()
 8008eac:	b480      	push	{r7}
 8008eae:	b083      	sub	sp, #12
 8008eb0:	af00      	add	r7, sp, #0
 8008eb2:	6078      	str	r0, [r7, #4]
    {
 8008eb4:	4a04      	ldr	r2, [pc, #16]	; (8008ec8 <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 8008eb6:	687b      	ldr	r3, [r7, #4]
 8008eb8:	601a      	str	r2, [r3, #0]
    }
 8008eba:	687b      	ldr	r3, [r7, #4]
 8008ebc:	4618      	mov	r0, r3
 8008ebe:	370c      	adds	r7, #12
 8008ec0:	46bd      	mov	sp, r7
 8008ec2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ec6:	4770      	bx	lr
 8008ec8:	0801d2d0 	.word	0x0801d2d0

08008ecc <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 8008ecc:	b580      	push	{r7, lr}
 8008ece:	b082      	sub	sp, #8
 8008ed0:	af00      	add	r7, sp, #0
 8008ed2:	6078      	str	r0, [r7, #4]
    }
 8008ed4:	6878      	ldr	r0, [r7, #4]
 8008ed6:	f7ff ffe9 	bl	8008eac <_ZN8touchgfx7MVPHeapD1Ev>
 8008eda:	2114      	movs	r1, #20
 8008edc:	6878      	ldr	r0, [r7, #4]
 8008ede:	f011 fe0d 	bl	801aafc <_ZdlPvj>
 8008ee2:	687b      	ldr	r3, [r7, #4]
 8008ee4:	4618      	mov	r0, r3
 8008ee6:	3708      	adds	r7, #8
 8008ee8:	46bd      	mov	sp, r7
 8008eea:	bd80      	pop	{r7, pc}

08008eec <_ZN8touchgfx3LCDD1Ev>:
     *
     * @brief Destructor.
     *
     *        Destructor.
     */
    virtual ~LCD()
 8008eec:	b480      	push	{r7}
 8008eee:	b083      	sub	sp, #12
 8008ef0:	af00      	add	r7, sp, #0
 8008ef2:	6078      	str	r0, [r7, #4]
    {
 8008ef4:	4a04      	ldr	r2, [pc, #16]	; (8008f08 <_ZN8touchgfx3LCDD1Ev+0x1c>)
 8008ef6:	687b      	ldr	r3, [r7, #4]
 8008ef8:	601a      	str	r2, [r3, #0]
    }
 8008efa:	687b      	ldr	r3, [r7, #4]
 8008efc:	4618      	mov	r0, r3
 8008efe:	370c      	adds	r7, #12
 8008f00:	46bd      	mov	sp, r7
 8008f02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f06:	4770      	bx	lr
 8008f08:	0801e2b8 	.word	0x0801e2b8

08008f0c <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 8008f0c:	b580      	push	{r7, lr}
 8008f0e:	b082      	sub	sp, #8
 8008f10:	af00      	add	r7, sp, #0
 8008f12:	6078      	str	r0, [r7, #4]
    }
 8008f14:	6878      	ldr	r0, [r7, #4]
 8008f16:	f7ff ffe9 	bl	8008eec <_ZN8touchgfx3LCDD1Ev>
 8008f1a:	2108      	movs	r1, #8
 8008f1c:	6878      	ldr	r0, [r7, #4]
 8008f1e:	f011 fded 	bl	801aafc <_ZdlPvj>
 8008f22:	687b      	ldr	r3, [r7, #4]
 8008f24:	4618      	mov	r0, r3
 8008f26:	3708      	adds	r7, #8
 8008f28:	46bd      	mov	sp, r7
 8008f2a:	bd80      	pop	{r7, pc}

08008f2c <_ZN8touchgfx8Gestures9DragStateC1Ev>:
     *
     *        Defines the state of a drag.
     */
    struct DragState
    {
        DragState() : startX(0),
 8008f2c:	b480      	push	{r7}
 8008f2e:	b083      	sub	sp, #12
 8008f30:	af00      	add	r7, sp, #0
 8008f32:	6078      	str	r0, [r7, #4]
            downX(0),
            downY(0),
            tickCount(0),
            velocityX(0),
            velocityY(0),
            inProgress(false)
 8008f34:	687b      	ldr	r3, [r7, #4]
 8008f36:	2200      	movs	r2, #0
 8008f38:	801a      	strh	r2, [r3, #0]
 8008f3a:	687b      	ldr	r3, [r7, #4]
 8008f3c:	2200      	movs	r2, #0
 8008f3e:	805a      	strh	r2, [r3, #2]
 8008f40:	687b      	ldr	r3, [r7, #4]
 8008f42:	2200      	movs	r2, #0
 8008f44:	809a      	strh	r2, [r3, #4]
 8008f46:	687b      	ldr	r3, [r7, #4]
 8008f48:	2200      	movs	r2, #0
 8008f4a:	80da      	strh	r2, [r3, #6]
 8008f4c:	687b      	ldr	r3, [r7, #4]
 8008f4e:	2200      	movs	r2, #0
 8008f50:	811a      	strh	r2, [r3, #8]
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	2200      	movs	r2, #0
 8008f56:	815a      	strh	r2, [r3, #10]
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	2200      	movs	r2, #0
 8008f5c:	819a      	strh	r2, [r3, #12]
 8008f5e:	687b      	ldr	r3, [r7, #4]
 8008f60:	2200      	movs	r2, #0
 8008f62:	739a      	strb	r2, [r3, #14]
        {
        }
 8008f64:	687b      	ldr	r3, [r7, #4]
 8008f66:	4618      	mov	r0, r3
 8008f68:	370c      	adds	r7, #12
 8008f6a:	46bd      	mov	sp, r7
 8008f6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f70:	4770      	bx	lr

08008f72 <_ZN8touchgfx8GesturesC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Default constructor. Does nothing.
     */
    Gestures() : listener(0), dragThresholdValue(0) { }
 8008f72:	b580      	push	{r7, lr}
 8008f74:	b082      	sub	sp, #8
 8008f76:	af00      	add	r7, sp, #0
 8008f78:	6078      	str	r0, [r7, #4]
 8008f7a:	687b      	ldr	r3, [r7, #4]
 8008f7c:	4618      	mov	r0, r3
 8008f7e:	f7ff ffd5 	bl	8008f2c <_ZN8touchgfx8Gestures9DragStateC1Ev>
 8008f82:	687b      	ldr	r3, [r7, #4]
 8008f84:	2200      	movs	r2, #0
 8008f86:	611a      	str	r2, [r3, #16]
 8008f88:	687b      	ldr	r3, [r7, #4]
 8008f8a:	2200      	movs	r2, #0
 8008f8c:	829a      	strh	r2, [r3, #20]
 8008f8e:	687b      	ldr	r3, [r7, #4]
 8008f90:	4618      	mov	r0, r3
 8008f92:	3708      	adds	r7, #8
 8008f94:	46bd      	mov	sp, r7
 8008f96:	bd80      	pop	{r7, pc}

08008f98 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height) :
 8008f98:	b580      	push	{r7, lr}
 8008f9a:	b084      	sub	sp, #16
 8008f9c:	af00      	add	r7, sp, #0
 8008f9e:	60f8      	str	r0, [r7, #12]
 8008fa0:	60b9      	str	r1, [r7, #8]
 8008fa2:	607a      	str	r2, [r7, #4]
 8008fa4:	603b      	str	r3, [r7, #0]
        displayOrientationChangeRequested(false)
 8008fa6:	4a44      	ldr	r2, [pc, #272]	; (80090b8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x120>)
 8008fa8:	68fb      	ldr	r3, [r7, #12]
 8008faa:	601a      	str	r2, [r3, #0]
 8008fac:	68fb      	ldr	r3, [r7, #12]
 8008fae:	68ba      	ldr	r2, [r7, #8]
 8008fb0:	605a      	str	r2, [r3, #4]
 8008fb2:	68fb      	ldr	r3, [r7, #12]
 8008fb4:	687a      	ldr	r2, [r7, #4]
 8008fb6:	609a      	str	r2, [r3, #8]
 8008fb8:	68fb      	ldr	r3, [r7, #12]
 8008fba:	683a      	ldr	r2, [r7, #0]
 8008fbc:	60da      	str	r2, [r3, #12]
 8008fbe:	68fb      	ldr	r3, [r7, #12]
 8008fc0:	2200      	movs	r2, #0
 8008fc2:	611a      	str	r2, [r3, #16]
 8008fc4:	68fb      	ldr	r3, [r7, #12]
 8008fc6:	2200      	movs	r2, #0
 8008fc8:	615a      	str	r2, [r3, #20]
 8008fca:	68fb      	ldr	r3, [r7, #12]
 8008fcc:	2200      	movs	r2, #0
 8008fce:	619a      	str	r2, [r3, #24]
 8008fd0:	68fb      	ldr	r3, [r7, #12]
 8008fd2:	331c      	adds	r3, #28
 8008fd4:	4618      	mov	r0, r3
 8008fd6:	f7ff ffcc 	bl	8008f72 <_ZN8touchgfx8GesturesC1Ev>
 8008fda:	68fb      	ldr	r3, [r7, #12]
 8008fdc:	2200      	movs	r2, #0
 8008fde:	639a      	str	r2, [r3, #56]	; 0x38
 8008fe0:	68fb      	ldr	r3, [r7, #12]
 8008fe2:	2200      	movs	r2, #0
 8008fe4:	63da      	str	r2, [r3, #60]	; 0x3c
 8008fe6:	68fb      	ldr	r3, [r7, #12]
 8008fe8:	2200      	movs	r2, #0
 8008fea:	641a      	str	r2, [r3, #64]	; 0x40
 8008fec:	68fb      	ldr	r3, [r7, #12]
 8008fee:	2200      	movs	r2, #0
 8008ff0:	645a      	str	r2, [r3, #68]	; 0x44
 8008ff2:	68fb      	ldr	r3, [r7, #12]
 8008ff4:	2200      	movs	r2, #0
 8008ff6:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
 8008ffa:	68fb      	ldr	r3, [r7, #12]
 8008ffc:	2201      	movs	r2, #1
 8008ffe:	f883 2049 	strb.w	r2, [r3, #73]	; 0x49
 8009002:	68fb      	ldr	r3, [r7, #12]
 8009004:	2201      	movs	r2, #1
 8009006:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
 800900a:	68fb      	ldr	r3, [r7, #12]
 800900c:	2200      	movs	r2, #0
 800900e:	64da      	str	r2, [r3, #76]	; 0x4c
 8009010:	68fb      	ldr	r3, [r7, #12]
 8009012:	3350      	adds	r3, #80	; 0x50
 8009014:	4618      	mov	r0, r3
 8009016:	f7fe f918 	bl	800724a <_ZN8touchgfx4RectC1Ev>
 800901a:	68fb      	ldr	r3, [r7, #12]
 800901c:	2201      	movs	r2, #1
 800901e:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
 8009022:	68fb      	ldr	r3, [r7, #12]
 8009024:	2200      	movs	r2, #0
 8009026:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
 800902a:	68fb      	ldr	r3, [r7, #12]
 800902c:	2200      	movs	r2, #0
 800902e:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
 8009032:	68fb      	ldr	r3, [r7, #12]
 8009034:	2201      	movs	r2, #1
 8009036:	f883 2067 	strb.w	r2, [r3, #103]	; 0x67
 800903a:	68fb      	ldr	r3, [r7, #12]
 800903c:	2200      	movs	r2, #0
 800903e:	f883 2068 	strb.w	r2, [r3, #104]	; 0x68
 8009042:	68fb      	ldr	r3, [r7, #12]
 8009044:	2200      	movs	r2, #0
 8009046:	f883 2069 	strb.w	r2, [r3, #105]	; 0x69
 800904a:	68fb      	ldr	r3, [r7, #12]
 800904c:	2200      	movs	r2, #0
 800904e:	f883 206a 	strb.w	r2, [r3, #106]	; 0x6a
 8009052:	68fb      	ldr	r3, [r7, #12]
 8009054:	2200      	movs	r2, #0
 8009056:	f883 206b 	strb.w	r2, [r3, #107]	; 0x6b
 800905a:	68fb      	ldr	r3, [r7, #12]
 800905c:	2200      	movs	r2, #0
 800905e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8009062:	68fb      	ldr	r3, [r7, #12]
 8009064:	2200      	movs	r2, #0
 8009066:	671a      	str	r2, [r3, #112]	; 0x70
 8009068:	68fb      	ldr	r3, [r7, #12]
 800906a:	2200      	movs	r2, #0
 800906c:	f883 2075 	strb.w	r2, [r3, #117]	; 0x75
        instance = this;
 8009070:	4a12      	ldr	r2, [pc, #72]	; (80090bc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x124>)
 8009072:	68fb      	ldr	r3, [r7, #12]
 8009074:	6013      	str	r3, [r2, #0]
        DISPLAY_WIDTH = width;
 8009076:	4a12      	ldr	r2, [pc, #72]	; (80090c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 8009078:	8b3b      	ldrh	r3, [r7, #24]
 800907a:	8013      	strh	r3, [r2, #0]
        DISPLAY_HEIGHT = height;
 800907c:	4a11      	ldr	r2, [pc, #68]	; (80090c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 800907e:	8bbb      	ldrh	r3, [r7, #28]
 8009080:	8013      	strh	r3, [r2, #0]
        DISPLAY_ROTATION = rotate0;
 8009082:	4b11      	ldr	r3, [pc, #68]	; (80090c8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x130>)
 8009084:	2200      	movs	r2, #0
 8009086:	701a      	strb	r2, [r3, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8009088:	4b0d      	ldr	r3, [pc, #52]	; (80090c0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x128>)
 800908a:	881a      	ldrh	r2, [r3, #0]
 800908c:	4b0f      	ldr	r3, [pc, #60]	; (80090cc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x134>)
 800908e:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8009090:	4b0c      	ldr	r3, [pc, #48]	; (80090c4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x12c>)
 8009092:	881a      	ldrh	r2, [r3, #0]
 8009094:	4b0e      	ldr	r3, [pc, #56]	; (80090d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x138>)
 8009096:	801a      	strh	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8009098:	8b3a      	ldrh	r2, [r7, #24]
 800909a:	8bbb      	ldrh	r3, [r7, #28]
 800909c:	429a      	cmp	r2, r3
 800909e:	d301      	bcc.n	80090a4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10c>
 80090a0:	2200      	movs	r2, #0
 80090a2:	e000      	b.n	80090a6 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x10e>
 80090a4:	2201      	movs	r2, #1
 80090a6:	68fb      	ldr	r3, [r7, #12]
 80090a8:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
    }
 80090ac:	68fb      	ldr	r3, [r7, #12]
 80090ae:	4618      	mov	r0, r3
 80090b0:	3710      	adds	r7, #16
 80090b2:	46bd      	mov	sp, r7
 80090b4:	bd80      	pop	{r7, pc}
 80090b6:	bf00      	nop
 80090b8:	0801da68 	.word	0x0801da68
 80090bc:	2000143c 	.word	0x2000143c
 80090c0:	20001430 	.word	0x20001430
 80090c4:	20001432 	.word	0x20001432
 80090c8:	20001434 	.word	0x20001434
 80090cc:	20001436 	.word	0x20001436
 80090d0:	20001438 	.word	0x20001438

080090d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 80090d4:	b580      	push	{r7, lr}
 80090d6:	b082      	sub	sp, #8
 80090d8:	af00      	add	r7, sp, #0
 80090da:	6078      	str	r0, [r7, #4]
 80090dc:	6039      	str	r1, [r7, #0]
    {
        app.gotoscreenScreenNoTransition();
 80090de:	683b      	ldr	r3, [r7, #0]
 80090e0:	4618      	mov	r0, r3
 80090e2:	f7fd fea9 	bl	8006e38 <_ZN23FrontendApplicationBase28gotoscreenScreenNoTransitionEv>
    }
 80090e6:	bf00      	nop
 80090e8:	3708      	adds	r7, #8
 80090ea:	46bd      	mov	sp, r7
 80090ec:	bd80      	pop	{r7, pc}
	...

080090f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 80090f0:	b580      	push	{r7, lr}
 80090f2:	b086      	sub	sp, #24
 80090f4:	af02      	add	r7, sp, #8
 80090f6:	60f8      	str	r0, [r7, #12]
 80090f8:	60b9      	str	r1, [r7, #8]
 80090fa:	607a      	str	r2, [r7, #4]
 80090fc:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 80090fe:	68f8      	ldr	r0, [r7, #12]
 8009100:	69bb      	ldr	r3, [r7, #24]
 8009102:	9300      	str	r3, [sp, #0]
 8009104:	683b      	ldr	r3, [r7, #0]
 8009106:	687a      	ldr	r2, [r7, #4]
 8009108:	68b9      	ldr	r1, [r7, #8]
 800910a:	f7ff feaf 	bl	8008e6c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800910e:	4a04      	ldr	r2, [pc, #16]	; (8009120 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 8009110:	68fb      	ldr	r3, [r7, #12]
 8009112:	601a      	str	r2, [r3, #0]
    {

    }
 8009114:	68fb      	ldr	r3, [r7, #12]
 8009116:	4618      	mov	r0, r3
 8009118:	3710      	adds	r7, #16
 800911a:	46bd      	mov	sp, r7
 800911c:	bd80      	pop	{r7, pc}
 800911e:	bf00      	nop
 8009120:	0801d2bc 	.word	0x0801d2bc

08009124 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8009124:	b580      	push	{r7, lr}
 8009126:	af00      	add	r7, sp, #0
 8009128:	4801      	ldr	r0, [pc, #4]	; (8009130 <__tcf_0+0xc>)
 800912a:	f000 f9d7 	bl	80094dc <_ZN12FrontendHeapD1Ev>
 800912e:	bd80      	pop	{r7, pc}
 8009130:	200001d4 	.word	0x200001d4

08009134 <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 8009134:	b580      	push	{r7, lr}
 8009136:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 8009138:	4b08      	ldr	r3, [pc, #32]	; (800915c <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800913a:	681b      	ldr	r3, [r3, #0]
 800913c:	f003 0301 	and.w	r3, r3, #1
 8009140:	2b00      	cmp	r3, #0
 8009142:	d108      	bne.n	8009156 <_ZN12FrontendHeap11getInstanceEv+0x22>
 8009144:	4806      	ldr	r0, [pc, #24]	; (8009160 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
 8009146:	f000 f831 	bl	80091ac <_ZN12FrontendHeapC1Ev>
 800914a:	4b04      	ldr	r3, [pc, #16]	; (800915c <_ZN12FrontendHeap11getInstanceEv+0x28>)
 800914c:	2201      	movs	r2, #1
 800914e:	601a      	str	r2, [r3, #0]
 8009150:	4804      	ldr	r0, [pc, #16]	; (8009164 <_ZN12FrontendHeap11getInstanceEv+0x30>)
 8009152:	f012 faeb 	bl	801b72c <atexit>
        return instance;
 8009156:	4b02      	ldr	r3, [pc, #8]	; (8009160 <_ZN12FrontendHeap11getInstanceEv+0x2c>)
    }
 8009158:	4618      	mov	r0, r3
 800915a:	bd80      	pop	{r7, pc}
 800915c:	20000710 	.word	0x20000710
 8009160:	200001d4 	.word	0x200001d4
 8009164:	08009125 	.word	0x08009125

08009168 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 8009168:	b580      	push	{r7, lr}
 800916a:	b082      	sub	sp, #8
 800916c:	af00      	add	r7, sp, #0
 800916e:	6078      	str	r0, [r7, #4]
 8009170:	4a05      	ldr	r2, [pc, #20]	; (8009188 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 8009172:	687b      	ldr	r3, [r7, #4]
 8009174:	601a      	str	r2, [r3, #0]
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	4618      	mov	r0, r3
 800917a:	f7ff fe97 	bl	8008eac <_ZN8touchgfx7MVPHeapD1Ev>
 800917e:	687b      	ldr	r3, [r7, #4]
 8009180:	4618      	mov	r0, r3
 8009182:	3708      	adds	r7, #8
 8009184:	46bd      	mov	sp, r7
 8009186:	bd80      	pop	{r7, pc}
 8009188:	0801d2bc 	.word	0x0801d2bc

0800918c <_ZN16FrontendHeapBaseD0Ev>:
 800918c:	b580      	push	{r7, lr}
 800918e:	b082      	sub	sp, #8
 8009190:	af00      	add	r7, sp, #0
 8009192:	6078      	str	r0, [r7, #4]
 8009194:	6878      	ldr	r0, [r7, #4]
 8009196:	f7ff ffe7 	bl	8009168 <_ZN16FrontendHeapBaseD1Ev>
 800919a:	2114      	movs	r1, #20
 800919c:	6878      	ldr	r0, [r7, #4]
 800919e:	f011 fcad 	bl	801aafc <_ZdlPvj>
 80091a2:	687b      	ldr	r3, [r7, #4]
 80091a4:	4618      	mov	r0, r3
 80091a6:	3708      	adds	r7, #8
 80091a8:	46bd      	mov	sp, r7
 80091aa:	bd80      	pop	{r7, pc}

080091ac <_ZN12FrontendHeapC1Ev>:
    touchgfx::Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 80091ac:	b590      	push	{r4, r7, lr}
 80091ae:	b085      	sub	sp, #20
 80091b0:	af02      	add	r7, sp, #8
 80091b2:	6078      	str	r0, [r7, #4]
                     app(model, *this)
 80091b4:	6878      	ldr	r0, [r7, #4]
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	f103 0114 	add.w	r1, r3, #20
 80091bc:	687b      	ldr	r3, [r7, #4]
 80091be:	f103 022c 	add.w	r2, r3, #44	; 0x2c
 80091c2:	687b      	ldr	r3, [r7, #4]
 80091c4:	f503 7475 	add.w	r4, r3, #980	; 0x3d4
 80091c8:	687b      	ldr	r3, [r7, #4]
 80091ca:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80091ce:	9300      	str	r3, [sp, #0]
 80091d0:	4623      	mov	r3, r4
 80091d2:	f7ff ff8d 	bl	80090f0 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 80091d6:	4a18      	ldr	r2, [pc, #96]	; (8009238 <_ZN12FrontendHeapC1Ev+0x8c>)
 80091d8:	687b      	ldr	r3, [r7, #4]
 80091da:	601a      	str	r2, [r3, #0]
 80091dc:	687b      	ldr	r3, [r7, #4]
 80091de:	3314      	adds	r3, #20
 80091e0:	4618      	mov	r0, r3
 80091e2:	f000 f8dd 	bl	80093a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80091e6:	687b      	ldr	r3, [r7, #4]
 80091e8:	332c      	adds	r3, #44	; 0x2c
 80091ea:	4618      	mov	r0, r3
 80091ec:	f000 f90c 	bl	8009408 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80091f0:	687b      	ldr	r3, [r7, #4]
 80091f2:	f503 7375 	add.w	r3, r3, #980	; 0x3d4
 80091f6:	4618      	mov	r0, r3
 80091f8:	f000 f93c 	bl	8009474 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	f503 707a 	add.w	r0, r3, #1000	; 0x3e8
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	f503 63a7 	add.w	r3, r3, #1336	; 0x538
 8009208:	687a      	ldr	r2, [r7, #4]
 800920a:	4619      	mov	r1, r3
 800920c:	f7fe fd06 	bl	8007c1c <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8009210:	687b      	ldr	r3, [r7, #4]
 8009212:	f503 63a7 	add.w	r3, r3, #1336	; 0x538
 8009216:	4618      	mov	r0, r3
 8009218:	f7fe fd16 	bl	8007c48 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800921c:	687a      	ldr	r2, [r7, #4]
 800921e:	687b      	ldr	r3, [r7, #4]
 8009220:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 8009224:	4619      	mov	r1, r3
 8009226:	4610      	mov	r0, r2
 8009228:	f7ff ff54 	bl	80090d4 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	4618      	mov	r0, r3
 8009230:	370c      	adds	r7, #12
 8009232:	46bd      	mov	sp, r7
 8009234:	bd90      	pop	{r4, r7, pc}
 8009236:	bf00      	nop
 8009238:	0801d20c 	.word	0x0801d20c

0800923c <_ZN8touchgfx8LCD16bppD1Ev>:
class LCD16bpp : public LCD
{
public:
    LCD16bpp();

    virtual ~LCD16bpp()
 800923c:	b580      	push	{r7, lr}
 800923e:	b082      	sub	sp, #8
 8009240:	af00      	add	r7, sp, #0
 8009242:	6078      	str	r0, [r7, #4]
    {
 8009244:	4a05      	ldr	r2, [pc, #20]	; (800925c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 8009246:	687b      	ldr	r3, [r7, #4]
 8009248:	601a      	str	r2, [r3, #0]
 800924a:	687b      	ldr	r3, [r7, #4]
 800924c:	4618      	mov	r0, r3
 800924e:	f7ff fe4d 	bl	8008eec <_ZN8touchgfx3LCDD1Ev>
    }
 8009252:	687b      	ldr	r3, [r7, #4]
 8009254:	4618      	mov	r0, r3
 8009256:	3708      	adds	r7, #8
 8009258:	46bd      	mov	sp, r7
 800925a:	bd80      	pop	{r7, pc}
 800925c:	0801f67c 	.word	0x0801f67c

08009260 <_ZN8touchgfx8LCD16bppD0Ev>:
    virtual ~LCD16bpp()
 8009260:	b580      	push	{r7, lr}
 8009262:	b082      	sub	sp, #8
 8009264:	af00      	add	r7, sp, #0
 8009266:	6078      	str	r0, [r7, #4]
    }
 8009268:	6878      	ldr	r0, [r7, #4]
 800926a:	f7ff ffe7 	bl	800923c <_ZN8touchgfx8LCD16bppD1Ev>
 800926e:	2178      	movs	r1, #120	; 0x78
 8009270:	6878      	ldr	r0, [r7, #4]
 8009272:	f011 fc43 	bl	801aafc <_ZdlPvj>
 8009276:	687b      	ldr	r3, [r7, #4]
 8009278:	4618      	mov	r0, r3
 800927a:	3708      	adds	r7, #8
 800927c:	46bd      	mov	sp, r7
 800927e:	bd80      	pop	{r7, pc}

08009280 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : touchgfx::HAL(dma, display, tc, width, height)
 8009280:	b580      	push	{r7, lr}
 8009282:	b086      	sub	sp, #24
 8009284:	af02      	add	r7, sp, #8
 8009286:	60f8      	str	r0, [r7, #12]
 8009288:	60b9      	str	r1, [r7, #8]
 800928a:	607a      	str	r2, [r7, #4]
 800928c:	603b      	str	r3, [r7, #0]
 800928e:	68f8      	ldr	r0, [r7, #12]
 8009290:	8bbb      	ldrh	r3, [r7, #28]
 8009292:	9301      	str	r3, [sp, #4]
 8009294:	8b3b      	ldrh	r3, [r7, #24]
 8009296:	9300      	str	r3, [sp, #0]
 8009298:	683b      	ldr	r3, [r7, #0]
 800929a:	687a      	ldr	r2, [r7, #4]
 800929c:	68b9      	ldr	r1, [r7, #8]
 800929e:	f7ff fe7b 	bl	8008f98 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 80092a2:	4a04      	ldr	r2, [pc, #16]	; (80092b4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80092a4:	68fb      	ldr	r3, [r7, #12]
 80092a6:	601a      	str	r2, [r3, #0]
    }
 80092a8:	68fb      	ldr	r3, [r7, #12]
 80092aa:	4618      	mov	r0, r3
 80092ac:	3710      	adds	r7, #16
 80092ae:	46bd      	mov	sp, r7
 80092b0:	bd80      	pop	{r7, pc}
 80092b2:	bf00      	nop
 80092b4:	0801d2e0 	.word	0x0801d2e0

080092b8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 80092b8:	b580      	push	{r7, lr}
 80092ba:	b086      	sub	sp, #24
 80092bc:	af02      	add	r7, sp, #8
 80092be:	60f8      	str	r0, [r7, #12]
 80092c0:	60b9      	str	r1, [r7, #8]
 80092c2:	607a      	str	r2, [r7, #4]
 80092c4:	603b      	str	r3, [r7, #0]
 80092c6:	68f8      	ldr	r0, [r7, #12]
 80092c8:	8bbb      	ldrh	r3, [r7, #28]
 80092ca:	9301      	str	r3, [sp, #4]
 80092cc:	8b3b      	ldrh	r3, [r7, #24]
 80092ce:	9300      	str	r3, [sp, #0]
 80092d0:	683b      	ldr	r3, [r7, #0]
 80092d2:	687a      	ldr	r2, [r7, #4]
 80092d4:	68b9      	ldr	r1, [r7, #8]
 80092d6:	f7ff ffd3 	bl	8009280 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 80092da:	4a04      	ldr	r2, [pc, #16]	; (80092ec <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 80092dc:	68fb      	ldr	r3, [r7, #12]
 80092de:	601a      	str	r2, [r3, #0]
    }
 80092e0:	68fb      	ldr	r3, [r7, #12]
 80092e2:	4618      	mov	r0, r3
 80092e4:	3710      	adds	r7, #16
 80092e6:	46bd      	mov	sp, r7
 80092e8:	bd80      	pop	{r7, pc}
 80092ea:	bf00      	nop
 80092ec:	0801d00c 	.word	0x0801d00c

080092f0 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 80092f0:	b480      	push	{r7}
 80092f2:	b083      	sub	sp, #12
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	6078      	str	r0, [r7, #4]
 80092f8:	4a04      	ldr	r2, [pc, #16]	; (800930c <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 80092fa:	687b      	ldr	r3, [r7, #4]
 80092fc:	601a      	str	r2, [r3, #0]
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	4618      	mov	r0, r3
 8009302:	370c      	adds	r7, #12
 8009304:	46bd      	mov	sp, r7
 8009306:	f85d 7b04 	ldr.w	r7, [sp], #4
 800930a:	4770      	bx	lr
 800930c:	0801cff4 	.word	0x0801cff4

08009310 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 8009310:	b580      	push	{r7, lr}
 8009312:	b082      	sub	sp, #8
 8009314:	af00      	add	r7, sp, #0
 8009316:	6078      	str	r0, [r7, #4]
 8009318:	687b      	ldr	r3, [r7, #4]
 800931a:	4618      	mov	r0, r3
 800931c:	f7ff ffe8 	bl	80092f0 <_ZN8touchgfx15TouchControllerC1Ev>
 8009320:	4a03      	ldr	r2, [pc, #12]	; (8009330 <_ZN20STM32TouchControllerC1Ev+0x20>)
 8009322:	687b      	ldr	r3, [r7, #4]
 8009324:	601a      	str	r2, [r3, #0]
 8009326:	687b      	ldr	r3, [r7, #4]
 8009328:	4618      	mov	r0, r3
 800932a:	3708      	adds	r7, #8
 800932c:	46bd      	mov	sp, r7
 800932e:	bd80      	pop	{r7, pc}
 8009330:	0801cfdc 	.word	0x0801cfdc

08009334 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8009334:	b590      	push	{r4, r7, lr}
 8009336:	b085      	sub	sp, #20
 8009338:	af02      	add	r7, sp, #8
  Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800933a:	f7fe fb7b 	bl	8007a34 <_ZN14BitmapDatabase11getInstanceEv>
 800933e:	4604      	mov	r4, r0
 8009340:	f7fe fb82 	bl	8007a48 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8009344:	4603      	mov	r3, r0
 8009346:	4619      	mov	r1, r3
 8009348:	2300      	movs	r3, #0
 800934a:	9300      	str	r3, [sp, #0]
 800934c:	2300      	movs	r3, #0
 800934e:	2200      	movs	r2, #0
 8009350:	4620      	mov	r0, r4
 8009352:	f005 ff33 	bl	800f1bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
  TypedText::registerTexts(&texts);
 8009356:	480c      	ldr	r0, [pc, #48]	; (8009388 <touchgfx_init+0x54>)
 8009358:	f7ff fd78 	bl	8008e4c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
  Texts::setLanguage(0);
 800935c:	2000      	movs	r0, #0
 800935e:	f7fe fb97 	bl	8007a90 <_ZN8touchgfx5Texts11setLanguageEt>

  FontManager::setFontProvider(&fontProvider);
 8009362:	480a      	ldr	r0, [pc, #40]	; (800938c <touchgfx_init+0x58>)
 8009364:	f005 fe78 	bl	800f058 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

  FrontendHeap& heap = FrontendHeap::getInstance();
 8009368:	f7ff fee4 	bl	8009134 <_ZN12FrontendHeap11getInstanceEv>
 800936c:	6078      	str	r0, [r7, #4]
  (void)heap; // we need to obtain the reference above to initialize the frontend heap.

  hal.initialize();
 800936e:	4808      	ldr	r0, [pc, #32]	; (8009390 <touchgfx_init+0x5c>)
 8009370:	f7ff f80c 	bl	800838c <_ZN11TouchGFXHAL10initializeEv>
  hal.enableLCDControllerInterrupt();
 8009374:	4806      	ldr	r0, [pc, #24]	; (8009390 <touchgfx_init+0x5c>)
 8009376:	f7ff f862 	bl	800843e <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>
  hal.enableInterrupts();
 800937a:	4805      	ldr	r0, [pc, #20]	; (8009390 <touchgfx_init+0x5c>)
 800937c:	f7ff f847 	bl	800840e <_ZN11TouchGFXHAL16enableInterruptsEv>
}
 8009380:	bf00      	nop
 8009382:	370c      	adds	r7, #12
 8009384:	46bd      	mov	sp, r7
 8009386:	bd90      	pop	{r4, r7, pc}
 8009388:	200013b0 	.word	0x200013b0
 800938c:	20000018 	.word	0x20000018
 8009390:	200013b4 	.word	0x200013b4

08009394 <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 8009394:	b580      	push	{r7, lr}
 8009396:	af00      	add	r7, sp, #0
 /*
  * This function check if a VSYNC has occured.
  * If VSYNC has occured, signal TouchGFX to start a rendering
  */
  OSWrappers::waitForVSync();
 8009398:	f7ff f8d8 	bl	800854c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
}
 800939c:	bf00      	nop
 800939e:	bd80      	pop	{r7, pc}

080093a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
     *
     * @brief Default constructor.
     *
     *        Constructs an empty Partition.
     */
    Partition() : AbstractPartition()
 80093a0:	b580      	push	{r7, lr}
 80093a2:	b082      	sub	sp, #8
 80093a4:	af00      	add	r7, sp, #0
 80093a6:	6078      	str	r0, [r7, #4]
 80093a8:	687b      	ldr	r3, [r7, #4]
 80093aa:	4618      	mov	r0, r3
 80093ac:	f000 fc74 	bl	8009c98 <_ZN8touchgfx17AbstractPartitionC1Ev>
 80093b0:	4a03      	ldr	r2, [pc, #12]	; (80093c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 80093b2:	687b      	ldr	r3, [r7, #4]
 80093b4:	601a      	str	r2, [r3, #0]
    {
    }
 80093b6:	687b      	ldr	r3, [r7, #4]
 80093b8:	4618      	mov	r0, r3
 80093ba:	3708      	adds	r7, #8
 80093bc:	46bd      	mov	sp, r7
 80093be:	bd80      	pop	{r7, pc}
 80093c0:	0801d288 	.word	0x0801d288

080093c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    /**
     * @fn virtual Partition::~Partition()
     *
     * @brief Destructor.
     */
    virtual ~Partition()
 80093c4:	b580      	push	{r7, lr}
 80093c6:	b082      	sub	sp, #8
 80093c8:	af00      	add	r7, sp, #0
 80093ca:	6078      	str	r0, [r7, #4]
    {
    }
 80093cc:	4a05      	ldr	r2, [pc, #20]	; (80093e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80093ce:	687b      	ldr	r3, [r7, #4]
 80093d0:	601a      	str	r2, [r3, #0]
 80093d2:	687b      	ldr	r3, [r7, #4]
 80093d4:	4618      	mov	r0, r3
 80093d6:	f000 fc5d 	bl	8009c94 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80093da:	687b      	ldr	r3, [r7, #4]
 80093dc:	4618      	mov	r0, r3
 80093de:	3708      	adds	r7, #8
 80093e0:	46bd      	mov	sp, r7
 80093e2:	bd80      	pop	{r7, pc}
 80093e4:	0801d288 	.word	0x0801d288

080093e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 80093e8:	b580      	push	{r7, lr}
 80093ea:	b082      	sub	sp, #8
 80093ec:	af00      	add	r7, sp, #0
 80093ee:	6078      	str	r0, [r7, #4]
    }
 80093f0:	6878      	ldr	r0, [r7, #4]
 80093f2:	f7ff ffe7 	bl	80093c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80093f6:	2118      	movs	r1, #24
 80093f8:	6878      	ldr	r0, [r7, #4]
 80093fa:	f011 fb7f 	bl	801aafc <_ZdlPvj>
 80093fe:	687b      	ldr	r3, [r7, #4]
 8009400:	4618      	mov	r0, r3
 8009402:	3708      	adds	r7, #8
 8009404:	46bd      	mov	sp, r7
 8009406:	bd80      	pop	{r7, pc}

08009408 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 8009408:	b580      	push	{r7, lr}
 800940a:	b082      	sub	sp, #8
 800940c:	af00      	add	r7, sp, #0
 800940e:	6078      	str	r0, [r7, #4]
 8009410:	687b      	ldr	r3, [r7, #4]
 8009412:	4618      	mov	r0, r3
 8009414:	f000 fc40 	bl	8009c98 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8009418:	4a03      	ldr	r2, [pc, #12]	; (8009428 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800941a:	687b      	ldr	r3, [r7, #4]
 800941c:	601a      	str	r2, [r3, #0]
    }
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	4618      	mov	r0, r3
 8009422:	3708      	adds	r7, #8
 8009424:	46bd      	mov	sp, r7
 8009426:	bd80      	pop	{r7, pc}
 8009428:	0801d254 	.word	0x0801d254

0800942c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 800942c:	b580      	push	{r7, lr}
 800942e:	b082      	sub	sp, #8
 8009430:	af00      	add	r7, sp, #0
 8009432:	6078      	str	r0, [r7, #4]
    }
 8009434:	4a05      	ldr	r2, [pc, #20]	; (800944c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 8009436:	687b      	ldr	r3, [r7, #4]
 8009438:	601a      	str	r2, [r3, #0]
 800943a:	687b      	ldr	r3, [r7, #4]
 800943c:	4618      	mov	r0, r3
 800943e:	f000 fc29 	bl	8009c94 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8009442:	687b      	ldr	r3, [r7, #4]
 8009444:	4618      	mov	r0, r3
 8009446:	3708      	adds	r7, #8
 8009448:	46bd      	mov	sp, r7
 800944a:	bd80      	pop	{r7, pc}
 800944c:	0801d254 	.word	0x0801d254

08009450 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 8009450:	b580      	push	{r7, lr}
 8009452:	b082      	sub	sp, #8
 8009454:	af00      	add	r7, sp, #0
 8009456:	6078      	str	r0, [r7, #4]
    }
 8009458:	6878      	ldr	r0, [r7, #4]
 800945a:	f7ff ffe7 	bl	800942c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800945e:	f44f 716a 	mov.w	r1, #936	; 0x3a8
 8009462:	6878      	ldr	r0, [r7, #4]
 8009464:	f011 fb4a 	bl	801aafc <_ZdlPvj>
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	4618      	mov	r0, r3
 800946c:	3708      	adds	r7, #8
 800946e:	46bd      	mov	sp, r7
 8009470:	bd80      	pop	{r7, pc}
	...

08009474 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
    Partition() : AbstractPartition()
 8009474:	b580      	push	{r7, lr}
 8009476:	b082      	sub	sp, #8
 8009478:	af00      	add	r7, sp, #0
 800947a:	6078      	str	r0, [r7, #4]
 800947c:	687b      	ldr	r3, [r7, #4]
 800947e:	4618      	mov	r0, r3
 8009480:	f000 fc0a 	bl	8009c98 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8009484:	4a03      	ldr	r2, [pc, #12]	; (8009494 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 8009486:	687b      	ldr	r3, [r7, #4]
 8009488:	601a      	str	r2, [r3, #0]
    }
 800948a:	687b      	ldr	r3, [r7, #4]
 800948c:	4618      	mov	r0, r3
 800948e:	3708      	adds	r7, #8
 8009490:	46bd      	mov	sp, r7
 8009492:	bd80      	pop	{r7, pc}
 8009494:	0801d220 	.word	0x0801d220

08009498 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
    virtual ~Partition()
 8009498:	b580      	push	{r7, lr}
 800949a:	b082      	sub	sp, #8
 800949c:	af00      	add	r7, sp, #0
 800949e:	6078      	str	r0, [r7, #4]
    }
 80094a0:	4a05      	ldr	r2, [pc, #20]	; (80094b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 80094a2:	687b      	ldr	r3, [r7, #4]
 80094a4:	601a      	str	r2, [r3, #0]
 80094a6:	687b      	ldr	r3, [r7, #4]
 80094a8:	4618      	mov	r0, r3
 80094aa:	f000 fbf3 	bl	8009c94 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80094ae:	687b      	ldr	r3, [r7, #4]
 80094b0:	4618      	mov	r0, r3
 80094b2:	3708      	adds	r7, #8
 80094b4:	46bd      	mov	sp, r7
 80094b6:	bd80      	pop	{r7, pc}
 80094b8:	0801d220 	.word	0x0801d220

080094bc <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
    virtual ~Partition()
 80094bc:	b580      	push	{r7, lr}
 80094be:	b082      	sub	sp, #8
 80094c0:	af00      	add	r7, sp, #0
 80094c2:	6078      	str	r0, [r7, #4]
    }
 80094c4:	6878      	ldr	r0, [r7, #4]
 80094c6:	f7ff ffe7 	bl	8009498 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 80094ca:	2114      	movs	r1, #20
 80094cc:	6878      	ldr	r0, [r7, #4]
 80094ce:	f011 fb15 	bl	801aafc <_ZdlPvj>
 80094d2:	687b      	ldr	r3, [r7, #4]
 80094d4:	4618      	mov	r0, r3
 80094d6:	3708      	adds	r7, #8
 80094d8:	46bd      	mov	sp, r7
 80094da:	bd80      	pop	{r7, pc}

080094dc <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 80094dc:	b580      	push	{r7, lr}
 80094de:	b082      	sub	sp, #8
 80094e0:	af00      	add	r7, sp, #0
 80094e2:	6078      	str	r0, [r7, #4]
 80094e4:	4a10      	ldr	r2, [pc, #64]	; (8009528 <_ZN12FrontendHeapD1Ev+0x4c>)
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	601a      	str	r2, [r3, #0]
 80094ea:	687b      	ldr	r3, [r7, #4]
 80094ec:	f503 737a 	add.w	r3, r3, #1000	; 0x3e8
 80094f0:	4618      	mov	r0, r3
 80094f2:	f7fe fb5d 	bl	8007bb0 <_ZN19FrontendApplicationD1Ev>
 80094f6:	687b      	ldr	r3, [r7, #4]
 80094f8:	f503 7375 	add.w	r3, r3, #980	; 0x3d4
 80094fc:	4618      	mov	r0, r3
 80094fe:	f7ff ffcb 	bl	8009498 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8009502:	687b      	ldr	r3, [r7, #4]
 8009504:	332c      	adds	r3, #44	; 0x2c
 8009506:	4618      	mov	r0, r3
 8009508:	f7ff ff90 	bl	800942c <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	3314      	adds	r3, #20
 8009510:	4618      	mov	r0, r3
 8009512:	f7ff ff57 	bl	80093c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8009516:	687b      	ldr	r3, [r7, #4]
 8009518:	4618      	mov	r0, r3
 800951a:	f7ff fe25 	bl	8009168 <_ZN16FrontendHeapBaseD1Ev>
 800951e:	687b      	ldr	r3, [r7, #4]
 8009520:	4618      	mov	r0, r3
 8009522:	3708      	adds	r7, #8
 8009524:	46bd      	mov	sp, r7
 8009526:	bd80      	pop	{r7, pc}
 8009528:	0801d20c 	.word	0x0801d20c

0800952c <_ZN12FrontendHeapD0Ev>:
 800952c:	b580      	push	{r7, lr}
 800952e:	b082      	sub	sp, #8
 8009530:	af00      	add	r7, sp, #0
 8009532:	6078      	str	r0, [r7, #4]
 8009534:	6878      	ldr	r0, [r7, #4]
 8009536:	f7ff ffd1 	bl	80094dc <_ZN12FrontendHeapD1Ev>
 800953a:	f240 513c 	movw	r1, #1340	; 0x53c
 800953e:	6878      	ldr	r0, [r7, #4]
 8009540:	f011 fadc 	bl	801aafc <_ZdlPvj>
 8009544:	687b      	ldr	r3, [r7, #4]
 8009546:	4618      	mov	r0, r3
 8009548:	3708      	adds	r7, #8
 800954a:	46bd      	mov	sp, r7
 800954c:	bd80      	pop	{r7, pc}
	...

08009550 <_Z41__static_initialization_and_destruction_0ii>:
 8009550:	b580      	push	{r7, lr}
 8009552:	b084      	sub	sp, #16
 8009554:	af02      	add	r7, sp, #8
 8009556:	6078      	str	r0, [r7, #4]
 8009558:	6039      	str	r1, [r7, #0]
 800955a:	687b      	ldr	r3, [r7, #4]
 800955c:	2b01      	cmp	r3, #1
 800955e:	d119      	bne.n	8009594 <_Z41__static_initialization_and_destruction_0ii+0x44>
 8009560:	683b      	ldr	r3, [r7, #0]
 8009562:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8009566:	4293      	cmp	r3, r2
 8009568:	d114      	bne.n	8009594 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800956a:	4818      	ldr	r0, [pc, #96]	; (80095cc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800956c:	f7ff fed0 	bl	8009310 <_ZN20STM32TouchControllerC1Ev>
static STM32F4DMA dma;
 8009570:	4817      	ldr	r0, [pc, #92]	; (80095d0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 8009572:	f7ff f96d 	bl	8008850 <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 8009576:	4817      	ldr	r0, [pc, #92]	; (80095d4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 8009578:	f008 fe24 	bl	80121c4 <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 800, 480);
 800957c:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8009580:	9301      	str	r3, [sp, #4]
 8009582:	f44f 7348 	mov.w	r3, #800	; 0x320
 8009586:	9300      	str	r3, [sp, #0]
 8009588:	4b10      	ldr	r3, [pc, #64]	; (80095cc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800958a:	4a12      	ldr	r2, [pc, #72]	; (80095d4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800958c:	4910      	ldr	r1, [pc, #64]	; (80095d0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800958e:	4812      	ldr	r0, [pc, #72]	; (80095d8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 8009590:	f7ff fe92 	bl	80092b8 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 8009594:	687b      	ldr	r3, [r7, #4]
 8009596:	2b00      	cmp	r3, #0
 8009598:	d113      	bne.n	80095c2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800959a:	683b      	ldr	r3, [r7, #0]
 800959c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80095a0:	4293      	cmp	r3, r2
 80095a2:	d10e      	bne.n	80095c2 <_Z41__static_initialization_and_destruction_0ii+0x72>
 80095a4:	480c      	ldr	r0, [pc, #48]	; (80095d8 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 80095a6:	f7fe ff57 	bl	8008458 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 80095aa:	480c      	ldr	r0, [pc, #48]	; (80095dc <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 80095ac:	f7fc feb4 	bl	8006318 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 80095b0:	4808      	ldr	r0, [pc, #32]	; (80095d4 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 80095b2:	f7ff fe43 	bl	800923c <_ZN8touchgfx8LCD16bppD1Ev>
static STM32F4DMA dma;
 80095b6:	4806      	ldr	r0, [pc, #24]	; (80095d0 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 80095b8:	f7ff f974 	bl	80088a4 <_ZN10STM32F4DMAD1Ev>
static STM32TouchController tc;
 80095bc:	4803      	ldr	r0, [pc, #12]	; (80095cc <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 80095be:	f7fe fcc1 	bl	8007f44 <_ZN20STM32TouchControllerD1Ev>
}
 80095c2:	bf00      	nop
 80095c4:	3708      	adds	r7, #8
 80095c6:	46bd      	mov	sp, r7
 80095c8:	bd80      	pop	{r7, pc}
 80095ca:	bf00      	nop
 80095cc:	20000714 	.word	0x20000714
 80095d0:	20000718 	.word	0x20000718
 80095d4:	20001338 	.word	0x20001338
 80095d8:	200013b4 	.word	0x200013b4
 80095dc:	20000018 	.word	0x20000018

080095e0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
     *
     * @return An uint16_t.
     *
     * @see touchgfx::AbstractPartition::capacity()
     */
    virtual uint16_t capacity() const
 80095e0:	b480      	push	{r7}
 80095e2:	b083      	sub	sp, #12
 80095e4:	af00      	add	r7, sp, #0
 80095e6:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 80095e8:	2301      	movs	r3, #1
    }
 80095ea:	4618      	mov	r0, r3
 80095ec:	370c      	adds	r7, #12
 80095ee:	46bd      	mov	sp, r7
 80095f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80095f4:	4770      	bx	lr

080095f6 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
     *
     * @return An uint32_t.
     *
     * @see touchgfx::AbstractPartition::element_size()
     */
    virtual uint32_t element_size()
 80095f6:	b480      	push	{r7}
 80095f8:	b083      	sub	sp, #12
 80095fa:	af00      	add	r7, sp, #0
 80095fc:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 80095fe:	230c      	movs	r3, #12
    }
 8009600:	4618      	mov	r0, r3
 8009602:	370c      	adds	r7, #12
 8009604:	46bd      	mov	sp, r7
 8009606:	f85d 7b04 	ldr.w	r7, [sp], #4
 800960a:	4770      	bx	lr

0800960c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual void* element(uint16_t index)
 800960c:	b480      	push	{r7}
 800960e:	b083      	sub	sp, #12
 8009610:	af00      	add	r7, sp, #0
 8009612:	6078      	str	r0, [r7, #4]
 8009614:	460b      	mov	r3, r1
 8009616:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8009618:	887a      	ldrh	r2, [r7, #2]
 800961a:	4613      	mov	r3, r2
 800961c:	005b      	lsls	r3, r3, #1
 800961e:	4413      	add	r3, r2
 8009620:	009b      	lsls	r3, r3, #2
 8009622:	3308      	adds	r3, #8
 8009624:	687a      	ldr	r2, [r7, #4]
 8009626:	4413      	add	r3, r2
    }
 8009628:	4618      	mov	r0, r3
 800962a:	370c      	adds	r7, #12
 800962c:	46bd      	mov	sp, r7
 800962e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009632:	4770      	bx	lr

08009634 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:
     *
     * @return null if it fails, else a void*.
     *
     * @see touchgfx::AbstractPartition::element()
     */
    virtual const void* element(uint16_t index) const
 8009634:	b480      	push	{r7}
 8009636:	b083      	sub	sp, #12
 8009638:	af00      	add	r7, sp, #0
 800963a:	6078      	str	r0, [r7, #4]
 800963c:	460b      	mov	r3, r1
 800963e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 8009640:	887a      	ldrh	r2, [r7, #2]
 8009642:	4613      	mov	r3, r2
 8009644:	005b      	lsls	r3, r3, #1
 8009646:	4413      	add	r3, r2
 8009648:	009b      	lsls	r3, r3, #2
 800964a:	3308      	adds	r3, #8
 800964c:	687a      	ldr	r2, [r7, #4]
 800964e:	4413      	add	r3, r2
    }
 8009650:	4618      	mov	r0, r3
 8009652:	370c      	adds	r7, #12
 8009654:	46bd      	mov	sp, r7
 8009656:	f85d 7b04 	ldr.w	r7, [sp], #4
 800965a:	4770      	bx	lr

0800965c <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800965c:	b480      	push	{r7}
 800965e:	b083      	sub	sp, #12
 8009660:	af00      	add	r7, sp, #0
 8009662:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 8009664:	2301      	movs	r3, #1
    }
 8009666:	4618      	mov	r0, r3
 8009668:	370c      	adds	r7, #12
 800966a:	46bd      	mov	sp, r7
 800966c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009670:	4770      	bx	lr

08009672 <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 8009672:	b480      	push	{r7}
 8009674:	b083      	sub	sp, #12
 8009676:	af00      	add	r7, sp, #0
 8009678:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800967a:	f44f 7368 	mov.w	r3, #928	; 0x3a0
    }
 800967e:	4618      	mov	r0, r3
 8009680:	370c      	adds	r7, #12
 8009682:	46bd      	mov	sp, r7
 8009684:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009688:	4770      	bx	lr

0800968a <_ZN8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800968a:	b480      	push	{r7}
 800968c:	b083      	sub	sp, #12
 800968e:	af00      	add	r7, sp, #0
 8009690:	6078      	str	r0, [r7, #4]
 8009692:	460b      	mov	r3, r1
 8009694:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8009696:	887b      	ldrh	r3, [r7, #2]
 8009698:	f44f 7268 	mov.w	r2, #928	; 0x3a0
 800969c:	fb02 f303 	mul.w	r3, r2, r3
 80096a0:	3308      	adds	r3, #8
 80096a2:	687a      	ldr	r2, [r7, #4]
 80096a4:	4413      	add	r3, r2
    }
 80096a6:	4618      	mov	r0, r3
 80096a8:	370c      	adds	r7, #12
 80096aa:	46bd      	mov	sp, r7
 80096ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096b0:	4770      	bx	lr

080096b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI10screenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 80096b2:	b480      	push	{r7}
 80096b4:	b083      	sub	sp, #12
 80096b6:	af00      	add	r7, sp, #0
 80096b8:	6078      	str	r0, [r7, #4]
 80096ba:	460b      	mov	r3, r1
 80096bc:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 80096be:	887b      	ldrh	r3, [r7, #2]
 80096c0:	f44f 7268 	mov.w	r2, #928	; 0x3a0
 80096c4:	fb02 f303 	mul.w	r3, r2, r3
 80096c8:	3308      	adds	r3, #8
 80096ca:	687a      	ldr	r2, [r7, #4]
 80096cc:	4413      	add	r3, r2
    }
 80096ce:	4618      	mov	r0, r3
 80096d0:	370c      	adds	r7, #12
 80096d2:	46bd      	mov	sp, r7
 80096d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096d8:	4770      	bx	lr

080096da <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 80096da:	b480      	push	{r7}
 80096dc:	b083      	sub	sp, #12
 80096de:	af00      	add	r7, sp, #0
 80096e0:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 80096e2:	2301      	movs	r3, #1
    }
 80096e4:	4618      	mov	r0, r3
 80096e6:	370c      	adds	r7, #12
 80096e8:	46bd      	mov	sp, r7
 80096ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80096ee:	4770      	bx	lr

080096f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 80096f0:	b480      	push	{r7}
 80096f2:	b083      	sub	sp, #12
 80096f4:	af00      	add	r7, sp, #0
 80096f6:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 80096f8:	2310      	movs	r3, #16
    }
 80096fa:	4618      	mov	r0, r3
 80096fc:	370c      	adds	r7, #12
 80096fe:	46bd      	mov	sp, r7
 8009700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009704:	4770      	bx	lr

08009706 <_ZN8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 8009706:	b480      	push	{r7}
 8009708:	b083      	sub	sp, #12
 800970a:	af00      	add	r7, sp, #0
 800970c:	6078      	str	r0, [r7, #4]
 800970e:	460b      	mov	r3, r1
 8009710:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8009712:	887b      	ldrh	r3, [r7, #2]
 8009714:	011b      	lsls	r3, r3, #4
 8009716:	3308      	adds	r3, #8
 8009718:	687a      	ldr	r2, [r7, #4]
 800971a:	4413      	add	r3, r2
    }
 800971c:	4618      	mov	r0, r3
 800971e:	370c      	adds	r7, #12
 8009720:	46bd      	mov	sp, r7
 8009722:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009726:	4770      	bx	lr

08009728 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI15screenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 8009728:	b480      	push	{r7}
 800972a:	b083      	sub	sp, #12
 800972c:	af00      	add	r7, sp, #0
 800972e:	6078      	str	r0, [r7, #4]
 8009730:	460b      	mov	r3, r1
 8009732:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 8009734:	887b      	ldrh	r3, [r7, #2]
 8009736:	011b      	lsls	r3, r3, #4
 8009738:	3308      	adds	r3, #8
 800973a:	687a      	ldr	r2, [r7, #4]
 800973c:	4413      	add	r3, r2
    }
 800973e:	4618      	mov	r0, r3
 8009740:	370c      	adds	r7, #12
 8009742:	46bd      	mov	sp, r7
 8009744:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009748:	4770      	bx	lr

0800974a <_GLOBAL__sub_I_touchgfx_init>:
 800974a:	b580      	push	{r7, lr}
 800974c:	af00      	add	r7, sp, #0
 800974e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009752:	2001      	movs	r0, #1
 8009754:	f7ff fefc 	bl	8009550 <_Z41__static_initialization_and_destruction_0ii>
 8009758:	bd80      	pop	{r7, pc}

0800975a <_GLOBAL__sub_D_touchgfx_init>:
 800975a:	b580      	push	{r7, lr}
 800975c:	af00      	add	r7, sp, #0
 800975e:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8009762:	2000      	movs	r0, #0
 8009764:	f7ff fef4 	bl	8009550 <_Z41__static_initialization_and_destruction_0ii>
 8009768:	bd80      	pop	{r7, pc}

0800976a <_ZN8touchgfx3HAL17frontPorchEnteredEv>:
    void frontPorchEntered()
 800976a:	b580      	push	{r7, lr}
 800976c:	b082      	sub	sp, #8
 800976e:	af00      	add	r7, sp, #0
 8009770:	6078      	str	r0, [r7, #4]
        allowDMATransfers();
 8009772:	687b      	ldr	r3, [r7, #4]
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	3318      	adds	r3, #24
 8009778:	681b      	ldr	r3, [r3, #0]
 800977a:	6878      	ldr	r0, [r7, #4]
 800977c:	4798      	blx	r3
    }
 800977e:	bf00      	nop
 8009780:	3708      	adds	r7, #8
 8009782:	46bd      	mov	sp, r7
 8009784:	bd80      	pop	{r7, pc}

08009786 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>:
    void lockDMAToFrontPorch(bool enableLock)
 8009786:	b480      	push	{r7}
 8009788:	b083      	sub	sp, #12
 800978a:	af00      	add	r7, sp, #0
 800978c:	6078      	str	r0, [r7, #4]
 800978e:	460b      	mov	r3, r1
 8009790:	70fb      	strb	r3, [r7, #3]
        lockDMAToPorch = enableLock;
 8009792:	687b      	ldr	r3, [r7, #4]
 8009794:	78fa      	ldrb	r2, [r7, #3]
 8009796:	f883 204a 	strb.w	r2, [r3, #74]	; 0x4a
    }
 800979a:	bf00      	nop
 800979c:	370c      	adds	r7, #12
 800979e:	46bd      	mov	sp, r7
 80097a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097a4:	4770      	bx	lr

080097a6 <_ZN8touchgfx3HAL5vSyncEv>:
    void vSync()
 80097a6:	b480      	push	{r7}
 80097a8:	b083      	sub	sp, #12
 80097aa:	af00      	add	r7, sp, #0
 80097ac:	6078      	str	r0, [r7, #4]
        vSyncCnt++;
 80097ae:	687b      	ldr	r3, [r7, #4]
 80097b0:	f893 3066 	ldrb.w	r3, [r3, #102]	; 0x66
 80097b4:	3301      	adds	r3, #1
 80097b6:	b2da      	uxtb	r2, r3
 80097b8:	687b      	ldr	r3, [r7, #4]
 80097ba:	f883 2066 	strb.w	r2, [r3, #102]	; 0x66
    }
 80097be:	bf00      	nop
 80097c0:	370c      	adds	r7, #12
 80097c2:	46bd      	mov	sp, r7
 80097c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097c8:	4770      	bx	lr
	...

080097cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 80097cc:	b580      	push	{r7, lr}
 80097ce:	b082      	sub	sp, #8
 80097d0:	af00      	add	r7, sp, #0
 80097d2:	6078      	str	r0, [r7, #4]
 80097d4:	460b      	mov	r3, r1
 80097d6:	70fb      	strb	r3, [r7, #3]
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 80097d8:	78fb      	ldrb	r3, [r7, #3]
 80097da:	2b00      	cmp	r3, #0
 80097dc:	d002      	beq.n	80097e4 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 80097de:	78fb      	ldrb	r3, [r7, #3]
 80097e0:	2b02      	cmp	r3, #2
 80097e2:	d105      	bne.n	80097f0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
            refreshStrategy = s;
 80097e4:	687b      	ldr	r3, [r7, #4]
 80097e6:	78fa      	ldrb	r2, [r7, #3]
 80097e8:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
            return true;
 80097ec:	2301      	movs	r3, #1
 80097ee:	e027      	b.n	8009840 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        else if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 80097f0:	78fb      	ldrb	r3, [r7, #3]
 80097f2:	2b01      	cmp	r3, #1
 80097f4:	d123      	bne.n	800983e <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 80097f6:	687b      	ldr	r3, [r7, #4]
 80097f8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80097fa:	2b00      	cmp	r3, #0
 80097fc:	d014      	beq.n	8009828 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 80097fe:	687b      	ldr	r3, [r7, #4]
 8009800:	681b      	ldr	r3, [r3, #0]
 8009802:	3380      	adds	r3, #128	; 0x80
 8009804:	681b      	ldr	r3, [r3, #0]
 8009806:	6878      	ldr	r0, [r7, #4]
 8009808:	4798      	blx	r3
 800980a:	4603      	mov	r3, r0
 800980c:	461a      	mov	r2, r3
 800980e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009812:	429a      	cmp	r2, r3
 8009814:	d008      	beq.n	8009828 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8009816:	4b0c      	ldr	r3, [pc, #48]	; (8009848 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 8009818:	781b      	ldrb	r3, [r3, #0]
 800981a:	f083 0301 	eor.w	r3, r3, #1
 800981e:	b2db      	uxtb	r3, r3
 8009820:	2b00      	cmp	r3, #0
 8009822:	d001      	beq.n	8009828 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 8009824:	2301      	movs	r3, #1
 8009826:	e000      	b.n	800982a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 8009828:	2300      	movs	r3, #0
 800982a:	2b00      	cmp	r3, #0
 800982c:	d005      	beq.n	800983a <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
                refreshStrategy = s;
 800982e:	687b      	ldr	r3, [r7, #4]
 8009830:	78fa      	ldrb	r2, [r7, #3]
 8009832:	f883 2048 	strb.w	r2, [r3, #72]	; 0x48
                return true;
 8009836:	2301      	movs	r3, #1
 8009838:	e002      	b.n	8009840 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            return false;
 800983a:	2300      	movs	r3, #0
 800983c:	e000      	b.n	8009840 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        return false;
 800983e:	2300      	movs	r3, #0
    }
 8009840:	4618      	mov	r0, r3
 8009842:	3708      	adds	r7, #8
 8009844:	46bd      	mov	sp, r7
 8009846:	bd80      	pop	{r7, pc}
 8009848:	2000143a 	.word	0x2000143a

0800984c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>:
    void registerTaskDelayFunction(void(*delayF)(uint16_t))
 800984c:	b480      	push	{r7}
 800984e:	b083      	sub	sp, #12
 8009850:	af00      	add	r7, sp, #0
 8009852:	6078      	str	r0, [r7, #4]
 8009854:	6039      	str	r1, [r7, #0]
        taskDelayFunc = delayF;
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	683a      	ldr	r2, [r7, #0]
 800985a:	639a      	str	r2, [r3, #56]	; 0x38
    }
 800985c:	bf00      	nop
 800985e:	370c      	adds	r7, #12
 8009860:	46bd      	mov	sp, r7
 8009862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009866:	4770      	bx	lr

08009868 <__NVIC_EnableIRQ>:
{
 8009868:	b480      	push	{r7}
 800986a:	b083      	sub	sp, #12
 800986c:	af00      	add	r7, sp, #0
 800986e:	4603      	mov	r3, r0
 8009870:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 8009872:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009876:	2b00      	cmp	r3, #0
 8009878:	db0d      	blt.n	8009896 <__NVIC_EnableIRQ+0x2e>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 800987a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800987e:	b2db      	uxtb	r3, r3
 8009880:	f003 021f 	and.w	r2, r3, #31
 8009884:	4907      	ldr	r1, [pc, #28]	; (80098a4 <__NVIC_EnableIRQ+0x3c>)
 8009886:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800988a:	095b      	lsrs	r3, r3, #5
 800988c:	2001      	movs	r0, #1
 800988e:	fa00 f202 	lsl.w	r2, r0, r2
 8009892:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
}
 8009896:	bf00      	nop
 8009898:	370c      	adds	r7, #12
 800989a:	46bd      	mov	sp, r7
 800989c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098a0:	4770      	bx	lr
 80098a2:	bf00      	nop
 80098a4:	e000e100 	.word	0xe000e100

080098a8 <__NVIC_DisableIRQ>:
{
 80098a8:	b480      	push	{r7}
 80098aa:	b083      	sub	sp, #12
 80098ac:	af00      	add	r7, sp, #0
 80098ae:	4603      	mov	r3, r0
 80098b0:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80098b2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80098b6:	2b00      	cmp	r3, #0
 80098b8:	db12      	blt.n	80098e0 <__NVIC_DisableIRQ+0x38>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80098ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80098be:	b2db      	uxtb	r3, r3
 80098c0:	f003 021f 	and.w	r2, r3, #31
 80098c4:	4909      	ldr	r1, [pc, #36]	; (80098ec <__NVIC_DisableIRQ+0x44>)
 80098c6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80098ca:	095b      	lsrs	r3, r3, #5
 80098cc:	2001      	movs	r0, #1
 80098ce:	fa00 f202 	lsl.w	r2, r0, r2
 80098d2:	3320      	adds	r3, #32
 80098d4:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 80098d8:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80098dc:	f3bf 8f6f 	isb	sy
}
 80098e0:	bf00      	nop
 80098e2:	370c      	adds	r7, #12
 80098e4:	46bd      	mov	sp, r7
 80098e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098ea:	4770      	bx	lr
 80098ec:	e000e100 	.word	0xe000e100

080098f0 <__NVIC_SetPriority>:
{
 80098f0:	b480      	push	{r7}
 80098f2:	b083      	sub	sp, #12
 80098f4:	af00      	add	r7, sp, #0
 80098f6:	4603      	mov	r3, r0
 80098f8:	6039      	str	r1, [r7, #0]
 80098fa:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80098fc:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009900:	2b00      	cmp	r3, #0
 8009902:	db0c      	blt.n	800991e <__NVIC_SetPriority+0x2e>
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8009904:	683b      	ldr	r3, [r7, #0]
 8009906:	b2db      	uxtb	r3, r3
 8009908:	4a0e      	ldr	r2, [pc, #56]	; (8009944 <__NVIC_SetPriority+0x54>)
 800990a:	f997 1007 	ldrsb.w	r1, [r7, #7]
 800990e:	4608      	mov	r0, r1
 8009910:	011b      	lsls	r3, r3, #4
 8009912:	b2d9      	uxtb	r1, r3
 8009914:	1813      	adds	r3, r2, r0
 8009916:	460a      	mov	r2, r1
 8009918:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
}
 800991c:	e00c      	b.n	8009938 <__NVIC_SetPriority+0x48>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800991e:	683b      	ldr	r3, [r7, #0]
 8009920:	b2da      	uxtb	r2, r3
 8009922:	4909      	ldr	r1, [pc, #36]	; (8009948 <__NVIC_SetPriority+0x58>)
 8009924:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8009928:	b2db      	uxtb	r3, r3
 800992a:	f003 030f 	and.w	r3, r3, #15
 800992e:	3b04      	subs	r3, #4
 8009930:	0112      	lsls	r2, r2, #4
 8009932:	b2d2      	uxtb	r2, r2
 8009934:	440b      	add	r3, r1
 8009936:	761a      	strb	r2, [r3, #24]
}
 8009938:	bf00      	nop
 800993a:	370c      	adds	r7, #12
 800993c:	46bd      	mov	sp, r7
 800993e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009942:	4770      	bx	lr
 8009944:	e000e100 	.word	0xe000e100
 8009948:	e000ed00 	.word	0xe000ed00

0800994c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
    static uint16_t lcd_int_active_line;
    static uint16_t lcd_int_porch_line;
}

void TouchGFXGeneratedHAL::initialize()
{
 800994c:	b5b0      	push	{r4, r5, r7, lr}
 800994e:	b082      	sub	sp, #8
 8009950:	af00      	add	r7, sp, #0
 8009952:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 8009954:	687b      	ldr	r3, [r7, #4]
 8009956:	4618      	mov	r0, r3
 8009958:	f001 f9ee 	bl	800ad38 <_ZN8touchgfx3HAL10initializeEv>

    registerEventListener(*(touchgfx::Application::getInstance()));
 800995c:	687d      	ldr	r5, [r7, #4]
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	681b      	ldr	r3, [r3, #0]
 8009962:	334c      	adds	r3, #76	; 0x4c
 8009964:	681c      	ldr	r4, [r3, #0]
 8009966:	f003 faa3 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800996a:	4603      	mov	r3, r0
 800996c:	4619      	mov	r1, r3
 800996e:	4628      	mov	r0, r5
 8009970:	47a0      	blx	r4
    registerTaskDelayFunction(&OSWrappers::taskDelay);
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	490d      	ldr	r1, [pc, #52]	; (80099ac <_ZN20TouchGFXGeneratedHAL10initializeEv+0x60>)
 8009976:	4618      	mov	r0, r3
 8009978:	f7ff ff68 	bl	800984c <_ZN8touchgfx3HAL25registerTaskDelayFunctionEPFvtE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL);
 800997c:	687b      	ldr	r3, [r7, #4]
 800997e:	2101      	movs	r1, #1
 8009980:	4618      	mov	r0, r3
 8009982:	f7ff ff23 	bl	80097cc <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>

    setFrameBufferStartAddresses((void*)0XC0000000, (void*)0, (void*)0);
 8009986:	6878      	ldr	r0, [r7, #4]
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	681b      	ldr	r3, [r3, #0]
 800998c:	3374      	adds	r3, #116	; 0x74
 800998e:	681c      	ldr	r4, [r3, #0]
 8009990:	2300      	movs	r3, #0
 8009992:	2200      	movs	r2, #0
 8009994:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8009998:	47a0      	blx	r4
     * Set whether the DMA transfers are locked to the TFT update cycle. If
     * locked, DMA transfer will not begin until the TFT controller has finished
     * updating the display. If not locked, DMA transfers will begin as soon as
     * possible. Default is true (DMA is locked with TFT).
     */
    lockDMAToFrontPorch(true);
 800999a:	687b      	ldr	r3, [r7, #4]
 800999c:	2101      	movs	r1, #1
 800999e:	4618      	mov	r0, r3
 80099a0:	f7ff fef1 	bl	8009786 <_ZN8touchgfx3HAL19lockDMAToFrontPorchEb>
}
 80099a4:	bf00      	nop
 80099a6:	3708      	adds	r7, #8
 80099a8:	46bd      	mov	sp, r7
 80099aa:	bdb0      	pop	{r4, r5, r7, pc}
 80099ac:	08008581 	.word	0x08008581

080099b0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 80099b0:	b580      	push	{r7, lr}
 80099b2:	b082      	sub	sp, #8
 80099b4:	af00      	add	r7, sp, #0
 80099b6:	6078      	str	r0, [r7, #4]
    NVIC_SetPriority(DMA2D_IRQn, 9);
 80099b8:	2109      	movs	r1, #9
 80099ba:	205a      	movs	r0, #90	; 0x5a
 80099bc:	f7ff ff98 	bl	80098f0 <__NVIC_SetPriority>
    NVIC_SetPriority(LTDC_IRQn, 9);
 80099c0:	2109      	movs	r1, #9
 80099c2:	2058      	movs	r0, #88	; 0x58
 80099c4:	f7ff ff94 	bl	80098f0 <__NVIC_SetPriority>
}
 80099c8:	bf00      	nop
 80099ca:	3708      	adds	r7, #8
 80099cc:	46bd      	mov	sp, r7
 80099ce:	bd80      	pop	{r7, pc}

080099d0 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 80099d0:	b580      	push	{r7, lr}
 80099d2:	b082      	sub	sp, #8
 80099d4:	af00      	add	r7, sp, #0
 80099d6:	6078      	str	r0, [r7, #4]
    NVIC_EnableIRQ(DMA2D_IRQn);
 80099d8:	205a      	movs	r0, #90	; 0x5a
 80099da:	f7ff ff45 	bl	8009868 <__NVIC_EnableIRQ>
    NVIC_EnableIRQ(LTDC_IRQn);
 80099de:	2058      	movs	r0, #88	; 0x58
 80099e0:	f7ff ff42 	bl	8009868 <__NVIC_EnableIRQ>
}
 80099e4:	bf00      	nop
 80099e6:	3708      	adds	r7, #8
 80099e8:	46bd      	mov	sp, r7
 80099ea:	bd80      	pop	{r7, pc}

080099ec <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 80099ec:	b580      	push	{r7, lr}
 80099ee:	b082      	sub	sp, #8
 80099f0:	af00      	add	r7, sp, #0
 80099f2:	6078      	str	r0, [r7, #4]
    NVIC_DisableIRQ(DMA2D_IRQn);
 80099f4:	205a      	movs	r0, #90	; 0x5a
 80099f6:	f7ff ff57 	bl	80098a8 <__NVIC_DisableIRQ>
    NVIC_DisableIRQ(LTDC_IRQn);
 80099fa:	2058      	movs	r0, #88	; 0x58
 80099fc:	f7ff ff54 	bl	80098a8 <__NVIC_DisableIRQ>
}
 8009a00:	bf00      	nop
 8009a02:	3708      	adds	r7, #8
 8009a04:	46bd      	mov	sp, r7
 8009a06:	bd80      	pop	{r7, pc}

08009a08 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8009a08:	b480      	push	{r7}
 8009a0a:	b083      	sub	sp, #12
 8009a0c:	af00      	add	r7, sp, #0
 8009a0e:	6078      	str	r0, [r7, #4]
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8009a10:	4b11      	ldr	r3, [pc, #68]	; (8009a58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8009a12:	68db      	ldr	r3, [r3, #12]
 8009a14:	b29b      	uxth	r3, r3
 8009a16:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009a1a:	b29b      	uxth	r3, r3
 8009a1c:	3b01      	subs	r3, #1
 8009a1e:	b29a      	uxth	r2, r3
 8009a20:	4b0e      	ldr	r3, [pc, #56]	; (8009a5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8009a22:	801a      	strh	r2, [r3, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8009a24:	4b0c      	ldr	r3, [pc, #48]	; (8009a58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8009a26:	691b      	ldr	r3, [r3, #16]
 8009a28:	b29b      	uxth	r3, r3
 8009a2a:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009a2e:	b29b      	uxth	r3, r3
 8009a30:	3b01      	subs	r3, #1
 8009a32:	b29a      	uxth	r2, r3
 8009a34:	4b0a      	ldr	r3, [pc, #40]	; (8009a60 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x58>)
 8009a36:	801a      	strh	r2, [r3, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8009a38:	4b08      	ldr	r3, [pc, #32]	; (8009a5c <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x54>)
 8009a3a:	881a      	ldrh	r2, [r3, #0]
 8009a3c:	4b06      	ldr	r3, [pc, #24]	; (8009a58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8009a3e:	641a      	str	r2, [r3, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8009a40:	4b05      	ldr	r3, [pc, #20]	; (8009a58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8009a42:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009a44:	4a04      	ldr	r2, [pc, #16]	; (8009a58 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x50>)
 8009a46:	f043 0301 	orr.w	r3, r3, #1
 8009a4a:	6353      	str	r3, [r2, #52]	; 0x34
}
 8009a4c:	bf00      	nop
 8009a4e:	370c      	adds	r7, #12
 8009a50:	46bd      	mov	sp, r7
 8009a52:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a56:	4770      	bx	lr
 8009a58:	40016800 	.word	0x40016800
 8009a5c:	2000142c 	.word	0x2000142c
 8009a60:	2000142e 	.word	0x2000142e

08009a64 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 8009a64:	b480      	push	{r7}
 8009a66:	b083      	sub	sp, #12
 8009a68:	af00      	add	r7, sp, #0
 8009a6a:	6078      	str	r0, [r7, #4]
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8009a6c:	4b03      	ldr	r3, [pc, #12]	; (8009a7c <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x18>)
 8009a6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
}
 8009a70:	4618      	mov	r0, r3
 8009a72:	370c      	adds	r7, #12
 8009a74:	46bd      	mov	sp, r7
 8009a76:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a7a:	4770      	bx	lr
 8009a7c:	40016884 	.word	0x40016884

08009a80 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 8009a80:	b480      	push	{r7}
 8009a82:	b083      	sub	sp, #12
 8009a84:	af00      	add	r7, sp, #0
 8009a86:	6078      	str	r0, [r7, #4]
 8009a88:	6039      	str	r1, [r7, #0]
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8009a8a:	4a06      	ldr	r2, [pc, #24]	; (8009aa4 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x24>)
 8009a8c:	683b      	ldr	r3, [r7, #0]
 8009a8e:	6293      	str	r3, [r2, #40]	; 0x28

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8009a90:	4b05      	ldr	r3, [pc, #20]	; (8009aa8 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0x28>)
 8009a92:	2201      	movs	r2, #1
 8009a94:	625a      	str	r2, [r3, #36]	; 0x24
}
 8009a96:	bf00      	nop
 8009a98:	370c      	adds	r7, #12
 8009a9a:	46bd      	mov	sp, r7
 8009a9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009aa0:	4770      	bx	lr
 8009aa2:	bf00      	nop
 8009aa4:	40016884 	.word	0x40016884
 8009aa8:	40016800 	.word	0x40016800

08009aac <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 8009aac:	b580      	push	{r7, lr}
 8009aae:	b082      	sub	sp, #8
 8009ab0:	af00      	add	r7, sp, #0
 8009ab2:	6078      	str	r0, [r7, #4]
 8009ab4:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 8009ab6:	687b      	ldr	r3, [r7, #4]
 8009ab8:	6839      	ldr	r1, [r7, #0]
 8009aba:	4618      	mov	r0, r3
 8009abc:	f000 fe4c 	bl	800a758 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
}
 8009ac0:	bf00      	nop
 8009ac2:	3708      	adds	r7, #8
 8009ac4:	46bd      	mov	sp, r7
 8009ac6:	bd80      	pop	{r7, pc}

08009ac8 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv>:

uint16_t TouchGFXGeneratedHAL::getTFTCurrentLine()
{
 8009ac8:	b480      	push	{r7}
 8009aca:	b085      	sub	sp, #20
 8009acc:	af00      	add	r7, sp, #0
 8009ace:	6078      	str	r0, [r7, #4]
    // This function only requires an implementation if single buffering
    // on LTDC display is being used (REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL).

    // The CPSR register (bits 15:0) specify current line of TFT controller.
    uint16_t curr = (uint16_t)(LTDC->CPSR & 0xffff);
 8009ad0:	4b0d      	ldr	r3, [pc, #52]	; (8009b08 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 8009ad2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8009ad4:	81fb      	strh	r3, [r7, #14]
    uint16_t backPorchY = (uint16_t)(LTDC->BPCR & 0x7FF) + 1;
 8009ad6:	4b0c      	ldr	r3, [pc, #48]	; (8009b08 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x40>)
 8009ad8:	68db      	ldr	r3, [r3, #12]
 8009ada:	b29b      	uxth	r3, r3
 8009adc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8009ae0:	b29b      	uxth	r3, r3
 8009ae2:	3301      	adds	r3, #1
 8009ae4:	81bb      	strh	r3, [r7, #12]

    // The semantics of the getTFTCurrentLine() function is to return a value
    // in the range of 0-totalheight. If we are still in back porch area, return 0.
    if (curr < backPorchY)
 8009ae6:	89fa      	ldrh	r2, [r7, #14]
 8009ae8:	89bb      	ldrh	r3, [r7, #12]
 8009aea:	429a      	cmp	r2, r3
 8009aec:	d201      	bcs.n	8009af2 <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x2a>
    {
        return 0;
 8009aee:	2300      	movs	r3, #0
 8009af0:	e003      	b.n	8009afa <_ZN20TouchGFXGeneratedHAL17getTFTCurrentLineEv+0x32>
    }
    else
    {
        return curr - backPorchY;
 8009af2:	89fa      	ldrh	r2, [r7, #14]
 8009af4:	89bb      	ldrh	r3, [r7, #12]
 8009af6:	1ad3      	subs	r3, r2, r3
 8009af8:	b29b      	uxth	r3, r3
    }
}
 8009afa:	4618      	mov	r0, r3
 8009afc:	3714      	adds	r7, #20
 8009afe:	46bd      	mov	sp, r7
 8009b00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b04:	4770      	bx	lr
 8009b06:	bf00      	nop
 8009b08:	40016800 	.word	0x40016800

08009b0c <HAL_LTDC_LineEventCallback>:

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef *hltdc)
    {
 8009b0c:	b580      	push	{r7, lr}
 8009b0e:	b082      	sub	sp, #8
 8009b10:	af00      	add	r7, sp, #0
 8009b12:	6078      	str	r0, [r7, #4]
        if (LTDC->LIPCR == lcd_int_active_line)
 8009b14:	4b1a      	ldr	r3, [pc, #104]	; (8009b80 <HAL_LTDC_LineEventCallback+0x74>)
 8009b16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009b18:	4a1a      	ldr	r2, [pc, #104]	; (8009b84 <HAL_LTDC_LineEventCallback+0x78>)
 8009b1a:	8812      	ldrh	r2, [r2, #0]
 8009b1c:	4293      	cmp	r3, r2
 8009b1e:	bf0c      	ite	eq
 8009b20:	2301      	moveq	r3, #1
 8009b22:	2300      	movne	r3, #0
 8009b24:	b2db      	uxtb	r3, r3
 8009b26:	2b00      	cmp	r3, #0
 8009b28:	d017      	beq.n	8009b5a <HAL_LTDC_LineEventCallback+0x4e>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8009b2a:	4b17      	ldr	r3, [pc, #92]	; (8009b88 <HAL_LTDC_LineEventCallback+0x7c>)
 8009b2c:	881b      	ldrh	r3, [r3, #0]
 8009b2e:	4619      	mov	r1, r3
 8009b30:	6878      	ldr	r0, [r7, #4]
 8009b32:	f7f8 fe6b 	bl	800280c <HAL_LTDC_ProgramLineEvent>
            HAL::getInstance()->vSync();
 8009b36:	f7fc ff51 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 8009b3a:	4603      	mov	r3, r0
 8009b3c:	4618      	mov	r0, r3
 8009b3e:	f7ff fe32 	bl	80097a6 <_ZN8touchgfx3HAL5vSyncEv>
            OSWrappers::signalVSync();
 8009b42:	f7fe fcf7 	bl	8008534 <_ZN8touchgfx10OSWrappers11signalVSyncEv>
            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8009b46:	f7fc ff49 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 8009b4a:	4603      	mov	r3, r0
 8009b4c:	4618      	mov	r0, r3
 8009b4e:	f001 fb7b 	bl	800b248 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            GPIO::set(GPIO::VSYNC_FREQ);
 8009b52:	2000      	movs	r0, #0
 8009b54:	f7fe fa18 	bl	8007f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            //exiting active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
            GPIO::clear(GPIO::VSYNC_FREQ);
            HAL::getInstance()->frontPorchEntered();
        }
    }
 8009b58:	e00e      	b.n	8009b78 <HAL_LTDC_LineEventCallback+0x6c>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8009b5a:	4b0a      	ldr	r3, [pc, #40]	; (8009b84 <HAL_LTDC_LineEventCallback+0x78>)
 8009b5c:	881b      	ldrh	r3, [r3, #0]
 8009b5e:	4619      	mov	r1, r3
 8009b60:	6878      	ldr	r0, [r7, #4]
 8009b62:	f7f8 fe53 	bl	800280c <HAL_LTDC_ProgramLineEvent>
            GPIO::clear(GPIO::VSYNC_FREQ);
 8009b66:	2000      	movs	r0, #0
 8009b68:	f7fe fa19 	bl	8007f9e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            HAL::getInstance()->frontPorchEntered();
 8009b6c:	f7fc ff36 	bl	80069dc <_ZN8touchgfx3HAL11getInstanceEv>
 8009b70:	4603      	mov	r3, r0
 8009b72:	4618      	mov	r0, r3
 8009b74:	f7ff fdf9 	bl	800976a <_ZN8touchgfx3HAL17frontPorchEnteredEv>
    }
 8009b78:	bf00      	nop
 8009b7a:	3708      	adds	r7, #8
 8009b7c:	46bd      	mov	sp, r7
 8009b7e:	bd80      	pop	{r7, pc}
 8009b80:	40016800 	.word	0x40016800
 8009b84:	2000142c 	.word	0x2000142c
 8009b88:	2000142e 	.word	0x2000142e

08009b8c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8009b8c:	8880      	ldrh	r0, [r0, #4]
 8009b8e:	4770      	bx	lr

08009b90 <_ZN8touchgfx17AbstractPartition5clearEv>:
 8009b90:	2300      	movs	r3, #0
 8009b92:	8083      	strh	r3, [r0, #4]
 8009b94:	4770      	bx	lr
	...

08009b98 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8009b98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009b9a:	6803      	ldr	r3, [r0, #0]
 8009b9c:	4605      	mov	r5, r0
 8009b9e:	460e      	mov	r6, r1
 8009ba0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009ba2:	2100      	movs	r1, #0
 8009ba4:	4798      	blx	r3
 8009ba6:	682b      	ldr	r3, [r5, #0]
 8009ba8:	4604      	mov	r4, r0
 8009baa:	6a1b      	ldr	r3, [r3, #32]
 8009bac:	4628      	mov	r0, r5
 8009bae:	4798      	blx	r3
 8009bb0:	88ab      	ldrh	r3, [r5, #4]
 8009bb2:	1b34      	subs	r4, r6, r4
 8009bb4:	b2a4      	uxth	r4, r4
 8009bb6:	fbb4 f4f0 	udiv	r4, r4, r0
 8009bba:	42a3      	cmp	r3, r4
 8009bbc:	d805      	bhi.n	8009bca <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 8009bbe:	4b0e      	ldr	r3, [pc, #56]	; (8009bf8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 8009bc0:	4a0e      	ldr	r2, [pc, #56]	; (8009bfc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009bc2:	211e      	movs	r1, #30
 8009bc4:	480e      	ldr	r0, [pc, #56]	; (8009c00 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 8009bc6:	f011 fd93 	bl	801b6f0 <__assert_func>
 8009bca:	682b      	ldr	r3, [r5, #0]
 8009bcc:	2100      	movs	r1, #0
 8009bce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009bd0:	4628      	mov	r0, r5
 8009bd2:	4798      	blx	r3
 8009bd4:	682b      	ldr	r3, [r5, #0]
 8009bd6:	4607      	mov	r7, r0
 8009bd8:	6a1b      	ldr	r3, [r3, #32]
 8009bda:	4628      	mov	r0, r5
 8009bdc:	4798      	blx	r3
 8009bde:	1bf3      	subs	r3, r6, r7
 8009be0:	b29b      	uxth	r3, r3
 8009be2:	fbb3 f2f0 	udiv	r2, r3, r0
 8009be6:	fb02 3010 	mls	r0, r2, r0, r3
 8009bea:	b118      	cbz	r0, 8009bf4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8009bec:	4b05      	ldr	r3, [pc, #20]	; (8009c04 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8009bee:	4a03      	ldr	r2, [pc, #12]	; (8009bfc <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8009bf0:	211f      	movs	r1, #31
 8009bf2:	e7e7      	b.n	8009bc4 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8009bf4:	4620      	mov	r0, r4
 8009bf6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009bf8:	0801d38c 	.word	0x0801d38c
 8009bfc:	0801d4fa 	.word	0x0801d4fa
 8009c00:	0801d3a1 	.word	0x0801d3a1
 8009c04:	0801d3cf 	.word	0x0801d3cf

08009c08 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8009c08:	b538      	push	{r3, r4, r5, lr}
 8009c0a:	6803      	ldr	r3, [r0, #0]
 8009c0c:	6a1b      	ldr	r3, [r3, #32]
 8009c0e:	460d      	mov	r5, r1
 8009c10:	4604      	mov	r4, r0
 8009c12:	4798      	blx	r3
 8009c14:	4285      	cmp	r5, r0
 8009c16:	d905      	bls.n	8009c24 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 8009c18:	4b0c      	ldr	r3, [pc, #48]	; (8009c4c <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 8009c1a:	4a0d      	ldr	r2, [pc, #52]	; (8009c50 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009c1c:	212f      	movs	r1, #47	; 0x2f
 8009c1e:	480d      	ldr	r0, [pc, #52]	; (8009c54 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8009c20:	f011 fd66 	bl	801b6f0 <__assert_func>
 8009c24:	6823      	ldr	r3, [r4, #0]
 8009c26:	88a5      	ldrh	r5, [r4, #4]
 8009c28:	69db      	ldr	r3, [r3, #28]
 8009c2a:	4620      	mov	r0, r4
 8009c2c:	4798      	blx	r3
 8009c2e:	4285      	cmp	r5, r0
 8009c30:	d303      	bcc.n	8009c3a <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8009c32:	4b09      	ldr	r3, [pc, #36]	; (8009c58 <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8009c34:	4a06      	ldr	r2, [pc, #24]	; (8009c50 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8009c36:	2130      	movs	r1, #48	; 0x30
 8009c38:	e7f1      	b.n	8009c1e <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 8009c3a:	6823      	ldr	r3, [r4, #0]
 8009c3c:	88a1      	ldrh	r1, [r4, #4]
 8009c3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c40:	4620      	mov	r0, r4
 8009c42:	4798      	blx	r3
 8009c44:	88a3      	ldrh	r3, [r4, #4]
 8009c46:	3301      	adds	r3, #1
 8009c48:	80a3      	strh	r3, [r4, #4]
 8009c4a:	bd38      	pop	{r3, r4, r5, pc}
 8009c4c:	0801d449 	.word	0x0801d449
 8009c50:	0801d53d 	.word	0x0801d53d
 8009c54:	0801d3a1 	.word	0x0801d3a1
 8009c58:	0801d460 	.word	0x0801d460

08009c5c <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8009c5c:	b570      	push	{r4, r5, r6, lr}
 8009c5e:	6803      	ldr	r3, [r0, #0]
 8009c60:	6a1b      	ldr	r3, [r3, #32]
 8009c62:	4616      	mov	r6, r2
 8009c64:	4604      	mov	r4, r0
 8009c66:	460d      	mov	r5, r1
 8009c68:	4798      	blx	r3
 8009c6a:	4286      	cmp	r6, r0
 8009c6c:	d905      	bls.n	8009c7a <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8009c6e:	4b06      	ldr	r3, [pc, #24]	; (8009c88 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8009c70:	4a06      	ldr	r2, [pc, #24]	; (8009c8c <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8009c72:	4807      	ldr	r0, [pc, #28]	; (8009c90 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8009c74:	2139      	movs	r1, #57	; 0x39
 8009c76:	f011 fd3b 	bl	801b6f0 <__assert_func>
 8009c7a:	6823      	ldr	r3, [r4, #0]
 8009c7c:	4629      	mov	r1, r5
 8009c7e:	4620      	mov	r0, r4
 8009c80:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c82:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009c86:	4718      	bx	r3
 8009c88:	0801d449 	.word	0x0801d449
 8009c8c:	0801d4b0 	.word	0x0801d4b0
 8009c90:	0801d3a1 	.word	0x0801d3a1

08009c94 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 8009c94:	4770      	bx	lr
	...

08009c98 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 8009c98:	4a02      	ldr	r2, [pc, #8]	; (8009ca4 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 8009c9a:	6002      	str	r2, [r0, #0]
 8009c9c:	2200      	movs	r2, #0
 8009c9e:	8082      	strh	r2, [r0, #4]
 8009ca0:	4770      	bx	lr
 8009ca2:	bf00      	nop
 8009ca4:	0801d484 	.word	0x0801d484

08009ca8 <_ZN8touchgfx11AnalogClock20getAnimationDurationEv>:
 8009ca8:	f8b0 0324 	ldrh.w	r0, [r0, #804]	; 0x324
 8009cac:	4770      	bx	lr

08009cae <_ZN8touchgfx11AnalogClock17setRotationCenterEss>:
 8009cae:	f8a0 1326 	strh.w	r1, [r0, #806]	; 0x326
 8009cb2:	f8a0 2328 	strh.w	r2, [r0, #808]	; 0x328
 8009cb6:	4770      	bx	lr

08009cb8 <_ZN8touchgfx11AnalogClock13setupHourHandEtss>:
 8009cb8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cba:	6805      	ldr	r5, [r0, #0]
 8009cbc:	9300      	str	r3, [sp, #0]
 8009cbe:	f8d5 50c8 	ldr.w	r5, [r5, #200]	; 0xc8
 8009cc2:	4613      	mov	r3, r2
 8009cc4:	460a      	mov	r2, r1
 8009cc6:	f100 015c 	add.w	r1, r0, #92	; 0x5c
 8009cca:	47a8      	blx	r5
 8009ccc:	b003      	add	sp, #12
 8009cce:	bd30      	pop	{r4, r5, pc}

08009cd0 <_ZN8touchgfx11AnalogClock15setupMinuteHandEtss>:
 8009cd0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cd2:	6805      	ldr	r5, [r0, #0]
 8009cd4:	9300      	str	r3, [sp, #0]
 8009cd6:	f8d5 50c8 	ldr.w	r5, [r5, #200]	; 0xc8
 8009cda:	4613      	mov	r3, r2
 8009cdc:	460a      	mov	r2, r1
 8009cde:	f500 71a4 	add.w	r1, r0, #328	; 0x148
 8009ce2:	47a8      	blx	r5
 8009ce4:	b003      	add	sp, #12
 8009ce6:	bd30      	pop	{r4, r5, pc}

08009ce8 <_ZN8touchgfx11AnalogClock15setupSecondHandEtss>:
 8009ce8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009cea:	6805      	ldr	r5, [r0, #0]
 8009cec:	9300      	str	r3, [sp, #0]
 8009cee:	f8d5 50c8 	ldr.w	r5, [r5, #200]	; 0xc8
 8009cf2:	4613      	mov	r3, r2
 8009cf4:	460a      	mov	r2, r1
 8009cf6:	f500 710d 	add.w	r1, r0, #564	; 0x234
 8009cfa:	47a8      	blx	r5
 8009cfc:	b003      	add	sp, #12
 8009cfe:	bd30      	pop	{r4, r5, pc}

08009d00 <_ZN8touchgfx11AnalogClock9setupHandERNS_13TextureMapperEtss>:
 8009d00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009d02:	ed2d 8b02 	vpush	{d8}
 8009d06:	461f      	mov	r7, r3
 8009d08:	6803      	ldr	r3, [r0, #0]
 8009d0a:	460c      	mov	r4, r1
 8009d0c:	b083      	sub	sp, #12
 8009d0e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009d10:	4605      	mov	r5, r0
 8009d12:	4616      	mov	r6, r2
 8009d14:	4798      	blx	r3
 8009d16:	a902      	add	r1, sp, #8
 8009d18:	6823      	ldr	r3, [r4, #0]
 8009d1a:	f821 6d04 	strh.w	r6, [r1, #-4]!
 8009d1e:	4620      	mov	r0, r4
 8009d20:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009d22:	4798      	blx	r3
 8009d24:	6823      	ldr	r3, [r4, #0]
 8009d26:	f9b5 1008 	ldrsh.w	r1, [r5, #8]
 8009d2a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009d2c:	4620      	mov	r0, r4
 8009d2e:	4798      	blx	r3
 8009d30:	6823      	ldr	r3, [r4, #0]
 8009d32:	f9b5 100a 	ldrsh.w	r1, [r5, #10]
 8009d36:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009d38:	4620      	mov	r0, r4
 8009d3a:	4798      	blx	r3
 8009d3c:	6823      	ldr	r3, [r4, #0]
 8009d3e:	2200      	movs	r2, #0
 8009d40:	4611      	mov	r1, r2
 8009d42:	4620      	mov	r0, r4
 8009d44:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009d46:	4798      	blx	r3
 8009d48:	6823      	ldr	r3, [r4, #0]
 8009d4a:	f9b5 2328 	ldrsh.w	r2, [r5, #808]	; 0x328
 8009d4e:	f9b5 1326 	ldrsh.w	r1, [r5, #806]	; 0x326
 8009d52:	f8d3 60bc 	ldr.w	r6, [r3, #188]	; 0xbc
 8009d56:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8009d5a:	1bc9      	subs	r1, r1, r7
 8009d5c:	1ad2      	subs	r2, r2, r3
 8009d5e:	4620      	mov	r0, r4
 8009d60:	47b0      	blx	r6
 8009d62:	6823      	ldr	r3, [r4, #0]
 8009d64:	ed9f 0a22 	vldr	s0, [pc, #136]	; 8009df0 <_ZN8touchgfx11AnalogClock9setupHandERNS_13TextureMapperEtss+0xf0>
 8009d68:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8009d6c:	4620      	mov	r0, r4
 8009d6e:	4798      	blx	r3
 8009d70:	f9b5 2326 	ldrsh.w	r2, [r5, #806]	; 0x326
 8009d74:	6823      	ldr	r3, [r4, #0]
 8009d76:	ee08 2a10 	vmov	s16, r2
 8009d7a:	f9b5 2328 	ldrsh.w	r2, [r5, #808]	; 0x328
 8009d7e:	f8d3 6090 	ldr.w	r6, [r3, #144]	; 0x90
 8009d82:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8009d86:	ee08 2a90 	vmov	s17, r2
 8009d8a:	4620      	mov	r0, r4
 8009d8c:	4798      	blx	r3
 8009d8e:	eeb8 8ac8 	vcvt.f32.s32	s16, s16
 8009d92:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 8009d96:	eeb0 1a40 	vmov.f32	s2, s0
 8009d9a:	eef0 0a68 	vmov.f32	s1, s17
 8009d9e:	eeb0 0a48 	vmov.f32	s0, s16
 8009da2:	4620      	mov	r0, r4
 8009da4:	47b0      	blx	r6
 8009da6:	6823      	ldr	r3, [r4, #0]
 8009da8:	4620      	mov	r0, r4
 8009daa:	f8d3 60a4 	ldr.w	r6, [r3, #164]	; 0xa4
 8009dae:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8009db2:	4798      	blx	r3
 8009db4:	6823      	ldr	r3, [r4, #0]
 8009db6:	4620      	mov	r0, r4
 8009db8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8009dbc:	eeb0 8a40 	vmov.f32	s16, s0
 8009dc0:	4798      	blx	r3
 8009dc2:	4620      	mov	r0, r4
 8009dc4:	eef0 0a40 	vmov.f32	s1, s0
 8009dc8:	eeb0 0a48 	vmov.f32	s0, s16
 8009dcc:	47b0      	blx	r6
 8009dce:	6823      	ldr	r3, [r4, #0]
 8009dd0:	4620      	mov	r0, r4
 8009dd2:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8009dd4:	2101      	movs	r1, #1
 8009dd6:	4798      	blx	r3
 8009dd8:	682b      	ldr	r3, [r5, #0]
 8009dda:	4621      	mov	r1, r4
 8009ddc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8009dde:	4628      	mov	r0, r5
 8009de0:	4798      	blx	r3
 8009de2:	2301      	movs	r3, #1
 8009de4:	f884 3025 	strb.w	r3, [r4, #37]	; 0x25
 8009de8:	b003      	add	sp, #12
 8009dea:	ecbd 8b02 	vpop	{d8}
 8009dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009df0:	43960000 	.word	0x43960000

08009df4 <_ZN8touchgfx11AnalogClock20initializeTime24HourEhhh>:
 8009df4:	b570      	push	{r4, r5, r6, lr}
 8009df6:	f64f 75ff 	movw	r5, #65535	; 0xffff
 8009dfa:	2601      	movs	r6, #1
 8009dfc:	f8a0 532a 	strh.w	r5, [r0, #810]	; 0x32a
 8009e00:	f880 532c 	strb.w	r5, [r0, #812]	; 0x32c
 8009e04:	f8b0 5324 	ldrh.w	r5, [r0, #804]	; 0x324
 8009e08:	f8a0 6324 	strh.w	r6, [r0, #804]	; 0x324
 8009e0c:	6806      	ldr	r6, [r0, #0]
 8009e0e:	4604      	mov	r4, r0
 8009e10:	f8d6 6084 	ldr.w	r6, [r6, #132]	; 0x84
 8009e14:	47b0      	blx	r6
 8009e16:	f8a4 5324 	strh.w	r5, [r4, #804]	; 0x324
 8009e1a:	bd70      	pop	{r4, r5, r6, pc}

08009e1c <_ZN8touchgfx11AnalogClock20initializeTime12HourEhhhb>:
 8009e1c:	b4f0      	push	{r4, r5, r6, r7}
 8009e1e:	6804      	ldr	r4, [r0, #0]
 8009e20:	f89d 6010 	ldrb.w	r6, [sp, #16]
 8009e24:	f8d4 50c0 	ldr.w	r5, [r4, #192]	; 0xc0
 8009e28:	2e00      	cmp	r6, #0
 8009e2a:	f04f 040c 	mov.w	r4, #12
 8009e2e:	fbb1 f7f4 	udiv	r7, r1, r4
 8009e32:	fb07 1114 	mls	r1, r7, r4, r1
 8009e36:	bf18      	it	ne
 8009e38:	2400      	movne	r4, #0
 8009e3a:	fa54 f181 	uxtab	r1, r4, r1
 8009e3e:	46ac      	mov	ip, r5
 8009e40:	b2c9      	uxtb	r1, r1
 8009e42:	bcf0      	pop	{r4, r5, r6, r7}
 8009e44:	4760      	bx	ip
	...

08009e48 <_ZNK8touchgfx11AnalogClock23convertHandValueToAngleEhhh>:
 8009e48:	ee07 1a90 	vmov	s15, r1
 8009e4c:	ee07 3a10 	vmov	s14, r3
 8009e50:	ed9f 6a0d 	vldr	s12, [pc, #52]	; 8009e88 <_ZNK8touchgfx11AnalogClock23convertHandValueToAngleEhhh+0x40>
 8009e54:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e58:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8009e5c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8009e60:	ee27 7a06 	vmul.f32	s14, s14, s12
 8009e64:	ee86 0a87 	vdiv.f32	s0, s13, s14
 8009e68:	ee07 2a10 	vmov	s14, r2
 8009e6c:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8009e70:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8009e74:	eddf 7a05 	vldr	s15, [pc, #20]	; 8009e8c <_ZNK8touchgfx11AnalogClock23convertHandValueToAngleEhhh+0x44>
 8009e78:	ee30 0a07 	vadd.f32	s0, s0, s14
 8009e7c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8009e80:	ee20 0a27 	vmul.f32	s0, s0, s15
 8009e84:	4770      	bx	lr
 8009e86:	bf00      	nop
 8009e88:	42700000 	.word	0x42700000
 8009e8c:	40490fdb 	.word	0x40490fdb

08009e90 <_ZNK8touchgfx11AnalogClock27getHourHandMinuteCorrectionEv>:
 8009e90:	f890 032d 	ldrb.w	r0, [r0, #813]	; 0x32d
 8009e94:	4770      	bx	lr

08009e96 <_ZNK8touchgfx11AnalogClock29getMinuteHandSecondCorrectionEv>:
 8009e96:	f890 032e 	ldrb.w	r0, [r0, #814]	; 0x32e
 8009e9a:	4770      	bx	lr

08009e9c <_ZNK8touchgfx11AnalogClock16animationEnabledEv>:
 8009e9c:	f8b0 0324 	ldrh.w	r0, [r0, #804]	; 0x324
 8009ea0:	2801      	cmp	r0, #1
 8009ea2:	bf94      	ite	ls
 8009ea4:	2000      	movls	r0, #0
 8009ea6:	2001      	movhi	r0, #1
 8009ea8:	4770      	bx	lr

08009eaa <_ZN8touchgfx11AnalogClock12setAnimationEtPFstsstE>:
 8009eaa:	f8a0 1324 	strh.w	r1, [r0, #804]	; 0x324
 8009eae:	f8c0 2320 	str.w	r2, [r0, #800]	; 0x320
 8009eb2:	4770      	bx	lr

08009eb4 <_ZN8touchgfx11AnalogClock13setBackgroundEtss>:
 8009eb4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009eb6:	4604      	mov	r4, r0
 8009eb8:	a802      	add	r0, sp, #8
 8009eba:	4616      	mov	r6, r2
 8009ebc:	f820 1d04 	strh.w	r1, [r0, #-4]!
 8009ec0:	4601      	mov	r1, r0
 8009ec2:	f104 0030 	add.w	r0, r4, #48	; 0x30
 8009ec6:	461d      	mov	r5, r3
 8009ec8:	f002 fa07 	bl	800c2da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009ecc:	6823      	ldr	r3, [r4, #0]
 8009ece:	f8a4 6326 	strh.w	r6, [r4, #806]	; 0x326
 8009ed2:	f8a4 5328 	strh.w	r5, [r4, #808]	; 0x328
 8009ed6:	f9b4 1038 	ldrsh.w	r1, [r4, #56]	; 0x38
 8009eda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009edc:	4620      	mov	r0, r4
 8009ede:	4798      	blx	r3
 8009ee0:	6823      	ldr	r3, [r4, #0]
 8009ee2:	f9b4 103a 	ldrsh.w	r1, [r4, #58]	; 0x3a
 8009ee6:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009ee8:	4620      	mov	r0, r4
 8009eea:	4798      	blx	r3
 8009eec:	b002      	add	sp, #8
 8009eee:	bd70      	pop	{r4, r5, r6, pc}

08009ef0 <_ZN8touchgfx11AnalogClock13setBackgroundEt>:
 8009ef0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009ef2:	4605      	mov	r5, r0
 8009ef4:	6803      	ldr	r3, [r0, #0]
 8009ef6:	a802      	add	r0, sp, #8
 8009ef8:	460c      	mov	r4, r1
 8009efa:	f820 1d08 	strh.w	r1, [r0, #-8]!
 8009efe:	f8d3 6094 	ldr.w	r6, [r3, #148]	; 0x94
 8009f02:	f005 f96f 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009f06:	4607      	mov	r7, r0
 8009f08:	a802      	add	r0, sp, #8
 8009f0a:	f820 4d04 	strh.w	r4, [r0, #-4]!
 8009f0e:	f005 f9a3 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8009f12:	f347 024f 	sbfx	r2, r7, #1, #16
 8009f16:	f340 034f 	sbfx	r3, r0, #1, #16
 8009f1a:	4621      	mov	r1, r4
 8009f1c:	4628      	mov	r0, r5
 8009f1e:	47b0      	blx	r6
 8009f20:	b003      	add	sp, #12
 8009f22:	bdf0      	pop	{r4, r5, r6, r7, pc}

08009f24 <_ZN8touchgfx11AnalogClock27setHourHandMinuteCorrectionEb>:
 8009f24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f28:	6803      	ldr	r3, [r0, #0]
 8009f2a:	f880 132d 	strb.w	r1, [r0, #813]	; 0x32d
 8009f2e:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 8009f32:	4604      	mov	r4, r0
 8009f34:	f000 fa28 	bl	800a388 <_ZNK8touchgfx13AbstractClock14getCurrentHourEv>
 8009f38:	4606      	mov	r6, r0
 8009f3a:	4620      	mov	r0, r4
 8009f3c:	f000 fa27 	bl	800a38e <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8009f40:	4607      	mov	r7, r0
 8009f42:	4620      	mov	r0, r4
 8009f44:	f000 fa26 	bl	800a394 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8009f48:	463a      	mov	r2, r7
 8009f4a:	4603      	mov	r3, r0
 8009f4c:	4631      	mov	r1, r6
 8009f4e:	4620      	mov	r0, r4
 8009f50:	46ac      	mov	ip, r5
 8009f52:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009f56:	4760      	bx	ip

08009f58 <_ZN8touchgfx11AnalogClock29setMinuteHandSecondCorrectionEb>:
 8009f58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009f5c:	6803      	ldr	r3, [r0, #0]
 8009f5e:	f880 132e 	strb.w	r1, [r0, #814]	; 0x32e
 8009f62:	f8d3 5084 	ldr.w	r5, [r3, #132]	; 0x84
 8009f66:	4604      	mov	r4, r0
 8009f68:	f000 fa0e 	bl	800a388 <_ZNK8touchgfx13AbstractClock14getCurrentHourEv>
 8009f6c:	4606      	mov	r6, r0
 8009f6e:	4620      	mov	r0, r4
 8009f70:	f000 fa0d 	bl	800a38e <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>
 8009f74:	4607      	mov	r7, r0
 8009f76:	4620      	mov	r0, r4
 8009f78:	f000 fa0c 	bl	800a394 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>
 8009f7c:	463a      	mov	r2, r7
 8009f7e:	4603      	mov	r3, r0
 8009f80:	4631      	mov	r1, r6
 8009f82:	4620      	mov	r0, r4
 8009f84:	46ac      	mov	ip, r5
 8009f86:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8009f8a:	4760      	bx	ip

08009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8009f8c:	6802      	ldr	r2, [r0, #0]
 8009f8e:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8009f92:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 8009f94:	eeb0 1a40 	vmov.f32	s2, s0
 8009f98:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8009f9c:	4710      	bx	r2
	...

08009fa0 <_ZN8touchgfx11AnalogClockC1Ev>:
 8009fa0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009fa4:	ed2d 8b02 	vpush	{d8}
 8009fa8:	4604      	mov	r4, r0
 8009faa:	b083      	sub	sp, #12
 8009fac:	4626      	mov	r6, r4
 8009fae:	f000 f9d1 	bl	800a354 <_ZN8touchgfx13AbstractClockC1Ev>
 8009fb2:	4b30      	ldr	r3, [pc, #192]	; (800a074 <_ZN8touchgfx11AnalogClockC1Ev+0xd4>)
 8009fb4:	f846 3b30 	str.w	r3, [r6], #48
 8009fb8:	a902      	add	r1, sp, #8
 8009fba:	2201      	movs	r2, #1
 8009fbc:	2500      	movs	r5, #0
 8009fbe:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8009fc2:	f884 2055 	strb.w	r2, [r4, #85]	; 0x55
 8009fc6:	4a2c      	ldr	r2, [pc, #176]	; (800a078 <_ZN8touchgfx11AnalogClockC1Ev+0xd8>)
 8009fc8:	6322      	str	r2, [r4, #48]	; 0x30
 8009fca:	f821 3d04 	strh.w	r3, [r1, #-4]!
 8009fce:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8009fd2:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8009fd6:	4630      	mov	r0, r6
 8009fd8:	f104 095c 	add.w	r9, r4, #92	; 0x5c
 8009fdc:	86a5      	strh	r5, [r4, #52]	; 0x34
 8009fde:	86e5      	strh	r5, [r4, #54]	; 0x36
 8009fe0:	8725      	strh	r5, [r4, #56]	; 0x38
 8009fe2:	8765      	strh	r5, [r4, #58]	; 0x3a
 8009fe4:	87a5      	strh	r5, [r4, #60]	; 0x3c
 8009fe6:	87e5      	strh	r5, [r4, #62]	; 0x3e
 8009fe8:	f8a4 5040 	strh.w	r5, [r4, #64]	; 0x40
 8009fec:	f8a4 5042 	strh.w	r5, [r4, #66]	; 0x42
 8009ff0:	e9c4 5511 	strd	r5, r5, [r4, #68]	; 0x44
 8009ff4:	64e5      	str	r5, [r4, #76]	; 0x4c
 8009ff6:	f884 5054 	strb.w	r5, [r4, #84]	; 0x54
 8009ffa:	f002 f96e 	bl	800c2da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8009ffe:	f504 78a4 	add.w	r8, r4, #328	; 0x148
 800a002:	4648      	mov	r0, r9
 800a004:	f001 fbfe 	bl	800b804 <_ZN8touchgfx22AnimationTextureMapperC1Ev>
 800a008:	f504 770d 	add.w	r7, r4, #564	; 0x234
 800a00c:	4640      	mov	r0, r8
 800a00e:	f001 fbf9 	bl	800b804 <_ZN8touchgfx22AnimationTextureMapperC1Ev>
 800a012:	4638      	mov	r0, r7
 800a014:	f001 fbf6 	bl	800b804 <_ZN8touchgfx22AnimationTextureMapperC1Ev>
 800a018:	ed9f 8a18 	vldr	s16, [pc, #96]	; 800a07c <_ZN8touchgfx11AnalogClockC1Ev+0xdc>
 800a01c:	4b18      	ldr	r3, [pc, #96]	; (800a080 <_ZN8touchgfx11AnalogClockC1Ev+0xe0>)
 800a01e:	f8c4 3320 	str.w	r3, [r4, #800]	; 0x320
 800a022:	4631      	mov	r1, r6
 800a024:	4620      	mov	r0, r4
 800a026:	f8c4 5324 	str.w	r5, [r4, #804]	; 0x324
 800a02a:	f8c4 5328 	str.w	r5, [r4, #808]	; 0x328
 800a02e:	f884 532c 	strb.w	r5, [r4, #812]	; 0x32c
 800a032:	f884 532d 	strb.w	r5, [r4, #813]	; 0x32d
 800a036:	f884 532e 	strb.w	r5, [r4, #814]	; 0x32e
 800a03a:	f000 fa45 	bl	800a4c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800a03e:	eeb0 0a48 	vmov.f32	s0, s16
 800a042:	4648      	mov	r0, r9
 800a044:	f7ff ffa2 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a048:	eeb0 0a48 	vmov.f32	s0, s16
 800a04c:	4640      	mov	r0, r8
 800a04e:	f7ff ff9d 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a052:	4638      	mov	r0, r7
 800a054:	eeb0 0a48 	vmov.f32	s0, s16
 800a058:	f7ff ff98 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a05c:	4620      	mov	r0, r4
 800a05e:	f884 5081 	strb.w	r5, [r4, #129]	; 0x81
 800a062:	f884 516d 	strb.w	r5, [r4, #365]	; 0x16d
 800a066:	f884 5259 	strb.w	r5, [r4, #601]	; 0x259
 800a06a:	b003      	add	sp, #12
 800a06c:	ecbd 8b02 	vpop	{d8}
 800a070:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a074:	0801d584 	.word	0x0801d584
 800a078:	0801e24c 	.word	0x0801e24c
 800a07c:	00000000 	.word	0x00000000
 800a080:	0800e107 	.word	0x0800e107

0800a084 <_ZN8touchgfx11AnalogClockD1Ev>:
 800a084:	b510      	push	{r4, lr}
 800a086:	4b08      	ldr	r3, [pc, #32]	; (800a0a8 <_ZN8touchgfx11AnalogClockD1Ev+0x24>)
 800a088:	6003      	str	r3, [r0, #0]
 800a08a:	4604      	mov	r4, r0
 800a08c:	f500 700d 	add.w	r0, r0, #564	; 0x234
 800a090:	f001 fa92 	bl	800b5b8 <_ZN8touchgfx22AnimationTextureMapperD1Ev>
 800a094:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800a098:	f001 fa8e 	bl	800b5b8 <_ZN8touchgfx22AnimationTextureMapperD1Ev>
 800a09c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 800a0a0:	f001 fa8a 	bl	800b5b8 <_ZN8touchgfx22AnimationTextureMapperD1Ev>
 800a0a4:	4620      	mov	r0, r4
 800a0a6:	bd10      	pop	{r4, pc}
 800a0a8:	0801d584 	.word	0x0801d584

0800a0ac <_ZN8touchgfx11AnalogClockD0Ev>:
 800a0ac:	b510      	push	{r4, lr}
 800a0ae:	4604      	mov	r4, r0
 800a0b0:	f7ff ffe8 	bl	800a084 <_ZN8touchgfx11AnalogClockD1Ev>
 800a0b4:	4620      	mov	r0, r4
 800a0b6:	f44f 714c 	mov.w	r1, #816	; 0x330
 800a0ba:	f010 fd1f 	bl	801aafc <_ZdlPvj>
 800a0be:	4620      	mov	r0, r4
 800a0c0:	bd10      	pop	{r4, pc}
	...

0800a0c4 <_ZN8touchgfx11AnalogClock11updateClockEv>:
 800a0c4:	b530      	push	{r4, r5, lr}
 800a0c6:	ed2d 8b02 	vpush	{d8}
 800a0ca:	f890 332a 	ldrb.w	r3, [r0, #810]	; 0x32a
 800a0ce:	b083      	sub	sp, #12
 800a0d0:	4604      	mov	r4, r0
 800a0d2:	b15b      	cbz	r3, 800a0ec <_ZN8touchgfx11AnalogClock11updateClockEv+0x28>
 800a0d4:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800a0d8:	b943      	cbnz	r3, 800a0ec <_ZN8touchgfx11AnalogClock11updateClockEv+0x28>
 800a0da:	ed90 0a26 	vldr	s0, [r0, #152]	; 0x98
 800a0de:	eddf 7a84 	vldr	s15, [pc, #528]	; 800a2f0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x22c>
 800a0e2:	305c      	adds	r0, #92	; 0x5c
 800a0e4:	ee30 0a67 	vsub.f32	s0, s0, s15
 800a0e8:	f7ff ff50 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a0ec:	f894 332b 	ldrb.w	r3, [r4, #811]	; 0x32b
 800a0f0:	b163      	cbz	r3, 800a10c <_ZN8touchgfx11AnalogClock11updateClockEv+0x48>
 800a0f2:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 800a0f6:	b94b      	cbnz	r3, 800a10c <_ZN8touchgfx11AnalogClock11updateClockEv+0x48>
 800a0f8:	ed94 0a61 	vldr	s0, [r4, #388]	; 0x184
 800a0fc:	eddf 7a7c 	vldr	s15, [pc, #496]	; 800a2f0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x22c>
 800a100:	f504 70a4 	add.w	r0, r4, #328	; 0x148
 800a104:	ee30 0a67 	vsub.f32	s0, s0, s15
 800a108:	f7ff ff40 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a10c:	f894 332c 	ldrb.w	r3, [r4, #812]	; 0x32c
 800a110:	b163      	cbz	r3, 800a12c <_ZN8touchgfx11AnalogClock11updateClockEv+0x68>
 800a112:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
 800a116:	b94b      	cbnz	r3, 800a12c <_ZN8touchgfx11AnalogClock11updateClockEv+0x68>
 800a118:	ed94 0a9c 	vldr	s0, [r4, #624]	; 0x270
 800a11c:	eddf 7a74 	vldr	s15, [pc, #464]	; 800a2f0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x22c>
 800a120:	f504 700d 	add.w	r0, r4, #564	; 0x234
 800a124:	ee30 0a67 	vsub.f32	s0, s0, s15
 800a128:	f7ff ff30 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a12c:	f894 3081 	ldrb.w	r3, [r4, #129]	; 0x81
 800a130:	2b00      	cmp	r3, #0
 800a132:	d045      	beq.n	800a1c0 <_ZN8touchgfx11AnalogClock11updateClockEv+0xfc>
 800a134:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800a138:	f894 132a 	ldrb.w	r1, [r4, #810]	; 0x32a
 800a13c:	f894 332d 	ldrb.w	r3, [r4, #813]	; 0x32d
 800a140:	4291      	cmp	r1, r2
 800a142:	d107      	bne.n	800a154 <_ZN8touchgfx11AnalogClock11updateClockEv+0x90>
 800a144:	2b00      	cmp	r3, #0
 800a146:	d03b      	beq.n	800a1c0 <_ZN8touchgfx11AnalogClock11updateClockEv+0xfc>
 800a148:	f894 002d 	ldrb.w	r0, [r4, #45]	; 0x2d
 800a14c:	f894 132b 	ldrb.w	r1, [r4, #811]	; 0x32b
 800a150:	4288      	cmp	r0, r1
 800a152:	d035      	beq.n	800a1c0 <_ZN8touchgfx11AnalogClock11updateClockEv+0xfc>
 800a154:	6821      	ldr	r1, [r4, #0]
 800a156:	f8d1 50cc 	ldr.w	r5, [r1, #204]	; 0xcc
 800a15a:	b10b      	cbz	r3, 800a160 <_ZN8touchgfx11AnalogClock11updateClockEv+0x9c>
 800a15c:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 800a160:	210c      	movs	r1, #12
 800a162:	4620      	mov	r0, r4
 800a164:	47a8      	blx	r5
 800a166:	6823      	ldr	r3, [r4, #0]
 800a168:	4620      	mov	r0, r4
 800a16a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a16e:	eeb0 8a40 	vmov.f32	s16, s0
 800a172:	4798      	blx	r3
 800a174:	f104 055c 	add.w	r5, r4, #92	; 0x5c
 800a178:	b970      	cbnz	r0, 800a198 <_ZN8touchgfx11AnalogClock11updateClockEv+0xd4>
 800a17a:	6823      	ldr	r3, [r4, #0]
 800a17c:	4620      	mov	r0, r4
 800a17e:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a182:	4798      	blx	r3
 800a184:	b110      	cbz	r0, 800a18c <_ZN8touchgfx11AnalogClock11updateClockEv+0xc8>
 800a186:	4628      	mov	r0, r5
 800a188:	f001 fa44 	bl	800b614 <_ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv>
 800a18c:	eeb0 0a48 	vmov.f32	s0, s16
 800a190:	4628      	mov	r0, r5
 800a192:	f7ff fefb 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a196:	e013      	b.n	800a1c0 <_ZN8touchgfx11AnalogClock11updateClockEv+0xfc>
 800a198:	4628      	mov	r0, r5
 800a19a:	f001 f9f5 	bl	800b588 <_ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv>
 800a19e:	4603      	mov	r3, r0
 800a1a0:	2800      	cmp	r0, #0
 800a1a2:	d1ea      	bne.n	800a17a <_ZN8touchgfx11AnalogClock11updateClockEv+0xb6>
 800a1a4:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
 800a1a8:	9100      	str	r1, [sp, #0]
 800a1aa:	4628      	mov	r0, r5
 800a1ac:	f8b4 2324 	ldrh.w	r2, [r4, #804]	; 0x324
 800a1b0:	eeb0 0a48 	vmov.f32	s0, s16
 800a1b4:	2102      	movs	r1, #2
 800a1b6:	f001 f9ea 	bl	800b58e <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>
 800a1ba:	4628      	mov	r0, r5
 800a1bc:	f001 fa10 	bl	800b5e0 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>
 800a1c0:	f894 316d 	ldrb.w	r3, [r4, #365]	; 0x16d
 800a1c4:	2b00      	cmp	r3, #0
 800a1c6:	d045      	beq.n	800a254 <_ZN8touchgfx11AnalogClock11updateClockEv+0x190>
 800a1c8:	f894 202d 	ldrb.w	r2, [r4, #45]	; 0x2d
 800a1cc:	f894 132b 	ldrb.w	r1, [r4, #811]	; 0x32b
 800a1d0:	f894 332e 	ldrb.w	r3, [r4, #814]	; 0x32e
 800a1d4:	4291      	cmp	r1, r2
 800a1d6:	d107      	bne.n	800a1e8 <_ZN8touchgfx11AnalogClock11updateClockEv+0x124>
 800a1d8:	2b00      	cmp	r3, #0
 800a1da:	d03b      	beq.n	800a254 <_ZN8touchgfx11AnalogClock11updateClockEv+0x190>
 800a1dc:	f894 032c 	ldrb.w	r0, [r4, #812]	; 0x32c
 800a1e0:	f894 102e 	ldrb.w	r1, [r4, #46]	; 0x2e
 800a1e4:	4288      	cmp	r0, r1
 800a1e6:	d035      	beq.n	800a254 <_ZN8touchgfx11AnalogClock11updateClockEv+0x190>
 800a1e8:	6821      	ldr	r1, [r4, #0]
 800a1ea:	f8d1 50cc 	ldr.w	r5, [r1, #204]	; 0xcc
 800a1ee:	b10b      	cbz	r3, 800a1f4 <_ZN8touchgfx11AnalogClock11updateClockEv+0x130>
 800a1f0:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
 800a1f4:	213c      	movs	r1, #60	; 0x3c
 800a1f6:	4620      	mov	r0, r4
 800a1f8:	47a8      	blx	r5
 800a1fa:	6823      	ldr	r3, [r4, #0]
 800a1fc:	4620      	mov	r0, r4
 800a1fe:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a202:	eeb0 8a40 	vmov.f32	s16, s0
 800a206:	4798      	blx	r3
 800a208:	f504 75a4 	add.w	r5, r4, #328	; 0x148
 800a20c:	b970      	cbnz	r0, 800a22c <_ZN8touchgfx11AnalogClock11updateClockEv+0x168>
 800a20e:	6823      	ldr	r3, [r4, #0]
 800a210:	4620      	mov	r0, r4
 800a212:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a216:	4798      	blx	r3
 800a218:	b110      	cbz	r0, 800a220 <_ZN8touchgfx11AnalogClock11updateClockEv+0x15c>
 800a21a:	4628      	mov	r0, r5
 800a21c:	f001 f9fa 	bl	800b614 <_ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv>
 800a220:	eeb0 0a48 	vmov.f32	s0, s16
 800a224:	4628      	mov	r0, r5
 800a226:	f7ff feb1 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a22a:	e013      	b.n	800a254 <_ZN8touchgfx11AnalogClock11updateClockEv+0x190>
 800a22c:	4628      	mov	r0, r5
 800a22e:	f001 f9ab 	bl	800b588 <_ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv>
 800a232:	4603      	mov	r3, r0
 800a234:	2800      	cmp	r0, #0
 800a236:	d1ea      	bne.n	800a20e <_ZN8touchgfx11AnalogClock11updateClockEv+0x14a>
 800a238:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
 800a23c:	9100      	str	r1, [sp, #0]
 800a23e:	4628      	mov	r0, r5
 800a240:	f8b4 2324 	ldrh.w	r2, [r4, #804]	; 0x324
 800a244:	eeb0 0a48 	vmov.f32	s0, s16
 800a248:	2102      	movs	r1, #2
 800a24a:	f001 f9a0 	bl	800b58e <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>
 800a24e:	4628      	mov	r0, r5
 800a250:	f001 f9c6 	bl	800b5e0 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>
 800a254:	f894 3259 	ldrb.w	r3, [r4, #601]	; 0x259
 800a258:	2b00      	cmp	r3, #0
 800a25a:	d039      	beq.n	800a2d0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x20c>
 800a25c:	f894 202e 	ldrb.w	r2, [r4, #46]	; 0x2e
 800a260:	f894 332c 	ldrb.w	r3, [r4, #812]	; 0x32c
 800a264:	4293      	cmp	r3, r2
 800a266:	d033      	beq.n	800a2d0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x20c>
 800a268:	6823      	ldr	r3, [r4, #0]
 800a26a:	213c      	movs	r1, #60	; 0x3c
 800a26c:	f8d3 50cc 	ldr.w	r5, [r3, #204]	; 0xcc
 800a270:	4620      	mov	r0, r4
 800a272:	2300      	movs	r3, #0
 800a274:	47a8      	blx	r5
 800a276:	6823      	ldr	r3, [r4, #0]
 800a278:	4620      	mov	r0, r4
 800a27a:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a27e:	eeb0 8a40 	vmov.f32	s16, s0
 800a282:	4798      	blx	r3
 800a284:	f504 750d 	add.w	r5, r4, #564	; 0x234
 800a288:	b970      	cbnz	r0, 800a2a8 <_ZN8touchgfx11AnalogClock11updateClockEv+0x1e4>
 800a28a:	6823      	ldr	r3, [r4, #0]
 800a28c:	4620      	mov	r0, r4
 800a28e:	f8d3 30d0 	ldr.w	r3, [r3, #208]	; 0xd0
 800a292:	4798      	blx	r3
 800a294:	b110      	cbz	r0, 800a29c <_ZN8touchgfx11AnalogClock11updateClockEv+0x1d8>
 800a296:	4628      	mov	r0, r5
 800a298:	f001 f9bc 	bl	800b614 <_ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv>
 800a29c:	eeb0 0a48 	vmov.f32	s0, s16
 800a2a0:	4628      	mov	r0, r5
 800a2a2:	f7ff fe73 	bl	8009f8c <_ZN8touchgfx13TextureMapper12updateZAngleEf>
 800a2a6:	e013      	b.n	800a2d0 <_ZN8touchgfx11AnalogClock11updateClockEv+0x20c>
 800a2a8:	4628      	mov	r0, r5
 800a2aa:	f001 f96d 	bl	800b588 <_ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv>
 800a2ae:	4603      	mov	r3, r0
 800a2b0:	2800      	cmp	r0, #0
 800a2b2:	d1ea      	bne.n	800a28a <_ZN8touchgfx11AnalogClock11updateClockEv+0x1c6>
 800a2b4:	f8d4 1320 	ldr.w	r1, [r4, #800]	; 0x320
 800a2b8:	9100      	str	r1, [sp, #0]
 800a2ba:	4628      	mov	r0, r5
 800a2bc:	f8b4 2324 	ldrh.w	r2, [r4, #804]	; 0x324
 800a2c0:	eeb0 0a48 	vmov.f32	s0, s16
 800a2c4:	2102      	movs	r1, #2
 800a2c6:	f001 f962 	bl	800b58e <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>
 800a2ca:	4628      	mov	r0, r5
 800a2cc:	f001 f988 	bl	800b5e0 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>
 800a2d0:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800a2d4:	f884 332a 	strb.w	r3, [r4, #810]	; 0x32a
 800a2d8:	f894 302d 	ldrb.w	r3, [r4, #45]	; 0x2d
 800a2dc:	f884 332b 	strb.w	r3, [r4, #811]	; 0x32b
 800a2e0:	f894 302e 	ldrb.w	r3, [r4, #46]	; 0x2e
 800a2e4:	f884 332c 	strb.w	r3, [r4, #812]	; 0x32c
 800a2e8:	b003      	add	sp, #12
 800a2ea:	ecbd 8b02 	vpop	{d8}
 800a2ee:	bd30      	pop	{r4, r5, pc}
 800a2f0:	40c90fdb 	.word	0x40c90fdb

0800a2f4 <_ZN8touchgfx13AbstractClock13setTime24HourEhhh>:
 800a2f4:	b470      	push	{r4, r5, r6}
 800a2f6:	2518      	movs	r5, #24
 800a2f8:	fbb1 f6f5 	udiv	r6, r1, r5
 800a2fc:	fb06 1115 	mls	r1, r6, r5, r1
 800a300:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
 800a304:	213c      	movs	r1, #60	; 0x3c
 800a306:	fbb2 f5f1 	udiv	r5, r2, r1
 800a30a:	fb05 2211 	mls	r2, r5, r1, r2
 800a30e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d
 800a312:	fbb3 f2f1 	udiv	r2, r3, r1
 800a316:	fb02 3311 	mls	r3, r2, r1, r3
 800a31a:	f880 302e 	strb.w	r3, [r0, #46]	; 0x2e
 800a31e:	6803      	ldr	r3, [r0, #0]
 800a320:	bc70      	pop	{r4, r5, r6}
 800a322:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a326:	4718      	bx	r3

0800a328 <_ZN8touchgfx13AbstractClock13setTime12HourEhhhb>:
 800a328:	b4f0      	push	{r4, r5, r6, r7}
 800a32a:	6804      	ldr	r4, [r0, #0]
 800a32c:	f89d 6010 	ldrb.w	r6, [sp, #16]
 800a330:	f8d4 5084 	ldr.w	r5, [r4, #132]	; 0x84
 800a334:	2e00      	cmp	r6, #0
 800a336:	f04f 040c 	mov.w	r4, #12
 800a33a:	fbb1 f7f4 	udiv	r7, r1, r4
 800a33e:	fb07 1114 	mls	r1, r7, r4, r1
 800a342:	bf18      	it	ne
 800a344:	2400      	movne	r4, #0
 800a346:	fa54 f181 	uxtab	r1, r4, r1
 800a34a:	46ac      	mov	ip, r5
 800a34c:	b2c9      	uxtb	r1, r1
 800a34e:	bcf0      	pop	{r4, r5, r6, r7}
 800a350:	4760      	bx	ip
	...

0800a354 <_ZN8touchgfx13AbstractClockC1Ev>:
 800a354:	2101      	movs	r1, #1
 800a356:	2200      	movs	r2, #0
 800a358:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800a35c:	4909      	ldr	r1, [pc, #36]	; (800a384 <_ZN8touchgfx13AbstractClockC1Ev+0x30>)
 800a35e:	8082      	strh	r2, [r0, #4]
 800a360:	80c2      	strh	r2, [r0, #6]
 800a362:	8102      	strh	r2, [r0, #8]
 800a364:	8142      	strh	r2, [r0, #10]
 800a366:	8182      	strh	r2, [r0, #12]
 800a368:	81c2      	strh	r2, [r0, #14]
 800a36a:	8202      	strh	r2, [r0, #16]
 800a36c:	8242      	strh	r2, [r0, #18]
 800a36e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800a372:	61c2      	str	r2, [r0, #28]
 800a374:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800a378:	6001      	str	r1, [r0, #0]
 800a37a:	6282      	str	r2, [r0, #40]	; 0x28
 800a37c:	8582      	strh	r2, [r0, #44]	; 0x2c
 800a37e:	f880 202e 	strb.w	r2, [r0, #46]	; 0x2e
 800a382:	4770      	bx	lr
 800a384:	0801d660 	.word	0x0801d660

0800a388 <_ZNK8touchgfx13AbstractClock14getCurrentHourEv>:
 800a388:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800a38c:	4770      	bx	lr

0800a38e <_ZNK8touchgfx13AbstractClock16getCurrentMinuteEv>:
 800a38e:	f890 002d 	ldrb.w	r0, [r0, #45]	; 0x2d
 800a392:	4770      	bx	lr

0800a394 <_ZNK8touchgfx13AbstractClock16getCurrentSecondEv>:
 800a394:	f890 002e 	ldrb.w	r0, [r0, #46]	; 0x2e
 800a398:	4770      	bx	lr

0800a39a <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800a39a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a39c:	2000      	movs	r0, #0
 800a39e:	b12b      	cbz	r3, 800a3ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a3a0:	b920      	cbnz	r0, 800a3ac <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800a3a2:	1a5a      	subs	r2, r3, r1
 800a3a4:	4250      	negs	r0, r2
 800a3a6:	4150      	adcs	r0, r2
 800a3a8:	699b      	ldr	r3, [r3, #24]
 800a3aa:	e7f8      	b.n	800a39e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800a3ac:	4770      	bx	lr

0800a3ae <_ZN8touchgfx9Container9removeAllEv>:
 800a3ae:	2200      	movs	r2, #0
 800a3b0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a3b2:	b123      	cbz	r3, 800a3be <_ZN8touchgfx9Container9removeAllEv+0x10>
 800a3b4:	6999      	ldr	r1, [r3, #24]
 800a3b6:	6281      	str	r1, [r0, #40]	; 0x28
 800a3b8:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800a3bc:	e7f8      	b.n	800a3b0 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800a3be:	4770      	bx	lr

0800a3c0 <_ZN8touchgfx9Container6unlinkEv>:
 800a3c0:	2300      	movs	r3, #0
 800a3c2:	6283      	str	r3, [r0, #40]	; 0x28
 800a3c4:	4770      	bx	lr

0800a3c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800a3c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a3ca:	461f      	mov	r7, r3
 800a3cc:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800a3d0:	460d      	mov	r5, r1
 800a3d2:	4616      	mov	r6, r2
 800a3d4:	b103      	cbz	r3, 800a3d8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800a3d6:	6038      	str	r0, [r7, #0]
 800a3d8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a3da:	b314      	cbz	r4, 800a422 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800a3dc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a3e0:	b1eb      	cbz	r3, 800a41e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a3e2:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800a3e6:	428d      	cmp	r5, r1
 800a3e8:	db19      	blt.n	800a41e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a3ea:	8923      	ldrh	r3, [r4, #8]
 800a3ec:	b289      	uxth	r1, r1
 800a3ee:	440b      	add	r3, r1
 800a3f0:	b21b      	sxth	r3, r3
 800a3f2:	429d      	cmp	r5, r3
 800a3f4:	da13      	bge.n	800a41e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a3f6:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800a3fa:	4296      	cmp	r6, r2
 800a3fc:	db0f      	blt.n	800a41e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a3fe:	8963      	ldrh	r3, [r4, #10]
 800a400:	b292      	uxth	r2, r2
 800a402:	4413      	add	r3, r2
 800a404:	b21b      	sxth	r3, r3
 800a406:	429e      	cmp	r6, r3
 800a408:	da09      	bge.n	800a41e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800a40a:	6823      	ldr	r3, [r4, #0]
 800a40c:	1ab2      	subs	r2, r6, r2
 800a40e:	1a69      	subs	r1, r5, r1
 800a410:	f8d3 801c 	ldr.w	r8, [r3, #28]
 800a414:	b212      	sxth	r2, r2
 800a416:	463b      	mov	r3, r7
 800a418:	b209      	sxth	r1, r1
 800a41a:	4620      	mov	r0, r4
 800a41c:	47c0      	blx	r8
 800a41e:	69a4      	ldr	r4, [r4, #24]
 800a420:	e7db      	b.n	800a3da <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800a422:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a426 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800a426:	2200      	movs	r2, #0
 800a428:	8002      	strh	r2, [r0, #0]
 800a42a:	8042      	strh	r2, [r0, #2]
 800a42c:	8082      	strh	r2, [r0, #4]
 800a42e:	80c2      	strh	r2, [r0, #6]
 800a430:	4770      	bx	lr

0800a432 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800a432:	b570      	push	{r4, r5, r6, lr}
 800a434:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a436:	460d      	mov	r5, r1
 800a438:	4616      	mov	r6, r2
 800a43a:	b13c      	cbz	r4, 800a44c <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800a43c:	6823      	ldr	r3, [r4, #0]
 800a43e:	4620      	mov	r0, r4
 800a440:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a442:	4632      	mov	r2, r6
 800a444:	4629      	mov	r1, r5
 800a446:	4798      	blx	r3
 800a448:	69a4      	ldr	r4, [r4, #24]
 800a44a:	e7f6      	b.n	800a43a <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800a44c:	bd70      	pop	{r4, r5, r6, pc}

0800a44e <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800a44e:	b538      	push	{r3, r4, r5, lr}
 800a450:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a452:	460d      	mov	r5, r1
 800a454:	b134      	cbz	r4, 800a464 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800a456:	682b      	ldr	r3, [r5, #0]
 800a458:	4621      	mov	r1, r4
 800a45a:	689b      	ldr	r3, [r3, #8]
 800a45c:	4628      	mov	r0, r5
 800a45e:	4798      	blx	r3
 800a460:	69a4      	ldr	r4, [r4, #24]
 800a462:	e7f7      	b.n	800a454 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800a464:	bd38      	pop	{r3, r4, r5, pc}

0800a466 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800a466:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a468:	b19b      	cbz	r3, 800a492 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a46a:	428b      	cmp	r3, r1
 800a46c:	d109      	bne.n	800a482 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800a46e:	699a      	ldr	r2, [r3, #24]
 800a470:	2100      	movs	r1, #0
 800a472:	6159      	str	r1, [r3, #20]
 800a474:	6282      	str	r2, [r0, #40]	; 0x28
 800a476:	b902      	cbnz	r2, 800a47a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800a478:	4770      	bx	lr
 800a47a:	6199      	str	r1, [r3, #24]
 800a47c:	4770      	bx	lr
 800a47e:	4613      	mov	r3, r2
 800a480:	b13a      	cbz	r2, 800a492 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800a482:	699a      	ldr	r2, [r3, #24]
 800a484:	428a      	cmp	r2, r1
 800a486:	d1fa      	bne.n	800a47e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800a488:	698a      	ldr	r2, [r1, #24]
 800a48a:	619a      	str	r2, [r3, #24]
 800a48c:	2300      	movs	r3, #0
 800a48e:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800a492:	4770      	bx	lr

0800a494 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800a494:	b410      	push	{r4}
 800a496:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a498:	4604      	mov	r4, r0
 800a49a:	b92b      	cbnz	r3, 800a4a8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800a49c:	6803      	ldr	r3, [r0, #0]
 800a49e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4a2:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a4a4:	4611      	mov	r1, r2
 800a4a6:	4718      	bx	r3
 800a4a8:	b941      	cbnz	r1, 800a4bc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800a4aa:	6193      	str	r3, [r2, #24]
 800a4ac:	6282      	str	r2, [r0, #40]	; 0x28
 800a4ae:	6154      	str	r4, [r2, #20]
 800a4b0:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a4b4:	4770      	bx	lr
 800a4b6:	4603      	mov	r3, r0
 800a4b8:	2800      	cmp	r0, #0
 800a4ba:	d0f9      	beq.n	800a4b0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800a4bc:	4299      	cmp	r1, r3
 800a4be:	6998      	ldr	r0, [r3, #24]
 800a4c0:	d1f9      	bne.n	800a4b6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800a4c2:	6190      	str	r0, [r2, #24]
 800a4c4:	618a      	str	r2, [r1, #24]
 800a4c6:	e7f2      	b.n	800a4ae <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800a4c8 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800a4c8:	4288      	cmp	r0, r1
 800a4ca:	b508      	push	{r3, lr}
 800a4cc:	d105      	bne.n	800a4da <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 800a4ce:	4b11      	ldr	r3, [pc, #68]	; (800a514 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 800a4d0:	4a11      	ldr	r2, [pc, #68]	; (800a518 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a4d2:	2123      	movs	r1, #35	; 0x23
 800a4d4:	4811      	ldr	r0, [pc, #68]	; (800a51c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 800a4d6:	f011 f90b 	bl	801b6f0 <__assert_func>
 800a4da:	694b      	ldr	r3, [r1, #20]
 800a4dc:	b11b      	cbz	r3, 800a4e6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 800a4de:	4b10      	ldr	r3, [pc, #64]	; (800a520 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 800a4e0:	4a0d      	ldr	r2, [pc, #52]	; (800a518 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a4e2:	2124      	movs	r1, #36	; 0x24
 800a4e4:	e7f6      	b.n	800a4d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a4e6:	e9c1 0305 	strd	r0, r3, [r1, #20]
 800a4ea:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800a4ec:	b913      	cbnz	r3, 800a4f4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 800a4ee:	6281      	str	r1, [r0, #40]	; 0x28
 800a4f0:	bd08      	pop	{r3, pc}
 800a4f2:	4613      	mov	r3, r2
 800a4f4:	699a      	ldr	r2, [r3, #24]
 800a4f6:	b12a      	cbz	r2, 800a504 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 800a4f8:	428b      	cmp	r3, r1
 800a4fa:	d1fa      	bne.n	800a4f2 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 800a4fc:	4b09      	ldr	r3, [pc, #36]	; (800a524 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a4fe:	4a06      	ldr	r2, [pc, #24]	; (800a518 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a500:	2135      	movs	r1, #53	; 0x35
 800a502:	e7e7      	b.n	800a4d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a504:	428b      	cmp	r3, r1
 800a506:	d103      	bne.n	800a510 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 800a508:	4b06      	ldr	r3, [pc, #24]	; (800a524 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 800a50a:	4a03      	ldr	r2, [pc, #12]	; (800a518 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 800a50c:	2138      	movs	r1, #56	; 0x38
 800a50e:	e7e1      	b.n	800a4d4 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 800a510:	6199      	str	r1, [r3, #24]
 800a512:	e7ed      	b.n	800a4f0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 800a514:	0801d6f0 	.word	0x0801d6f0
 800a518:	0801d844 	.word	0x0801d844
 800a51c:	0801d71c 	.word	0x0801d71c
 800a520:	0801d74f 	.word	0x0801d74f
 800a524:	0801d785 	.word	0x0801d785

0800a528 <_ZN8touchgfx4RectaNERKS0_>:
 800a528:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800a52c:	888b      	ldrh	r3, [r1, #4]
 800a52e:	f9b1 9000 	ldrsh.w	r9, [r1]
 800a532:	f9b0 a000 	ldrsh.w	sl, [r0]
 800a536:	444b      	add	r3, r9
 800a538:	b29b      	uxth	r3, r3
 800a53a:	fa0f f883 	sxth.w	r8, r3
 800a53e:	45c2      	cmp	sl, r8
 800a540:	da30      	bge.n	800a5a4 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800a542:	8882      	ldrh	r2, [r0, #4]
 800a544:	4452      	add	r2, sl
 800a546:	b292      	uxth	r2, r2
 800a548:	fa0f fe82 	sxth.w	lr, r2
 800a54c:	45f1      	cmp	r9, lr
 800a54e:	da29      	bge.n	800a5a4 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800a550:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800a554:	88cc      	ldrh	r4, [r1, #6]
 800a556:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800a55a:	442c      	add	r4, r5
 800a55c:	b224      	sxth	r4, r4
 800a55e:	42a6      	cmp	r6, r4
 800a560:	da20      	bge.n	800a5a4 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800a562:	88c7      	ldrh	r7, [r0, #6]
 800a564:	4437      	add	r7, r6
 800a566:	b2bf      	uxth	r7, r7
 800a568:	fa0f fc87 	sxth.w	ip, r7
 800a56c:	4565      	cmp	r5, ip
 800a56e:	da19      	bge.n	800a5a4 <_ZN8touchgfx4RectaNERKS0_+0x7c>
 800a570:	45ca      	cmp	sl, r9
 800a572:	4654      	mov	r4, sl
 800a574:	bfb8      	it	lt
 800a576:	464c      	movlt	r4, r9
 800a578:	42b5      	cmp	r5, r6
 800a57a:	bfb8      	it	lt
 800a57c:	4635      	movlt	r5, r6
 800a57e:	45f0      	cmp	r8, lr
 800a580:	bfc8      	it	gt
 800a582:	4613      	movgt	r3, r2
 800a584:	1b1b      	subs	r3, r3, r4
 800a586:	8083      	strh	r3, [r0, #4]
 800a588:	88ca      	ldrh	r2, [r1, #6]
 800a58a:	884b      	ldrh	r3, [r1, #2]
 800a58c:	8004      	strh	r4, [r0, #0]
 800a58e:	4413      	add	r3, r2
 800a590:	b29b      	uxth	r3, r3
 800a592:	b21a      	sxth	r2, r3
 800a594:	4594      	cmp	ip, r2
 800a596:	bfb8      	it	lt
 800a598:	463b      	movlt	r3, r7
 800a59a:	1b5b      	subs	r3, r3, r5
 800a59c:	80c3      	strh	r3, [r0, #6]
 800a59e:	8045      	strh	r5, [r0, #2]
 800a5a0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800a5a4:	2300      	movs	r3, #0
 800a5a6:	8003      	strh	r3, [r0, #0]
 800a5a8:	8043      	strh	r3, [r0, #2]
 800a5aa:	8083      	strh	r3, [r0, #4]
 800a5ac:	80c3      	strh	r3, [r0, #6]
 800a5ae:	e7f7      	b.n	800a5a0 <_ZN8touchgfx4RectaNERKS0_+0x78>

0800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800a5b0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800a5b4:	b12b      	cbz	r3, 800a5c2 <_ZNK8touchgfx4Rect7isEmptyEv+0x12>
 800a5b6:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800a5ba:	fab0 f080 	clz	r0, r0
 800a5be:	0940      	lsrs	r0, r0, #5
 800a5c0:	4770      	bx	lr
 800a5c2:	2001      	movs	r0, #1
 800a5c4:	4770      	bx	lr

0800a5c6 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800a5c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a5ca:	2300      	movs	r3, #0
 800a5cc:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800a5ce:	8003      	strh	r3, [r0, #0]
 800a5d0:	4604      	mov	r4, r0
 800a5d2:	8043      	strh	r3, [r0, #2]
 800a5d4:	8083      	strh	r3, [r0, #4]
 800a5d6:	80c3      	strh	r3, [r0, #6]
 800a5d8:	2d00      	cmp	r5, #0
 800a5da:	d040      	beq.n	800a65e <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800a5dc:	1d28      	adds	r0, r5, #4
 800a5de:	f7ff ffe7 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a5e2:	b988      	cbnz	r0, 800a608 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a5e4:	4620      	mov	r0, r4
 800a5e6:	f7ff ffe3 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a5ea:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800a5ee:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800a5f2:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800a5f6:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800a5fa:	b138      	cbz	r0, 800a60c <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800a5fc:	8022      	strh	r2, [r4, #0]
 800a5fe:	8063      	strh	r3, [r4, #2]
 800a600:	f8a4 e004 	strh.w	lr, [r4, #4]
 800a604:	f8a4 c006 	strh.w	ip, [r4, #6]
 800a608:	69ad      	ldr	r5, [r5, #24]
 800a60a:	e7e5      	b.n	800a5d8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800a60c:	f9b4 0000 	ldrsh.w	r0, [r4]
 800a610:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800a614:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800a618:	4290      	cmp	r0, r2
 800a61a:	4607      	mov	r7, r0
 800a61c:	bfa8      	it	ge
 800a61e:	4617      	movge	r7, r2
 800a620:	4472      	add	r2, lr
 800a622:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800a626:	8027      	strh	r7, [r4, #0]
 800a628:	4299      	cmp	r1, r3
 800a62a:	460e      	mov	r6, r1
 800a62c:	4440      	add	r0, r8
 800a62e:	bfa8      	it	ge
 800a630:	461e      	movge	r6, r3
 800a632:	4471      	add	r1, lr
 800a634:	4463      	add	r3, ip
 800a636:	b200      	sxth	r0, r0
 800a638:	b212      	sxth	r2, r2
 800a63a:	b209      	sxth	r1, r1
 800a63c:	b21b      	sxth	r3, r3
 800a63e:	4290      	cmp	r0, r2
 800a640:	bfac      	ite	ge
 800a642:	ebc7 0200 	rsbge	r2, r7, r0
 800a646:	ebc7 0202 	rsblt	r2, r7, r2
 800a64a:	4299      	cmp	r1, r3
 800a64c:	bfac      	ite	ge
 800a64e:	ebc6 0301 	rsbge	r3, r6, r1
 800a652:	ebc6 0303 	rsblt	r3, r6, r3
 800a656:	8066      	strh	r6, [r4, #2]
 800a658:	80a2      	strh	r2, [r4, #4]
 800a65a:	80e3      	strh	r3, [r4, #6]
 800a65c:	e7d4      	b.n	800a608 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800a65e:	4620      	mov	r0, r4
 800a660:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a664 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800a664:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800a668:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a66c:	b383      	cbz	r3, 800a6d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a66e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a670:	b374      	cbz	r4, 800a6d0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800a672:	f9b1 5000 	ldrsh.w	r5, [r1]
 800a676:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800a67a:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800a67e:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800a682:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a686:	b303      	cbz	r3, 800a6ca <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a688:	4668      	mov	r0, sp
 800a68a:	1d21      	adds	r1, r4, #4
 800a68c:	f8ad 5000 	strh.w	r5, [sp]
 800a690:	f8ad 6002 	strh.w	r6, [sp, #2]
 800a694:	f8ad 7004 	strh.w	r7, [sp, #4]
 800a698:	f8ad 8006 	strh.w	r8, [sp, #6]
 800a69c:	f7ff ff44 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800a6a0:	4668      	mov	r0, sp
 800a6a2:	f7ff ff85 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a6a6:	b980      	cbnz	r0, 800a6ca <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800a6a8:	f8bd 3000 	ldrh.w	r3, [sp]
 800a6ac:	88a2      	ldrh	r2, [r4, #4]
 800a6ae:	1a9b      	subs	r3, r3, r2
 800a6b0:	f8ad 3000 	strh.w	r3, [sp]
 800a6b4:	88e2      	ldrh	r2, [r4, #6]
 800a6b6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a6ba:	1a9b      	subs	r3, r3, r2
 800a6bc:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a6c0:	6823      	ldr	r3, [r4, #0]
 800a6c2:	4669      	mov	r1, sp
 800a6c4:	689b      	ldr	r3, [r3, #8]
 800a6c6:	4620      	mov	r0, r4
 800a6c8:	4798      	blx	r3
 800a6ca:	69a4      	ldr	r4, [r4, #24]
 800a6cc:	2c00      	cmp	r4, #0
 800a6ce:	d1d8      	bne.n	800a682 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800a6d0:	b002      	add	sp, #8
 800a6d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800a6d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800a6d6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800a6d8:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800a6dc:	460d      	mov	r5, r1
 800a6de:	4616      	mov	r6, r2
 800a6e0:	b323      	cbz	r3, 800a72c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a6e2:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800a6e4:	b314      	cbz	r4, 800a72c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800a6e6:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800a6ea:	b1eb      	cbz	r3, 800a728 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a6ec:	6828      	ldr	r0, [r5, #0]
 800a6ee:	6869      	ldr	r1, [r5, #4]
 800a6f0:	466b      	mov	r3, sp
 800a6f2:	c303      	stmia	r3!, {r0, r1}
 800a6f4:	4668      	mov	r0, sp
 800a6f6:	1d21      	adds	r1, r4, #4
 800a6f8:	f7ff ff16 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800a6fc:	4668      	mov	r0, sp
 800a6fe:	f7ff ff57 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800a702:	b988      	cbnz	r0, 800a728 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800a704:	f8bd 3000 	ldrh.w	r3, [sp]
 800a708:	88a2      	ldrh	r2, [r4, #4]
 800a70a:	1a9b      	subs	r3, r3, r2
 800a70c:	f8ad 3000 	strh.w	r3, [sp]
 800a710:	88e2      	ldrh	r2, [r4, #6]
 800a712:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800a716:	1a9b      	subs	r3, r3, r2
 800a718:	f8ad 3002 	strh.w	r3, [sp, #2]
 800a71c:	6823      	ldr	r3, [r4, #0]
 800a71e:	4632      	mov	r2, r6
 800a720:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a722:	4669      	mov	r1, sp
 800a724:	4620      	mov	r0, r4
 800a726:	4798      	blx	r3
 800a728:	69a4      	ldr	r4, [r4, #24]
 800a72a:	e7db      	b.n	800a6e4 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800a72c:	b002      	add	sp, #8
 800a72e:	bd70      	pop	{r4, r5, r6, pc}

0800a730 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800a730:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800a734:	4770      	bx	lr

0800a736 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800a736:	b513      	push	{r0, r1, r4, lr}
 800a738:	6803      	ldr	r3, [r0, #0]
 800a73a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 800a73e:	2300      	movs	r3, #0
 800a740:	e9cd 3300 	strd	r3, r3, [sp]
 800a744:	466b      	mov	r3, sp
 800a746:	47a0      	blx	r4
 800a748:	b002      	add	sp, #8
 800a74a:	bd10      	pop	{r4, pc}

0800a74c <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800a74c:	2301      	movs	r3, #1
 800a74e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a752:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a756:	4770      	bx	lr

0800a758 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800a758:	2301      	movs	r3, #1
 800a75a:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800a75e:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800a762:	4770      	bx	lr

0800a764 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800a764:	6843      	ldr	r3, [r0, #4]
 800a766:	2201      	movs	r2, #1
 800a768:	725a      	strb	r2, [r3, #9]
 800a76a:	6840      	ldr	r0, [r0, #4]
 800a76c:	6803      	ldr	r3, [r0, #0]
 800a76e:	691b      	ldr	r3, [r3, #16]
 800a770:	4718      	bx	r3

0800a772 <_ZN8touchgfx3HAL8flushDMAEv>:
 800a772:	6840      	ldr	r0, [r0, #4]
 800a774:	6803      	ldr	r3, [r0, #0]
 800a776:	689b      	ldr	r3, [r3, #8]
 800a778:	4718      	bx	r3
	...

0800a77c <_ZN8touchgfx3HAL10beginFrameEv>:
 800a77c:	4b04      	ldr	r3, [pc, #16]	; (800a790 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800a77e:	781b      	ldrb	r3, [r3, #0]
 800a780:	b123      	cbz	r3, 800a78c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800a782:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800a786:	f080 0001 	eor.w	r0, r0, #1
 800a78a:	4770      	bx	lr
 800a78c:	2001      	movs	r0, #1
 800a78e:	4770      	bx	lr
 800a790:	2000143a 	.word	0x2000143a

0800a794 <_ZN8touchgfx3HAL8endFrameEv>:
 800a794:	b510      	push	{r4, lr}
 800a796:	4604      	mov	r4, r0
 800a798:	6840      	ldr	r0, [r0, #4]
 800a79a:	6803      	ldr	r3, [r0, #0]
 800a79c:	689b      	ldr	r3, [r3, #8]
 800a79e:	4798      	blx	r3
 800a7a0:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800a7a4:	b113      	cbz	r3, 800a7ac <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800a7a6:	2301      	movs	r3, #1
 800a7a8:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800a7ac:	bd10      	pop	{r4, pc}

0800a7ae <_ZN8touchgfx3HAL9taskEntryEv>:
 800a7ae:	b508      	push	{r3, lr}
 800a7b0:	6803      	ldr	r3, [r0, #0]
 800a7b2:	4604      	mov	r4, r0
 800a7b4:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a7b6:	4798      	blx	r3
 800a7b8:	6823      	ldr	r3, [r4, #0]
 800a7ba:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a7bc:	4620      	mov	r0, r4
 800a7be:	4798      	blx	r3
 800a7c0:	f7fd fec4 	bl	800854c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 800a7c4:	6823      	ldr	r3, [r4, #0]
 800a7c6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a7c8:	e7f8      	b.n	800a7bc <_ZN8touchgfx3HAL9taskEntryEv+0xe>
	...

0800a7cc <_ZN8touchgfx3HAL4tickEv>:
 800a7cc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800a7ce:	6803      	ldr	r3, [r0, #0]
 800a7d0:	4d5c      	ldr	r5, [pc, #368]	; (800a944 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800a7d2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800a7d6:	4604      	mov	r4, r0
 800a7d8:	4798      	blx	r3
 800a7da:	2800      	cmp	r0, #0
 800a7dc:	f000 8097 	beq.w	800a90e <_ZN8touchgfx3HAL4tickEv+0x142>
 800a7e0:	2001      	movs	r0, #1
 800a7e2:	f7fd fbd1 	bl	8007f88 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800a7e6:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800a7ea:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a7ee:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800a7f2:	2600      	movs	r6, #0
 800a7f4:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800a7f8:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800a7fc:	b133      	cbz	r3, 800a80c <_ZN8touchgfx3HAL4tickEv+0x40>
 800a7fe:	6823      	ldr	r3, [r4, #0]
 800a800:	4620      	mov	r0, r4
 800a802:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800a806:	4798      	blx	r3
 800a808:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800a80c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800a810:	6862      	ldr	r2, [r4, #4]
 800a812:	f083 0301 	eor.w	r3, r3, #1
 800a816:	7253      	strb	r3, [r2, #9]
 800a818:	2601      	movs	r6, #1
 800a81a:	702e      	strb	r6, [r5, #0]
 800a81c:	f002 fb48 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800a820:	6803      	ldr	r3, [r0, #0]
 800a822:	4631      	mov	r1, r6
 800a824:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a826:	4798      	blx	r3
 800a828:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a82c:	b90b      	cbnz	r3, 800a832 <_ZN8touchgfx3HAL4tickEv+0x66>
 800a82e:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800a832:	f002 fb3d 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800a836:	6803      	ldr	r3, [r0, #0]
 800a838:	695b      	ldr	r3, [r3, #20]
 800a83a:	4798      	blx	r3
 800a83c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a83e:	6803      	ldr	r3, [r0, #0]
 800a840:	691b      	ldr	r3, [r3, #16]
 800a842:	4798      	blx	r3
 800a844:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800a848:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800a84c:	3b01      	subs	r3, #1
 800a84e:	b2db      	uxtb	r3, r3
 800a850:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800a854:	b10a      	cbz	r2, 800a85a <_ZN8touchgfx3HAL4tickEv+0x8e>
 800a856:	2b00      	cmp	r3, #0
 800a858:	d1eb      	bne.n	800a832 <_ZN8touchgfx3HAL4tickEv+0x66>
 800a85a:	4a3b      	ldr	r2, [pc, #236]	; (800a948 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800a85c:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800a860:	7813      	ldrb	r3, [r2, #0]
 800a862:	3301      	adds	r3, #1
 800a864:	b25b      	sxtb	r3, r3
 800a866:	4299      	cmp	r1, r3
 800a868:	7013      	strb	r3, [r2, #0]
 800a86a:	dc10      	bgt.n	800a88e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a86c:	68e0      	ldr	r0, [r4, #12]
 800a86e:	2300      	movs	r3, #0
 800a870:	7013      	strb	r3, [r2, #0]
 800a872:	6803      	ldr	r3, [r0, #0]
 800a874:	aa03      	add	r2, sp, #12
 800a876:	68db      	ldr	r3, [r3, #12]
 800a878:	a902      	add	r1, sp, #8
 800a87a:	4798      	blx	r3
 800a87c:	6823      	ldr	r3, [r4, #0]
 800a87e:	2800      	cmp	r0, #0
 800a880:	d051      	beq.n	800a926 <_ZN8touchgfx3HAL4tickEv+0x15a>
 800a882:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800a886:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800a88a:	4620      	mov	r0, r4
 800a88c:	4798      	blx	r3
 800a88e:	6960      	ldr	r0, [r4, #20]
 800a890:	2300      	movs	r3, #0
 800a892:	f88d 3007 	strb.w	r3, [sp, #7]
 800a896:	b158      	cbz	r0, 800a8b0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a898:	6803      	ldr	r3, [r0, #0]
 800a89a:	f10d 0107 	add.w	r1, sp, #7
 800a89e:	68db      	ldr	r3, [r3, #12]
 800a8a0:	4798      	blx	r3
 800a8a2:	b128      	cbz	r0, 800a8b0 <_ZN8touchgfx3HAL4tickEv+0xe4>
 800a8a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800a8a6:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800a8aa:	6803      	ldr	r3, [r0, #0]
 800a8ac:	68db      	ldr	r3, [r3, #12]
 800a8ae:	4798      	blx	r3
 800a8b0:	f104 001c 	add.w	r0, r4, #28
 800a8b4:	f010 f86a 	bl	801a98c <_ZN8touchgfx8Gestures4tickEv>
 800a8b8:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800a8bc:	b30b      	cbz	r3, 800a902 <_ZN8touchgfx3HAL4tickEv+0x136>
 800a8be:	6920      	ldr	r0, [r4, #16]
 800a8c0:	6803      	ldr	r3, [r0, #0]
 800a8c2:	691b      	ldr	r3, [r3, #16]
 800a8c4:	4798      	blx	r3
 800a8c6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a8c8:	4606      	mov	r6, r0
 800a8ca:	b903      	cbnz	r3, 800a8ce <_ZN8touchgfx3HAL4tickEv+0x102>
 800a8cc:	6720      	str	r0, [r4, #112]	; 0x70
 800a8ce:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a8d0:	4a1e      	ldr	r2, [pc, #120]	; (800a94c <_ZN8touchgfx3HAL4tickEv+0x180>)
 800a8d2:	1af3      	subs	r3, r6, r3
 800a8d4:	4293      	cmp	r3, r2
 800a8d6:	d914      	bls.n	800a902 <_ZN8touchgfx3HAL4tickEv+0x136>
 800a8d8:	6920      	ldr	r0, [r4, #16]
 800a8da:	6803      	ldr	r3, [r0, #0]
 800a8dc:	699b      	ldr	r3, [r3, #24]
 800a8de:	4798      	blx	r3
 800a8e0:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800a8e2:	2264      	movs	r2, #100	; 0x64
 800a8e4:	1af3      	subs	r3, r6, r3
 800a8e6:	fbb3 f3f2 	udiv	r3, r3, r2
 800a8ea:	fbb0 f0f3 	udiv	r0, r0, r3
 800a8ee:	2800      	cmp	r0, #0
 800a8f0:	dc1e      	bgt.n	800a930 <_ZN8touchgfx3HAL4tickEv+0x164>
 800a8f2:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800a8f6:	6920      	ldr	r0, [r4, #16]
 800a8f8:	6803      	ldr	r3, [r0, #0]
 800a8fa:	2100      	movs	r1, #0
 800a8fc:	69db      	ldr	r3, [r3, #28]
 800a8fe:	4798      	blx	r3
 800a900:	6726      	str	r6, [r4, #112]	; 0x70
 800a902:	f002 fad5 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800a906:	6803      	ldr	r3, [r0, #0]
 800a908:	2100      	movs	r1, #0
 800a90a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800a90c:	4798      	blx	r3
 800a90e:	6823      	ldr	r3, [r4, #0]
 800a910:	4620      	mov	r0, r4
 800a912:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800a916:	4798      	blx	r3
 800a918:	2001      	movs	r0, #1
 800a91a:	f7fd fb40 	bl	8007f9e <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800a91e:	2300      	movs	r3, #0
 800a920:	702b      	strb	r3, [r5, #0]
 800a922:	b004      	add	sp, #16
 800a924:	bd70      	pop	{r4, r5, r6, pc}
 800a926:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800a92a:	4620      	mov	r0, r4
 800a92c:	4798      	blx	r3
 800a92e:	e7ae      	b.n	800a88e <_ZN8touchgfx3HAL4tickEv+0xc2>
 800a930:	2863      	cmp	r0, #99	; 0x63
 800a932:	bfcb      	itete	gt
 800a934:	2300      	movgt	r3, #0
 800a936:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800a93a:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800a93e:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800a942:	e7d8      	b.n	800a8f6 <_ZN8touchgfx3HAL4tickEv+0x12a>
 800a944:	20001440 	.word	0x20001440
 800a948:	20001441 	.word	0x20001441
 800a94c:	05f5e100 	.word	0x05f5e100

0800a950 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800a950:	f7fd bdcc 	b.w	80084ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800a954 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800a954:	6581      	str	r1, [r0, #88]	; 0x58
 800a956:	301c      	adds	r0, #28
 800a958:	f010 b816 	b.w	801a988 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800a95c <_ZN8touchgfx3HAL5touchEll>:
 800a95c:	b530      	push	{r4, r5, lr}
 800a95e:	b087      	sub	sp, #28
 800a960:	4604      	mov	r4, r0
 800a962:	a804      	add	r0, sp, #16
 800a964:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800a968:	f002 f844 	bl	800c9f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800a96c:	9b04      	ldr	r3, [sp, #16]
 800a96e:	f8ad 300c 	strh.w	r3, [sp, #12]
 800a972:	a906      	add	r1, sp, #24
 800a974:	9b05      	ldr	r3, [sp, #20]
 800a976:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800a97a:	a803      	add	r0, sp, #12
 800a97c:	f002 f888 	bl	800ca90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800a980:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800a984:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800a988:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800a98c:	f104 001c 	add.w	r0, r4, #28
 800a990:	b189      	cbz	r1, 800a9b6 <_ZN8touchgfx3HAL5touchEll+0x5a>
 800a992:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800a996:	9300      	str	r3, [sp, #0]
 800a998:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800a99c:	4613      	mov	r3, r2
 800a99e:	462a      	mov	r2, r5
 800a9a0:	f010 f802 	bl	801a9a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800a9a4:	b128      	cbz	r0, 800a9b2 <_ZN8touchgfx3HAL5touchEll+0x56>
 800a9a6:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800a9aa:	65e3      	str	r3, [r4, #92]	; 0x5c
 800a9ac:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800a9b0:	6623      	str	r3, [r4, #96]	; 0x60
 800a9b2:	b007      	add	sp, #28
 800a9b4:	bd30      	pop	{r4, r5, pc}
 800a9b6:	f010 f83b 	bl	801aa30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800a9ba:	2301      	movs	r3, #1
 800a9bc:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800a9c0:	e7f1      	b.n	800a9a6 <_ZN8touchgfx3HAL5touchEll+0x4a>

0800a9c2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800a9c2:	b570      	push	{r4, r5, r6, lr}
 800a9c4:	2b00      	cmp	r3, #0
 800a9c6:	d050      	beq.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a9c8:	ea81 0002 	eor.w	r0, r1, r2
 800a9cc:	07c6      	lsls	r6, r0, #31
 800a9ce:	d508      	bpl.n	800a9e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800a9d0:	3a01      	subs	r2, #1
 800a9d2:	18cc      	adds	r4, r1, r3
 800a9d4:	42a1      	cmp	r1, r4
 800a9d6:	d048      	beq.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800a9d8:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800a9dc:	f801 0b01 	strb.w	r0, [r1], #1
 800a9e0:	e7f8      	b.n	800a9d4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800a9e2:	07d5      	lsls	r5, r2, #31
 800a9e4:	bf42      	ittt	mi
 800a9e6:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800a9ea:	f801 0b01 	strbmi.w	r0, [r1], #1
 800a9ee:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800a9f2:	2b01      	cmp	r3, #1
 800a9f4:	d915      	bls.n	800aa22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800a9f6:	ea82 0001 	eor.w	r0, r2, r1
 800a9fa:	0784      	lsls	r4, r0, #30
 800a9fc:	d02d      	beq.n	800aa5a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800a9fe:	1e94      	subs	r4, r2, #2
 800aa00:	4608      	mov	r0, r1
 800aa02:	18ce      	adds	r6, r1, r3
 800aa04:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 800aa08:	f820 5b02 	strh.w	r5, [r0], #2
 800aa0c:	1a35      	subs	r5, r6, r0
 800aa0e:	2d01      	cmp	r5, #1
 800aa10:	d8f8      	bhi.n	800aa04 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 800aa12:	1e98      	subs	r0, r3, #2
 800aa14:	f020 0001 	bic.w	r0, r0, #1
 800aa18:	3002      	adds	r0, #2
 800aa1a:	4401      	add	r1, r0
 800aa1c:	4402      	add	r2, r0
 800aa1e:	f003 0301 	and.w	r3, r3, #1
 800aa22:	1f14      	subs	r4, r2, #4
 800aa24:	4608      	mov	r0, r1
 800aa26:	18ce      	adds	r6, r1, r3
 800aa28:	1a35      	subs	r5, r6, r0
 800aa2a:	2d03      	cmp	r5, #3
 800aa2c:	d810      	bhi.n	800aa50 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 800aa2e:	089c      	lsrs	r4, r3, #2
 800aa30:	00a0      	lsls	r0, r4, #2
 800aa32:	4401      	add	r1, r0
 800aa34:	3801      	subs	r0, #1
 800aa36:	4402      	add	r2, r0
 800aa38:	f06f 0003 	mvn.w	r0, #3
 800aa3c:	fb00 3404 	mla	r4, r0, r4, r3
 800aa40:	440c      	add	r4, r1
 800aa42:	42a1      	cmp	r1, r4
 800aa44:	d011      	beq.n	800aa6a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 800aa46:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 800aa4a:	f801 3b01 	strb.w	r3, [r1], #1
 800aa4e:	e7f8      	b.n	800aa42 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 800aa50:	f854 5f04 	ldr.w	r5, [r4, #4]!
 800aa54:	f840 5b04 	str.w	r5, [r0], #4
 800aa58:	e7e6      	b.n	800aa28 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 800aa5a:	0790      	lsls	r0, r2, #30
 800aa5c:	d0e1      	beq.n	800aa22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800aa5e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800aa62:	f821 0b02 	strh.w	r0, [r1], #2
 800aa66:	3b02      	subs	r3, #2
 800aa68:	e7db      	b.n	800aa22 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 800aa6a:	2001      	movs	r0, #1
 800aa6c:	bd70      	pop	{r4, r5, r6, pc}

0800aa6e <_ZN8touchgfx3HAL7noTouchEv>:
 800aa6e:	b510      	push	{r4, lr}
 800aa70:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800aa74:	4604      	mov	r4, r0
 800aa76:	b153      	cbz	r3, 800aa8e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800aa78:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800aa7c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800aa80:	2101      	movs	r1, #1
 800aa82:	301c      	adds	r0, #28
 800aa84:	f00f ffd4 	bl	801aa30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800aa88:	2300      	movs	r3, #0
 800aa8a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800aa8e:	bd10      	pop	{r4, pc}

0800aa90 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800aa90:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800aa94:	4605      	mov	r5, r0
 800aa96:	6980      	ldr	r0, [r0, #24]
 800aa98:	b085      	sub	sp, #20
 800aa9a:	460f      	mov	r7, r1
 800aa9c:	4690      	mov	r8, r2
 800aa9e:	4699      	mov	r9, r3
 800aaa0:	b930      	cbnz	r0, 800aab0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 800aaa2:	4b1f      	ldr	r3, [pc, #124]	; (800ab20 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800aaa4:	4a1f      	ldr	r2, [pc, #124]	; (800ab24 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800aaa6:	f44f 7198 	mov.w	r1, #304	; 0x130
 800aaaa:	481f      	ldr	r0, [pc, #124]	; (800ab28 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x98>)
 800aaac:	f010 fe20 	bl	801b6f0 <__assert_func>
 800aab0:	ac04      	add	r4, sp, #16
 800aab2:	2600      	movs	r6, #0
 800aab4:	f844 6d04 	str.w	r6, [r4, #-4]!
 800aab8:	6806      	ldr	r6, [r0, #0]
 800aaba:	9401      	str	r4, [sp, #4]
 800aabc:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800aac0:	9400      	str	r4, [sp, #0]
 800aac2:	6834      	ldr	r4, [r6, #0]
 800aac4:	47a0      	blx	r4
 800aac6:	4c19      	ldr	r4, [pc, #100]	; (800ab2c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x9c>)
 800aac8:	4606      	mov	r6, r0
 800aaca:	f8a4 9000 	strh.w	r9, [r4]
 800aace:	f7fb ff91 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800aad2:	6803      	ldr	r3, [r0, #0]
 800aad4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aad6:	4798      	blx	r3
 800aad8:	280c      	cmp	r0, #12
 800aada:	d80f      	bhi.n	800aafc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800aadc:	e8df f000 	tbb	[pc, r0]
 800aae0:	1b1b1207 	.word	0x1b1b1207
 800aae4:	1b1b1b1b 	.word	0x1b1b1b1b
 800aae8:	1b1b1b1b 	.word	0x1b1b1b1b
 800aaec:	1b          	.byte	0x1b
 800aaed:	00          	.byte	0x00
 800aaee:	8823      	ldrh	r3, [r4, #0]
 800aaf0:	fb08 7203 	mla	r2, r8, r3, r7
 800aaf4:	9b03      	ldr	r3, [sp, #12]
 800aaf6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800aafa:	63eb      	str	r3, [r5, #60]	; 0x3c
 800aafc:	4630      	mov	r0, r6
 800aafe:	b005      	add	sp, #20
 800ab00:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab04:	8822      	ldrh	r2, [r4, #0]
 800ab06:	9b03      	ldr	r3, [sp, #12]
 800ab08:	fb08 7202 	mla	r2, r8, r2, r7
 800ab0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800ab10:	1a9a      	subs	r2, r3, r2
 800ab12:	63ea      	str	r2, [r5, #60]	; 0x3c
 800ab14:	e7f2      	b.n	800aafc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6c>
 800ab16:	4b06      	ldr	r3, [pc, #24]	; (800ab30 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0xa0>)
 800ab18:	4a02      	ldr	r2, [pc, #8]	; (800ab24 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 800ab1a:	f240 114d 	movw	r1, #333	; 0x14d
 800ab1e:	e7c4      	b.n	800aaaa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 800ab20:	0801d8ed 	.word	0x0801d8ed
 800ab24:	0801dbfe 	.word	0x0801dbfe
 800ab28:	0801d932 	.word	0x0801d932
 800ab2c:	20001436 	.word	0x20001436
 800ab30:	0801d958 	.word	0x0801d958

0800ab34 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 800ab34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ab38:	4698      	mov	r8, r3
 800ab3a:	6803      	ldr	r3, [r0, #0]
 800ab3c:	6c5d      	ldr	r5, [r3, #68]	; 0x44
 800ab3e:	4b0f      	ldr	r3, [pc, #60]	; (800ab7c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 800ab40:	b087      	sub	sp, #28
 800ab42:	f8b3 9000 	ldrh.w	r9, [r3]
 800ab46:	460e      	mov	r6, r1
 800ab48:	4617      	mov	r7, r2
 800ab4a:	4604      	mov	r4, r0
 800ab4c:	f7fb ff52 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800ab50:	6803      	ldr	r3, [r0, #0]
 800ab52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ab54:	4798      	blx	r3
 800ab56:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800ab5a:	9302      	str	r3, [sp, #8]
 800ab5c:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800ab60:	9301      	str	r3, [sp, #4]
 800ab62:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800ab66:	9300      	str	r3, [sp, #0]
 800ab68:	e9cd 9003 	strd	r9, r0, [sp, #12]
 800ab6c:	4643      	mov	r3, r8
 800ab6e:	463a      	mov	r2, r7
 800ab70:	4631      	mov	r1, r6
 800ab72:	4620      	mov	r0, r4
 800ab74:	47a8      	blx	r5
 800ab76:	b007      	add	sp, #28
 800ab78:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ab7c:	20001436 	.word	0x20001436

0800ab80 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800ab80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ab84:	4606      	mov	r6, r0
 800ab86:	b089      	sub	sp, #36	; 0x24
 800ab88:	4610      	mov	r0, r2
 800ab8a:	460c      	mov	r4, r1
 800ab8c:	4691      	mov	r9, r2
 800ab8e:	4698      	mov	r8, r3
 800ab90:	f004 fa68 	bl	800f064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ab94:	2800      	cmp	r0, #0
 800ab96:	f000 8092 	beq.w	800acbe <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x13e>
 800ab9a:	f8df a13c 	ldr.w	sl, [pc, #316]	; 800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>
 800ab9e:	f8df b13c 	ldr.w	fp, [pc, #316]	; 800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>
 800aba2:	f8da 0000 	ldr.w	r0, [sl]
 800aba6:	4f4b      	ldr	r7, [pc, #300]	; (800acd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800aba8:	6802      	ldr	r2, [r0, #0]
 800abaa:	6a12      	ldr	r2, [r2, #32]
 800abac:	4790      	blx	r2
 800abae:	f8da 0000 	ldr.w	r0, [sl]
 800abb2:	6802      	ldr	r2, [r0, #0]
 800abb4:	ad08      	add	r5, sp, #32
 800abb6:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800abb8:	4790      	blx	r2
 800abba:	f825 9d0c 	strh.w	r9, [r5, #-12]!
 800abbe:	f8bb 3000 	ldrh.w	r3, [fp]
 800abc2:	9300      	str	r3, [sp, #0]
 800abc4:	4628      	mov	r0, r5
 800abc6:	883b      	ldrh	r3, [r7, #0]
 800abc8:	9301      	str	r3, [sp, #4]
 800abca:	f004 fb0b 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800abce:	f8ab 0000 	strh.w	r0, [fp]
 800abd2:	4628      	mov	r0, r5
 800abd4:	f004 fb40 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800abd8:	f8da b000 	ldr.w	fp, [sl]
 800abdc:	8038      	strh	r0, [r7, #0]
 800abde:	f8db 303c 	ldr.w	r3, [fp, #60]	; 0x3c
 800abe2:	9302      	str	r3, [sp, #8]
 800abe4:	4648      	mov	r0, r9
 800abe6:	f8db 7040 	ldr.w	r7, [fp, #64]	; 0x40
 800abea:	f004 fa3b 	bl	800f064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800abee:	f8da 2000 	ldr.w	r2, [sl]
 800abf2:	f8cb 0040 	str.w	r0, [fp, #64]	; 0x40
 800abf6:	63d0      	str	r0, [r2, #60]	; 0x3c
 800abf8:	6822      	ldr	r2, [r4, #0]
 800abfa:	f9b4 9004 	ldrsh.w	r9, [r4, #4]
 800abfe:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800ac00:	f9b4 a006 	ldrsh.w	sl, [r4, #6]
 800ac04:	2200      	movs	r2, #0
 800ac06:	4611      	mov	r1, r2
 800ac08:	4620      	mov	r0, r4
 800ac0a:	4798      	blx	r3
 800ac0c:	2201      	movs	r2, #1
 800ac0e:	f894 b025 	ldrb.w	fp, [r4, #37]	; 0x25
 800ac12:	f884 2025 	strb.w	r2, [r4, #37]	; 0x25
 800ac16:	f9b8 1004 	ldrsh.w	r1, [r8, #4]
 800ac1a:	1d22      	adds	r2, r4, #4
 800ac1c:	2900      	cmp	r1, #0
 800ac1e:	d051      	beq.n	800acc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800ac20:	f9b8 1006 	ldrsh.w	r1, [r8, #6]
 800ac24:	2900      	cmp	r1, #0
 800ac26:	d04d      	beq.n	800acc4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x144>
 800ac28:	6810      	ldr	r0, [r2, #0]
 800ac2a:	6851      	ldr	r1, [r2, #4]
 800ac2c:	f10d 0c18 	add.w	ip, sp, #24
 800ac30:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800ac34:	4641      	mov	r1, r8
 800ac36:	a806      	add	r0, sp, #24
 800ac38:	f7ff fc76 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800ac3c:	4628      	mov	r0, r5
 800ac3e:	f004 fc5d 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac42:	4680      	mov	r8, r0
 800ac44:	f7fb fed6 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800ac48:	6802      	ldr	r2, [r0, #0]
 800ac4a:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800ac4c:	4790      	blx	r2
 800ac4e:	4580      	cmp	r8, r0
 800ac50:	d03d      	beq.n	800acce <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x14e>
 800ac52:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800ac54:	b150      	cbz	r0, 800ac6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800ac56:	4628      	mov	r0, r5
 800ac58:	f004 fc50 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800ac5c:	4605      	mov	r5, r0
 800ac5e:	6cf0      	ldr	r0, [r6, #76]	; 0x4c
 800ac60:	6803      	ldr	r3, [r0, #0]
 800ac62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ac64:	4798      	blx	r3
 800ac66:	1a2b      	subs	r3, r5, r0
 800ac68:	4258      	negs	r0, r3
 800ac6a:	4158      	adcs	r0, r3
 800ac6c:	f886 0076 	strb.w	r0, [r6, #118]	; 0x76
 800ac70:	6822      	ldr	r2, [r4, #0]
 800ac72:	6963      	ldr	r3, [r4, #20]
 800ac74:	9303      	str	r3, [sp, #12]
 800ac76:	2500      	movs	r5, #0
 800ac78:	6165      	str	r5, [r4, #20]
 800ac7a:	4620      	mov	r0, r4
 800ac7c:	6892      	ldr	r2, [r2, #8]
 800ac7e:	a906      	add	r1, sp, #24
 800ac80:	4790      	blx	r2
 800ac82:	9b03      	ldr	r3, [sp, #12]
 800ac84:	6163      	str	r3, [r4, #20]
 800ac86:	f886 5076 	strb.w	r5, [r6, #118]	; 0x76
 800ac8a:	6823      	ldr	r3, [r4, #0]
 800ac8c:	f884 b025 	strb.w	fp, [r4, #37]	; 0x25
 800ac90:	4620      	mov	r0, r4
 800ac92:	4c11      	ldr	r4, [pc, #68]	; (800acd8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x158>)
 800ac94:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ac96:	4652      	mov	r2, sl
 800ac98:	4649      	mov	r1, r9
 800ac9a:	4798      	blx	r3
 800ac9c:	6820      	ldr	r0, [r4, #0]
 800ac9e:	9b02      	ldr	r3, [sp, #8]
 800aca0:	9a00      	ldr	r2, [sp, #0]
 800aca2:	e9c0 370f 	strd	r3, r7, [r0, #60]	; 0x3c
 800aca6:	4b0d      	ldr	r3, [pc, #52]	; (800acdc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15c>)
 800aca8:	801a      	strh	r2, [r3, #0]
 800acaa:	4b0a      	ldr	r3, [pc, #40]	; (800acd4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>)
 800acac:	9a01      	ldr	r2, [sp, #4]
 800acae:	801a      	strh	r2, [r3, #0]
 800acb0:	6803      	ldr	r3, [r0, #0]
 800acb2:	6a1b      	ldr	r3, [r3, #32]
 800acb4:	4798      	blx	r3
 800acb6:	6820      	ldr	r0, [r4, #0]
 800acb8:	6803      	ldr	r3, [r0, #0]
 800acba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800acbc:	4798      	blx	r3
 800acbe:	b009      	add	sp, #36	; 0x24
 800acc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800acc4:	6810      	ldr	r0, [r2, #0]
 800acc6:	6851      	ldr	r1, [r2, #4]
 800acc8:	ab06      	add	r3, sp, #24
 800acca:	c303      	stmia	r3!, {r0, r1}
 800accc:	e7b6      	b.n	800ac3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xbc>
 800acce:	2000      	movs	r0, #0
 800acd0:	e7cc      	b.n	800ac6c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xec>
 800acd2:	bf00      	nop
 800acd4:	20001438 	.word	0x20001438
 800acd8:	2000143c 	.word	0x2000143c
 800acdc:	20001436 	.word	0x20001436

0800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800ace0:	b510      	push	{r4, lr}
 800ace2:	4b07      	ldr	r3, [pc, #28]	; (800ad00 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800ace4:	781b      	ldrb	r3, [r3, #0]
 800ace6:	4604      	mov	r4, r0
 800ace8:	b13b      	cbz	r3, 800acfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acea:	6803      	ldr	r3, [r0, #0]
 800acec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800acee:	4798      	blx	r3
 800acf0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800acf2:	4283      	cmp	r3, r0
 800acf4:	d101      	bne.n	800acfa <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800acf6:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800acf8:	bd10      	pop	{r4, pc}
 800acfa:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800acfc:	e7fc      	b.n	800acf8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800acfe:	bf00      	nop
 800ad00:	2000143a 	.word	0x2000143a

0800ad04 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800ad04:	b510      	push	{r4, lr}
 800ad06:	4b0b      	ldr	r3, [pc, #44]	; (800ad34 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800ad08:	781b      	ldrb	r3, [r3, #0]
 800ad0a:	4604      	mov	r4, r0
 800ad0c:	b95b      	cbnz	r3, 800ad26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ad0e:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800ad12:	2b02      	cmp	r3, #2
 800ad14:	d007      	beq.n	800ad26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ad16:	6840      	ldr	r0, [r0, #4]
 800ad18:	f000 fbc8 	bl	800b4ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800ad1c:	b118      	cbz	r0, 800ad26 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800ad1e:	6862      	ldr	r2, [r4, #4]
 800ad20:	7a53      	ldrb	r3, [r2, #9]
 800ad22:	2b00      	cmp	r3, #0
 800ad24:	d0fc      	beq.n	800ad20 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800ad26:	f7fd fbcb 	bl	80084c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800ad2a:	4620      	mov	r0, r4
 800ad2c:	f7ff ffd8 	bl	800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ad30:	bd10      	pop	{r4, pc}
 800ad32:	bf00      	nop
 800ad34:	2000143a 	.word	0x2000143a

0800ad38 <_ZN8touchgfx3HAL10initializeEv>:
 800ad38:	b510      	push	{r4, lr}
 800ad3a:	4604      	mov	r4, r0
 800ad3c:	f7fd fbae 	bl	800849c <_ZN8touchgfx10OSWrappers10initializeEv>
 800ad40:	6860      	ldr	r0, [r4, #4]
 800ad42:	6803      	ldr	r3, [r0, #0]
 800ad44:	68db      	ldr	r3, [r3, #12]
 800ad46:	4798      	blx	r3
 800ad48:	68e0      	ldr	r0, [r4, #12]
 800ad4a:	6803      	ldr	r3, [r0, #0]
 800ad4c:	689b      	ldr	r3, [r3, #8]
 800ad4e:	4798      	blx	r3
 800ad50:	6823      	ldr	r3, [r4, #0]
 800ad52:	4620      	mov	r0, r4
 800ad54:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800ad56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ad5a:	4718      	bx	r3

0800ad5c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800ad5c:	b508      	push	{r3, lr}
 800ad5e:	290c      	cmp	r1, #12
 800ad60:	d817      	bhi.n	800ad92 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 800ad62:	e8df f001 	tbb	[pc, r1]
 800ad66:	090b      	.short	0x090b
 800ad68:	0d0d0d07 	.word	0x0d0d0d07
 800ad6c:	1414140d 	.word	0x1414140d
 800ad70:	1414      	.short	0x1414
 800ad72:	0d          	.byte	0x0d
 800ad73:	00          	.byte	0x00
 800ad74:	2020      	movs	r0, #32
 800ad76:	bd08      	pop	{r3, pc}
 800ad78:	2018      	movs	r0, #24
 800ad7a:	e7fc      	b.n	800ad76 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ad7c:	2010      	movs	r0, #16
 800ad7e:	e7fa      	b.n	800ad76 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ad80:	4b05      	ldr	r3, [pc, #20]	; (800ad98 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 800ad82:	4a06      	ldr	r2, [pc, #24]	; (800ad9c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 800ad84:	4806      	ldr	r0, [pc, #24]	; (800ada0 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 800ad86:	f44f 710c 	mov.w	r1, #560	; 0x230
 800ad8a:	f010 fcb1 	bl	801b6f0 <__assert_func>
 800ad8e:	2008      	movs	r0, #8
 800ad90:	e7f1      	b.n	800ad76 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ad92:	2000      	movs	r0, #0
 800ad94:	e7ef      	b.n	800ad76 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800ad96:	bf00      	nop
 800ad98:	0801da2b 	.word	0x0801da2b
 800ad9c:	0801ddc0 	.word	0x0801ddc0
 800ada0:	0801d932 	.word	0x0801d932

0800ada4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 800ada4:	b570      	push	{r4, r5, r6, lr}
 800ada6:	460d      	mov	r5, r1
 800ada8:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800adac:	4616      	mov	r6, r2
 800adae:	461c      	mov	r4, r3
 800adb0:	f7ff ffd4 	bl	800ad5c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 800adb4:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 800adb8:	10c0      	asrs	r0, r0, #3
 800adba:	fb06 5101 	mla	r1, r6, r1, r5
 800adbe:	fb00 4001 	mla	r0, r0, r1, r4
 800adc2:	bd70      	pop	{r4, r5, r6, pc}

0800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 800adc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800adc8:	b08a      	sub	sp, #40	; 0x28
 800adca:	f04f 0c00 	mov.w	ip, #0
 800adce:	f89d 8064 	ldrb.w	r8, [sp, #100]	; 0x64
 800add2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800add6:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800adda:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 800adde:	f89d 7068 	ldrb.w	r7, [sp, #104]	; 0x68
 800ade2:	f8cd c020 	str.w	ip, [sp, #32]
 800ade6:	f1b8 0f02 	cmp.w	r8, #2
 800adea:	4604      	mov	r4, r0
 800adec:	469a      	mov	sl, r3
 800adee:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 800adf2:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800adf6:	d030      	beq.n	800ae5a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x96>
 800adf8:	2bff      	cmp	r3, #255	; 0xff
 800adfa:	d12c      	bne.n	800ae56 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x92>
 800adfc:	4560      	cmp	r0, ip
 800adfe:	bf14      	ite	ne
 800ae00:	2004      	movne	r0, #4
 800ae02:	2001      	moveq	r0, #1
 800ae04:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800ae08:	9204      	str	r2, [sp, #16]
 800ae0a:	4620      	mov	r0, r4
 800ae0c:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 800ae10:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ae14:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800ae18:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ae1c:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ae20:	f7ff ff5e 	bl	800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ae24:	e9cd 9700 	strd	r9, r7, [sp]
 800ae28:	4603      	mov	r3, r0
 800ae2a:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 800ae2e:	4651      	mov	r1, sl
 800ae30:	4620      	mov	r0, r4
 800ae32:	f7ff ffb7 	bl	800ada4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800ae36:	f8ad 901e 	strh.w	r9, [sp, #30]
 800ae3a:	9005      	str	r0, [sp, #20]
 800ae3c:	f88d 8025 	strb.w	r8, [sp, #37]	; 0x25
 800ae40:	f88d 7026 	strb.w	r7, [sp, #38]	; 0x26
 800ae44:	b106      	cbz	r6, 800ae48 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x84>
 800ae46:	b98d      	cbnz	r5, 800ae6c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa8>
 800ae48:	4b12      	ldr	r3, [pc, #72]	; (800ae94 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd0>)
 800ae4a:	4a13      	ldr	r2, [pc, #76]	; (800ae98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ae4c:	f44f 71d8 	mov.w	r1, #432	; 0x1b0
 800ae50:	4812      	ldr	r0, [pc, #72]	; (800ae9c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800ae52:	f010 fc4d 	bl	801b6f0 <__assert_func>
 800ae56:	2004      	movs	r0, #4
 800ae58:	e7d4      	b.n	800ae04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ae5a:	2bff      	cmp	r3, #255	; 0xff
 800ae5c:	d104      	bne.n	800ae68 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xa4>
 800ae5e:	2800      	cmp	r0, #0
 800ae60:	bf14      	ite	ne
 800ae62:	2040      	movne	r0, #64	; 0x40
 800ae64:	2020      	moveq	r0, #32
 800ae66:	e7cd      	b.n	800ae04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ae68:	2040      	movs	r0, #64	; 0x40
 800ae6a:	e7cb      	b.n	800ae04 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x40>
 800ae6c:	6823      	ldr	r3, [r4, #0]
 800ae6e:	9d02      	ldr	r5, [sp, #8]
 800ae70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ae72:	4620      	mov	r0, r4
 800ae74:	4798      	blx	r3
 800ae76:	4228      	tst	r0, r5
 800ae78:	d104      	bne.n	800ae84 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc0>
 800ae7a:	4b09      	ldr	r3, [pc, #36]	; (800aea0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 800ae7c:	4a06      	ldr	r2, [pc, #24]	; (800ae98 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd4>)
 800ae7e:	f240 11b1 	movw	r1, #433	; 0x1b1
 800ae82:	e7e5      	b.n	800ae50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x8c>
 800ae84:	6860      	ldr	r0, [r4, #4]
 800ae86:	6803      	ldr	r3, [r0, #0]
 800ae88:	a902      	add	r1, sp, #8
 800ae8a:	685b      	ldr	r3, [r3, #4]
 800ae8c:	4798      	blx	r3
 800ae8e:	b00a      	add	sp, #40	; 0x28
 800ae90:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800ae94:	0801d9ae 	.word	0x0801d9ae
 800ae98:	0801dc62 	.word	0x0801dc62
 800ae9c:	0801d932 	.word	0x0801d932
 800aea0:	0801d9e6 	.word	0x0801d9e6

0800aea4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 800aea4:	b510      	push	{r4, lr}
 800aea6:	b08a      	sub	sp, #40	; 0x28
 800aea8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 800aeac:	9408      	str	r4, [sp, #32]
 800aeae:	f89d 4048 	ldrb.w	r4, [sp, #72]	; 0x48
 800aeb2:	9407      	str	r4, [sp, #28]
 800aeb4:	f8bd 4044 	ldrh.w	r4, [sp, #68]	; 0x44
 800aeb8:	9406      	str	r4, [sp, #24]
 800aeba:	f89d 4040 	ldrb.w	r4, [sp, #64]	; 0x40
 800aebe:	9405      	str	r4, [sp, #20]
 800aec0:	f89d 403c 	ldrb.w	r4, [sp, #60]	; 0x3c
 800aec4:	9404      	str	r4, [sp, #16]
 800aec6:	f8bd 4038 	ldrh.w	r4, [sp, #56]	; 0x38
 800aeca:	9403      	str	r4, [sp, #12]
 800aecc:	f8bd 4034 	ldrh.w	r4, [sp, #52]	; 0x34
 800aed0:	9402      	str	r4, [sp, #8]
 800aed2:	f8bd 4030 	ldrh.w	r4, [sp, #48]	; 0x30
 800aed6:	e9cd 3400 	strd	r3, r4, [sp]
 800aeda:	4613      	mov	r3, r2
 800aedc:	2200      	movs	r2, #0
 800aede:	f7ff ff71 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800aee2:	b00a      	add	sp, #40	; 0x28
 800aee4:	bd10      	pop	{r4, pc}
	...

0800aee8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 800aee8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800aeea:	b08b      	sub	sp, #44	; 0x2c
 800aeec:	4616      	mov	r6, r2
 800aeee:	460d      	mov	r5, r1
 800aef0:	461f      	mov	r7, r3
 800aef2:	4604      	mov	r4, r0
 800aef4:	f7fb fd7e 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800aef8:	6803      	ldr	r3, [r0, #0]
 800aefa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800aefc:	4798      	blx	r3
 800aefe:	e9cd 0007 	strd	r0, r0, [sp, #28]
 800af02:	4b0d      	ldr	r3, [pc, #52]	; (800af38 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x50>)
 800af04:	881b      	ldrh	r3, [r3, #0]
 800af06:	9306      	str	r3, [sp, #24]
 800af08:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800af0c:	9305      	str	r3, [sp, #20]
 800af0e:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800af12:	9304      	str	r3, [sp, #16]
 800af14:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800af18:	9303      	str	r3, [sp, #12]
 800af1a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800af1e:	9302      	str	r3, [sp, #8]
 800af20:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800af24:	2200      	movs	r2, #0
 800af26:	e9cd 7300 	strd	r7, r3, [sp]
 800af2a:	4629      	mov	r1, r5
 800af2c:	4633      	mov	r3, r6
 800af2e:	4620      	mov	r0, r4
 800af30:	f7ff ff48 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800af34:	b00b      	add	sp, #44	; 0x2c
 800af36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800af38:	20001436 	.word	0x20001436

0800af3c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 800af3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800af40:	461f      	mov	r7, r3
 800af42:	4b14      	ldr	r3, [pc, #80]	; (800af94 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 800af44:	b08a      	sub	sp, #40	; 0x28
 800af46:	4616      	mov	r6, r2
 800af48:	f8b3 8000 	ldrh.w	r8, [r3]
 800af4c:	460d      	mov	r5, r1
 800af4e:	4604      	mov	r4, r0
 800af50:	f7fb fd50 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800af54:	6803      	ldr	r3, [r0, #0]
 800af56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800af58:	4798      	blx	r3
 800af5a:	2302      	movs	r3, #2
 800af5c:	e9cd 8306 	strd	r8, r3, [sp, #24]
 800af60:	2301      	movs	r3, #1
 800af62:	9305      	str	r3, [sp, #20]
 800af64:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800af68:	9304      	str	r3, [sp, #16]
 800af6a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800af6e:	9303      	str	r3, [sp, #12]
 800af70:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800af74:	9302      	str	r3, [sp, #8]
 800af76:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800af7a:	9008      	str	r0, [sp, #32]
 800af7c:	e9cd 7300 	strd	r7, r3, [sp]
 800af80:	2200      	movs	r2, #0
 800af82:	4633      	mov	r3, r6
 800af84:	4629      	mov	r1, r5
 800af86:	4620      	mov	r0, r4
 800af88:	f7ff ff1c 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 800af8c:	b00a      	add	sp, #40	; 0x28
 800af8e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800af92:	bf00      	nop
 800af94:	20001436 	.word	0x20001436

0800af98 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800af98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af9c:	b08b      	sub	sp, #44	; 0x2c
 800af9e:	469b      	mov	fp, r3
 800afa0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 800afa4:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800afa8:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 800afac:	2fff      	cmp	r7, #255	; 0xff
 800afae:	bf14      	ite	ne
 800afb0:	2308      	movne	r3, #8
 800afb2:	2302      	moveq	r3, #2
 800afb4:	2600      	movs	r6, #0
 800afb6:	4604      	mov	r4, r0
 800afb8:	4689      	mov	r9, r1
 800afba:	4692      	mov	sl, r2
 800afbc:	e9cd 3602 	strd	r3, r6, [sp, #8]
 800afc0:	9608      	str	r6, [sp, #32]
 800afc2:	f7ff fe8d 	bl	800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800afc6:	e9cd 8500 	strd	r8, r5, [sp]
 800afca:	4603      	mov	r3, r0
 800afcc:	465a      	mov	r2, fp
 800afce:	4651      	mov	r1, sl
 800afd0:	4620      	mov	r0, r4
 800afd2:	f7ff fee7 	bl	800ada4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800afd6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800afda:	f8ad 3018 	strh.w	r3, [sp, #24]
 800afde:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800afe2:	f8ad 301a 	strh.w	r3, [sp, #26]
 800afe6:	6823      	ldr	r3, [r4, #0]
 800afe8:	9005      	str	r0, [sp, #20]
 800afea:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 800afee:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 800aff2:	f8ad 601c 	strh.w	r6, [sp, #28]
 800aff6:	f8ad 801e 	strh.w	r8, [sp, #30]
 800affa:	f8cd 9020 	str.w	r9, [sp, #32]
 800affe:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 800b002:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b004:	9d02      	ldr	r5, [sp, #8]
 800b006:	4620      	mov	r0, r4
 800b008:	4798      	blx	r3
 800b00a:	4228      	tst	r0, r5
 800b00c:	d106      	bne.n	800b01c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 800b00e:	4b07      	ldr	r3, [pc, #28]	; (800b02c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 800b010:	4a07      	ldr	r2, [pc, #28]	; (800b030 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 800b012:	4808      	ldr	r0, [pc, #32]	; (800b034 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 800b014:	f44f 71f4 	mov.w	r1, #488	; 0x1e8
 800b018:	f010 fb6a 	bl	801b6f0 <__assert_func>
 800b01c:	6860      	ldr	r0, [r4, #4]
 800b01e:	6803      	ldr	r3, [r0, #0]
 800b020:	a902      	add	r1, sp, #8
 800b022:	685b      	ldr	r3, [r3, #4]
 800b024:	4798      	blx	r3
 800b026:	b00b      	add	sp, #44	; 0x2c
 800b028:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b02c:	0801d9e6 	.word	0x0801d9e6
 800b030:	0801dd2b 	.word	0x0801dd2b
 800b034:	0801d932 	.word	0x0801d932

0800b038 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800b038:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800b03c:	461f      	mov	r7, r3
 800b03e:	4b0b      	ldr	r3, [pc, #44]	; (800b06c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800b040:	460d      	mov	r5, r1
 800b042:	f8b3 8000 	ldrh.w	r8, [r3]
 800b046:	4616      	mov	r6, r2
 800b048:	4604      	mov	r4, r0
 800b04a:	f7fb fcd3 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800b04e:	6803      	ldr	r3, [r0, #0]
 800b050:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b052:	4798      	blx	r3
 800b054:	463b      	mov	r3, r7
 800b056:	e9cd 8000 	strd	r8, r0, [sp]
 800b05a:	4632      	mov	r2, r6
 800b05c:	4629      	mov	r1, r5
 800b05e:	4620      	mov	r0, r4
 800b060:	f7ff fea0 	bl	800ada4 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800b064:	b002      	add	sp, #8
 800b066:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b06a:	bf00      	nop
 800b06c:	20001436 	.word	0x20001436

0800b070 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 800b070:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b074:	b088      	sub	sp, #32
 800b076:	4698      	mov	r8, r3
 800b078:	2300      	movs	r3, #0
 800b07a:	9306      	str	r3, [sp, #24]
 800b07c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800b080:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 800b084:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800b088:	f8ad 6010 	strh.w	r6, [sp, #16]
 800b08c:	e9cd 3100 	strd	r3, r1, [sp]
 800b090:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800b094:	f8ad 3014 	strh.w	r3, [sp, #20]
 800b098:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 800b09c:	f88d 301c 	strb.w	r3, [sp, #28]
 800b0a0:	4617      	mov	r7, r2
 800b0a2:	4604      	mov	r4, r0
 800b0a4:	f8ad 5012 	strh.w	r5, [sp, #18]
 800b0a8:	f7ff fe1a 	bl	800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b0ac:	4642      	mov	r2, r8
 800b0ae:	4603      	mov	r3, r0
 800b0b0:	4639      	mov	r1, r7
 800b0b2:	4620      	mov	r0, r4
 800b0b4:	f7ff ffc0 	bl	800b038 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b0b8:	4b16      	ldr	r3, [pc, #88]	; (800b114 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 800b0ba:	9003      	str	r0, [sp, #12]
 800b0bc:	881b      	ldrh	r3, [r3, #0]
 800b0be:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b0c2:	f7fb fc97 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800b0c6:	6803      	ldr	r3, [r0, #0]
 800b0c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b0ca:	4798      	blx	r3
 800b0cc:	f88d 001e 	strb.w	r0, [sp, #30]
 800b0d0:	f88d 001d 	strb.w	r0, [sp, #29]
 800b0d4:	b106      	cbz	r6, 800b0d8 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 800b0d6:	b935      	cbnz	r5, 800b0e6 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 800b0d8:	4b0f      	ldr	r3, [pc, #60]	; (800b118 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 800b0da:	4a10      	ldr	r2, [pc, #64]	; (800b11c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b0dc:	f240 11cd 	movw	r1, #461	; 0x1cd
 800b0e0:	480f      	ldr	r0, [pc, #60]	; (800b120 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 800b0e2:	f010 fb05 	bl	801b6f0 <__assert_func>
 800b0e6:	6823      	ldr	r3, [r4, #0]
 800b0e8:	9d00      	ldr	r5, [sp, #0]
 800b0ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b0ec:	4620      	mov	r0, r4
 800b0ee:	4798      	blx	r3
 800b0f0:	4228      	tst	r0, r5
 800b0f2:	d104      	bne.n	800b0fe <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 800b0f4:	4b0b      	ldr	r3, [pc, #44]	; (800b124 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 800b0f6:	4a09      	ldr	r2, [pc, #36]	; (800b11c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 800b0f8:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 800b0fc:	e7f0      	b.n	800b0e0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 800b0fe:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800b100:	6860      	ldr	r0, [r4, #4]
 800b102:	9306      	str	r3, [sp, #24]
 800b104:	6803      	ldr	r3, [r0, #0]
 800b106:	4669      	mov	r1, sp
 800b108:	685b      	ldr	r3, [r3, #4]
 800b10a:	4798      	blx	r3
 800b10c:	b008      	add	sp, #32
 800b10e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b112:	bf00      	nop
 800b114:	20001436 	.word	0x20001436
 800b118:	0801d9ae 	.word	0x0801d9ae
 800b11c:	0801db14 	.word	0x0801db14
 800b120:	0801d932 	.word	0x0801d932
 800b124:	0801d9e6 	.word	0x0801d9e6

0800b128 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800b128:	b570      	push	{r4, r5, r6, lr}
 800b12a:	b08a      	sub	sp, #40	; 0x28
 800b12c:	466b      	mov	r3, sp
 800b12e:	e883 0006 	stmia.w	r3, {r1, r2}
 800b132:	4b20      	ldr	r3, [pc, #128]	; (800b1b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 800b134:	781b      	ldrb	r3, [r3, #0]
 800b136:	4604      	mov	r4, r0
 800b138:	b933      	cbnz	r3, 800b148 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800b13a:	4b1f      	ldr	r3, [pc, #124]	; (800b1b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 800b13c:	4a1f      	ldr	r2, [pc, #124]	; (800b1bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 800b13e:	4820      	ldr	r0, [pc, #128]	; (800b1c0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 800b140:	f240 11f9 	movw	r1, #505	; 0x1f9
 800b144:	f010 fad4 	bl	801b6f0 <__assert_func>
 800b148:	2300      	movs	r3, #0
 800b14a:	9308      	str	r3, [sp, #32]
 800b14c:	2301      	movs	r3, #1
 800b14e:	9302      	str	r3, [sp, #8]
 800b150:	6803      	ldr	r3, [r0, #0]
 800b152:	f8bd 5000 	ldrh.w	r5, [sp]
 800b156:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b158:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 800b15c:	4798      	blx	r3
 800b15e:	4632      	mov	r2, r6
 800b160:	4629      	mov	r1, r5
 800b162:	4603      	mov	r3, r0
 800b164:	4620      	mov	r0, r4
 800b166:	f7ff ff67 	bl	800b038 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b16a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800b16c:	9305      	str	r3, [sp, #20]
 800b16e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b172:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b176:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b17a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b17e:	4b11      	ldr	r3, [pc, #68]	; (800b1c4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 800b180:	9003      	str	r0, [sp, #12]
 800b182:	881b      	ldrh	r3, [r3, #0]
 800b184:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b188:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b18c:	f7fb fc32 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800b190:	6803      	ldr	r3, [r0, #0]
 800b192:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b194:	4798      	blx	r3
 800b196:	23ff      	movs	r3, #255	; 0xff
 800b198:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b19c:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b1a0:	6860      	ldr	r0, [r4, #4]
 800b1a2:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b1a6:	6803      	ldr	r3, [r0, #0]
 800b1a8:	a902      	add	r1, sp, #8
 800b1aa:	685b      	ldr	r3, [r3, #4]
 800b1ac:	4798      	blx	r3
 800b1ae:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800b1b0:	b00a      	add	sp, #40	; 0x28
 800b1b2:	bd70      	pop	{r4, r5, r6, pc}
 800b1b4:	2000143b 	.word	0x2000143b
 800b1b8:	0801d87f 	.word	0x0801d87f
 800b1bc:	0801dbb8 	.word	0x0801dbb8
 800b1c0:	0801d932 	.word	0x0801d932
 800b1c4:	20001436 	.word	0x20001436

0800b1c8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800b1c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800b1ca:	b08b      	sub	sp, #44	; 0x2c
 800b1cc:	466d      	mov	r5, sp
 800b1ce:	e885 0006 	stmia.w	r5, {r1, r2}
 800b1d2:	461d      	mov	r5, r3
 800b1d4:	2300      	movs	r3, #0
 800b1d6:	9308      	str	r3, [sp, #32]
 800b1d8:	2301      	movs	r3, #1
 800b1da:	9302      	str	r3, [sp, #8]
 800b1dc:	6803      	ldr	r3, [r0, #0]
 800b1de:	f8bd 6000 	ldrh.w	r6, [sp]
 800b1e2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800b1e4:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800b1e8:	4604      	mov	r4, r0
 800b1ea:	4798      	blx	r3
 800b1ec:	463a      	mov	r2, r7
 800b1ee:	4631      	mov	r1, r6
 800b1f0:	4603      	mov	r3, r0
 800b1f2:	4620      	mov	r0, r4
 800b1f4:	f7ff ff20 	bl	800b038 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800b1f8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800b1fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800b200:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800b204:	f8ad 301a 	strh.w	r3, [sp, #26]
 800b208:	4b0e      	ldr	r3, [pc, #56]	; (800b244 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 800b20a:	9003      	str	r0, [sp, #12]
 800b20c:	881b      	ldrh	r3, [r3, #0]
 800b20e:	f8ad 301c 	strh.w	r3, [sp, #28]
 800b212:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800b214:	f8ad 301e 	strh.w	r3, [sp, #30]
 800b218:	9505      	str	r5, [sp, #20]
 800b21a:	f7fb fbeb 	bl	80069f4 <_ZN8touchgfx3HAL3lcdEv>
 800b21e:	6803      	ldr	r3, [r0, #0]
 800b220:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b222:	4798      	blx	r3
 800b224:	23ff      	movs	r3, #255	; 0xff
 800b226:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 800b22a:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 800b22e:	6860      	ldr	r0, [r4, #4]
 800b230:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800b234:	6803      	ldr	r3, [r0, #0]
 800b236:	a902      	add	r1, sp, #8
 800b238:	685b      	ldr	r3, [r3, #4]
 800b23a:	4798      	blx	r3
 800b23c:	4628      	mov	r0, r5
 800b23e:	b00b      	add	sp, #44	; 0x2c
 800b240:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800b242:	bf00      	nop
 800b244:	20001436 	.word	0x20001436

0800b248 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800b248:	b570      	push	{r4, r5, r6, lr}
 800b24a:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800b24e:	4604      	mov	r4, r0
 800b250:	b19b      	cbz	r3, 800b27a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800b252:	2002      	movs	r0, #2
 800b254:	f7fc feae 	bl	8007fb4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800b258:	2300      	movs	r3, #0
 800b25a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800b25e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800b262:	6823      	ldr	r3, [r4, #0]
 800b264:	4620      	mov	r0, r4
 800b266:	f8d3 509c 	ldr.w	r5, [r3, #156]	; 0x9c
 800b26a:	f7ff fd39 	bl	800ace0 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800b26e:	462b      	mov	r3, r5
 800b270:	4601      	mov	r1, r0
 800b272:	4620      	mov	r0, r4
 800b274:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b278:	4718      	bx	r3
 800b27a:	bd70      	pop	{r4, r5, r6, pc}

0800b27c <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800b27c:	4770      	bx	lr

0800b27e <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800b27e:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800b282:	1a13      	subs	r3, r2, r0
 800b284:	4258      	negs	r0, r3
 800b286:	4158      	adcs	r0, r3
 800b288:	4770      	bx	lr

0800b28a <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800b28a:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800b28e:	1a9b      	subs	r3, r3, r2
 800b290:	2b00      	cmp	r3, #0
 800b292:	bfdc      	itt	le
 800b294:	6882      	ldrle	r2, [r0, #8]
 800b296:	189b      	addle	r3, r3, r2
 800b298:	2b01      	cmp	r3, #1
 800b29a:	bfcc      	ite	gt
 800b29c:	2000      	movgt	r0, #0
 800b29e:	2001      	movle	r0, #1
 800b2a0:	4770      	bx	lr

0800b2a2 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800b2a2:	6902      	ldr	r2, [r0, #16]
 800b2a4:	6840      	ldr	r0, [r0, #4]
 800b2a6:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 800b2aa:	4770      	bx	lr

0800b2ac <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800b2ac:	6803      	ldr	r3, [r0, #0]
 800b2ae:	691b      	ldr	r3, [r3, #16]
 800b2b0:	4718      	bx	r3

0800b2b2 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800b2b2:	4770      	bx	lr

0800b2b4 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800b2b4:	4770      	bx	lr
	...

0800b2b8 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800b2b8:	b570      	push	{r4, r5, r6, lr}
 800b2ba:	2301      	movs	r3, #1
 800b2bc:	7203      	strb	r3, [r0, #8]
 800b2be:	4604      	mov	r4, r0
 800b2c0:	6840      	ldr	r0, [r0, #4]
 800b2c2:	6803      	ldr	r3, [r0, #0]
 800b2c4:	699b      	ldr	r3, [r3, #24]
 800b2c6:	4798      	blx	r3
 800b2c8:	6803      	ldr	r3, [r0, #0]
 800b2ca:	2b08      	cmp	r3, #8
 800b2cc:	4605      	mov	r5, r0
 800b2ce:	d01e      	beq.n	800b30e <_ZN8touchgfx13DMA_Interface7executeEv+0x56>
 800b2d0:	d80b      	bhi.n	800b2ea <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800b2d2:	2b02      	cmp	r3, #2
 800b2d4:	d027      	beq.n	800b326 <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 800b2d6:	2b04      	cmp	r3, #4
 800b2d8:	d011      	beq.n	800b2fe <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 800b2da:	2b01      	cmp	r3, #1
 800b2dc:	d028      	beq.n	800b330 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b2de:	4b17      	ldr	r3, [pc, #92]	; (800b33c <_ZN8touchgfx13DMA_Interface7executeEv+0x84>)
 800b2e0:	4a17      	ldr	r2, [pc, #92]	; (800b340 <_ZN8touchgfx13DMA_Interface7executeEv+0x88>)
 800b2e2:	4818      	ldr	r0, [pc, #96]	; (800b344 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>)
 800b2e4:	218b      	movs	r1, #139	; 0x8b
 800b2e6:	f010 fa03 	bl	801b6f0 <__assert_func>
 800b2ea:	2b40      	cmp	r3, #64	; 0x40
 800b2ec:	d020      	beq.n	800b330 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b2ee:	d801      	bhi.n	800b2f4 <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800b2f0:	2b20      	cmp	r3, #32
 800b2f2:	e7f3      	b.n	800b2dc <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b2f4:	2b80      	cmp	r3, #128	; 0x80
 800b2f6:	d01b      	beq.n	800b330 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800b2f8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800b2fc:	e7ee      	b.n	800b2dc <_ZN8touchgfx13DMA_Interface7executeEv+0x24>
 800b2fe:	6823      	ldr	r3, [r4, #0]
 800b300:	7f01      	ldrb	r1, [r0, #28]
 800b302:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b304:	4620      	mov	r0, r4
 800b306:	4798      	blx	r3
 800b308:	6823      	ldr	r3, [r4, #0]
 800b30a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800b30c:	e006      	b.n	800b31c <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800b30e:	6823      	ldr	r3, [r4, #0]
 800b310:	7f01      	ldrb	r1, [r0, #28]
 800b312:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b314:	4620      	mov	r0, r4
 800b316:	4798      	blx	r3
 800b318:	6823      	ldr	r3, [r4, #0]
 800b31a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b31c:	4629      	mov	r1, r5
 800b31e:	4620      	mov	r0, r4
 800b320:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b324:	4718      	bx	r3
 800b326:	6823      	ldr	r3, [r4, #0]
 800b328:	4620      	mov	r0, r4
 800b32a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b32c:	4798      	blx	r3
 800b32e:	e7f3      	b.n	800b318 <_ZN8touchgfx13DMA_Interface7executeEv+0x60>
 800b330:	6823      	ldr	r3, [r4, #0]
 800b332:	4620      	mov	r0, r4
 800b334:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b336:	4798      	blx	r3
 800b338:	e7e6      	b.n	800b308 <_ZN8touchgfx13DMA_Interface7executeEv+0x50>
 800b33a:	bf00      	nop
 800b33c:	0801de09 	.word	0x0801de09
 800b340:	0801df18 	.word	0x0801df18
 800b344:	0801de2e 	.word	0x0801de2e

0800b348 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800b348:	b570      	push	{r4, r5, r6, lr}
 800b34a:	4604      	mov	r4, r0
 800b34c:	460e      	mov	r6, r1
 800b34e:	6860      	ldr	r0, [r4, #4]
 800b350:	6803      	ldr	r3, [r0, #0]
 800b352:	685b      	ldr	r3, [r3, #4]
 800b354:	4798      	blx	r3
 800b356:	2800      	cmp	r0, #0
 800b358:	d1f9      	bne.n	800b34e <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800b35a:	4d0b      	ldr	r5, [pc, #44]	; (800b388 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x40>)
 800b35c:	6828      	ldr	r0, [r5, #0]
 800b35e:	6803      	ldr	r3, [r0, #0]
 800b360:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800b362:	4798      	blx	r3
 800b364:	f7fd f8ce 	bl	8008504 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800b368:	6860      	ldr	r0, [r4, #4]
 800b36a:	6803      	ldr	r3, [r0, #0]
 800b36c:	4631      	mov	r1, r6
 800b36e:	689b      	ldr	r3, [r3, #8]
 800b370:	4798      	blx	r3
 800b372:	6823      	ldr	r3, [r4, #0]
 800b374:	4620      	mov	r0, r4
 800b376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b378:	4798      	blx	r3
 800b37a:	6828      	ldr	r0, [r5, #0]
 800b37c:	6803      	ldr	r3, [r0, #0]
 800b37e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b382:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800b384:	4718      	bx	r3
 800b386:	bf00      	nop
 800b388:	2000143c 	.word	0x2000143c

0800b38c <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800b38c:	b508      	push	{r3, lr}
 800b38e:	f7fd f897 	bl	80084c0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800b392:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800b396:	f7fd b8a9 	b.w	80084ec <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800b39a <_ZN8touchgfx13DMA_Interface5startEv>:
 800b39a:	b510      	push	{r4, lr}
 800b39c:	4604      	mov	r4, r0
 800b39e:	6840      	ldr	r0, [r0, #4]
 800b3a0:	6803      	ldr	r3, [r0, #0]
 800b3a2:	681b      	ldr	r3, [r3, #0]
 800b3a4:	4798      	blx	r3
 800b3a6:	b948      	cbnz	r0, 800b3bc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3a8:	7a63      	ldrb	r3, [r4, #9]
 800b3aa:	b13b      	cbz	r3, 800b3bc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3ac:	7a23      	ldrb	r3, [r4, #8]
 800b3ae:	b92b      	cbnz	r3, 800b3bc <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800b3b0:	6823      	ldr	r3, [r4, #0]
 800b3b2:	4620      	mov	r0, r4
 800b3b4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b3b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b3ba:	4718      	bx	r3
 800b3bc:	bd10      	pop	{r4, pc}
	...

0800b3c0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800b3c0:	b510      	push	{r4, lr}
 800b3c2:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 800b3c6:	1b12      	subs	r2, r2, r4
 800b3c8:	2a00      	cmp	r2, #0
 800b3ca:	bfdc      	itt	le
 800b3cc:	6883      	ldrle	r3, [r0, #8]
 800b3ce:	18d2      	addle	r2, r2, r3
 800b3d0:	2a01      	cmp	r2, #1
 800b3d2:	dd18      	ble.n	800b406 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 800b3d4:	6843      	ldr	r3, [r0, #4]
 800b3d6:	f101 021c 	add.w	r2, r1, #28
 800b3da:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 800b3de:	f851 4b04 	ldr.w	r4, [r1], #4
 800b3e2:	f843 4b04 	str.w	r4, [r3], #4
 800b3e6:	4291      	cmp	r1, r2
 800b3e8:	d1f9      	bne.n	800b3de <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 800b3ea:	880a      	ldrh	r2, [r1, #0]
 800b3ec:	801a      	strh	r2, [r3, #0]
 800b3ee:	788a      	ldrb	r2, [r1, #2]
 800b3f0:	709a      	strb	r2, [r3, #2]
 800b3f2:	68c3      	ldr	r3, [r0, #12]
 800b3f4:	6882      	ldr	r2, [r0, #8]
 800b3f6:	f3bf 8f5b 	dmb	ish
 800b3fa:	3301      	adds	r3, #1
 800b3fc:	429a      	cmp	r2, r3
 800b3fe:	bfd8      	it	le
 800b400:	1a9b      	suble	r3, r3, r2
 800b402:	60c3      	str	r3, [r0, #12]
 800b404:	bd10      	pop	{r4, pc}
 800b406:	4b03      	ldr	r3, [pc, #12]	; (800b414 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 800b408:	4a03      	ldr	r2, [pc, #12]	; (800b418 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 800b40a:	4804      	ldr	r0, [pc, #16]	; (800b41c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 800b40c:	2139      	movs	r1, #57	; 0x39
 800b40e:	f010 f96f 	bl	801b6f0 <__assert_func>
 800b412:	bf00      	nop
 800b414:	0801de54 	.word	0x0801de54
 800b418:	0801df48 	.word	0x0801df48
 800b41c:	0801de2e 	.word	0x0801de2e

0800b420 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800b420:	b510      	push	{r4, lr}
 800b422:	6803      	ldr	r3, [r0, #0]
 800b424:	681b      	ldr	r3, [r3, #0]
 800b426:	4604      	mov	r4, r0
 800b428:	4798      	blx	r3
 800b42a:	b128      	cbz	r0, 800b438 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 800b42c:	4b07      	ldr	r3, [pc, #28]	; (800b44c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 800b42e:	4a08      	ldr	r2, [pc, #32]	; (800b450 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 800b430:	4808      	ldr	r0, [pc, #32]	; (800b454 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 800b432:	213f      	movs	r1, #63	; 0x3f
 800b434:	f010 f95c 	bl	801b6f0 <__assert_func>
 800b438:	6923      	ldr	r3, [r4, #16]
 800b43a:	68a2      	ldr	r2, [r4, #8]
 800b43c:	f3bf 8f5b 	dmb	ish
 800b440:	3301      	adds	r3, #1
 800b442:	429a      	cmp	r2, r3
 800b444:	bfd8      	it	le
 800b446:	1a9b      	suble	r3, r3, r2
 800b448:	6123      	str	r3, [r4, #16]
 800b44a:	bd10      	pop	{r4, pc}
 800b44c:	0801de77 	.word	0x0801de77
 800b450:	0801df96 	.word	0x0801df96
 800b454:	0801de2e 	.word	0x0801de2e

0800b458 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800b458:	b570      	push	{r4, r5, r6, lr}
 800b45a:	4604      	mov	r4, r0
 800b45c:	6840      	ldr	r0, [r0, #4]
 800b45e:	6803      	ldr	r3, [r0, #0]
 800b460:	681b      	ldr	r3, [r3, #0]
 800b462:	4798      	blx	r3
 800b464:	4605      	mov	r5, r0
 800b466:	b930      	cbnz	r0, 800b476 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b468:	7a23      	ldrb	r3, [r4, #8]
 800b46a:	b123      	cbz	r3, 800b476 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800b46c:	6860      	ldr	r0, [r4, #4]
 800b46e:	6803      	ldr	r3, [r0, #0]
 800b470:	695b      	ldr	r3, [r3, #20]
 800b472:	4798      	blx	r3
 800b474:	7225      	strb	r5, [r4, #8]
 800b476:	6860      	ldr	r0, [r4, #4]
 800b478:	6803      	ldr	r3, [r0, #0]
 800b47a:	681b      	ldr	r3, [r3, #0]
 800b47c:	4798      	blx	r3
 800b47e:	b928      	cbnz	r0, 800b48c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800b480:	6823      	ldr	r3, [r4, #0]
 800b482:	4620      	mov	r0, r4
 800b484:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b486:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b48a:	4718      	bx	r3
 800b48c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b490:	f7fd b844 	b.w	800851c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800b494 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800b494:	b510      	push	{r4, lr}
 800b496:	4c04      	ldr	r4, [pc, #16]	; (800b4a8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800b498:	6082      	str	r2, [r0, #8]
 800b49a:	2200      	movs	r2, #0
 800b49c:	e9c0 4100 	strd	r4, r1, [r0]
 800b4a0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800b4a4:	bd10      	pop	{r4, pc}
 800b4a6:	bf00      	nop
 800b4a8:	0801defc 	.word	0x0801defc

0800b4ac <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800b4ac:	6840      	ldr	r0, [r0, #4]
 800b4ae:	6803      	ldr	r3, [r0, #0]
 800b4b0:	681b      	ldr	r3, [r3, #0]
 800b4b2:	4718      	bx	r3

0800b4b4 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 800b4b4:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800b4b8:	4770      	bx	lr

0800b4ba <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 800b4ba:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 800b4be:	4770      	bx	lr

0800b4c0 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 800b4c0:	6802      	ldr	r2, [r0, #0]
 800b4c2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 800b4c6:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 800b4c8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 800b4cc:	4710      	bx	r2

0800b4ce <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 800b4ce:	6802      	ldr	r2, [r0, #0]
 800b4d0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 800b4d4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 800b4d6:	eef0 0a40 	vmov.f32	s1, s0
 800b4da:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 800b4de:	4710      	bx	r2

0800b4e0 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 800b4e0:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 800b4e4:	4770      	bx	lr

0800b4e6 <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 800b4e6:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 800b4ea:	4770      	bx	lr

0800b4ec <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 800b4ec:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 800b4f0:	4770      	bx	lr

0800b4f2 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 800b4f2:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 800b4f6:	4770      	bx	lr

0800b4f8 <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 800b4f8:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 800b4fc:	4770      	bx	lr

0800b4fe <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 800b4fe:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 800b502:	4770      	bx	lr

0800b504 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 800b504:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 800b508:	4770      	bx	lr

0800b50a <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 800b50a:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 800b50e:	4770      	bx	lr

0800b510 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 800b510:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 800b514:	4770      	bx	lr

0800b516 <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 800b516:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 800b51a:	4770      	bx	lr

0800b51c <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 800b51c:	ee07 2a90 	vmov	s15, r2
 800b520:	6803      	ldr	r3, [r0, #0]
 800b522:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 800b526:	ee07 1a90 	vmov	s15, r1
 800b52a:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800b52e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800b532:	4718      	bx	r3

0800b534 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 800b534:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 800b538:	4770      	bx	lr

0800b53a <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 800b53a:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 800b53e:	4770      	bx	lr

0800b540 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 800b540:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 800b544:	4770      	bx	lr

0800b546 <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 800b546:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 800b54a:	4770      	bx	lr

0800b54c <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 800b54c:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 800b550:	4770      	bx	lr

0800b552 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 800b552:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 800b556:	4770      	bx	lr

0800b558 <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 800b558:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 800b55c:	4770      	bx	lr

0800b55e <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 800b55e:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 800b562:	4770      	bx	lr

0800b564 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 800b564:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 800b568:	4770      	bx	lr

0800b56a <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 800b56a:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 800b56e:	4770      	bx	lr

0800b570 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 800b570:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 800b574:	4770      	bx	lr

0800b576 <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 800b576:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 800b57a:	4770      	bx	lr

0800b57c <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 800b57c:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 800b580:	4770      	bx	lr

0800b582 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 800b582:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 800b586:	4770      	bx	lr

0800b588 <_ZNK8touchgfx22AnimationTextureMapper31isTextureMapperAnimationRunningEv>:
 800b588:	f890 00ea 	ldrb.w	r0, [r0, #234]	; 0xea
 800b58c:	4770      	bx	lr

0800b58e <_ZN8touchgfx22AnimationTextureMapper14setupAnimationENS0_18AnimationParameterEfttPFstsstE>:
 800b58e:	b510      	push	{r4, lr}
 800b590:	2414      	movs	r4, #20
 800b592:	fb04 0101 	mla	r1, r4, r1, r0
 800b596:	2001      	movs	r0, #1
 800b598:	f8a1 309c 	strh.w	r3, [r1, #156]	; 0x9c
 800b59c:	9b02      	ldr	r3, [sp, #8]
 800b59e:	f881 0090 	strb.w	r0, [r1, #144]	; 0x90
 800b5a2:	ed81 0a26 	vstr	s0, [r1, #152]	; 0x98
 800b5a6:	f8a1 209e 	strh.w	r2, [r1, #158]	; 0x9e
 800b5aa:	f8c1 30a0 	str.w	r3, [r1, #160]	; 0xa0
 800b5ae:	bd10      	pop	{r4, pc}

0800b5b0 <_ZN8touchgfx22AnimationTextureMapper16getAnimationStepEv>:
 800b5b0:	f8b0 00e8 	ldrh.w	r0, [r0, #232]	; 0xe8
 800b5b4:	4770      	bx	lr
	...

0800b5b8 <_ZN8touchgfx22AnimationTextureMapperD1Ev>:
 800b5b8:	b510      	push	{r4, lr}
 800b5ba:	4b03      	ldr	r3, [pc, #12]	; (800b5c8 <_ZN8touchgfx22AnimationTextureMapperD1Ev+0x10>)
 800b5bc:	6003      	str	r3, [r0, #0]
 800b5be:	4604      	mov	r4, r0
 800b5c0:	f000 f93a 	bl	800b838 <_ZN8touchgfx13TextureMapperD1Ev>
 800b5c4:	4620      	mov	r0, r4
 800b5c6:	bd10      	pop	{r4, pc}
 800b5c8:	0801dfd0 	.word	0x0801dfd0

0800b5cc <_ZN8touchgfx22AnimationTextureMapperD0Ev>:
 800b5cc:	b510      	push	{r4, lr}
 800b5ce:	4604      	mov	r4, r0
 800b5d0:	f7ff fff2 	bl	800b5b8 <_ZN8touchgfx22AnimationTextureMapperD1Ev>
 800b5d4:	4620      	mov	r0, r4
 800b5d6:	21ec      	movs	r1, #236	; 0xec
 800b5d8:	f00f fa90 	bl	801aafc <_ZdlPvj>
 800b5dc:	4620      	mov	r0, r4
 800b5de:	bd10      	pop	{r4, pc}

0800b5e0 <_ZN8touchgfx22AnimationTextureMapper14startAnimationEv>:
 800b5e0:	b510      	push	{r4, lr}
 800b5e2:	4604      	mov	r4, r0
 800b5e4:	f001 fc64 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800b5e8:	4621      	mov	r1, r4
 800b5ea:	f001 fc67 	bl	800cebc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>
 800b5ee:	2300      	movs	r3, #0
 800b5f0:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
 800b5f4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800b5f6:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800b5fa:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800b5fc:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800b600:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800b602:	f8c4 30bc 	str.w	r3, [r4, #188]	; 0xbc
 800b606:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800b608:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 800b60c:	2301      	movs	r3, #1
 800b60e:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 800b612:	bd10      	pop	{r4, pc}

0800b614 <_ZN8touchgfx22AnimationTextureMapper37cancelAnimationTextureMapperAnimationEv>:
 800b614:	b510      	push	{r4, lr}
 800b616:	4604      	mov	r4, r0
 800b618:	f001 fc4a 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800b61c:	4621      	mov	r1, r4
 800b61e:	f001 fc7f 	bl	800cf20 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>
 800b622:	2300      	movs	r3, #0
 800b624:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 800b628:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 800b62c:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800b630:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800b634:	f884 30cc 	strb.w	r3, [r4, #204]	; 0xcc
 800b638:	bd10      	pop	{r4, pc}

0800b63a <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 800b63a:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 800b63e:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 800b642:	f000 b949 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800b646 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 800b646:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800b64a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800b64e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b652:	bfd8      	it	le
 800b654:	eeb0 0a67 	vmovle.f32	s0, s15
 800b658:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 800b65c:	f000 b93c 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800b660 <_ZN8touchgfx13TextureMapper9setCameraEff>:
 800b660:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 800b664:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 800b668:	f000 b936 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800b66c <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 800b66c:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 800b670:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 800b674:	f000 b930 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800b678 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 800b678:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 800b67c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 800b680:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 800b684:	f000 b928 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800b688 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv>:
 800b688:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b68c:	ed2d 8b06 	vpush	{d8-d10}
 800b690:	f890 30ea 	ldrb.w	r3, [r0, #234]	; 0xea
 800b694:	4604      	mov	r4, r0
 800b696:	2b00      	cmp	r3, #0
 800b698:	d042      	beq.n	800b720 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x98>
 800b69a:	2200      	movs	r2, #0
 800b69c:	edd0 8a0d 	vldr	s17, [r0, #52]	; 0x34
 800b6a0:	ed90 9a0e 	vldr	s18, [r0, #56]	; 0x38
 800b6a4:	edd0 9a0f 	vldr	s19, [r0, #60]	; 0x3c
 800b6a8:	ed90 8a10 	vldr	s16, [r0, #64]	; 0x40
 800b6ac:	ed9f aa54 	vldr	s20, [pc, #336]	; 800b800 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x178>
 800b6b0:	4605      	mov	r5, r0
 800b6b2:	4617      	mov	r7, r2
 800b6b4:	f895 3090 	ldrb.w	r3, [r5, #144]	; 0x90
 800b6b8:	b143      	cbz	r3, 800b6cc <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x44>
 800b6ba:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800b6be:	f8b5 109c 	ldrh.w	r1, [r5, #156]	; 0x9c
 800b6c2:	4288      	cmp	r0, r1
 800b6c4:	d230      	bcs.n	800b728 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xa0>
 800b6c6:	2a00      	cmp	r2, #0
 800b6c8:	bf08      	it	eq
 800b6ca:	2201      	moveq	r2, #1
 800b6cc:	3701      	adds	r7, #1
 800b6ce:	2f04      	cmp	r7, #4
 800b6d0:	f105 0514 	add.w	r5, r5, #20
 800b6d4:	d1ee      	bne.n	800b6b4 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x2c>
 800b6d6:	2a02      	cmp	r2, #2
 800b6d8:	d177      	bne.n	800b7ca <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x142>
 800b6da:	6823      	ldr	r3, [r4, #0]
 800b6dc:	eeb0 1a69 	vmov.f32	s2, s19
 800b6e0:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800b6e2:	eef0 0a49 	vmov.f32	s1, s18
 800b6e6:	eeb0 0a68 	vmov.f32	s0, s17
 800b6ea:	4620      	mov	r0, r4
 800b6ec:	4798      	blx	r3
 800b6ee:	6823      	ldr	r3, [r4, #0]
 800b6f0:	4620      	mov	r0, r4
 800b6f2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800b6f6:	eeb0 0a48 	vmov.f32	s0, s16
 800b6fa:	4798      	blx	r3
 800b6fc:	f8d4 00e0 	ldr.w	r0, [r4, #224]	; 0xe0
 800b700:	b148      	cbz	r0, 800b716 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x8e>
 800b702:	6803      	ldr	r3, [r0, #0]
 800b704:	68db      	ldr	r3, [r3, #12]
 800b706:	4798      	blx	r3
 800b708:	b128      	cbz	r0, 800b716 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x8e>
 800b70a:	f8d4 00e0 	ldr.w	r0, [r4, #224]	; 0xe0
 800b70e:	6803      	ldr	r3, [r0, #0]
 800b710:	4621      	mov	r1, r4
 800b712:	689b      	ldr	r3, [r3, #8]
 800b714:	4798      	blx	r3
 800b716:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b71a:	3301      	adds	r3, #1
 800b71c:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
 800b720:	ecbd 8b06 	vpop	{d8-d10}
 800b724:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800b728:	f8b5 309e 	ldrh.w	r3, [r5, #158]	; 0x9e
 800b72c:	18ce      	adds	r6, r1, r3
 800b72e:	42b0      	cmp	r0, r6
 800b730:	d8cc      	bhi.n	800b6cc <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x44>
 800b732:	ed95 7a26 	vldr	s14, [r5, #152]	; 0x98
 800b736:	edd5 7a25 	vldr	s15, [r5, #148]	; 0x94
 800b73a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800b73e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800b742:	dd2c      	ble.n	800b79e <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x116>
 800b744:	ee77 7a67 	vsub.f32	s15, s14, s15
 800b748:	f04f 0801 	mov.w	r8, #1
 800b74c:	ee67 7a8a 	vmul.f32	s15, s15, s20
 800b750:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b754:	ee17 2a90 	vmov	r2, s15
 800b758:	b212      	sxth	r2, r2
 800b75a:	1a40      	subs	r0, r0, r1
 800b75c:	f8d5 60a0 	ldr.w	r6, [r5, #160]	; 0xa0
 800b760:	2100      	movs	r1, #0
 800b762:	b280      	uxth	r0, r0
 800b764:	47b0      	blx	r6
 800b766:	ee07 0a90 	vmov	s15, r0
 800b76a:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800b76e:	2f02      	cmp	r7, #2
 800b770:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 800b774:	ee07 8a10 	vmov	s14, r8
 800b778:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800b77c:	ee67 7a87 	vmul.f32	s15, s15, s14
 800b780:	d019      	beq.n	800b7b6 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x12e>
 800b782:	2f03      	cmp	r7, #3
 800b784:	d01c      	beq.n	800b7c0 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x138>
 800b786:	2f01      	cmp	r7, #1
 800b788:	bf15      	itete	ne
 800b78a:	edd4 8a25 	vldrne	s17, [r4, #148]	; 0x94
 800b78e:	ed94 9a2a 	vldreq	s18, [r4, #168]	; 0xa8
 800b792:	ee77 8aa8 	vaddne.f32	s17, s15, s17
 800b796:	ee37 9a89 	vaddeq.f32	s18, s15, s18
 800b79a:	2202      	movs	r2, #2
 800b79c:	e796      	b.n	800b6cc <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x44>
 800b79e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800b7a2:	f04f 38ff 	mov.w	r8, #4294967295
 800b7a6:	ee67 7a8a 	vmul.f32	s15, s15, s20
 800b7aa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800b7ae:	ee17 2a90 	vmov	r2, s15
 800b7b2:	b212      	sxth	r2, r2
 800b7b4:	e7d1      	b.n	800b75a <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0xd2>
 800b7b6:	edd4 9a2f 	vldr	s19, [r4, #188]	; 0xbc
 800b7ba:	ee77 9aa9 	vadd.f32	s19, s15, s19
 800b7be:	e7ec      	b.n	800b79a <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x112>
 800b7c0:	ed94 8a34 	vldr	s16, [r4, #208]	; 0xd0
 800b7c4:	ee37 8a88 	vadd.f32	s16, s15, s16
 800b7c8:	e7e7      	b.n	800b79a <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x112>
 800b7ca:	2a01      	cmp	r2, #1
 800b7cc:	d0a3      	beq.n	800b716 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x8e>
 800b7ce:	6823      	ldr	r3, [r4, #0]
 800b7d0:	4620      	mov	r0, r4
 800b7d2:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800b7d6:	4798      	blx	r3
 800b7d8:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 800b7dc:	2800      	cmp	r0, #0
 800b7de:	d09f      	beq.n	800b720 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x98>
 800b7e0:	6803      	ldr	r3, [r0, #0]
 800b7e2:	68db      	ldr	r3, [r3, #12]
 800b7e4:	4798      	blx	r3
 800b7e6:	2800      	cmp	r0, #0
 800b7e8:	d09a      	beq.n	800b720 <_ZN8touchgfx22AnimationTextureMapper15handleTickEventEv+0x98>
 800b7ea:	ecbd 8b06 	vpop	{d8-d10}
 800b7ee:	f8d4 00e4 	ldr.w	r0, [r4, #228]	; 0xe4
 800b7f2:	6803      	ldr	r3, [r0, #0]
 800b7f4:	4621      	mov	r1, r4
 800b7f6:	689b      	ldr	r3, [r3, #8]
 800b7f8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800b7fc:	4718      	bx	r3
 800b7fe:	bf00      	nop
 800b800:	447a0000 	.word	0x447a0000

0800b804 <_ZN8touchgfx22AnimationTextureMapperC1Ev>:
 800b804:	b510      	push	{r4, lr}
 800b806:	4604      	mov	r4, r0
 800b808:	f000 f824 	bl	800b854 <_ZN8touchgfx13TextureMapperC1Ev>
 800b80c:	4b09      	ldr	r3, [pc, #36]	; (800b834 <_ZN8touchgfx22AnimationTextureMapperC1Ev+0x30>)
 800b80e:	6023      	str	r3, [r4, #0]
 800b810:	2300      	movs	r3, #0
 800b812:	e9c4 3338 	strd	r3, r3, [r4, #224]	; 0xe0
 800b816:	f8a4 30e8 	strh.w	r3, [r4, #232]	; 0xe8
 800b81a:	f884 30ea 	strb.w	r3, [r4, #234]	; 0xea
 800b81e:	f884 3090 	strb.w	r3, [r4, #144]	; 0x90
 800b822:	f884 30a4 	strb.w	r3, [r4, #164]	; 0xa4
 800b826:	f884 30b8 	strb.w	r3, [r4, #184]	; 0xb8
 800b82a:	f884 30cc 	strb.w	r3, [r4, #204]	; 0xcc
 800b82e:	4620      	mov	r0, r4
 800b830:	bd10      	pop	{r4, pc}
 800b832:	bf00      	nop
 800b834:	0801dfd0 	.word	0x0801dfd0

0800b838 <_ZN8touchgfx13TextureMapperD1Ev>:
 800b838:	4770      	bx	lr

0800b83a <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 800b83a:	2200      	movs	r2, #0
 800b83c:	8002      	strh	r2, [r0, #0]
 800b83e:	8042      	strh	r2, [r0, #2]
 800b840:	8082      	strh	r2, [r0, #4]
 800b842:	80c2      	strh	r2, [r0, #6]
 800b844:	4770      	bx	lr

0800b846 <_ZN8touchgfx13TextureMapperD0Ev>:
 800b846:	b510      	push	{r4, lr}
 800b848:	2190      	movs	r1, #144	; 0x90
 800b84a:	4604      	mov	r4, r0
 800b84c:	f00f f956 	bl	801aafc <_ZdlPvj>
 800b850:	4620      	mov	r0, r4
 800b852:	bd10      	pop	{r4, pc}

0800b854 <_ZN8touchgfx13TextureMapperC1Ev>:
 800b854:	b510      	push	{r4, lr}
 800b856:	2200      	movs	r2, #0
 800b858:	2101      	movs	r1, #1
 800b85a:	8082      	strh	r2, [r0, #4]
 800b85c:	80c2      	strh	r2, [r0, #6]
 800b85e:	8102      	strh	r2, [r0, #8]
 800b860:	8142      	strh	r2, [r0, #10]
 800b862:	8182      	strh	r2, [r0, #12]
 800b864:	81c2      	strh	r2, [r0, #14]
 800b866:	8202      	strh	r2, [r0, #16]
 800b868:	8242      	strh	r2, [r0, #18]
 800b86a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b86e:	61c2      	str	r2, [r0, #28]
 800b870:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b874:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800b878:	f880 2026 	strb.w	r2, [r0, #38]	; 0x26
 800b87c:	4914      	ldr	r1, [pc, #80]	; (800b8d0 <_ZN8touchgfx13TextureMapperC1Ev+0x7c>)
 800b87e:	6001      	str	r1, [r0, #0]
 800b880:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800b884:	f04f 517e 	mov.w	r1, #1065353216	; 0x3f800000
 800b888:	8502      	strh	r2, [r0, #40]	; 0x28
 800b88a:	f880 202a 	strb.w	r2, [r0, #42]	; 0x2a
 800b88e:	4c11      	ldr	r4, [pc, #68]	; (800b8d4 <_ZN8touchgfx13TextureMapperC1Ev+0x80>)
 800b890:	6401      	str	r1, [r0, #64]	; 0x40
 800b892:	2200      	movs	r2, #0
 800b894:	62c2      	str	r2, [r0, #44]	; 0x2c
 800b896:	6302      	str	r2, [r0, #48]	; 0x30
 800b898:	6342      	str	r2, [r0, #52]	; 0x34
 800b89a:	6382      	str	r2, [r0, #56]	; 0x38
 800b89c:	63c2      	str	r2, [r0, #60]	; 0x3c
 800b89e:	6442      	str	r2, [r0, #68]	; 0x44
 800b8a0:	6482      	str	r2, [r0, #72]	; 0x48
 800b8a2:	6502      	str	r2, [r0, #80]	; 0x50
 800b8a4:	6542      	str	r2, [r0, #84]	; 0x54
 800b8a6:	65c2      	str	r2, [r0, #92]	; 0x5c
 800b8a8:	6602      	str	r2, [r0, #96]	; 0x60
 800b8aa:	64c4      	str	r4, [r0, #76]	; 0x4c
 800b8ac:	6584      	str	r4, [r0, #88]	; 0x58
 800b8ae:	6641      	str	r1, [r0, #100]	; 0x64
 800b8b0:	6682      	str	r2, [r0, #104]	; 0x68
 800b8b2:	66c2      	str	r2, [r0, #108]	; 0x6c
 800b8b4:	6742      	str	r2, [r0, #116]	; 0x74
 800b8b6:	6782      	str	r2, [r0, #120]	; 0x78
 800b8b8:	f8c0 2080 	str.w	r2, [r0, #128]	; 0x80
 800b8bc:	f8c0 2084 	str.w	r2, [r0, #132]	; 0x84
 800b8c0:	220c      	movs	r2, #12
 800b8c2:	6701      	str	r1, [r0, #112]	; 0x70
 800b8c4:	67c1      	str	r1, [r0, #124]	; 0x7c
 800b8c6:	f8c0 1088 	str.w	r1, [r0, #136]	; 0x88
 800b8ca:	f8a0 208c 	strh.w	r2, [r0, #140]	; 0x8c
 800b8ce:	bd10      	pop	{r4, pc}
 800b8d0:	0801e0e4 	.word	0x0801e0e4
 800b8d4:	447a0000 	.word	0x447a0000

0800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 800b8d8:	b570      	push	{r4, r5, r6, lr}
 800b8da:	ed2d 8b04 	vpush	{d8-d9}
 800b8de:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 800b8e2:	add0      	add	r5, sp, #832	; 0x340
 800b8e4:	8d03      	ldrh	r3, [r0, #40]	; 0x28
 800b8e6:	f825 3d40 	strh.w	r3, [r5, #-64]!
 800b8ea:	4604      	mov	r4, r0
 800b8ec:	4628      	mov	r0, r5
 800b8ee:	f003 fc79 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800b8f2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800b8f4:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 800b8f8:	4606      	mov	r6, r0
 800b8fa:	4628      	mov	r0, r5
 800b8fc:	f003 fcac 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800b900:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800b904:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 800b908:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800b90a:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 800b90e:	9312      	str	r3, [sp, #72]	; 0x48
 800b910:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800b914:	1c72      	adds	r2, r6, #1
 800b916:	3001      	adds	r0, #1
 800b918:	ee76 5ac7 	vsub.f32	s11, s13, s14
 800b91c:	ee07 2a90 	vmov	s15, r2
 800b920:	ee06 0a90 	vmov	s13, r0
 800b924:	ee36 6a47 	vsub.f32	s12, s12, s14
 800b928:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800b92c:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800b930:	ee77 7a86 	vadd.f32	s15, s15, s12
 800b934:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800b938:	9316      	str	r3, [sp, #88]	; 0x58
 800b93a:	931a      	str	r3, [sp, #104]	; 0x68
 800b93c:	931e      	str	r3, [sp, #120]	; 0x78
 800b93e:	2300      	movs	r3, #0
 800b940:	9320      	str	r3, [sp, #128]	; 0x80
 800b942:	9321      	str	r3, [sp, #132]	; 0x84
 800b944:	9322      	str	r3, [sp, #136]	; 0x88
 800b946:	9324      	str	r3, [sp, #144]	; 0x90
 800b948:	9325      	str	r3, [sp, #148]	; 0x94
 800b94a:	9326      	str	r3, [sp, #152]	; 0x98
 800b94c:	9328      	str	r3, [sp, #160]	; 0xa0
 800b94e:	9329      	str	r3, [sp, #164]	; 0xa4
 800b950:	932a      	str	r3, [sp, #168]	; 0xa8
 800b952:	932c      	str	r3, [sp, #176]	; 0xb0
 800b954:	932d      	str	r3, [sp, #180]	; 0xb4
 800b956:	932e      	str	r3, [sp, #184]	; 0xb8
 800b958:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800b95c:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 800b960:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 800b964:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 800b968:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 800b96c:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 800b970:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 800b974:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 800b978:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800b97c:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 800b980:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 800b984:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 800b988:	a830      	add	r0, sp, #192	; 0xc0
 800b98a:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 800b98e:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 800b992:	f003 f821 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800b996:	eeb1 0a49 	vneg.f32	s0, s18
 800b99a:	a830      	add	r0, sp, #192	; 0xc0
 800b99c:	f003 f8f0 	bl	800eb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 800b9a0:	eeb1 0a68 	vneg.f32	s0, s17
 800b9a4:	f003 f8fa 	bl	800eb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 800b9a8:	eeb1 0a48 	vneg.f32	s0, s16
 800b9ac:	f003 f905 	bl	800ebba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 800b9b0:	a840      	add	r0, sp, #256	; 0x100
 800b9b2:	f003 f811 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800b9b6:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 800b9ba:	a840      	add	r0, sp, #256	; 0x100
 800b9bc:	f003 f864 	bl	800ea88 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 800b9c0:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 800b9c4:	f003 f88a 	bl	800eadc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 800b9c8:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 800b9cc:	f003 f8af 	bl	800eb2e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 800b9d0:	a850      	add	r0, sp, #320	; 0x140
 800b9d2:	f003 f801 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800b9d6:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 800b9da:	a850      	add	r0, sp, #320	; 0x140
 800b9dc:	f003 f8fc 	bl	800ebd8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 800b9e0:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 800b9e4:	f003 f904 	bl	800ebf0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 800b9e8:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 800b9ec:	f003 f90d 	bl	800ec0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 800b9f0:	a860      	add	r0, sp, #384	; 0x180
 800b9f2:	f002 fff1 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800b9f6:	eeb0 0a49 	vmov.f32	s0, s18
 800b9fa:	a860      	add	r0, sp, #384	; 0x180
 800b9fc:	f003 f8c0 	bl	800eb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 800ba00:	eeb0 0a68 	vmov.f32	s0, s17
 800ba04:	f003 f8ca 	bl	800eb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 800ba08:	eeb0 0a48 	vmov.f32	s0, s16
 800ba0c:	f003 f8d5 	bl	800ebba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 800ba10:	aa50      	add	r2, sp, #320	; 0x140
 800ba12:	a960      	add	r1, sp, #384	; 0x180
 800ba14:	a8b0      	add	r0, sp, #704	; 0x2c0
 800ba16:	f002 fff9 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba1a:	4628      	mov	r0, r5
 800ba1c:	aa40      	add	r2, sp, #256	; 0x100
 800ba1e:	a9b0      	add	r1, sp, #704	; 0x2c0
 800ba20:	f002 fff4 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba24:	4629      	mov	r1, r5
 800ba26:	aa30      	add	r2, sp, #192	; 0xc0
 800ba28:	a870      	add	r0, sp, #448	; 0x1c0
 800ba2a:	f002 ffef 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba2e:	a880      	add	r0, sp, #512	; 0x200
 800ba30:	f002 ffd2 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800ba34:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 800ba38:	a880      	add	r0, sp, #512	; 0x200
 800ba3a:	eeb1 0a40 	vneg.f32	s0, s0
 800ba3e:	f003 f89f 	bl	800eb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 800ba42:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 800ba46:	a880      	add	r0, sp, #512	; 0x200
 800ba48:	eeb1 0a40 	vneg.f32	s0, s0
 800ba4c:	f003 f8a6 	bl	800eb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 800ba50:	a890      	add	r0, sp, #576	; 0x240
 800ba52:	f002 ffc1 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800ba56:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 800ba5a:	a890      	add	r0, sp, #576	; 0x240
 800ba5c:	f003 f804 	bl	800ea68 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 800ba60:	a8a0      	add	r0, sp, #640	; 0x280
 800ba62:	f002 ffb9 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800ba66:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 800ba6a:	a8a0      	add	r0, sp, #640	; 0x280
 800ba6c:	f003 f888 	bl	800eb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 800ba70:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 800ba74:	f003 f892 	bl	800eb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 800ba78:	aa90      	add	r2, sp, #576	; 0x240
 800ba7a:	a9a0      	add	r1, sp, #640	; 0x280
 800ba7c:	a8b0      	add	r0, sp, #704	; 0x2c0
 800ba7e:	f002 ffc5 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba82:	4628      	mov	r0, r5
 800ba84:	aa80      	add	r2, sp, #512	; 0x200
 800ba86:	a9b0      	add	r1, sp, #704	; 0x2c0
 800ba88:	f002 ffc0 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba8c:	4629      	mov	r1, r5
 800ba8e:	aa70      	add	r2, sp, #448	; 0x1c0
 800ba90:	4668      	mov	r0, sp
 800ba92:	466d      	mov	r5, sp
 800ba94:	f002 ffba 	bl	800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 800ba98:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba9a:	ae70      	add	r6, sp, #448	; 0x1c0
 800ba9c:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800ba9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800baa0:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800baa2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800baa4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 800baa6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 800baaa:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 800baae:	2500      	movs	r5, #0
 800bab0:	0129      	lsls	r1, r5, #4
 800bab2:	ab20      	add	r3, sp, #128	; 0x80
 800bab4:	185e      	adds	r6, r3, r1
 800bab6:	ab10      	add	r3, sp, #64	; 0x40
 800bab8:	4419      	add	r1, r3
 800baba:	a870      	add	r0, sp, #448	; 0x1c0
 800babc:	f002 ff5c 	bl	800e978 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 800bac0:	3501      	adds	r5, #1
 800bac2:	2d04      	cmp	r5, #4
 800bac4:	ed86 0a00 	vstr	s0, [r6]
 800bac8:	edc6 0a01 	vstr	s1, [r6, #4]
 800bacc:	ed86 1a02 	vstr	s2, [r6, #8]
 800bad0:	edc6 1a03 	vstr	s3, [r6, #12]
 800bad4:	d1ec      	bne.n	800bab0 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 800bad6:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 800bada:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 800bade:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 800bae2:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bae6:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 800baea:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800baee:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 800baf2:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 800baf6:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bafa:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bafe:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 800bb02:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800bb06:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 800bb0a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bb0e:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 800bb12:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bb16:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 800bb1a:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 800bb1e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bb22:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bb26:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 800bb2a:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 800bb2e:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 800bb32:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bb36:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 800bb3a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bb3e:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 800bb42:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 800bb46:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bb4a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bb4e:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 800bb52:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 800bb56:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 800bb5a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 800bb5e:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 800bb62:	ee86 6a87 	vdiv.f32	s12, s13, s14
 800bb66:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 800bb6a:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 800bb6e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800bb72:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800bb76:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 800bb7a:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 800bb7e:	ecbd 8b04 	vpop	{d8-d9}
 800bb82:	bd70      	pop	{r4, r5, r6, pc}

0800bb84 <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 800bb84:	b570      	push	{r4, r5, r6, lr}
 800bb86:	4605      	mov	r5, r0
 800bb88:	880b      	ldrh	r3, [r1, #0]
 800bb8a:	8503      	strh	r3, [r0, #40]	; 0x28
 800bb8c:	f855 3b28 	ldr.w	r3, [r5], #40
 800bb90:	4604      	mov	r4, r0
 800bb92:	4628      	mov	r0, r5
 800bb94:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800bb96:	f003 fb25 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bb9a:	b201      	sxth	r1, r0
 800bb9c:	4620      	mov	r0, r4
 800bb9e:	47b0      	blx	r6
 800bba0:	6823      	ldr	r3, [r4, #0]
 800bba2:	4628      	mov	r0, r5
 800bba4:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800bba6:	f003 fb57 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800bbaa:	b201      	sxth	r1, r0
 800bbac:	4620      	mov	r0, r4
 800bbae:	47b0      	blx	r6
 800bbb0:	4620      	mov	r0, r4
 800bbb2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bbb6:	f7ff be8f 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800bbba <_ZN8touchgfx13TextureMapper8setScaleEf>:
 800bbba:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 800bbbe:	f7ff be8b 	b.w	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

0800bbc2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 800bbc2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bbc6:	ed2d 8b04 	vpush	{d8-d9}
 800bbca:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 800bbce:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 800bbd2:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 800bbd6:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 800bbda:	eeb4 8ae9 	vcmpe.f32	s16, s19
 800bbde:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbe2:	bf54      	ite	pl
 800bbe4:	eeb0 0a69 	vmovpl.f32	s0, s19
 800bbe8:	eeb0 0a48 	vmovmi.f32	s0, s16
 800bbec:	eeb4 9ac0 	vcmpe.f32	s18, s0
 800bbf0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bbf4:	bfd8      	it	le
 800bbf6:	eeb0 0a49 	vmovle.f32	s0, s18
 800bbfa:	eef4 8ac0 	vcmpe.f32	s17, s0
 800bbfe:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc02:	bfd8      	it	le
 800bc04:	eeb0 0a68 	vmovle.f32	s0, s17
 800bc08:	460c      	mov	r4, r1
 800bc0a:	4607      	mov	r7, r0
 800bc0c:	f00f f81c 	bl	801ac48 <floorf>
 800bc10:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800bc14:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc18:	bf58      	it	pl
 800bc1a:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 800bc1e:	eeb4 8ae9 	vcmpe.f32	s16, s19
 800bc22:	bf56      	itet	pl
 800bc24:	ee10 3a10 	vmovpl	r3, s0
 800bc28:	2600      	movmi	r6, #0
 800bc2a:	b21e      	sxthpl	r6, r3
 800bc2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc30:	bfd8      	it	le
 800bc32:	eeb0 8a69 	vmovle.f32	s16, s19
 800bc36:	eeb4 9ac8 	vcmpe.f32	s18, s16
 800bc3a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc3e:	bf58      	it	pl
 800bc40:	eeb0 8a49 	vmovpl.f32	s16, s18
 800bc44:	eef4 8ac8 	vcmpe.f32	s17, s16
 800bc48:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc4c:	bf54      	ite	pl
 800bc4e:	eeb0 0a68 	vmovpl.f32	s0, s17
 800bc52:	eeb0 0a48 	vmovmi.f32	s0, s16
 800bc56:	f00e ff77 	bl	801ab48 <ceilf>
 800bc5a:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 800bc5e:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 800bc62:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 800bc66:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 800bc6a:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 800bc6e:	ee07 8a90 	vmov	s15, r8
 800bc72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bc76:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800bc7a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc7e:	bfd8      	it	le
 800bc80:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 800bc84:	eeb4 8ae9 	vcmpe.f32	s16, s19
 800bc88:	bfdc      	itt	le
 800bc8a:	ee10 3a10 	vmovle	r3, s0
 800bc8e:	fa0f f883 	sxthle.w	r8, r3
 800bc92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bc96:	bf54      	ite	pl
 800bc98:	eeb0 0a69 	vmovpl.f32	s0, s19
 800bc9c:	eeb0 0a48 	vmovmi.f32	s0, s16
 800bca0:	eeb4 9ac0 	vcmpe.f32	s18, s0
 800bca4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bca8:	bfd8      	it	le
 800bcaa:	eeb0 0a49 	vmovle.f32	s0, s18
 800bcae:	eef4 8ac0 	vcmpe.f32	s17, s0
 800bcb2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcb6:	bfd8      	it	le
 800bcb8:	eeb0 0a68 	vmovle.f32	s0, s17
 800bcbc:	f00e ffc4 	bl	801ac48 <floorf>
 800bcc0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800bcc4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcc8:	bf58      	it	pl
 800bcca:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 800bcce:	eeb4 8ae9 	vcmpe.f32	s16, s19
 800bcd2:	bf56      	itet	pl
 800bcd4:	ee10 3a10 	vmovpl	r3, s0
 800bcd8:	2500      	movmi	r5, #0
 800bcda:	b21d      	sxthpl	r5, r3
 800bcdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bce0:	bfd8      	it	le
 800bce2:	eeb0 8a69 	vmovle.f32	s16, s19
 800bce6:	eeb4 9ac8 	vcmpe.f32	s18, s16
 800bcea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcee:	bf58      	it	pl
 800bcf0:	eeb0 8a49 	vmovpl.f32	s16, s18
 800bcf4:	eef4 8ac8 	vcmpe.f32	s17, s16
 800bcf8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bcfc:	bf54      	ite	pl
 800bcfe:	eeb0 0a68 	vmovpl.f32	s0, s17
 800bd02:	eeb0 0a48 	vmovmi.f32	s0, s16
 800bd06:	f00e ff1f 	bl	801ab48 <ceilf>
 800bd0a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800bd0e:	803e      	strh	r6, [r7, #0]
 800bd10:	ee07 3a90 	vmov	s15, r3
 800bd14:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800bd18:	807d      	strh	r5, [r7, #2]
 800bd1a:	eeb4 0ae7 	vcmpe.f32	s0, s15
 800bd1e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800bd22:	bfd8      	it	le
 800bd24:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 800bd28:	eba8 0606 	sub.w	r6, r8, r6
 800bd2c:	bfdc      	itt	le
 800bd2e:	ee10 3a10 	vmovle	r3, s0
 800bd32:	b21b      	sxthle	r3, r3
 800bd34:	1b5d      	subs	r5, r3, r5
 800bd36:	80be      	strh	r6, [r7, #4]
 800bd38:	80fd      	strh	r5, [r7, #6]
 800bd3a:	ecbd 8b04 	vpop	{d8-d9}
 800bd3e:	4638      	mov	r0, r7
 800bd40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bd44 <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 800bd44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bd48:	ed2d 8b04 	vpush	{d8-d9}
 800bd4c:	b084      	sub	sp, #16
 800bd4e:	4604      	mov	r4, r0
 800bd50:	eeb0 9a40 	vmov.f32	s18, s0
 800bd54:	eef0 8a60 	vmov.f32	s17, s1
 800bd58:	eeb0 8a41 	vmov.f32	s16, s2
 800bd5c:	4601      	mov	r1, r0
 800bd5e:	4668      	mov	r0, sp
 800bd60:	f7ff ff2f 	bl	800bbc2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 800bd64:	4620      	mov	r0, r4
 800bd66:	ed84 9a0d 	vstr	s18, [r4, #52]	; 0x34
 800bd6a:	edc4 8a0e 	vstr	s17, [r4, #56]	; 0x38
 800bd6e:	ed84 8a0f 	vstr	s16, [r4, #60]	; 0x3c
 800bd72:	f9bd 8000 	ldrsh.w	r8, [sp]
 800bd76:	f9bd 6002 	ldrsh.w	r6, [sp, #2]
 800bd7a:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800bd7e:	f7ff fdab 	bl	800b8d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800bd82:	4621      	mov	r1, r4
 800bd84:	a802      	add	r0, sp, #8
 800bd86:	f7ff ff1c 	bl	800bbc2 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 800bd8a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800bd8e:	b393      	cbz	r3, 800bdf6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb2>
 800bd90:	b38d      	cbz	r5, 800bdf6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb2>
 800bd92:	f9bd e00c 	ldrsh.w	lr, [sp, #12]
 800bd96:	f1be 0f00 	cmp.w	lr, #0
 800bd9a:	d036      	beq.n	800be0a <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xc6>
 800bd9c:	f9bd c00e 	ldrsh.w	ip, [sp, #14]
 800bda0:	f1bc 0f00 	cmp.w	ip, #0
 800bda4:	d031      	beq.n	800be0a <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xc6>
 800bda6:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 800bdaa:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 800bdae:	4541      	cmp	r1, r8
 800bdb0:	460f      	mov	r7, r1
 800bdb2:	4610      	mov	r0, r2
 800bdb4:	bfa8      	it	ge
 800bdb6:	4647      	movge	r7, r8
 800bdb8:	4471      	add	r1, lr
 800bdba:	42b2      	cmp	r2, r6
 800bdbc:	4443      	add	r3, r8
 800bdbe:	4462      	add	r2, ip
 800bdc0:	4435      	add	r5, r6
 800bdc2:	bfa8      	it	ge
 800bdc4:	4630      	movge	r0, r6
 800bdc6:	b209      	sxth	r1, r1
 800bdc8:	b21b      	sxth	r3, r3
 800bdca:	b212      	sxth	r2, r2
 800bdcc:	b22d      	sxth	r5, r5
 800bdce:	4299      	cmp	r1, r3
 800bdd0:	bfac      	ite	ge
 800bdd2:	ebc7 0301 	rsbge	r3, r7, r1
 800bdd6:	ebc7 0303 	rsblt	r3, r7, r3
 800bdda:	42aa      	cmp	r2, r5
 800bddc:	bfac      	ite	ge
 800bdde:	ebc0 0202 	rsbge	r2, r0, r2
 800bde2:	ebc0 0205 	rsblt	r2, r0, r5
 800bde6:	f8ad 7008 	strh.w	r7, [sp, #8]
 800bdea:	f8ad 000a 	strh.w	r0, [sp, #10]
 800bdee:	f8ad 300c 	strh.w	r3, [sp, #12]
 800bdf2:	f8ad 200e 	strh.w	r2, [sp, #14]
 800bdf6:	6823      	ldr	r3, [r4, #0]
 800bdf8:	a902      	add	r1, sp, #8
 800bdfa:	691b      	ldr	r3, [r3, #16]
 800bdfc:	4620      	mov	r0, r4
 800bdfe:	4798      	blx	r3
 800be00:	b004      	add	sp, #16
 800be02:	ecbd 8b04 	vpop	{d8-d9}
 800be06:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800be0a:	f8ad 8008 	strh.w	r8, [sp, #8]
 800be0e:	f8ad 600a 	strh.w	r6, [sp, #10]
 800be12:	f8ad 300c 	strh.w	r3, [sp, #12]
 800be16:	f8ad 500e 	strh.w	r5, [sp, #14]
 800be1a:	e7ec      	b.n	800bdf6 <_ZN8touchgfx13TextureMapper12updateAnglesEfff+0xb2>

0800be1c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 800be1c:	4603      	mov	r3, r0
 800be1e:	3028      	adds	r0, #40	; 0x28
 800be20:	f893 3026 	ldrb.w	r3, [r3, #38]	; 0x26
 800be24:	b90b      	cbnz	r3, 800be2a <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 800be26:	f001 bdce 	b.w	800d9c6 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800be2a:	f001 bddc 	b.w	800d9e6 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800be30 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800be30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800be34:	ed2d 8b04 	vpush	{d8-d9}
 800be38:	4604      	mov	r4, r0
 800be3a:	469b      	mov	fp, r3
 800be3c:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800be40:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800be44:	f9b1 6000 	ldrsh.w	r6, [r1]
 800be48:	8888      	ldrh	r0, [r1, #4]
 800be4a:	b0ab      	sub	sp, #172	; 0xac
 800be4c:	4430      	add	r0, r6
 800be4e:	b280      	uxth	r0, r0
 800be50:	9206      	str	r2, [sp, #24]
 800be52:	fa0f fe80 	sxth.w	lr, r0
 800be56:	2200      	movs	r2, #0
 800be58:	4596      	cmp	lr, r2
 800be5a:	f8dd a0e0 	ldr.w	sl, [sp, #224]	; 0xe0
 800be5e:	920e      	str	r2, [sp, #56]	; 0x38
 800be60:	e9dd 873a 	ldrd	r8, r7, [sp, #232]	; 0xe8
 800be64:	f340 8101 	ble.w	800c06a <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x23a>
 800be68:	45b4      	cmp	ip, r6
 800be6a:	f340 80fe 	ble.w	800c06a <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x23a>
 800be6e:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800be72:	88ca      	ldrh	r2, [r1, #6]
 800be74:	442a      	add	r2, r5
 800be76:	b292      	uxth	r2, r2
 800be78:	b211      	sxth	r1, r2
 800be7a:	2900      	cmp	r1, #0
 800be7c:	f340 80f5 	ble.w	800c06a <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x23a>
 800be80:	42ab      	cmp	r3, r5
 800be82:	f340 80f2 	ble.w	800c06a <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x23a>
 800be86:	45f4      	cmp	ip, lr
 800be88:	bfb8      	it	lt
 800be8a:	fa1f f08c 	uxthlt.w	r0, ip
 800be8e:	428b      	cmp	r3, r1
 800be90:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800be94:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800be98:	bfb8      	it	lt
 800be9a:	b29a      	uxthlt	r2, r3
 800be9c:	1b80      	subs	r0, r0, r6
 800be9e:	1b52      	subs	r2, r2, r5
 800bea0:	f8ad 003c 	strh.w	r0, [sp, #60]	; 0x3c
 800bea4:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800bea8:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800beac:	f8ad 503a 	strh.w	r5, [sp, #58]	; 0x3a
 800beb0:	f10d 0938 	add.w	r9, sp, #56	; 0x38
 800beb4:	e899 0003 	ldmia.w	r9, {r0, r1}
 800beb8:	6822      	ldr	r2, [r4, #0]
 800beba:	ad10      	add	r5, sp, #64	; 0x40
 800bebc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 800bebe:	e885 0003 	stmia.w	r5, {r0, r1}
 800bec2:	4629      	mov	r1, r5
 800bec4:	4620      	mov	r0, r4
 800bec6:	4790      	blx	r2
 800bec8:	4621      	mov	r1, r4
 800beca:	a812      	add	r0, sp, #72	; 0x48
 800becc:	f001 fd09 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bed0:	1d26      	adds	r6, r4, #4
 800bed2:	a812      	add	r0, sp, #72	; 0x48
 800bed4:	f000 fe66 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800bed8:	4631      	mov	r1, r6
 800beda:	4648      	mov	r0, r9
 800bedc:	f000 fe4a 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800bee0:	4628      	mov	r0, r5
 800bee2:	f104 0528 	add.w	r5, r4, #40	; 0x28
 800bee6:	f000 fe5d 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800beea:	4628      	mov	r0, r5
 800beec:	f003 fa82 	bl	800f3f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 800bef0:	9007      	str	r0, [sp, #28]
 800bef2:	2800      	cmp	r0, #0
 800bef4:	f000 80b4 	beq.w	800c060 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x230>
 800bef8:	f8db 2000 	ldr.w	r2, [fp]
 800befc:	9208      	str	r2, [sp, #32]
 800befe:	f8db 2004 	ldr.w	r2, [fp, #4]
 800bf02:	9209      	str	r2, [sp, #36]	; 0x24
 800bf04:	f8db 2008 	ldr.w	r2, [fp, #8]
 800bf08:	920a      	str	r2, [sp, #40]	; 0x28
 800bf0a:	f8da 2000 	ldr.w	r2, [sl]
 800bf0e:	920b      	str	r2, [sp, #44]	; 0x2c
 800bf10:	f8da 2004 	ldr.w	r2, [sl, #4]
 800bf14:	920c      	str	r2, [sp, #48]	; 0x30
 800bf16:	f8da 2008 	ldr.w	r2, [sl, #8]
 800bf1a:	920d      	str	r2, [sp, #52]	; 0x34
 800bf1c:	a90b      	add	r1, sp, #44	; 0x2c
 800bf1e:	4632      	mov	r2, r6
 800bf20:	a808      	add	r0, sp, #32
 800bf22:	f000 fe0b 	bl	800cb3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800bf26:	4632      	mov	r2, r6
 800bf28:	a90c      	add	r1, sp, #48	; 0x30
 800bf2a:	a809      	add	r0, sp, #36	; 0x24
 800bf2c:	f000 fe06 	bl	800cb3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800bf30:	4632      	mov	r2, r6
 800bf32:	a90d      	add	r1, sp, #52	; 0x34
 800bf34:	a80a      	add	r0, sp, #40	; 0x28
 800bf36:	f000 fe01 	bl	800cb3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800bf3a:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800bf3e:	9b39      	ldr	r3, [sp, #228]	; 0xe4
 800bf40:	edd8 6a00 	vldr	s13, [r8]
 800bf44:	ed93 9a00 	vldr	s18, [r3]
 800bf48:	ed93 8a01 	vldr	s16, [r3, #4]
 800bf4c:	edd3 8a02 	vldr	s17, [r3, #8]
 800bf50:	f8d7 e004 	ldr.w	lr, [r7, #4]
 800bf54:	f8d8 c008 	ldr.w	ip, [r8, #8]
 800bf58:	f8d7 b000 	ldr.w	fp, [r7]
 800bf5c:	f8d8 a004 	ldr.w	sl, [r8, #4]
 800bf60:	68bf      	ldr	r7, [r7, #8]
 800bf62:	9b06      	ldr	r3, [sp, #24]
 800bf64:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 800bf68:	eeb0 7a67 	vmov.f32	s14, s15
 800bf6c:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800bf70:	eddd 7a09 	vldr	s15, [sp, #36]	; 0x24
 800bf74:	f8cd e090 	str.w	lr, [sp, #144]	; 0x90
 800bf78:	ee17 6a10 	vmov	r6, s14
 800bf7c:	eeb0 7a67 	vmov.f32	s14, s15
 800bf80:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800bf84:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800bf88:	f8cd c0a0 	str.w	ip, [sp, #160]	; 0xa0
 800bf8c:	ee17 0a10 	vmov	r0, s14
 800bf90:	eeb0 7a67 	vmov.f32	s14, s15
 800bf94:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800bf98:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800bf9c:	961c      	str	r6, [sp, #112]	; 0x70
 800bf9e:	ee17 1a10 	vmov	r1, s14
 800bfa2:	eeb0 7a67 	vmov.f32	s14, s15
 800bfa6:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800bfaa:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800bfae:	ed8d 9a1d 	vstr	s18, [sp, #116]	; 0x74
 800bfb2:	ee17 2a10 	vmov	r2, s14
 800bfb6:	ed9d 7a08 	vldr	s14, [sp, #32]
 800bfba:	9225      	str	r2, [sp, #148]	; 0x94
 800bfbc:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800bfc0:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800bfc4:	4a2a      	ldr	r2, [pc, #168]	; (800c070 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x240>)
 800bfc6:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 800bfca:	e9cd 0120 	strd	r0, r1, [sp, #128]	; 0x80
 800bfce:	edcd 7a26 	vstr	s15, [sp, #152]	; 0x98
 800bfd2:	f8cd b07c 	str.w	fp, [sp, #124]	; 0x7c
 800bfd6:	ed8d 8a22 	vstr	s16, [sp, #136]	; 0x88
 800bfda:	f8cd a08c 	str.w	sl, [sp, #140]	; 0x8c
 800bfde:	edcd 8a27 	vstr	s17, [sp, #156]	; 0x9c
 800bfe2:	9729      	str	r7, [sp, #164]	; 0xa4
 800bfe4:	4628      	mov	r0, r5
 800bfe6:	9314      	str	r3, [sp, #80]	; 0x50
 800bfe8:	8812      	ldrh	r2, [r2, #0]
 800bfea:	9b07      	ldr	r3, [sp, #28]
 800bfec:	9215      	str	r2, [sp, #84]	; 0x54
 800bfee:	9316      	str	r3, [sp, #88]	; 0x58
 800bff0:	f003 fa32 	bl	800f458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800bff4:	9017      	str	r0, [sp, #92]	; 0x5c
 800bff6:	4628      	mov	r0, r5
 800bff8:	f003 f8f4 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800bffc:	9018      	str	r0, [sp, #96]	; 0x60
 800bffe:	4628      	mov	r0, r5
 800c000:	f003 f92a 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c004:	9019      	str	r0, [sp, #100]	; 0x64
 800c006:	4628      	mov	r0, r5
 800c008:	f003 f8ec 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c00c:	eeb4 9a48 	vcmp.f32	s18, s16
 800c010:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c014:	901a      	str	r0, [sp, #104]	; 0x68
 800c016:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 800c01a:	d107      	bne.n	800c02c <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x1fc>
 800c01c:	eeb4 8a68 	vcmp.f32	s16, s17
 800c020:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c024:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800c028:	bf08      	it	eq
 800c02a:	461e      	moveq	r6, r3
 800c02c:	4b11      	ldr	r3, [pc, #68]	; (800c074 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x244>)
 800c02e:	681b      	ldr	r3, [r3, #0]
 800c030:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c034:	b10a      	cbz	r2, 800c03a <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x20a>
 800c036:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800c038:	b905      	cbnz	r5, 800c03c <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x20c>
 800c03a:	689d      	ldr	r5, [r3, #8]
 800c03c:	4620      	mov	r0, r4
 800c03e:	f7ff feed 	bl	800be1c <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 800c042:	f894 302a 	ldrb.w	r3, [r4, #42]	; 0x2a
 800c046:	9604      	str	r6, [sp, #16]
 800c048:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800c04c:	ab10      	add	r3, sp, #64	; 0x40
 800c04e:	9301      	str	r3, [sp, #4]
 800c050:	ab12      	add	r3, sp, #72	; 0x48
 800c052:	9300      	str	r3, [sp, #0]
 800c054:	aa1b      	add	r2, sp, #108	; 0x6c
 800c056:	ab16      	add	r3, sp, #88	; 0x58
 800c058:	a914      	add	r1, sp, #80	; 0x50
 800c05a:	4628      	mov	r0, r5
 800c05c:	f000 fb1c 	bl	800c698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>
 800c060:	b02b      	add	sp, #172	; 0xac
 800c062:	ecbd 8b04 	vpop	{d8-d9}
 800c066:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c06a:	2300      	movs	r3, #0
 800c06c:	930f      	str	r3, [sp, #60]	; 0x3c
 800c06e:	e71f      	b.n	800beb0 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_+0x80>
 800c070:	20001436 	.word	0x20001436
 800c074:	2000143c 	.word	0x2000143c

0800c078 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 800c078:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c07c:	ed2d 8b08 	vpush	{d8-d11}
 800c080:	f890 302a 	ldrb.w	r3, [r0, #42]	; 0x2a
 800c084:	b095      	sub	sp, #84	; 0x54
 800c086:	4604      	mov	r4, r0
 800c088:	4688      	mov	r8, r1
 800c08a:	2b00      	cmp	r3, #0
 800c08c:	f000 80ac 	beq.w	800c1e8 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x170>
 800c090:	4e77      	ldr	r6, [pc, #476]	; (800c270 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x1f8>)
 800c092:	6830      	ldr	r0, [r6, #0]
 800c094:	6803      	ldr	r3, [r0, #0]
 800c096:	6a1b      	ldr	r3, [r3, #32]
 800c098:	4798      	blx	r3
 800c09a:	f104 0528 	add.w	r5, r4, #40	; 0x28
 800c09e:	4681      	mov	r9, r0
 800c0a0:	4628      	mov	r0, r5
 800c0a2:	f003 f89f 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c0a6:	ee07 0a90 	vmov	s15, r0
 800c0aa:	4628      	mov	r0, r5
 800c0ac:	eeb8 aa67 	vcvt.f32.u32	s20, s15
 800c0b0:	f003 f8d2 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c0b4:	4b6f      	ldr	r3, [pc, #444]	; (800c274 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x1fc>)
 800c0b6:	781b      	ldrb	r3, [r3, #0]
 800c0b8:	ee07 0a90 	vmov	s15, r0
 800c0bc:	2b01      	cmp	r3, #1
 800c0be:	eef8 8a67 	vcvt.f32.u32	s17, s15
 800c0c2:	eebf 8a00 	vmov.f32	s16, #240	; 0xbf800000 -1.0
 800c0c6:	f040 8094 	bne.w	800c1f2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x17a>
 800c0ca:	eef0 aa4a 	vmov.f32	s21, s20
 800c0ce:	eeb0 ba68 	vmov.f32	s22, s17
 800c0d2:	eef0 9a68 	vmov.f32	s19, s17
 800c0d6:	ee1a 5a10 	vmov	r5, s20
 800c0da:	eef0 8a48 	vmov.f32	s17, s16
 800c0de:	eeb0 aa48 	vmov.f32	s20, s16
 800c0e2:	ed94 7a17 	vldr	s14, [r4, #92]	; 0x5c
 800c0e6:	edd4 7a18 	vldr	s15, [r4, #96]	; 0x60
 800c0ea:	ed94 6a1b 	vldr	s12, [r4, #108]	; 0x6c
 800c0ee:	edd4 5a1d 	vldr	s11, [r4, #116]	; 0x74
 800c0f2:	ed94 5a1a 	vldr	s10, [r4, #104]	; 0x68
 800c0f6:	edd4 6a1e 	vldr	s13, [r4, #120]	; 0x78
 800c0fa:	6f22      	ldr	r2, [r4, #112]	; 0x70
 800c0fc:	6e61      	ldr	r1, [r4, #100]	; 0x64
 800c0fe:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 800c100:	ee76 4a67 	vsub.f32	s9, s12, s15
 800c104:	ee35 9ac7 	vsub.f32	s18, s11, s14
 800c108:	ee35 4a47 	vsub.f32	s8, s10, s14
 800c10c:	ee29 9a64 	vnmul.f32	s18, s18, s9
 800c110:	ee76 4ae7 	vsub.f32	s9, s13, s15
 800c114:	eea4 9a24 	vfma.f32	s18, s8, s9
 800c118:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 800c11c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c120:	dd70      	ble.n	800c204 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x18c>
 800c122:	ed8d 7a05 	vstr	s14, [sp, #20]
 800c126:	ed8d 5a06 	vstr	s10, [sp, #24]
 800c12a:	edcd 5a07 	vstr	s11, [sp, #28]
 800c12e:	edcd 7a08 	vstr	s15, [sp, #32]
 800c132:	ed8d 6a09 	vstr	s12, [sp, #36]	; 0x24
 800c136:	edcd 6a0a 	vstr	s13, [sp, #40]	; 0x28
 800c13a:	910b      	str	r1, [sp, #44]	; 0x2c
 800c13c:	920c      	str	r2, [sp, #48]	; 0x30
 800c13e:	930d      	str	r3, [sp, #52]	; 0x34
 800c140:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800c144:	ed8d aa0f 	vstr	s20, [sp, #60]	; 0x3c
 800c148:	edcd 9a10 	vstr	s19, [sp, #64]	; 0x40
 800c14c:	9511      	str	r5, [sp, #68]	; 0x44
 800c14e:	ed8d 8a12 	vstr	s16, [sp, #72]	; 0x48
 800c152:	ab0e      	add	r3, sp, #56	; 0x38
 800c154:	9302      	str	r3, [sp, #8]
 800c156:	ab0b      	add	r3, sp, #44	; 0x2c
 800c158:	9301      	str	r3, [sp, #4]
 800c15a:	af11      	add	r7, sp, #68	; 0x44
 800c15c:	ab08      	add	r3, sp, #32
 800c15e:	9300      	str	r3, [sp, #0]
 800c160:	464a      	mov	r2, r9
 800c162:	ab05      	add	r3, sp, #20
 800c164:	4641      	mov	r1, r8
 800c166:	4620      	mov	r0, r4
 800c168:	9703      	str	r7, [sp, #12]
 800c16a:	edcd 8a13 	vstr	s17, [sp, #76]	; 0x4c
 800c16e:	f7ff fe5f 	bl	800be30 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800c172:	eeb5 9ac0 	vcmpe.f32	s18, #0.0
 800c176:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c17a:	f8d4 e05c 	ldr.w	lr, [r4, #92]	; 0x5c
 800c17e:	6e20      	ldr	r0, [r4, #96]	; 0x60
 800c180:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800c182:	f8d4 c074 	ldr.w	ip, [r4, #116]	; 0x74
 800c186:	6fa1      	ldr	r1, [r4, #120]	; 0x78
 800c188:	6fe3      	ldr	r3, [r4, #124]	; 0x7c
 800c18a:	dd54      	ble.n	800c236 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x1be>
 800c18c:	f8cd c018 	str.w	ip, [sp, #24]
 800c190:	9109      	str	r1, [sp, #36]	; 0x24
 800c192:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 800c196:	f8d4 1084 	ldr.w	r1, [r4, #132]	; 0x84
 800c19a:	930c      	str	r3, [sp, #48]	; 0x30
 800c19c:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
 800c1a0:	f8cd e014 	str.w	lr, [sp, #20]
 800c1a4:	f8cd c01c 	str.w	ip, [sp, #28]
 800c1a8:	9008      	str	r0, [sp, #32]
 800c1aa:	910a      	str	r1, [sp, #40]	; 0x28
 800c1ac:	920b      	str	r2, [sp, #44]	; 0x2c
 800c1ae:	930d      	str	r3, [sp, #52]	; 0x34
 800c1b0:	ed8d 8a0e 	vstr	s16, [sp, #56]	; 0x38
 800c1b4:	edcd 9a0f 	vstr	s19, [sp, #60]	; 0x3c
 800c1b8:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800c1bc:	9511      	str	r5, [sp, #68]	; 0x44
 800c1be:	edcd 8a12 	vstr	s17, [sp, #72]	; 0x48
 800c1c2:	ab0e      	add	r3, sp, #56	; 0x38
 800c1c4:	9302      	str	r3, [sp, #8]
 800c1c6:	ab0b      	add	r3, sp, #44	; 0x2c
 800c1c8:	9301      	str	r3, [sp, #4]
 800c1ca:	ab08      	add	r3, sp, #32
 800c1cc:	9300      	str	r3, [sp, #0]
 800c1ce:	4620      	mov	r0, r4
 800c1d0:	ab05      	add	r3, sp, #20
 800c1d2:	9703      	str	r7, [sp, #12]
 800c1d4:	464a      	mov	r2, r9
 800c1d6:	4641      	mov	r1, r8
 800c1d8:	edcd aa13 	vstr	s21, [sp, #76]	; 0x4c
 800c1dc:	f7ff fe28 	bl	800be30 <_ZNK8touchgfx13TextureMapper12drawTriangleERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800c1e0:	6830      	ldr	r0, [r6, #0]
 800c1e2:	6803      	ldr	r3, [r0, #0]
 800c1e4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1e6:	4798      	blx	r3
 800c1e8:	b015      	add	sp, #84	; 0x54
 800c1ea:	ecbd 8b08 	vpop	{d8-d11}
 800c1ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c1f2:	eef0 aa68 	vmov.f32	s21, s17
 800c1f6:	eef0 9a4a 	vmov.f32	s19, s20
 800c1fa:	eeb0 ba48 	vmov.f32	s22, s16
 800c1fe:	ee18 5a10 	vmov	r5, s16
 800c202:	e76e      	b.n	800c0e2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x6a>
 800c204:	ed8d 7a06 	vstr	s14, [sp, #24]
 800c208:	ed8d 5a05 	vstr	s10, [sp, #20]
 800c20c:	edcd 5a07 	vstr	s11, [sp, #28]
 800c210:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800c214:	ed8d 6a08 	vstr	s12, [sp, #32]
 800c218:	edcd 6a0a 	vstr	s13, [sp, #40]	; 0x28
 800c21c:	910c      	str	r1, [sp, #48]	; 0x30
 800c21e:	920b      	str	r2, [sp, #44]	; 0x2c
 800c220:	930d      	str	r3, [sp, #52]	; 0x34
 800c222:	ed8d 8a0f 	vstr	s16, [sp, #60]	; 0x3c
 800c226:	ed8d aa0e 	vstr	s20, [sp, #56]	; 0x38
 800c22a:	edcd 9a10 	vstr	s19, [sp, #64]	; 0x40
 800c22e:	9512      	str	r5, [sp, #72]	; 0x48
 800c230:	ed8d 8a11 	vstr	s16, [sp, #68]	; 0x44
 800c234:	e78d      	b.n	800c152 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xda>
 800c236:	f8cd c014 	str.w	ip, [sp, #20]
 800c23a:	9108      	str	r1, [sp, #32]
 800c23c:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 800c240:	f8d4 1084 	ldr.w	r1, [r4, #132]	; 0x84
 800c244:	930b      	str	r3, [sp, #44]	; 0x2c
 800c246:	f8d4 3088 	ldr.w	r3, [r4, #136]	; 0x88
 800c24a:	f8cd e018 	str.w	lr, [sp, #24]
 800c24e:	f8cd c01c 	str.w	ip, [sp, #28]
 800c252:	9009      	str	r0, [sp, #36]	; 0x24
 800c254:	910a      	str	r1, [sp, #40]	; 0x28
 800c256:	920c      	str	r2, [sp, #48]	; 0x30
 800c258:	930d      	str	r3, [sp, #52]	; 0x34
 800c25a:	ed8d 8a0f 	vstr	s16, [sp, #60]	; 0x3c
 800c25e:	edcd 9a0e 	vstr	s19, [sp, #56]	; 0x38
 800c262:	ed8d ba10 	vstr	s22, [sp, #64]	; 0x40
 800c266:	9512      	str	r5, [sp, #72]	; 0x48
 800c268:	edcd 8a11 	vstr	s17, [sp, #68]	; 0x44
 800c26c:	e7a9      	b.n	800c1c2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x14a>
 800c26e:	bf00      	nop
 800c270:	2000143c 	.word	0x2000143c
 800c274:	20001434 	.word	0x20001434

0800c278 <_ZNK8touchgfx3Box12getSolidRectEv>:
 800c278:	2300      	movs	r3, #0
 800c27a:	8003      	strh	r3, [r0, #0]
 800c27c:	8043      	strh	r3, [r0, #2]
 800c27e:	8083      	strh	r3, [r0, #4]
 800c280:	80c3      	strh	r3, [r0, #6]
 800c282:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800c286:	b91b      	cbnz	r3, 800c290 <_ZNK8touchgfx3Box12getSolidRectEv+0x18>
 800c288:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800c28c:	2bff      	cmp	r3, #255	; 0xff
 800c28e:	d103      	bne.n	800c298 <_ZNK8touchgfx3Box12getSolidRectEv+0x20>
 800c290:	890b      	ldrh	r3, [r1, #8]
 800c292:	8083      	strh	r3, [r0, #4]
 800c294:	894b      	ldrh	r3, [r1, #10]
 800c296:	80c3      	strh	r3, [r0, #6]
 800c298:	4770      	bx	lr
	...

0800c29c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800c29c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c29e:	4604      	mov	r4, r0
 800c2a0:	6808      	ldr	r0, [r1, #0]
 800c2a2:	6849      	ldr	r1, [r1, #4]
 800c2a4:	466b      	mov	r3, sp
 800c2a6:	c303      	stmia	r3!, {r0, r1}
 800c2a8:	6823      	ldr	r3, [r4, #0]
 800c2aa:	4669      	mov	r1, sp
 800c2ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2ae:	4620      	mov	r0, r4
 800c2b0:	4798      	blx	r3
 800c2b2:	4b08      	ldr	r3, [pc, #32]	; (800c2d4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800c2b4:	681b      	ldr	r3, [r3, #0]
 800c2b6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c2ba:	b10a      	cbz	r2, 800c2c0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800c2bc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c2be:	b900      	cbnz	r0, 800c2c2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800c2c0:	6898      	ldr	r0, [r3, #8]
 800c2c2:	6803      	ldr	r3, [r0, #0]
 800c2c4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800c2c6:	69dd      	ldr	r5, [r3, #28]
 800c2c8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800c2cc:	4669      	mov	r1, sp
 800c2ce:	47a8      	blx	r5
 800c2d0:	b003      	add	sp, #12
 800c2d2:	bd30      	pop	{r4, r5, pc}
 800c2d4:	2000143c 	.word	0x2000143c

0800c2d8 <_ZN8touchgfx5ImageD1Ev>:
 800c2d8:	4770      	bx	lr

0800c2da <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800c2da:	b570      	push	{r4, r5, r6, lr}
 800c2dc:	4605      	mov	r5, r0
 800c2de:	880b      	ldrh	r3, [r1, #0]
 800c2e0:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c2e2:	f855 3b26 	ldr.w	r3, [r5], #38
 800c2e6:	4604      	mov	r4, r0
 800c2e8:	4628      	mov	r0, r5
 800c2ea:	6b9e      	ldr	r6, [r3, #56]	; 0x38
 800c2ec:	f002 ff7a 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c2f0:	b201      	sxth	r1, r0
 800c2f2:	4620      	mov	r0, r4
 800c2f4:	47b0      	blx	r6
 800c2f6:	6823      	ldr	r3, [r4, #0]
 800c2f8:	4628      	mov	r0, r5
 800c2fa:	6bde      	ldr	r6, [r3, #60]	; 0x3c
 800c2fc:	f002 ffac 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c300:	b201      	sxth	r1, r0
 800c302:	4620      	mov	r0, r4
 800c304:	47b0      	blx	r6
 800c306:	4628      	mov	r0, r5
 800c308:	f003 f83a 	bl	800f380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800c30c:	f884 0029 	strb.w	r0, [r4, #41]	; 0x29
 800c310:	bd70      	pop	{r4, r5, r6, pc}

0800c312 <_ZN8touchgfx5ImageD0Ev>:
 800c312:	b510      	push	{r4, lr}
 800c314:	212c      	movs	r1, #44	; 0x2c
 800c316:	4604      	mov	r4, r0
 800c318:	f00e fbf0 	bl	801aafc <_ZdlPvj>
 800c31c:	4620      	mov	r0, r4
 800c31e:	bd10      	pop	{r4, pc}

0800c320 <_ZNK8touchgfx5Image12getSolidRectEv>:
 800c320:	b510      	push	{r4, lr}
 800c322:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800c326:	2bff      	cmp	r3, #255	; 0xff
 800c328:	4604      	mov	r4, r0
 800c32a:	d006      	beq.n	800c33a <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800c32c:	2300      	movs	r3, #0
 800c32e:	8003      	strh	r3, [r0, #0]
 800c330:	8043      	strh	r3, [r0, #2]
 800c332:	8083      	strh	r3, [r0, #4]
 800c334:	80c3      	strh	r3, [r0, #6]
 800c336:	4620      	mov	r0, r4
 800c338:	bd10      	pop	{r4, pc}
 800c33a:	3126      	adds	r1, #38	; 0x26
 800c33c:	f002 ffc6 	bl	800f2cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800c340:	e7f9      	b.n	800c336 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>
	...

0800c344 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800c344:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c348:	4604      	mov	r4, r0
 800c34a:	b088      	sub	sp, #32
 800c34c:	f854 3b26 	ldr.w	r3, [r4], #38
 800c350:	2500      	movs	r5, #0
 800c352:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c354:	460f      	mov	r7, r1
 800c356:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800c35a:	a904      	add	r1, sp, #16
 800c35c:	4606      	mov	r6, r0
 800c35e:	4798      	blx	r3
 800c360:	4620      	mov	r0, r4
 800c362:	f002 ff3f 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c366:	4680      	mov	r8, r0
 800c368:	4620      	mov	r0, r4
 800c36a:	f002 ff75 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c36e:	9506      	str	r5, [sp, #24]
 800c370:	ad06      	add	r5, sp, #24
 800c372:	f8ad 001e 	strh.w	r0, [sp, #30]
 800c376:	4639      	mov	r1, r7
 800c378:	4628      	mov	r0, r5
 800c37a:	f8ad 801c 	strh.w	r8, [sp, #28]
 800c37e:	f7fe f8d3 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800c382:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800c386:	b1c3      	cbz	r3, 800c3ba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x76>
 800c388:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800c38c:	b1ab      	cbz	r3, 800c3ba <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x76>
 800c38e:	4b0c      	ldr	r3, [pc, #48]	; (800c3c0 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7c>)
 800c390:	681b      	ldr	r3, [r3, #0]
 800c392:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c396:	b10a      	cbz	r2, 800c39c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x58>
 800c398:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c39a:	b900      	cbnz	r0, 800c39e <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5a>
 800c39c:	6898      	ldr	r0, [r3, #8]
 800c39e:	6801      	ldr	r1, [r0, #0]
 800c3a0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800c3a4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800c3a8:	2701      	movs	r7, #1
 800c3aa:	9702      	str	r7, [sp, #8]
 800c3ac:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800c3b0:	e9cd 5600 	strd	r5, r6, [sp]
 800c3b4:	68cd      	ldr	r5, [r1, #12]
 800c3b6:	4621      	mov	r1, r4
 800c3b8:	47a8      	blx	r5
 800c3ba:	b008      	add	sp, #32
 800c3bc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c3c0:	2000143c 	.word	0x2000143c

0800c3c4 <_ZN8touchgfx3LCD4initEv>:
 800c3c4:	4770      	bx	lr

0800c3c6 <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800c3c6:	2000      	movs	r0, #0
 800c3c8:	4770      	bx	lr

0800c3ca <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 800c3ca:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3ce:	b091      	sub	sp, #68	; 0x44
 800c3d0:	4699      	mov	r9, r3
 800c3d2:	f8dd a06c 	ldr.w	sl, [sp, #108]	; 0x6c
 800c3d6:	9c1d      	ldr	r4, [sp, #116]	; 0x74
 800c3d8:	f9ba 300c 	ldrsh.w	r3, [sl, #12]
 800c3dc:	f8ad 303e 	strh.w	r3, [sp, #62]	; 0x3e
 800c3e0:	4680      	mov	r8, r0
 800c3e2:	4617      	mov	r7, r2
 800c3e4:	a80e      	add	r0, sp, #56	; 0x38
 800c3e6:	f9ba 2008 	ldrsh.w	r2, [sl, #8]
 800c3ea:	f8ad 203c 	strh.w	r2, [sp, #60]	; 0x3c
 800c3ee:	2500      	movs	r5, #0
 800c3f0:	910d      	str	r1, [sp, #52]	; 0x34
 800c3f2:	950e      	str	r5, [sp, #56]	; 0x38
 800c3f4:	f000 fbd6 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800c3f8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 800c3fa:	f8d9 6000 	ldr.w	r6, [r9]
 800c3fe:	6818      	ldr	r0, [r3, #0]
 800c400:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 800c402:	f9b4 b000 	ldrsh.w	fp, [r4]
 800c406:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c40a:	eb02 0c06 	add.w	ip, r2, r6
 800c40e:	1b80      	subs	r0, r0, r6
 800c410:	ebab 0e0c 	sub.w	lr, fp, ip
 800c414:	4570      	cmp	r0, lr
 800c416:	f340 80bd 	ble.w	800c594 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c41a:	88a1      	ldrh	r1, [r4, #4]
 800c41c:	4459      	add	r1, fp
 800c41e:	b209      	sxth	r1, r1
 800c420:	458c      	cmp	ip, r1
 800c422:	f300 80b7 	bgt.w	800c594 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c426:	f8bd 3080 	ldrh.w	r3, [sp, #128]	; 0x80
 800c42a:	ed97 4a09 	vldr	s8, [r7, #36]	; 0x24
 800c42e:	edd7 4a0b 	vldr	s9, [r7, #44]	; 0x2c
 800c432:	edd9 6a07 	vldr	s13, [r9, #28]
 800c436:	edd9 1a0a 	vldr	s3, [r9, #40]	; 0x28
 800c43a:	ed99 2a0d 	vldr	s4, [r9, #52]	; 0x34
 800c43e:	4283      	cmp	r3, r0
 800c440:	bfa8      	it	ge
 800c442:	4603      	movge	r3, r0
 800c444:	ee07 3a90 	vmov	s15, r3
 800c448:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 800c44c:	edd7 7a0d 	vldr	s15, [r7, #52]	; 0x34
 800c450:	ee25 4a04 	vmul.f32	s8, s10, s8
 800c454:	ee65 4a24 	vmul.f32	s9, s10, s9
 800c458:	ee25 5a27 	vmul.f32	s10, s10, s15
 800c45c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800c460:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800c464:	45e3      	cmp	fp, ip
 800c466:	ee71 0aa4 	vadd.f32	s1, s3, s9
 800c46a:	ee32 1a05 	vadd.f32	s2, s4, s10
 800c46e:	ee36 0a84 	vadd.f32	s0, s13, s8
 800c472:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c476:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c47a:	f340 808e 	ble.w	800c59a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1d0>
 800c47e:	fb9e f5f3 	sdiv	r5, lr, r3
 800c482:	ee07 5a10 	vmov	s14, r5
 800c486:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800c48a:	2d00      	cmp	r5, #0
 800c48c:	fb03 e415 	mls	r4, r3, r5, lr
 800c490:	eea7 0a04 	vfma.f32	s0, s14, s8
 800c494:	eee7 0a24 	vfma.f32	s1, s14, s9
 800c498:	eea7 1a05 	vfma.f32	s2, s14, s10
 800c49c:	dd13      	ble.n	800c4c6 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfc>
 800c49e:	ee70 6a44 	vsub.f32	s13, s0, s8
 800c4a2:	ee70 1ae4 	vsub.f32	s3, s1, s9
 800c4a6:	eef5 6a40 	vcmp.f32	s13, #0.0
 800c4aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c4ae:	bf18      	it	ne
 800c4b0:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 800c4b4:	ee31 2a45 	vsub.f32	s4, s2, s10
 800c4b8:	bf08      	it	eq
 800c4ba:	eeb0 7a67 	vmoveq.f32	s14, s15
 800c4be:	ee61 1a87 	vmul.f32	s3, s3, s14
 800c4c2:	ee22 2a07 	vmul.f32	s4, s4, s14
 800c4c6:	fb05 f703 	mul.w	r7, r5, r3
 800c4ca:	1bc0      	subs	r0, r0, r7
 800c4cc:	443e      	add	r6, r7
 800c4ce:	1997      	adds	r7, r2, r6
 800c4d0:	4407      	add	r7, r0
 800c4d2:	42b9      	cmp	r1, r7
 800c4d4:	bfbc      	itt	lt
 800c4d6:	1a88      	sublt	r0, r1, r2
 800c4d8:	1b80      	sublt	r0, r0, r6
 800c4da:	2800      	cmp	r0, #0
 800c4dc:	dd5a      	ble.n	800c594 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x1ca>
 800c4de:	fb90 f1f3 	sdiv	r1, r0, r3
 800c4e2:	fb03 0211 	mls	r2, r3, r1, r0
 800c4e6:	b90a      	cbnz	r2, 800c4ec <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x122>
 800c4e8:	3901      	subs	r1, #1
 800c4ea:	461a      	mov	r2, r3
 800c4ec:	eec7 3a80 	vdiv.f32	s7, s15, s0
 800c4f0:	f89d b07c 	ldrb.w	fp, [sp, #124]	; 0x7c
 800c4f4:	44a4      	add	ip, r4
 800c4f6:	fb03 c505 	mla	r5, r3, r5, ip
 800c4fa:	2900      	cmp	r1, #0
 800c4fc:	bfcc      	ite	gt
 800c4fe:	469e      	movgt	lr, r3
 800c500:	4696      	movle	lr, r2
 800c502:	eef0 6a42 	vmov.f32	s13, s4
 800c506:	ee60 2aa3 	vmul.f32	s5, s1, s7
 800c50a:	ee21 3a23 	vmul.f32	s6, s2, s7
 800c50e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 800c512:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800c516:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c51a:	eeb0 7a61 	vmov.f32	s14, s3
 800c51e:	ee17 0a90 	vmov	r0, s15
 800c522:	ee73 7a42 	vsub.f32	s15, s6, s4
 800c526:	fb90 f6f3 	sdiv	r6, r0, r3
 800c52a:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 800c52e:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 800c532:	ee17 0a90 	vmov	r0, s15
 800c536:	fb90 f7f3 	sdiv	r7, r0, r3
 800c53a:	f8d8 0004 	ldr.w	r0, [r8, #4]
 800c53e:	900c      	str	r0, [sp, #48]	; 0x30
 800c540:	f8d0 8000 	ldr.w	r8, [r0]
 800c544:	981c      	ldr	r0, [sp, #112]	; 0x70
 800c546:	e9cd ab0a 	strd	sl, fp, [sp, #40]	; 0x28
 800c54a:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 800c54e:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 800c552:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 800c556:	f8cd a020 	str.w	sl, [sp, #32]
 800c55a:	f9b0 a002 	ldrsh.w	sl, [r0, #2]
 800c55e:	980d      	ldr	r0, [sp, #52]	; 0x34
 800c560:	f8d9 9014 	ldr.w	r9, [r9, #20]
 800c564:	9603      	str	r6, [sp, #12]
 800c566:	e9cd 7004 	strd	r7, r0, [sp, #16]
 800c56a:	ee16 0a90 	vmov	r0, s13
 800c56e:	fb07 0704 	mla	r7, r7, r4, r0
 800c572:	ee17 0a10 	vmov	r0, s14
 800c576:	fb06 0604 	mla	r6, r6, r4, r0
 800c57a:	e9cd 3600 	strd	r3, r6, [sp]
 800c57e:	44ca      	add	sl, r9
 800c580:	f8cd a01c 	str.w	sl, [sp, #28]
 800c584:	9506      	str	r5, [sp, #24]
 800c586:	9702      	str	r7, [sp, #8]
 800c588:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800c58c:	980c      	ldr	r0, [sp, #48]	; 0x30
 800c58e:	ebae 0304 	sub.w	r3, lr, r4
 800c592:	47a8      	blx	r5
 800c594:	b011      	add	sp, #68	; 0x44
 800c596:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c59a:	462c      	mov	r4, r5
 800c59c:	e797      	b.n	800c4ce <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x104>

0800c59e <_ZN8touchgfx4Edge4stepEv>:
 800c59e:	b510      	push	{r4, lr}
 800c5a0:	e9d0 1200 	ldrd	r1, r2, [r0]
 800c5a4:	4411      	add	r1, r2
 800c5a6:	6942      	ldr	r2, [r0, #20]
 800c5a8:	6001      	str	r1, [r0, #0]
 800c5aa:	3201      	adds	r2, #1
 800c5ac:	4603      	mov	r3, r0
 800c5ae:	6142      	str	r2, [r0, #20]
 800c5b0:	ed93 7a0a 	vldr	s14, [r3, #40]	; 0x28
 800c5b4:	edd3 7a0b 	vldr	s15, [r3, #44]	; 0x2c
 800c5b8:	edd3 6a0e 	vldr	s13, [r3, #56]	; 0x38
 800c5bc:	691a      	ldr	r2, [r3, #16]
 800c5be:	689c      	ldr	r4, [r3, #8]
 800c5c0:	ed93 6a08 	vldr	s12, [r3, #32]
 800c5c4:	6980      	ldr	r0, [r0, #24]
 800c5c6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800c5ca:	edd3 7a0d 	vldr	s15, [r3, #52]	; 0x34
 800c5ce:	ed83 7a0a 	vstr	s14, [r3, #40]	; 0x28
 800c5d2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800c5d6:	edd3 6a07 	vldr	s13, [r3, #28]
 800c5da:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
 800c5de:	4422      	add	r2, r4
 800c5e0:	68dc      	ldr	r4, [r3, #12]
 800c5e2:	611a      	str	r2, [r3, #16]
 800c5e4:	ee76 6a86 	vadd.f32	s13, s13, s12
 800c5e8:	3801      	subs	r0, #1
 800c5ea:	42a2      	cmp	r2, r4
 800c5ec:	6198      	str	r0, [r3, #24]
 800c5ee:	edc3 6a07 	vstr	s13, [r3, #28]
 800c5f2:	db15      	blt.n	800c620 <_ZN8touchgfx4Edge4stepEv+0x82>
 800c5f4:	ed93 6a09 	vldr	s12, [r3, #36]	; 0x24
 800c5f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 800c5fc:	3101      	adds	r1, #1
 800c5fe:	edc3 6a07 	vstr	s13, [r3, #28]
 800c602:	edd3 6a0c 	vldr	s13, [r3, #48]	; 0x30
 800c606:	6019      	str	r1, [r3, #0]
 800c608:	ee36 7a87 	vadd.f32	s14, s13, s14
 800c60c:	1b12      	subs	r2, r2, r4
 800c60e:	ed83 7a0a 	vstr	s14, [r3, #40]	; 0x28
 800c612:	ed93 7a0f 	vldr	s14, [r3, #60]	; 0x3c
 800c616:	611a      	str	r2, [r3, #16]
 800c618:	ee77 7a27 	vadd.f32	s15, s14, s15
 800c61c:	edc3 7a0d 	vstr	s15, [r3, #52]	; 0x34
 800c620:	bd10      	pop	{r4, pc}

0800c622 <_ZN8touchgfx4Edge4stepEi>:
 800c622:	b538      	push	{r3, r4, r5, lr}
 800c624:	4605      	mov	r5, r0
 800c626:	460c      	mov	r4, r1
 800c628:	2c00      	cmp	r4, #0
 800c62a:	dd04      	ble.n	800c636 <_ZN8touchgfx4Edge4stepEi+0x14>
 800c62c:	4628      	mov	r0, r5
 800c62e:	f7ff ffb6 	bl	800c59e <_ZN8touchgfx4Edge4stepEv>
 800c632:	3c01      	subs	r4, #1
 800c634:	e7f8      	b.n	800c628 <_ZN8touchgfx4Edge4stepEi+0x6>
 800c636:	69a8      	ldr	r0, [r5, #24]
 800c638:	bd38      	pop	{r3, r4, r5, pc}

0800c63a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800c63a:	b510      	push	{r4, lr}
 800c63c:	2b02      	cmp	r3, #2
 800c63e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800c642:	d00b      	beq.n	800c65c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800c644:	2b03      	cmp	r3, #3
 800c646:	d00e      	beq.n	800c666 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800c648:	2b01      	cmp	r3, #1
 800c64a:	d001      	beq.n	800c650 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800c64c:	1860      	adds	r0, r4, r1
 800c64e:	bd10      	pop	{r4, pc}
 800c650:	8880      	ldrh	r0, [r0, #4]
 800c652:	4420      	add	r0, r4
 800c654:	b200      	sxth	r0, r0
 800c656:	1a80      	subs	r0, r0, r2
 800c658:	3801      	subs	r0, #1
 800c65a:	e7f8      	b.n	800c64e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800c65c:	8880      	ldrh	r0, [r0, #4]
 800c65e:	4420      	add	r0, r4
 800c660:	b200      	sxth	r0, r0
 800c662:	1a40      	subs	r0, r0, r1
 800c664:	e7f8      	b.n	800c658 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800c666:	18a0      	adds	r0, r4, r2
 800c668:	e7f1      	b.n	800c64e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800c66a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800c66a:	b510      	push	{r4, lr}
 800c66c:	2b02      	cmp	r3, #2
 800c66e:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800c672:	d006      	beq.n	800c682 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800c674:	2b03      	cmp	r3, #3
 800c676:	d00a      	beq.n	800c68e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800c678:	2b01      	cmp	r3, #1
 800c67a:	bf14      	ite	ne
 800c67c:	18a0      	addne	r0, r4, r2
 800c67e:	1860      	addeq	r0, r4, r1
 800c680:	bd10      	pop	{r4, pc}
 800c682:	88c0      	ldrh	r0, [r0, #6]
 800c684:	4420      	add	r0, r4
 800c686:	b200      	sxth	r0, r0
 800c688:	1a80      	subs	r0, r0, r2
 800c68a:	3801      	subs	r0, #1
 800c68c:	e7f8      	b.n	800c680 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800c68e:	88c0      	ldrh	r0, [r0, #6]
 800c690:	4420      	add	r0, r4
 800c692:	b200      	sxth	r0, r0
 800c694:	1a40      	subs	r0, r0, r1
 800c696:	e7f8      	b.n	800c68a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>

0800c698 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800c698:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c69c:	b0d1      	sub	sp, #324	; 0x144
 800c69e:	4614      	mov	r4, r2
 800c6a0:	9309      	str	r3, [sp, #36]	; 0x24
 800c6a2:	f8bd 3170 	ldrh.w	r3, [sp, #368]	; 0x170
 800c6a6:	930a      	str	r3, [sp, #40]	; 0x28
 800c6a8:	f89d 3174 	ldrb.w	r3, [sp, #372]	; 0x174
 800c6ac:	930b      	str	r3, [sp, #44]	; 0x2c
 800c6ae:	f8bd 3178 	ldrh.w	r3, [sp, #376]	; 0x178
 800c6b2:	930d      	str	r3, [sp, #52]	; 0x34
 800c6b4:	6803      	ldr	r3, [r0, #0]
 800c6b6:	910c      	str	r1, [sp, #48]	; 0x30
 800c6b8:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800c6ba:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c6bc:	9f5b      	ldr	r7, [sp, #364]	; 0x16c
 800c6be:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800c6c2:	4683      	mov	fp, r0
 800c6c4:	47a8      	blx	r5
 800c6c6:	f8cb 0004 	str.w	r0, [fp, #4]
 800c6ca:	2800      	cmp	r0, #0
 800c6cc:	f000 814a 	beq.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c6d0:	ed94 7a02 	vldr	s14, [r4, #8]
 800c6d4:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800c6d8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c6dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6e0:	f240 8140 	bls.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c6e4:	ed94 7a07 	vldr	s14, [r4, #28]
 800c6e8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c6ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c6f0:	f240 8138 	bls.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c6f4:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800c6f8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800c6fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800c700:	f240 8130 	bls.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c704:	6822      	ldr	r2, [r4, #0]
 800c706:	4b99      	ldr	r3, [pc, #612]	; (800c96c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2d4>)
 800c708:	429a      	cmp	r2, r3
 800c70a:	f2c0 812b 	blt.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c70e:	4998      	ldr	r1, [pc, #608]	; (800c970 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2d8>)
 800c710:	6963      	ldr	r3, [r4, #20]
 800c712:	428a      	cmp	r2, r1
 800c714:	f300 8126 	bgt.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c718:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c71c:	4895      	ldr	r0, [pc, #596]	; (800c974 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2dc>)
 800c71e:	33ff      	adds	r3, #255	; 0xff
 800c720:	4283      	cmp	r3, r0
 800c722:	f200 811f 	bhi.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c726:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800c728:	4a93      	ldr	r2, [pc, #588]	; (800c978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2e0>)
 800c72a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800c72e:	33ff      	adds	r3, #255	; 0xff
 800c730:	4293      	cmp	r3, r2
 800c732:	f200 8117 	bhi.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c736:	6862      	ldr	r2, [r4, #4]
 800c738:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800c73c:	33ff      	adds	r3, #255	; 0xff
 800c73e:	4283      	cmp	r3, r0
 800c740:	f200 8110 	bhi.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c744:	69a1      	ldr	r1, [r4, #24]
 800c746:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800c74a:	33ff      	adds	r3, #255	; 0xff
 800c74c:	4283      	cmp	r3, r0
 800c74e:	f200 8109 	bhi.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c752:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800c754:	4d88      	ldr	r5, [pc, #544]	; (800c978 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2e0>)
 800c756:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800c75a:	30ff      	adds	r0, #255	; 0xff
 800c75c:	42a8      	cmp	r0, r5
 800c75e:	f200 8101 	bhi.w	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c762:	428a      	cmp	r2, r1
 800c764:	f280 8081 	bge.w	800c86a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1d2>
 800c768:	429a      	cmp	r2, r3
 800c76a:	f300 808a 	bgt.w	800c882 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1ea>
 800c76e:	4299      	cmp	r1, r3
 800c770:	f2c0 808e 	blt.w	800c890 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1f8>
 800c774:	2501      	movs	r5, #1
 800c776:	2602      	movs	r6, #2
 800c778:	46a9      	mov	r9, r5
 800c77a:	46b0      	mov	r8, r6
 800c77c:	f04f 0a00 	mov.w	sl, #0
 800c780:	4621      	mov	r1, r4
 800c782:	a83f      	add	r0, sp, #252	; 0xfc
 800c784:	f002 fa88 	bl	800ec98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800c788:	4622      	mov	r2, r4
 800c78a:	f8cd 9000 	str.w	r9, [sp]
 800c78e:	4653      	mov	r3, sl
 800c790:	a93f      	add	r1, sp, #252	; 0xfc
 800c792:	a80f      	add	r0, sp, #60	; 0x3c
 800c794:	f002 fbb0 	bl	800eef8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c798:	f8cd 8000 	str.w	r8, [sp]
 800c79c:	4622      	mov	r2, r4
 800c79e:	4653      	mov	r3, sl
 800c7a0:	a93f      	add	r1, sp, #252	; 0xfc
 800c7a2:	a81f      	add	r0, sp, #124	; 0x7c
 800c7a4:	f002 fba8 	bl	800eef8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c7a8:	4643      	mov	r3, r8
 800c7aa:	4622      	mov	r2, r4
 800c7ac:	f8cd 9000 	str.w	r9, [sp]
 800c7b0:	a93f      	add	r1, sp, #252	; 0xfc
 800c7b2:	a82f      	add	r0, sp, #188	; 0xbc
 800c7b4:	f002 fba0 	bl	800eef8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800c7b8:	42ae      	cmp	r6, r5
 800c7ba:	bfac      	ite	ge
 800c7bc:	ad1f      	addge	r5, sp, #124	; 0x7c
 800c7be:	ad0f      	addlt	r5, sp, #60	; 0x3c
 800c7c0:	9b5a      	ldr	r3, [sp, #360]	; 0x168
 800c7c2:	88fa      	ldrh	r2, [r7, #6]
 800c7c4:	f9b3 9002 	ldrsh.w	r9, [r3, #2]
 800c7c8:	696b      	ldr	r3, [r5, #20]
 800c7ca:	9c25      	ldr	r4, [sp, #148]	; 0x94
 800c7cc:	444b      	add	r3, r9
 800c7ce:	f9b7 9002 	ldrsh.w	r9, [r7, #2]
 800c7d2:	444a      	add	r2, r9
 800c7d4:	b212      	sxth	r2, r2
 800c7d6:	bfa7      	ittee	ge
 800c7d8:	f04f 0801 	movge.w	r8, #1
 800c7dc:	ae0f      	addge	r6, sp, #60	; 0x3c
 800c7de:	f04f 0800 	movlt.w	r8, #0
 800c7e2:	ae1f      	addlt	r6, sp, #124	; 0x7c
 800c7e4:	4293      	cmp	r3, r2
 800c7e6:	da5f      	bge.n	800c8a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800c7e8:	454b      	cmp	r3, r9
 800c7ea:	da12      	bge.n	800c812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x17a>
 800c7ec:	2c00      	cmp	r4, #0
 800c7ee:	dd5f      	ble.n	800c8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x218>
 800c7f0:	eba9 0903 	sub.w	r9, r9, r3
 800c7f4:	454c      	cmp	r4, r9
 800c7f6:	db59      	blt.n	800c8ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x214>
 800c7f8:	f1b9 0f00 	cmp.w	r9, #0
 800c7fc:	dd09      	ble.n	800c812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x17a>
 800c7fe:	4649      	mov	r1, r9
 800c800:	a81f      	add	r0, sp, #124	; 0x7c
 800c802:	f7ff ff0e 	bl	800c622 <_ZN8touchgfx4Edge4stepEi>
 800c806:	4649      	mov	r1, r9
 800c808:	a80f      	add	r0, sp, #60	; 0x3c
 800c80a:	f7ff ff0a 	bl	800c622 <_ZN8touchgfx4Edge4stepEi>
 800c80e:	eba4 0409 	sub.w	r4, r4, r9
 800c812:	2c00      	cmp	r4, #0
 800c814:	dd4c      	ble.n	800c8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x218>
 800c816:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c818:	9206      	str	r2, [sp, #24]
 800c81a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c81c:	9205      	str	r2, [sp, #20]
 800c81e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c820:	f8db 3000 	ldr.w	r3, [fp]
 800c824:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c826:	e9cd 7203 	strd	r7, r2, [sp, #12]
 800c82a:	9a5a      	ldr	r2, [sp, #360]	; 0x168
 800c82c:	9202      	str	r2, [sp, #8]
 800c82e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c830:	e9cd 6200 	strd	r6, r2, [sp]
 800c834:	4658      	mov	r0, fp
 800c836:	f8d3 9040 	ldr.w	r9, [r3, #64]	; 0x40
 800c83a:	aa3f      	add	r2, sp, #252	; 0xfc
 800c83c:	462b      	mov	r3, r5
 800c83e:	47c8      	blx	r9
 800c840:	9b5a      	ldr	r3, [sp, #360]	; 0x168
 800c842:	88f9      	ldrh	r1, [r7, #6]
 800c844:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800c848:	696b      	ldr	r3, [r5, #20]
 800c84a:	441a      	add	r2, r3
 800c84c:	887b      	ldrh	r3, [r7, #2]
 800c84e:	440b      	add	r3, r1
 800c850:	3201      	adds	r2, #1
 800c852:	b21b      	sxth	r3, r3
 800c854:	429a      	cmp	r2, r3
 800c856:	f104 34ff 	add.w	r4, r4, #4294967295
 800c85a:	da29      	bge.n	800c8b0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x218>
 800c85c:	4628      	mov	r0, r5
 800c85e:	f7ff fe9e 	bl	800c59e <_ZN8touchgfx4Edge4stepEv>
 800c862:	4630      	mov	r0, r6
 800c864:	f7ff fe9b 	bl	800c59e <_ZN8touchgfx4Edge4stepEv>
 800c868:	e7d3      	b.n	800c812 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x17a>
 800c86a:	4299      	cmp	r1, r3
 800c86c:	dc13      	bgt.n	800c896 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1fe>
 800c86e:	429a      	cmp	r2, r3
 800c870:	db14      	blt.n	800c89c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x204>
 800c872:	2602      	movs	r6, #2
 800c874:	2503      	movs	r5, #3
 800c876:	f04f 0900 	mov.w	r9, #0
 800c87a:	46b0      	mov	r8, r6
 800c87c:	f04f 0a01 	mov.w	sl, #1
 800c880:	e77e      	b.n	800c780 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 800c882:	2501      	movs	r5, #1
 800c884:	2600      	movs	r6, #0
 800c886:	46a9      	mov	r9, r5
 800c888:	46b0      	mov	r8, r6
 800c88a:	f04f 0a02 	mov.w	sl, #2
 800c88e:	e777      	b.n	800c780 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe8>
 800c890:	2502      	movs	r5, #2
 800c892:	2601      	movs	r6, #1
 800c894:	e770      	b.n	800c778 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0xe0>
 800c896:	2500      	movs	r5, #0
 800c898:	2601      	movs	r6, #1
 800c89a:	e7f4      	b.n	800c886 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1ee>
 800c89c:	2502      	movs	r5, #2
 800c89e:	2603      	movs	r6, #3
 800c8a0:	46a9      	mov	r9, r5
 800c8a2:	f04f 0800 	mov.w	r8, #0
 800c8a6:	e7e9      	b.n	800c87c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1e4>
 800c8a8:	46a1      	mov	r9, r4
 800c8aa:	e7a5      	b.n	800c7f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x160>
 800c8ac:	46a1      	mov	r9, r4
 800c8ae:	e7a6      	b.n	800c7fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x166>
 800c8b0:	9c35      	ldr	r4, [sp, #212]	; 0xd4
 800c8b2:	f1b8 0f00 	cmp.w	r8, #0
 800c8b6:	d14e      	bne.n	800c956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2be>
 800c8b8:	ae2f      	add	r6, sp, #188	; 0xbc
 800c8ba:	ad0f      	add	r5, sp, #60	; 0x3c
 800c8bc:	9b5a      	ldr	r3, [sp, #360]	; 0x168
 800c8be:	88fa      	ldrh	r2, [r7, #6]
 800c8c0:	f9b3 8002 	ldrsh.w	r8, [r3, #2]
 800c8c4:	696b      	ldr	r3, [r5, #20]
 800c8c6:	4443      	add	r3, r8
 800c8c8:	f9b7 8002 	ldrsh.w	r8, [r7, #2]
 800c8cc:	4442      	add	r2, r8
 800c8ce:	b212      	sxth	r2, r2
 800c8d0:	4293      	cmp	r3, r2
 800c8d2:	da43      	bge.n	800c95c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2c4>
 800c8d4:	4543      	cmp	r3, r8
 800c8d6:	da12      	bge.n	800c8fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x266>
 800c8d8:	2c00      	cmp	r4, #0
 800c8da:	dd43      	ble.n	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c8dc:	eba8 0803 	sub.w	r8, r8, r3
 800c8e0:	4544      	cmp	r4, r8
 800c8e2:	db3d      	blt.n	800c960 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2c8>
 800c8e4:	f1b8 0f00 	cmp.w	r8, #0
 800c8e8:	dd09      	ble.n	800c8fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x266>
 800c8ea:	4641      	mov	r1, r8
 800c8ec:	a82f      	add	r0, sp, #188	; 0xbc
 800c8ee:	f7ff fe98 	bl	800c622 <_ZN8touchgfx4Edge4stepEi>
 800c8f2:	4641      	mov	r1, r8
 800c8f4:	a80f      	add	r0, sp, #60	; 0x3c
 800c8f6:	f7ff fe94 	bl	800c622 <_ZN8touchgfx4Edge4stepEi>
 800c8fa:	eba4 0408 	sub.w	r4, r4, r8
 800c8fe:	2c00      	cmp	r4, #0
 800c900:	dd30      	ble.n	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c902:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800c904:	9206      	str	r2, [sp, #24]
 800c906:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800c908:	9205      	str	r2, [sp, #20]
 800c90a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800c90c:	f8db 3000 	ldr.w	r3, [fp]
 800c910:	990c      	ldr	r1, [sp, #48]	; 0x30
 800c912:	e9cd 7203 	strd	r7, r2, [sp, #12]
 800c916:	9a5a      	ldr	r2, [sp, #360]	; 0x168
 800c918:	9202      	str	r2, [sp, #8]
 800c91a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c91c:	e9cd 6200 	strd	r6, r2, [sp]
 800c920:	4658      	mov	r0, fp
 800c922:	f8d3 8040 	ldr.w	r8, [r3, #64]	; 0x40
 800c926:	aa3f      	add	r2, sp, #252	; 0xfc
 800c928:	462b      	mov	r3, r5
 800c92a:	47c0      	blx	r8
 800c92c:	9b5a      	ldr	r3, [sp, #360]	; 0x168
 800c92e:	88f9      	ldrh	r1, [r7, #6]
 800c930:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800c934:	696b      	ldr	r3, [r5, #20]
 800c936:	441a      	add	r2, r3
 800c938:	887b      	ldrh	r3, [r7, #2]
 800c93a:	440b      	add	r3, r1
 800c93c:	3201      	adds	r2, #1
 800c93e:	b21b      	sxth	r3, r3
 800c940:	429a      	cmp	r2, r3
 800c942:	f104 34ff 	add.w	r4, r4, #4294967295
 800c946:	da0d      	bge.n	800c964 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x2cc>
 800c948:	4628      	mov	r0, r5
 800c94a:	f7ff fe28 	bl	800c59e <_ZN8touchgfx4Edge4stepEv>
 800c94e:	4630      	mov	r0, r6
 800c950:	f7ff fe25 	bl	800c59e <_ZN8touchgfx4Edge4stepEv>
 800c954:	e7d3      	b.n	800c8fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x266>
 800c956:	ae0f      	add	r6, sp, #60	; 0x3c
 800c958:	ad2f      	add	r5, sp, #188	; 0xbc
 800c95a:	e7af      	b.n	800c8bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x224>
 800c95c:	46a0      	mov	r8, r4
 800c95e:	e7c1      	b.n	800c8e4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x24c>
 800c960:	46a0      	mov	r8, r4
 800c962:	e7c2      	b.n	800c8ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x252>
 800c964:	b051      	add	sp, #324	; 0x144
 800c966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c96a:	bf00      	nop
 800c96c:	fffd8f01 	.word	0xfffd8f01
 800c970:	00027100 	.word	0x00027100
 800c974:	0004e1ff 	.word	0x0004e1ff
 800c978:	0004e1fe 	.word	0x0004e1fe

0800c97c <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800c97c:	4b01      	ldr	r3, [pc, #4]	; (800c984 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800c97e:	2200      	movs	r2, #0
 800c980:	601a      	str	r2, [r3, #0]
 800c982:	4770      	bx	lr
 800c984:	20001444 	.word	0x20001444

0800c988 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>:
 800c988:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c98a:	e9dd e405 	ldrd	lr, r4, [sp, #20]
 800c98e:	1e05      	subs	r5, r0, #0
 800c990:	bfba      	itte	lt
 800c992:	f04f 37ff 	movlt.w	r7, #4294967295
 800c996:	426d      	neglt	r5, r5
 800c998:	2701      	movge	r7, #1
 800c99a:	f1be 0f00 	cmp.w	lr, #0
 800c99e:	bfb8      	it	lt
 800c9a0:	f1ce 0e00 	rsblt	lr, lr, #0
 800c9a4:	f04f 0601 	mov.w	r6, #1
 800c9a8:	fa4e f001 	asr.w	r0, lr, r1
 800c9ac:	fa06 f101 	lsl.w	r1, r6, r1
 800c9b0:	f8dd c01c 	ldr.w	ip, [sp, #28]
 800c9b4:	f101 31ff 	add.w	r1, r1, #4294967295
 800c9b8:	ea01 010e 	and.w	r1, r1, lr
 800c9bc:	bfb8      	it	lt
 800c9be:	427f      	neglt	r7, r7
 800c9c0:	434d      	muls	r5, r1
 800c9c2:	2c00      	cmp	r4, #0
 800c9c4:	f8dc 1000 	ldr.w	r1, [ip]
 800c9c8:	bfb8      	it	lt
 800c9ca:	4264      	neglt	r4, r4
 800c9cc:	fb03 1300 	mla	r3, r3, r0, r1
 800c9d0:	fb95 f1f4 	sdiv	r1, r5, r4
 800c9d4:	fb04 5511 	mls	r5, r4, r1, r5
 800c9d8:	441d      	add	r5, r3
 800c9da:	fb95 f3f4 	sdiv	r3, r5, r4
 800c9de:	fb04 5413 	mls	r4, r4, r3, r5
 800c9e2:	4419      	add	r1, r3
 800c9e4:	bfb8      	it	lt
 800c9e6:	427f      	neglt	r7, r7
 800c9e8:	fb02 1000 	mla	r0, r2, r0, r1
 800c9ec:	f8cc 4000 	str.w	r4, [ip]
 800c9f0:	4378      	muls	r0, r7
 800c9f2:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c9f4 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800c9f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c9f8:	4c24      	ldr	r4, [pc, #144]	; (800ca8c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x98>)
 800c9fa:	6807      	ldr	r7, [r0, #0]
 800c9fc:	69a3      	ldr	r3, [r4, #24]
 800c9fe:	b086      	sub	sp, #24
 800ca00:	4605      	mov	r5, r0
 800ca02:	b92b      	cbnz	r3, 800ca10 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1c>
 800ca04:	6840      	ldr	r0, [r0, #4]
 800ca06:	e9c5 7000 	strd	r7, r0, [r5]
 800ca0a:	b006      	add	sp, #24
 800ca0c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ca10:	68a2      	ldr	r2, [r4, #8]
 800ca12:	6820      	ldr	r0, [r4, #0]
 800ca14:	ae06      	add	r6, sp, #24
 800ca16:	f04f 0802 	mov.w	r8, #2
 800ca1a:	fb93 f1f8 	sdiv	r1, r3, r8
 800ca1e:	440a      	add	r2, r1
 800ca20:	f846 2d04 	str.w	r2, [r6, #-4]!
 800ca24:	69e1      	ldr	r1, [r4, #28]
 800ca26:	9700      	str	r7, [sp, #0]
 800ca28:	e9cd 3601 	strd	r3, r6, [sp, #4]
 800ca2c:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800ca2e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800ca30:	f7ff ffaa 	bl	800c988 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca34:	69a3      	ldr	r3, [r4, #24]
 800ca36:	9301      	str	r3, [sp, #4]
 800ca38:	686b      	ldr	r3, [r5, #4]
 800ca3a:	9300      	str	r3, [sp, #0]
 800ca3c:	4607      	mov	r7, r0
 800ca3e:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800ca40:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ca42:	6a21      	ldr	r1, [r4, #32]
 800ca44:	9602      	str	r6, [sp, #8]
 800ca46:	6860      	ldr	r0, [r4, #4]
 800ca48:	f7ff ff9e 	bl	800c988 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca4c:	6963      	ldr	r3, [r4, #20]
 800ca4e:	69a2      	ldr	r2, [r4, #24]
 800ca50:	fb92 f8f8 	sdiv	r8, r2, r8
 800ca54:	4443      	add	r3, r8
 800ca56:	9305      	str	r3, [sp, #20]
 800ca58:	682b      	ldr	r3, [r5, #0]
 800ca5a:	9300      	str	r3, [sp, #0]
 800ca5c:	e9cd 2601 	strd	r2, r6, [sp, #4]
 800ca60:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800ca62:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800ca64:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800ca66:	4407      	add	r7, r0
 800ca68:	68e0      	ldr	r0, [r4, #12]
 800ca6a:	f7ff ff8d 	bl	800c988 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca6e:	69a3      	ldr	r3, [r4, #24]
 800ca70:	9301      	str	r3, [sp, #4]
 800ca72:	686b      	ldr	r3, [r5, #4]
 800ca74:	9300      	str	r3, [sp, #0]
 800ca76:	4680      	mov	r8, r0
 800ca78:	9602      	str	r6, [sp, #8]
 800ca7a:	6ca3      	ldr	r3, [r4, #72]	; 0x48
 800ca7c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800ca7e:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800ca80:	6920      	ldr	r0, [r4, #16]
 800ca82:	f7ff ff81 	bl	800c988 <_ZN8touchgfx16TouchCalibration6muldivEllllllRl>
 800ca86:	4440      	add	r0, r8
 800ca88:	e7bd      	b.n	800ca06 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x12>
 800ca8a:	bf00      	nop
 800ca8c:	20001448 	.word	0x20001448

0800ca90 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800ca90:	b510      	push	{r4, lr}
 800ca92:	4b07      	ldr	r3, [pc, #28]	; (800cab0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800ca94:	781b      	ldrb	r3, [r3, #0]
 800ca96:	2b01      	cmp	r3, #1
 800ca98:	d108      	bne.n	800caac <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800ca9a:	4b06      	ldr	r3, [pc, #24]	; (800cab4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800ca9c:	880c      	ldrh	r4, [r1, #0]
 800ca9e:	881b      	ldrh	r3, [r3, #0]
 800caa0:	f9b0 2000 	ldrsh.w	r2, [r0]
 800caa4:	3b01      	subs	r3, #1
 800caa6:	1b1b      	subs	r3, r3, r4
 800caa8:	8003      	strh	r3, [r0, #0]
 800caaa:	800a      	strh	r2, [r1, #0]
 800caac:	bd10      	pop	{r4, pc}
 800caae:	bf00      	nop
 800cab0:	20001434 	.word	0x20001434
 800cab4:	20001438 	.word	0x20001438

0800cab8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800cab8:	b510      	push	{r4, lr}
 800caba:	4b0a      	ldr	r3, [pc, #40]	; (800cae4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800cabc:	781b      	ldrb	r3, [r3, #0]
 800cabe:	2b01      	cmp	r3, #1
 800cac0:	d10e      	bne.n	800cae0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800cac2:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800cac6:	8843      	ldrh	r3, [r0, #2]
 800cac8:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cacc:	8044      	strh	r4, [r0, #2]
 800cace:	18ca      	adds	r2, r1, r3
 800cad0:	4b05      	ldr	r3, [pc, #20]	; (800cae8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800cad2:	881b      	ldrh	r3, [r3, #0]
 800cad4:	1a9b      	subs	r3, r3, r2
 800cad6:	8003      	strh	r3, [r0, #0]
 800cad8:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cadc:	80c3      	strh	r3, [r0, #6]
 800cade:	8081      	strh	r1, [r0, #4]
 800cae0:	bd10      	pop	{r4, pc}
 800cae2:	bf00      	nop
 800cae4:	20001434 	.word	0x20001434
 800cae8:	20001430 	.word	0x20001430

0800caec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800caec:	b510      	push	{r4, lr}
 800caee:	4b07      	ldr	r3, [pc, #28]	; (800cb0c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800caf0:	781b      	ldrb	r3, [r3, #0]
 800caf2:	2b01      	cmp	r3, #1
 800caf4:	d108      	bne.n	800cb08 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800caf6:	f9b1 3000 	ldrsh.w	r3, [r1]
 800cafa:	f9b0 4000 	ldrsh.w	r4, [r0]
 800cafe:	8003      	strh	r3, [r0, #0]
 800cb00:	8893      	ldrh	r3, [r2, #4]
 800cb02:	3b01      	subs	r3, #1
 800cb04:	1b1b      	subs	r3, r3, r4
 800cb06:	800b      	strh	r3, [r1, #0]
 800cb08:	bd10      	pop	{r4, pc}
 800cb0a:	bf00      	nop
 800cb0c:	20001434 	.word	0x20001434

0800cb10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800cb10:	b513      	push	{r0, r1, r4, lr}
 800cb12:	4b08      	ldr	r3, [pc, #32]	; (800cb34 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800cb14:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cb18:	4b07      	ldr	r3, [pc, #28]	; (800cb38 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800cb1a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cb1e:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cb22:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cb26:	2400      	movs	r4, #0
 800cb28:	466a      	mov	r2, sp
 800cb2a:	9400      	str	r4, [sp, #0]
 800cb2c:	f7ff ffde 	bl	800caec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cb30:	b002      	add	sp, #8
 800cb32:	bd10      	pop	{r4, pc}
 800cb34:	20001430 	.word	0x20001430
 800cb38:	20001432 	.word	0x20001432

0800cb3c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 800cb3c:	4b0b      	ldr	r3, [pc, #44]	; (800cb6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 800cb3e:	781b      	ldrb	r3, [r3, #0]
 800cb40:	2b01      	cmp	r3, #1
 800cb42:	d111      	bne.n	800cb68 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 800cb44:	680b      	ldr	r3, [r1, #0]
 800cb46:	ed90 7a00 	vldr	s14, [r0]
 800cb4a:	6003      	str	r3, [r0, #0]
 800cb4c:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 800cb50:	eddf 6a07 	vldr	s13, [pc, #28]	; 800cb70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 800cb54:	ee07 3a90 	vmov	s15, r3
 800cb58:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800cb5c:	ee77 7ae6 	vsub.f32	s15, s15, s13
 800cb60:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800cb64:	edc1 7a00 	vstr	s15, [r1]
 800cb68:	4770      	bx	lr
 800cb6a:	bf00      	nop
 800cb6c:	20001434 	.word	0x20001434
 800cb70:	38d1b717 	.word	0x38d1b717

0800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800cb74:	b510      	push	{r4, lr}
 800cb76:	4b0a      	ldr	r3, [pc, #40]	; (800cba0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800cb78:	781b      	ldrb	r3, [r3, #0]
 800cb7a:	2b01      	cmp	r3, #1
 800cb7c:	460a      	mov	r2, r1
 800cb7e:	d10d      	bne.n	800cb9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800cb80:	8881      	ldrh	r1, [r0, #4]
 800cb82:	8803      	ldrh	r3, [r0, #0]
 800cb84:	440b      	add	r3, r1
 800cb86:	4601      	mov	r1, r0
 800cb88:	3b01      	subs	r3, #1
 800cb8a:	f821 3b02 	strh.w	r3, [r1], #2
 800cb8e:	f7ff ffad 	bl	800caec <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800cb92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800cb96:	88c2      	ldrh	r2, [r0, #6]
 800cb98:	8082      	strh	r2, [r0, #4]
 800cb9a:	80c3      	strh	r3, [r0, #6]
 800cb9c:	bd10      	pop	{r4, pc}
 800cb9e:	bf00      	nop
 800cba0:	20001434 	.word	0x20001434

0800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800cba4:	b507      	push	{r0, r1, r2, lr}
 800cba6:	4b09      	ldr	r3, [pc, #36]	; (800cbcc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800cba8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cbac:	4b08      	ldr	r3, [pc, #32]	; (800cbd0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800cbae:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cbb2:	2100      	movs	r1, #0
 800cbb4:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cbb8:	9100      	str	r1, [sp, #0]
 800cbba:	4669      	mov	r1, sp
 800cbbc:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cbc0:	f7ff ffd8 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800cbc4:	b003      	add	sp, #12
 800cbc6:	f85d fb04 	ldr.w	pc, [sp], #4
 800cbca:	bf00      	nop
 800cbcc:	20001430 	.word	0x20001430
 800cbd0:	20001432 	.word	0x20001432

0800cbd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800cbd4:	4b03      	ldr	r3, [pc, #12]	; (800cbe4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800cbd6:	6818      	ldr	r0, [r3, #0]
 800cbd8:	b110      	cbz	r0, 800cbe0 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800cbda:	6803      	ldr	r3, [r0, #0]
 800cbdc:	699b      	ldr	r3, [r3, #24]
 800cbde:	4718      	bx	r3
 800cbe0:	4770      	bx	lr
 800cbe2:	bf00      	nop
 800cbe4:	20001498 	.word	0x20001498

0800cbe8 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800cbe8:	4770      	bx	lr
	...

0800cbec <_ZN8touchgfx11Application4drawEv>:
 800cbec:	b507      	push	{r0, r1, r2, lr}
 800cbee:	4b09      	ldr	r3, [pc, #36]	; (800cc14 <_ZN8touchgfx11Application4drawEv+0x28>)
 800cbf0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cbf4:	4b08      	ldr	r3, [pc, #32]	; (800cc18 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800cbf6:	f8ad 2004 	strh.w	r2, [sp, #4]
 800cbfa:	f9b3 3000 	ldrsh.w	r3, [r3]
 800cbfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 800cc02:	6803      	ldr	r3, [r0, #0]
 800cc04:	2100      	movs	r1, #0
 800cc06:	9100      	str	r1, [sp, #0]
 800cc08:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cc0a:	4669      	mov	r1, sp
 800cc0c:	4798      	blx	r3
 800cc0e:	b003      	add	sp, #12
 800cc10:	f85d fb04 	ldr.w	pc, [sp], #4
 800cc14:	20001430 	.word	0x20001430
 800cc18:	20001432 	.word	0x20001432

0800cc1c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800cc1c:	4b03      	ldr	r3, [pc, #12]	; (800cc2c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800cc1e:	6818      	ldr	r0, [r3, #0]
 800cc20:	b110      	cbz	r0, 800cc28 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800cc22:	6803      	ldr	r3, [r0, #0]
 800cc24:	69db      	ldr	r3, [r3, #28]
 800cc26:	4718      	bx	r3
 800cc28:	4770      	bx	lr
 800cc2a:	bf00      	nop
 800cc2c:	20001498 	.word	0x20001498

0800cc30 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800cc30:	4b03      	ldr	r3, [pc, #12]	; (800cc40 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800cc32:	6818      	ldr	r0, [r3, #0]
 800cc34:	b110      	cbz	r0, 800cc3c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800cc36:	6803      	ldr	r3, [r0, #0]
 800cc38:	6a1b      	ldr	r3, [r3, #32]
 800cc3a:	4718      	bx	r3
 800cc3c:	4770      	bx	lr
 800cc3e:	bf00      	nop
 800cc40:	20001498 	.word	0x20001498

0800cc44 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800cc44:	4b03      	ldr	r3, [pc, #12]	; (800cc54 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800cc46:	6818      	ldr	r0, [r3, #0]
 800cc48:	b110      	cbz	r0, 800cc50 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800cc4a:	6803      	ldr	r3, [r0, #0]
 800cc4c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cc4e:	4718      	bx	r3
 800cc50:	4770      	bx	lr
 800cc52:	bf00      	nop
 800cc54:	20001498 	.word	0x20001498

0800cc58 <_ZN8touchgfx11Application15handleTickEventEv>:
 800cc58:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cc5c:	4d3a      	ldr	r5, [pc, #232]	; (800cd48 <_ZN8touchgfx11Application15handleTickEventEv+0xf0>)
 800cc5e:	4604      	mov	r4, r0
 800cc60:	6828      	ldr	r0, [r5, #0]
 800cc62:	b140      	cbz	r0, 800cc76 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800cc64:	7a03      	ldrb	r3, [r0, #8]
 800cc66:	b933      	cbnz	r3, 800cc76 <_ZN8touchgfx11Application15handleTickEventEv+0x1e>
 800cc68:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800cc6c:	6803      	ldr	r3, [r0, #0]
 800cc6e:	689b      	ldr	r3, [r3, #8]
 800cc70:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800cc74:	4718      	bx	r3
 800cc76:	f894 312d 	ldrb.w	r3, [r4, #301]	; 0x12d
 800cc7a:	b97b      	cbnz	r3, 800cc9c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800cc7c:	b170      	cbz	r0, 800cc9c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800cc7e:	7a03      	ldrb	r3, [r0, #8]
 800cc80:	b163      	cbz	r3, 800cc9c <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800cc82:	4b32      	ldr	r3, [pc, #200]	; (800cd4c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800cc84:	6818      	ldr	r0, [r3, #0]
 800cc86:	b110      	cbz	r0, 800cc8e <_ZN8touchgfx11Application15handleTickEventEv+0x36>
 800cc88:	6803      	ldr	r3, [r0, #0]
 800cc8a:	691b      	ldr	r3, [r3, #16]
 800cc8c:	4798      	blx	r3
 800cc8e:	6828      	ldr	r0, [r5, #0]
 800cc90:	6803      	ldr	r3, [r0, #0]
 800cc92:	68db      	ldr	r3, [r3, #12]
 800cc94:	4798      	blx	r3
 800cc96:	2301      	movs	r3, #1
 800cc98:	f884 312d 	strb.w	r3, [r4, #301]	; 0x12d
 800cc9c:	2500      	movs	r5, #0
 800cc9e:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800cca2:	42a8      	cmp	r0, r5
 800cca4:	dd0c      	ble.n	800ccc0 <_ZN8touchgfx11Application15handleTickEventEv+0x68>
 800cca6:	1963      	adds	r3, r4, r5
 800cca8:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ccac:	b132      	cbz	r2, 800ccbc <_ZN8touchgfx11Application15handleTickEventEv+0x64>
 800ccae:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ccb2:	4413      	add	r3, r2
 800ccb4:	6858      	ldr	r0, [r3, #4]
 800ccb6:	6803      	ldr	r3, [r0, #0]
 800ccb8:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800ccba:	4798      	blx	r3
 800ccbc:	3501      	adds	r5, #1
 800ccbe:	e7ee      	b.n	800cc9e <_ZN8touchgfx11Application15handleTickEventEv+0x46>
 800ccc0:	f5c4 467f 	rsb	r6, r4, #65280	; 0xff00
 800ccc4:	3801      	subs	r0, #1
 800ccc6:	3678      	adds	r6, #120	; 0x78
 800ccc8:	f04f 0c00 	mov.w	ip, #0
 800cccc:	1c43      	adds	r3, r0, #1
 800ccce:	d033      	beq.n	800cd38 <_ZN8touchgfx11Application15handleTickEventEv+0xe0>
 800ccd0:	1823      	adds	r3, r4, r0
 800ccd2:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800ccd6:	bb6a      	cbnz	r2, 800cd34 <_ZN8touchgfx11Application15handleTickEventEv+0xdc>
 800ccd8:	b281      	uxth	r1, r0
 800ccda:	eb04 0381 	add.w	r3, r4, r1, lsl #2
 800ccde:	1d25      	adds	r5, r4, #4
 800cce0:	f8d3 9004 	ldr.w	r9, [r3, #4]
 800cce4:	f8b4 3084 	ldrh.w	r3, [r4, #132]	; 0x84
 800cce8:	4293      	cmp	r3, r2
 800ccea:	dc0a      	bgt.n	800cd02 <_ZN8touchgfx11Application15handleTickEventEv+0xaa>
 800ccec:	f101 0288 	add.w	r2, r1, #136	; 0x88
 800ccf0:	4422      	add	r2, r4
 800ccf2:	18b1      	adds	r1, r6, r2
 800ccf4:	b289      	uxth	r1, r1
 800ccf6:	428b      	cmp	r3, r1
 800ccf8:	d919      	bls.n	800cd2e <_ZN8touchgfx11Application15handleTickEventEv+0xd6>
 800ccfa:	7851      	ldrb	r1, [r2, #1]
 800ccfc:	f802 1b01 	strb.w	r1, [r2], #1
 800cd00:	e7f7      	b.n	800ccf2 <_ZN8touchgfx11Application15handleTickEventEv+0x9a>
 800cd02:	682f      	ldr	r7, [r5, #0]
 800cd04:	45b9      	cmp	r9, r7
 800cd06:	f105 0804 	add.w	r8, r5, #4
 800cd0a:	d10d      	bne.n	800cd28 <_ZN8touchgfx11Application15handleTickEventEv+0xd0>
 800cd0c:	4696      	mov	lr, r2
 800cd0e:	f1be 0f1e 	cmp.w	lr, #30
 800cd12:	dc06      	bgt.n	800cd22 <_ZN8touchgfx11Application15handleTickEventEv+0xca>
 800cd14:	f10e 0e01 	add.w	lr, lr, #1
 800cd18:	686f      	ldr	r7, [r5, #4]
 800cd1a:	f845 7b04 	str.w	r7, [r5], #4
 800cd1e:	4573      	cmp	r3, lr
 800cd20:	dcf5      	bgt.n	800cd0e <_ZN8touchgfx11Application15handleTickEventEv+0xb6>
 800cd22:	3b01      	subs	r3, #1
 800cd24:	f8a4 3084 	strh.w	r3, [r4, #132]	; 0x84
 800cd28:	3201      	adds	r2, #1
 800cd2a:	4645      	mov	r5, r8
 800cd2c:	e7da      	b.n	800cce4 <_ZN8touchgfx11Application15handleTickEventEv+0x8c>
 800cd2e:	4423      	add	r3, r4
 800cd30:	f883 c088 	strb.w	ip, [r3, #136]	; 0x88
 800cd34:	3801      	subs	r0, #1
 800cd36:	e7c9      	b.n	800cccc <_ZN8touchgfx11Application15handleTickEventEv+0x74>
 800cd38:	4b04      	ldr	r3, [pc, #16]	; (800cd4c <_ZN8touchgfx11Application15handleTickEventEv+0xf4>)
 800cd3a:	6818      	ldr	r0, [r3, #0]
 800cd3c:	b110      	cbz	r0, 800cd44 <_ZN8touchgfx11Application15handleTickEventEv+0xec>
 800cd3e:	6803      	ldr	r3, [r0, #0]
 800cd40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd42:	e795      	b.n	800cc70 <_ZN8touchgfx11Application15handleTickEventEv+0x18>
 800cd44:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800cd48:	2000149c 	.word	0x2000149c
 800cd4c:	20001498 	.word	0x20001498

0800cd50 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800cd50:	b570      	push	{r4, r5, r6, lr}
 800cd52:	4606      	mov	r6, r0
 800cd54:	460c      	mov	r4, r1
 800cd56:	b929      	cbnz	r1, 800cd64 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800cd58:	4b0c      	ldr	r3, [pc, #48]	; (800cd8c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800cd5a:	4a0d      	ldr	r2, [pc, #52]	; (800cd90 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800cd5c:	480d      	ldr	r0, [pc, #52]	; (800cd94 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800cd5e:	2164      	movs	r1, #100	; 0x64
 800cd60:	f00e fcc6 	bl	801b6f0 <__assert_func>
 800cd64:	4d0c      	ldr	r5, [pc, #48]	; (800cd98 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800cd66:	2300      	movs	r3, #0
 800cd68:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cd6c:	6828      	ldr	r0, [r5, #0]
 800cd6e:	b110      	cbz	r0, 800cd76 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800cd70:	6803      	ldr	r3, [r0, #0]
 800cd72:	695b      	ldr	r3, [r3, #20]
 800cd74:	4798      	blx	r3
 800cd76:	602c      	str	r4, [r5, #0]
 800cd78:	6823      	ldr	r3, [r4, #0]
 800cd7a:	4620      	mov	r0, r4
 800cd7c:	68db      	ldr	r3, [r3, #12]
 800cd7e:	4798      	blx	r3
 800cd80:	6833      	ldr	r3, [r6, #0]
 800cd82:	4630      	mov	r0, r6
 800cd84:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cd86:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd8a:	4718      	bx	r3
 800cd8c:	0801e300 	.word	0x0801e300
 800cd90:	0801e3f0 	.word	0x0801e3f0
 800cd94:	0801e30a 	.word	0x0801e30a
 800cd98:	20001498 	.word	0x20001498

0800cd9c <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800cd9c:	b510      	push	{r4, lr}
 800cd9e:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cda2:	888a      	ldrh	r2, [r1, #4]
 800cda4:	f9b0 3000 	ldrsh.w	r3, [r0]
 800cda8:	4422      	add	r2, r4
 800cdaa:	b212      	sxth	r2, r2
 800cdac:	4293      	cmp	r3, r2
 800cdae:	da15      	bge.n	800cddc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdb0:	8882      	ldrh	r2, [r0, #4]
 800cdb2:	4413      	add	r3, r2
 800cdb4:	b21b      	sxth	r3, r3
 800cdb6:	429c      	cmp	r4, r3
 800cdb8:	da10      	bge.n	800cddc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdba:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800cdbe:	88c9      	ldrh	r1, [r1, #6]
 800cdc0:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800cdc4:	4419      	add	r1, r3
 800cdc6:	b209      	sxth	r1, r1
 800cdc8:	428a      	cmp	r2, r1
 800cdca:	da07      	bge.n	800cddc <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800cdcc:	88c0      	ldrh	r0, [r0, #6]
 800cdce:	4410      	add	r0, r2
 800cdd0:	b200      	sxth	r0, r0
 800cdd2:	4283      	cmp	r3, r0
 800cdd4:	bfac      	ite	ge
 800cdd6:	2000      	movge	r0, #0
 800cdd8:	2001      	movlt	r0, #1
 800cdda:	bd10      	pop	{r4, pc}
 800cddc:	2000      	movs	r0, #0
 800cdde:	e7fc      	b.n	800cdda <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800cde0 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800cde0:	b570      	push	{r4, r5, r6, lr}
 800cde2:	f9b1 4000 	ldrsh.w	r4, [r1]
 800cde6:	f9b0 5000 	ldrsh.w	r5, [r0]
 800cdea:	42ac      	cmp	r4, r5
 800cdec:	db18      	blt.n	800ce20 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cdee:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800cdf2:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800cdf6:	429a      	cmp	r2, r3
 800cdf8:	db12      	blt.n	800ce20 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800cdfa:	8886      	ldrh	r6, [r0, #4]
 800cdfc:	4435      	add	r5, r6
 800cdfe:	888e      	ldrh	r6, [r1, #4]
 800ce00:	4434      	add	r4, r6
 800ce02:	b22d      	sxth	r5, r5
 800ce04:	b224      	sxth	r4, r4
 800ce06:	42a5      	cmp	r5, r4
 800ce08:	db0a      	blt.n	800ce20 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ce0a:	88c0      	ldrh	r0, [r0, #6]
 800ce0c:	4418      	add	r0, r3
 800ce0e:	88cb      	ldrh	r3, [r1, #6]
 800ce10:	441a      	add	r2, r3
 800ce12:	b200      	sxth	r0, r0
 800ce14:	b212      	sxth	r2, r2
 800ce16:	4290      	cmp	r0, r2
 800ce18:	bfb4      	ite	lt
 800ce1a:	2000      	movlt	r0, #0
 800ce1c:	2001      	movge	r0, #1
 800ce1e:	bd70      	pop	{r4, r5, r6, pc}
 800ce20:	2000      	movs	r0, #0
 800ce22:	e7fc      	b.n	800ce1e <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800ce24 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ce24:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ce26:	4604      	mov	r4, r0
 800ce28:	4608      	mov	r0, r1
 800ce2a:	460d      	mov	r5, r1
 800ce2c:	f7fd fbc0 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce30:	b978      	cbnz	r0, 800ce52 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ce32:	4620      	mov	r0, r4
 800ce34:	f7fd fbbc 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ce38:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ce3c:	b150      	cbz	r0, 800ce54 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ce3e:	8026      	strh	r6, [r4, #0]
 800ce40:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ce44:	8063      	strh	r3, [r4, #2]
 800ce46:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ce4a:	80a3      	strh	r3, [r4, #4]
 800ce4c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ce50:	80e3      	strh	r3, [r4, #6]
 800ce52:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ce54:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ce58:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ce5c:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ce60:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ce64:	88ed      	ldrh	r5, [r5, #6]
 800ce66:	42b1      	cmp	r1, r6
 800ce68:	460f      	mov	r7, r1
 800ce6a:	bfa8      	it	ge
 800ce6c:	4637      	movge	r7, r6
 800ce6e:	4293      	cmp	r3, r2
 800ce70:	4618      	mov	r0, r3
 800ce72:	4466      	add	r6, ip
 800ce74:	bfa8      	it	ge
 800ce76:	4610      	movge	r0, r2
 800ce78:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ce7c:	8027      	strh	r7, [r4, #0]
 800ce7e:	442a      	add	r2, r5
 800ce80:	88e5      	ldrh	r5, [r4, #6]
 800ce82:	8060      	strh	r0, [r4, #2]
 800ce84:	4461      	add	r1, ip
 800ce86:	442b      	add	r3, r5
 800ce88:	b236      	sxth	r6, r6
 800ce8a:	b209      	sxth	r1, r1
 800ce8c:	b212      	sxth	r2, r2
 800ce8e:	b21b      	sxth	r3, r3
 800ce90:	428e      	cmp	r6, r1
 800ce92:	bfac      	ite	ge
 800ce94:	ebc7 0106 	rsbge	r1, r7, r6
 800ce98:	ebc7 0101 	rsblt	r1, r7, r1
 800ce9c:	429a      	cmp	r2, r3
 800ce9e:	bfac      	ite	ge
 800cea0:	ebc0 0202 	rsbge	r2, r0, r2
 800cea4:	ebc0 0203 	rsblt	r2, r0, r3
 800cea8:	80a1      	strh	r1, [r4, #4]
 800ceaa:	80e2      	strh	r2, [r4, #6]
 800ceac:	e7d1      	b.n	800ce52 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800ceb0 <_ZN8touchgfx11Application11getInstanceEv>:
 800ceb0:	4b01      	ldr	r3, [pc, #4]	; (800ceb8 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800ceb2:	6818      	ldr	r0, [r3, #0]
 800ceb4:	4770      	bx	lr
 800ceb6:	bf00      	nop
 800ceb8:	200014a8 	.word	0x200014a8

0800cebc <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE>:
 800cebc:	b570      	push	{r4, r5, r6, lr}
 800cebe:	f8b0 3084 	ldrh.w	r3, [r0, #132]	; 0x84
 800cec2:	1d04      	adds	r4, r0, #4
 800cec4:	2200      	movs	r2, #0
 800cec6:	b295      	uxth	r5, r2
 800cec8:	42ab      	cmp	r3, r5
 800ceca:	d90f      	bls.n	800ceec <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x30>
 800cecc:	f854 6b04 	ldr.w	r6, [r4], #4
 800ced0:	428e      	cmp	r6, r1
 800ced2:	4615      	mov	r5, r2
 800ced4:	f102 0201 	add.w	r2, r2, #1
 800ced8:	d1f5      	bne.n	800cec6 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0xa>
 800ceda:	4428      	add	r0, r5
 800cedc:	f890 3088 	ldrb.w	r3, [r0, #136]	; 0x88
 800cee0:	2bff      	cmp	r3, #255	; 0xff
 800cee2:	d002      	beq.n	800ceea <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800cee4:	3301      	adds	r3, #1
 800cee6:	f880 3088 	strb.w	r3, [r0, #136]	; 0x88
 800ceea:	bd70      	pop	{r4, r5, r6, pc}
 800ceec:	2b20      	cmp	r3, #32
 800ceee:	d106      	bne.n	800cefe <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x42>
 800cef0:	4b08      	ldr	r3, [pc, #32]	; (800cf14 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x58>)
 800cef2:	4a09      	ldr	r2, [pc, #36]	; (800cf18 <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x5c>)
 800cef4:	4809      	ldr	r0, [pc, #36]	; (800cf1c <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x60>)
 800cef6:	f44f 7193 	mov.w	r1, #294	; 0x126
 800cefa:	f00e fbf9 	bl	801b6f0 <__assert_func>
 800cefe:	18c2      	adds	r2, r0, r3
 800cf00:	2401      	movs	r4, #1
 800cf02:	f882 4088 	strb.w	r4, [r2, #136]	; 0x88
 800cf06:	191a      	adds	r2, r3, r4
 800cf08:	f8a0 2084 	strh.w	r2, [r0, #132]	; 0x84
 800cf0c:	eb00 0083 	add.w	r0, r0, r3, lsl #2
 800cf10:	6041      	str	r1, [r0, #4]
 800cf12:	e7ea      	b.n	800ceea <_ZN8touchgfx11Application19registerTimerWidgetEPNS_8DrawableE+0x2e>
 800cf14:	0801e334 	.word	0x0801e334
 800cf18:	0801e434 	.word	0x0801e434
 800cf1c:	0801e30a 	.word	0x0801e30a

0800cf20 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE>:
 800cf20:	b570      	push	{r4, r5, r6, lr}
 800cf22:	f8b0 6084 	ldrh.w	r6, [r0, #132]	; 0x84
 800cf26:	1d04      	adds	r4, r0, #4
 800cf28:	2300      	movs	r3, #0
 800cf2a:	b29a      	uxth	r2, r3
 800cf2c:	4296      	cmp	r6, r2
 800cf2e:	d90a      	bls.n	800cf46 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x26>
 800cf30:	f854 2b04 	ldr.w	r2, [r4], #4
 800cf34:	428a      	cmp	r2, r1
 800cf36:	d107      	bne.n	800cf48 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800cf38:	18c5      	adds	r5, r0, r3
 800cf3a:	f895 2088 	ldrb.w	r2, [r5, #136]	; 0x88
 800cf3e:	b11a      	cbz	r2, 800cf48 <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0x28>
 800cf40:	3a01      	subs	r2, #1
 800cf42:	f885 2088 	strb.w	r2, [r5, #136]	; 0x88
 800cf46:	bd70      	pop	{r4, r5, r6, pc}
 800cf48:	3301      	adds	r3, #1
 800cf4a:	e7ee      	b.n	800cf2a <_ZN8touchgfx11Application21unregisterTimerWidgetEPKNS_8DrawableE+0xa>

0800cf4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800cf4c:	2300      	movs	r3, #0
 800cf4e:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800cf52:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800cf56:	30a8      	adds	r0, #168	; 0xa8
 800cf58:	f802 3b01 	strb.w	r3, [r2], #1
 800cf5c:	4282      	cmp	r2, r0
 800cf5e:	d1fb      	bne.n	800cf58 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800cf60:	4770      	bx	lr

0800cf62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800cf62:	4603      	mov	r3, r0
 800cf64:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800cf68:	2200      	movs	r2, #0
 800cf6a:	801a      	strh	r2, [r3, #0]
 800cf6c:	805a      	strh	r2, [r3, #2]
 800cf6e:	809a      	strh	r2, [r3, #4]
 800cf70:	80da      	strh	r2, [r3, #6]
 800cf72:	3308      	adds	r3, #8
 800cf74:	428b      	cmp	r3, r1
 800cf76:	d1f8      	bne.n	800cf6a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800cf78:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800cf7c:	4770      	bx	lr
	...

0800cf80 <_ZN8touchgfx11ApplicationC1Ev>:
 800cf80:	b570      	push	{r4, r5, r6, lr}
 800cf82:	4b16      	ldr	r3, [pc, #88]	; (800cfdc <_ZN8touchgfx11ApplicationC1Ev+0x5c>)
 800cf84:	6003      	str	r3, [r0, #0]
 800cf86:	2500      	movs	r5, #0
 800cf88:	4604      	mov	r4, r0
 800cf8a:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800cf8e:	30a8      	adds	r0, #168	; 0xa8
 800cf90:	f7ff ffe7 	bl	800cf62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cf94:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800cf98:	f7ff ffe3 	bl	800cf62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800cf9c:	f884 512c 	strb.w	r5, [r4, #300]	; 0x12c
 800cfa0:	f884 512d 	strb.w	r5, [r4, #301]	; 0x12d
 800cfa4:	490e      	ldr	r1, [pc, #56]	; (800cfe0 <_ZN8touchgfx11ApplicationC1Ev+0x60>)
 800cfa6:	480f      	ldr	r0, [pc, #60]	; (800cfe4 <_ZN8touchgfx11ApplicationC1Ev+0x64>)
 800cfa8:	4e0f      	ldr	r6, [pc, #60]	; (800cfe8 <_ZN8touchgfx11ApplicationC1Ev+0x68>)
 800cfaa:	f00d fca1 	bl	801a8f0 <CRC_Lock>
 800cfae:	4b0f      	ldr	r3, [pc, #60]	; (800cfec <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800cfb0:	b158      	cbz	r0, 800cfca <_ZN8touchgfx11ApplicationC1Ev+0x4a>
 800cfb2:	801d      	strh	r5, [r3, #0]
 800cfb4:	4a0e      	ldr	r2, [pc, #56]	; (800cff0 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800cfb6:	2300      	movs	r3, #0
 800cfb8:	6013      	str	r3, [r2, #0]
 800cfba:	4a0e      	ldr	r2, [pc, #56]	; (800cff4 <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800cfbc:	6033      	str	r3, [r6, #0]
 800cfbe:	4620      	mov	r0, r4
 800cfc0:	6013      	str	r3, [r2, #0]
 800cfc2:	f7ff ffc3 	bl	800cf4c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800cfc6:	4620      	mov	r0, r4
 800cfc8:	bd70      	pop	{r4, r5, r6, pc}
 800cfca:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800cfce:	2002      	movs	r0, #2
 800cfd0:	801a      	strh	r2, [r3, #0]
 800cfd2:	6030      	str	r0, [r6, #0]
 800cfd4:	f000 ff40 	bl	800de58 <_ZN8touchgfx6Screen4drawEv>
 800cfd8:	e7ec      	b.n	800cfb4 <_ZN8touchgfx11ApplicationC1Ev+0x34>
 800cfda:	bf00      	nop
 800cfdc:	0801e3bc 	.word	0x0801e3bc
 800cfe0:	b5e8b5cd 	.word	0xb5e8b5cd
 800cfe4:	f407a5c2 	.word	0xf407a5c2
 800cfe8:	20001498 	.word	0x20001498
 800cfec:	2000001c 	.word	0x2000001c
 800cff0:	200014a8 	.word	0x200014a8
 800cff4:	2000149c 	.word	0x2000149c

0800cff8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800cff8:	2300      	movs	r3, #0
 800cffa:	8003      	strh	r3, [r0, #0]
 800cffc:	8043      	strh	r3, [r0, #2]
 800cffe:	8083      	strh	r3, [r0, #4]
 800d000:	80c3      	strh	r3, [r0, #6]
 800d002:	f8b1 3040 	ldrh.w	r3, [r1, #64]	; 0x40
 800d006:	4293      	cmp	r3, r2
 800d008:	b530      	push	{r4, r5, lr}
 800d00a:	d912      	bls.n	800d032 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d00c:	eb01 04c2 	add.w	r4, r1, r2, lsl #3
 800d010:	3b01      	subs	r3, #1
 800d012:	6825      	ldr	r5, [r4, #0]
 800d014:	6005      	str	r5, [r0, #0]
 800d016:	b29b      	uxth	r3, r3
 800d018:	6865      	ldr	r5, [r4, #4]
 800d01a:	6045      	str	r5, [r0, #4]
 800d01c:	4293      	cmp	r3, r2
 800d01e:	f8a1 3040 	strh.w	r3, [r1, #64]	; 0x40
 800d022:	d906      	bls.n	800d032 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x3a>
 800d024:	eb01 03c3 	add.w	r3, r1, r3, lsl #3
 800d028:	681d      	ldr	r5, [r3, #0]
 800d02a:	f841 5032 	str.w	r5, [r1, r2, lsl #3]
 800d02e:	685d      	ldr	r5, [r3, #4]
 800d030:	6065      	str	r5, [r4, #4]
 800d032:	bd30      	pop	{r4, r5, pc}

0800d034 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800d034:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d036:	466b      	mov	r3, sp
 800d038:	e883 0006 	stmia.w	r3, {r1, r2}
 800d03c:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800d040:	2a07      	cmp	r2, #7
 800d042:	4604      	mov	r4, r0
 800d044:	d906      	bls.n	800d054 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800d046:	4b09      	ldr	r3, [pc, #36]	; (800d06c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800d048:	4a09      	ldr	r2, [pc, #36]	; (800d070 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800d04a:	480a      	ldr	r0, [pc, #40]	; (800d074 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800d04c:	f44f 7102 	mov.w	r1, #520	; 0x208
 800d050:	f00e fb4e 	bl	801b6f0 <__assert_func>
 800d054:	1c51      	adds	r1, r2, #1
 800d056:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800d05a:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800d05e:	cb03      	ldmia	r3!, {r0, r1}
 800d060:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800d064:	6069      	str	r1, [r5, #4]
 800d066:	b003      	add	sp, #12
 800d068:	bd30      	pop	{r4, r5, pc}
 800d06a:	bf00      	nop
 800d06c:	0801e35c 	.word	0x0801e35c
 800d070:	0801e479 	.word	0x0801e479
 800d074:	0801e38b 	.word	0x0801e38b

0800d078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800d078:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800d07c:	b089      	sub	sp, #36	; 0x24
 800d07e:	466c      	mov	r4, sp
 800d080:	4606      	mov	r6, r0
 800d082:	4620      	mov	r0, r4
 800d084:	e884 0006 	stmia.w	r4, {r1, r2}
 800d088:	f7fd fa92 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d08c:	bbb0      	cbnz	r0, 800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d08e:	f8b6 50e8 	ldrh.w	r5, [r6, #232]	; 0xe8
 800d092:	b1fd      	cbz	r5, 800d0d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c>
 800d094:	3d01      	subs	r5, #1
 800d096:	af04      	add	r7, sp, #16
 800d098:	f04f 090a 	mov.w	r9, #10
 800d09c:	eb06 02c5 	add.w	r2, r6, r5, lsl #3
 800d0a0:	ab02      	add	r3, sp, #8
 800d0a2:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d0a6:	6851      	ldr	r1, [r2, #4]
 800d0a8:	c303      	stmia	r3!, {r0, r1}
 800d0aa:	4621      	mov	r1, r4
 800d0ac:	a802      	add	r0, sp, #8
 800d0ae:	fa1f f885 	uxth.w	r8, r5
 800d0b2:	f7ff fe95 	bl	800cde0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d0b6:	bb08      	cbnz	r0, 800d0fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x84>
 800d0b8:	a902      	add	r1, sp, #8
 800d0ba:	4620      	mov	r0, r4
 800d0bc:	f7ff fe90 	bl	800cde0 <_ZNK8touchgfx4Rect8includesERKS0_>
 800d0c0:	b1f8      	cbz	r0, 800d102 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x8a>
 800d0c2:	4642      	mov	r2, r8
 800d0c4:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d0c8:	a806      	add	r0, sp, #24
 800d0ca:	f7ff ff95 	bl	800cff8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d0ce:	f115 35ff 	adds.w	r5, r5, #4294967295
 800d0d2:	d2e3      	bcs.n	800d09c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24>
 800d0d4:	f8b6 30e8 	ldrh.w	r3, [r6, #232]	; 0xe8
 800d0d8:	2b08      	cmp	r3, #8
 800d0da:	f106 05a8 	add.w	r5, r6, #168	; 0xa8
 800d0de:	d108      	bne.n	800d0f2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 800d0e0:	4629      	mov	r1, r5
 800d0e2:	a806      	add	r0, sp, #24
 800d0e4:	2207      	movs	r2, #7
 800d0e6:	f7ff ff87 	bl	800cff8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d0ea:	a906      	add	r1, sp, #24
 800d0ec:	4620      	mov	r0, r4
 800d0ee:	f7ff fe99 	bl	800ce24 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d0f2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800d0f6:	4628      	mov	r0, r5
 800d0f8:	f7ff ff9c 	bl	800d034 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d0fc:	b009      	add	sp, #36	; 0x24
 800d0fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800d102:	4621      	mov	r1, r4
 800d104:	a802      	add	r0, sp, #8
 800d106:	f7ff fe49 	bl	800cd9c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800d10a:	b150      	cbz	r0, 800d122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xaa>
 800d10c:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d110:	a806      	add	r0, sp, #24
 800d112:	4642      	mov	r2, r8
 800d114:	f7ff ff70 	bl	800cff8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d118:	a902      	add	r1, sp, #8
 800d11a:	4620      	mov	r0, r4
 800d11c:	f7ff fe82 	bl	800ce24 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d120:	e7d5      	b.n	800d0ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d122:	e894 0003 	ldmia.w	r4, {r0, r1}
 800d126:	e887 0003 	stmia.w	r7, {r0, r1}
 800d12a:	a902      	add	r1, sp, #8
 800d12c:	4638      	mov	r0, r7
 800d12e:	f7ff fe79 	bl	800ce24 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800d132:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d136:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800d13a:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 800d13e:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 800d142:	fb13 f302 	smulbb	r3, r3, r2
 800d146:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d14a:	fb11 f102 	smulbb	r1, r1, r2
 800d14e:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d152:	fb12 1100 	smlabb	r1, r2, r0, r1
 800d156:	220b      	movs	r2, #11
 800d158:	fb09 f303 	mul.w	r3, r9, r3
 800d15c:	434a      	muls	r2, r1
 800d15e:	4293      	cmp	r3, r2
 800d160:	dab5      	bge.n	800d0ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 800d162:	f106 01a8 	add.w	r1, r6, #168	; 0xa8
 800d166:	a806      	add	r0, sp, #24
 800d168:	4642      	mov	r2, r8
 800d16a:	f7ff ff45 	bl	800cff8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800d16e:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d172:	e884 0003 	stmia.w	r4, {r0, r1}
 800d176:	e7aa      	b.n	800d0ce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>

0800d178 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800d178:	b530      	push	{r4, r5, lr}
 800d17a:	4b1d      	ldr	r3, [pc, #116]	; (800d1f0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800d17c:	b085      	sub	sp, #20
 800d17e:	460c      	mov	r4, r1
 800d180:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d184:	4b1b      	ldr	r3, [pc, #108]	; (800d1f4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800d186:	f8ad 2004 	strh.w	r2, [sp, #4]
 800d18a:	2100      	movs	r1, #0
 800d18c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800d190:	9100      	str	r1, [sp, #0]
 800d192:	4605      	mov	r5, r0
 800d194:	6861      	ldr	r1, [r4, #4]
 800d196:	6820      	ldr	r0, [r4, #0]
 800d198:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d19c:	ab02      	add	r3, sp, #8
 800d19e:	c303      	stmia	r3!, {r0, r1}
 800d1a0:	4669      	mov	r1, sp
 800d1a2:	a802      	add	r0, sp, #8
 800d1a4:	f7fd f9c0 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800d1a8:	ab02      	add	r3, sp, #8
 800d1aa:	cb03      	ldmia	r3!, {r0, r1}
 800d1ac:	4b12      	ldr	r3, [pc, #72]	; (800d1f8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800d1ae:	6020      	str	r0, [r4, #0]
 800d1b0:	6818      	ldr	r0, [r3, #0]
 800d1b2:	6061      	str	r1, [r4, #4]
 800d1b4:	b138      	cbz	r0, 800d1c6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d1b6:	f895 312c 	ldrb.w	r3, [r5, #300]	; 0x12c
 800d1ba:	b133      	cbz	r3, 800d1ca <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800d1bc:	6821      	ldr	r1, [r4, #0]
 800d1be:	6862      	ldr	r2, [r4, #4]
 800d1c0:	4628      	mov	r0, r5
 800d1c2:	f7ff ff59 	bl	800d078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d1c6:	b005      	add	sp, #20
 800d1c8:	bd30      	pop	{r4, r5, pc}
 800d1ca:	6803      	ldr	r3, [r0, #0]
 800d1cc:	4621      	mov	r1, r4
 800d1ce:	689b      	ldr	r3, [r3, #8]
 800d1d0:	4798      	blx	r3
 800d1d2:	4b0a      	ldr	r3, [pc, #40]	; (800d1fc <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800d1d4:	6818      	ldr	r0, [r3, #0]
 800d1d6:	b118      	cbz	r0, 800d1e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800d1d8:	6803      	ldr	r3, [r0, #0]
 800d1da:	4621      	mov	r1, r4
 800d1dc:	689b      	ldr	r3, [r3, #8]
 800d1de:	4798      	blx	r3
 800d1e0:	4b07      	ldr	r3, [pc, #28]	; (800d200 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800d1e2:	6818      	ldr	r0, [r3, #0]
 800d1e4:	6803      	ldr	r3, [r0, #0]
 800d1e6:	4621      	mov	r1, r4
 800d1e8:	695b      	ldr	r3, [r3, #20]
 800d1ea:	4798      	blx	r3
 800d1ec:	e7eb      	b.n	800d1c6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800d1ee:	bf00      	nop
 800d1f0:	20001430 	.word	0x20001430
 800d1f4:	20001432 	.word	0x20001432
 800d1f8:	20001498 	.word	0x20001498
 800d1fc:	20001494 	.word	0x20001494
 800d200:	2000143c 	.word	0x2000143c

0800d204 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800d204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d208:	4604      	mov	r4, r0
 800d20a:	b09b      	sub	sp, #108	; 0x6c
 800d20c:	f880 112c 	strb.w	r1, [r0, #300]	; 0x12c
 800d210:	b129      	cbz	r1, 800d21e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800d212:	2300      	movs	r3, #0
 800d214:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800d218:	b01b      	add	sp, #108	; 0x6c
 800d21a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d21e:	4baf      	ldr	r3, [pc, #700]	; (800d4dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800d220:	681b      	ldr	r3, [r3, #0]
 800d222:	b33b      	cbz	r3, 800d274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d224:	4dae      	ldr	r5, [pc, #696]	; (800d4e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800d226:	4628      	mov	r0, r5
 800d228:	f7fd f9c2 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d22c:	4606      	mov	r6, r0
 800d22e:	bb08      	cbnz	r0, 800d274 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800d230:	4628      	mov	r0, r5
 800d232:	f7ff fc41 	bl	800cab8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d236:	6829      	ldr	r1, [r5, #0]
 800d238:	686a      	ldr	r2, [r5, #4]
 800d23a:	4620      	mov	r0, r4
 800d23c:	f7ff ff1c 	bl	800d078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d240:	802e      	strh	r6, [r5, #0]
 800d242:	806e      	strh	r6, [r5, #2]
 800d244:	80ae      	strh	r6, [r5, #4]
 800d246:	80ee      	strh	r6, [r5, #6]
 800d248:	4fa6      	ldr	r7, [pc, #664]	; (800d4e4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800d24a:	a809      	add	r0, sp, #36	; 0x24
 800d24c:	f7ff fe89 	bl	800cf62 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800d250:	883d      	ldrh	r5, [r7, #0]
 800d252:	462e      	mov	r6, r5
 800d254:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d258:	42b3      	cmp	r3, r6
 800d25a:	d910      	bls.n	800d27e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7a>
 800d25c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d260:	a809      	add	r0, sp, #36	; 0x24
 800d262:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800d266:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800d26a:	3601      	adds	r6, #1
 800d26c:	f7ff fee2 	bl	800d034 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d270:	b2b6      	uxth	r6, r6
 800d272:	e7ef      	b.n	800d254 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x50>
 800d274:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d278:	2b00      	cmp	r3, #0
 800d27a:	d1e5      	bne.n	800d248 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x44>
 800d27c:	e7cc      	b.n	800d218 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d27e:	462e      	mov	r6, r5
 800d280:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800d284:	42b3      	cmp	r3, r6
 800d286:	d90b      	bls.n	800d2a0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800d288:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800d28c:	4620      	mov	r0, r4
 800d28e:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800d292:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800d296:	3601      	adds	r6, #1
 800d298:	f7ff feee 	bl	800d078 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800d29c:	b2b6      	uxth	r6, r6
 800d29e:	e7ef      	b.n	800d280 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x7c>
 800d2a0:	4e91      	ldr	r6, [pc, #580]	; (800d4e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800d2a2:	6833      	ldr	r3, [r6, #0]
 800d2a4:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800d2a8:	2b01      	cmp	r3, #1
 800d2aa:	f040 8092 	bne.w	800d3d2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ce>
 800d2ae:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800d2b2:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800d2b6:	33aa      	adds	r3, #170	; 0xaa
 800d2b8:	f04f 0900 	mov.w	r9, #0
 800d2bc:	42a8      	cmp	r0, r5
 800d2be:	f103 0308 	add.w	r3, r3, #8
 800d2c2:	dd0a      	ble.n	800d2da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xd6>
 800d2c4:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800d2c8:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800d2cc:	440a      	add	r2, r1
 800d2ce:	b212      	sxth	r2, r2
 800d2d0:	4591      	cmp	r9, r2
 800d2d2:	bfb8      	it	lt
 800d2d4:	4691      	movlt	r9, r2
 800d2d6:	3501      	adds	r5, #1
 800d2d8:	e7f0      	b.n	800d2bc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xb8>
 800d2da:	4b84      	ldr	r3, [pc, #528]	; (800d4ec <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800d2dc:	f8df 8214 	ldr.w	r8, [pc, #532]	; 800d4f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>
 800d2e0:	881d      	ldrh	r5, [r3, #0]
 800d2e2:	2300      	movs	r3, #0
 800d2e4:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800d2e8:	2d0f      	cmp	r5, #15
 800d2ea:	bf8c      	ite	hi
 800d2ec:	08ed      	lsrhi	r5, r5, #3
 800d2ee:	2501      	movls	r5, #1
 800d2f0:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d2f4:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800d2f8:	6830      	ldr	r0, [r6, #0]
 800d2fa:	440b      	add	r3, r1
 800d2fc:	b21b      	sxth	r3, r3
 800d2fe:	4599      	cmp	r9, r3
 800d300:	6802      	ldr	r2, [r0, #0]
 800d302:	dd49      	ble.n	800d398 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x194>
 800d304:	f8d2 3080 	ldr.w	r3, [r2, #128]	; 0x80
 800d308:	4798      	blx	r3
 800d30a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d30e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d312:	4413      	add	r3, r2
 800d314:	b21b      	sxth	r3, r3
 800d316:	195a      	adds	r2, r3, r5
 800d318:	4290      	cmp	r0, r2
 800d31a:	da07      	bge.n	800d32c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d31c:	4581      	cmp	r9, r0
 800d31e:	dd05      	ble.n	800d32c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x128>
 800d320:	4298      	cmp	r0, r3
 800d322:	da33      	bge.n	800d38c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d324:	2b00      	cmp	r3, #0
 800d326:	dd31      	ble.n	800d38c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x188>
 800d328:	4648      	mov	r0, r9
 800d32a:	e004      	b.n	800d336 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x132>
 800d32c:	4298      	cmp	r0, r3
 800d32e:	dbfb      	blt.n	800d328 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x124>
 800d330:	4548      	cmp	r0, r9
 800d332:	bfa8      	it	ge
 800d334:	4648      	movge	r0, r9
 800d336:	f9b8 2000 	ldrsh.w	r2, [r8]
 800d33a:	f8b7 a000 	ldrh.w	sl, [r7]
 800d33e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d342:	2100      	movs	r1, #0
 800d344:	1ac0      	subs	r0, r0, r3
 800d346:	f8ad 1014 	strh.w	r1, [sp, #20]
 800d34a:	f8ad 2018 	strh.w	r2, [sp, #24]
 800d34e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d352:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d356:	4553      	cmp	r3, sl
 800d358:	d9ca      	bls.n	800d2f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d35a:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800d35e:	ab07      	add	r3, sp, #28
 800d360:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d364:	6851      	ldr	r1, [r2, #4]
 800d366:	c303      	stmia	r3!, {r0, r1}
 800d368:	a807      	add	r0, sp, #28
 800d36a:	a905      	add	r1, sp, #20
 800d36c:	f7fd f8dc 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800d370:	a807      	add	r0, sp, #28
 800d372:	f7fd f91d 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d376:	b920      	cbnz	r0, 800d382 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x17e>
 800d378:	6823      	ldr	r3, [r4, #0]
 800d37a:	a907      	add	r1, sp, #28
 800d37c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d37e:	4620      	mov	r0, r4
 800d380:	4798      	blx	r3
 800d382:	f10a 0a01 	add.w	sl, sl, #1
 800d386:	fa1f fa8a 	uxth.w	sl, sl
 800d38a:	e7e2      	b.n	800d352 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14e>
 800d38c:	6830      	ldr	r0, [r6, #0]
 800d38e:	6803      	ldr	r3, [r0, #0]
 800d390:	2101      	movs	r1, #1
 800d392:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d394:	4798      	blx	r3
 800d396:	e7ab      	b.n	800d2f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xec>
 800d398:	69d3      	ldr	r3, [r2, #28]
 800d39a:	4798      	blx	r3
 800d39c:	4b54      	ldr	r3, [pc, #336]	; (800d4f0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800d39e:	781b      	ldrb	r3, [r3, #0]
 800d3a0:	2b00      	cmp	r3, #0
 800d3a2:	f43f af39 	beq.w	800d218 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d3a6:	2300      	movs	r3, #0
 800d3a8:	883d      	ldrh	r5, [r7, #0]
 800d3aa:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800d3ae:	34ea      	adds	r4, #234	; 0xea
 800d3b0:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800d3b4:	42ab      	cmp	r3, r5
 800d3b6:	f67f af2f 	bls.w	800d218 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800d3ba:	ab1a      	add	r3, sp, #104	; 0x68
 800d3bc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800d3c0:	3b44      	subs	r3, #68	; 0x44
 800d3c2:	e893 0006 	ldmia.w	r3, {r1, r2}
 800d3c6:	4620      	mov	r0, r4
 800d3c8:	3501      	adds	r5, #1
 800d3ca:	f7ff fe33 	bl	800d034 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800d3ce:	b2ad      	uxth	r5, r5
 800d3d0:	e7ee      	b.n	800d3b0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ac>
 800d3d2:	2b02      	cmp	r3, #2
 800d3d4:	d16a      	bne.n	800d4ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800d3d6:	f8df a120 	ldr.w	sl, [pc, #288]	; 800d4f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>
 800d3da:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d3de:	42ab      	cmp	r3, r5
 800d3e0:	d9dc      	bls.n	800d39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800d3e2:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d3e6:	ab03      	add	r3, sp, #12
 800d3e8:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d3ec:	6851      	ldr	r1, [r2, #4]
 800d3ee:	c303      	stmia	r3!, {r0, r1}
 800d3f0:	f89a 3000 	ldrb.w	r3, [sl]
 800d3f4:	2b01      	cmp	r3, #1
 800d3f6:	d102      	bne.n	800d3fe <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1fa>
 800d3f8:	a803      	add	r0, sp, #12
 800d3fa:	f7ff fbd3 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d3fe:	a803      	add	r0, sp, #12
 800d400:	f7fd f8d6 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d404:	2800      	cmp	r0, #0
 800d406:	d14a      	bne.n	800d49e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x29a>
 800d408:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 800d40c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800d410:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800d414:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d418:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800d41c:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d420:	f8ad 3018 	strh.w	r3, [sp, #24]
 800d424:	f10d 0914 	add.w	r9, sp, #20
 800d428:	f10d 081c 	add.w	r8, sp, #28
 800d42c:	f8bd b012 	ldrh.w	fp, [sp, #18]
 800d430:	f8bd c00e 	ldrh.w	ip, [sp, #14]
 800d434:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 800d438:	6830      	ldr	r0, [r6, #0]
 800d43a:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800d43e:	f8d0 e000 	ldr.w	lr, [r0]
 800d442:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 800d446:	44dc      	add	ip, fp
 800d448:	ebac 0c02 	sub.w	ip, ip, r2
 800d44c:	fa1f fc8c 	uxth.w	ip, ip
 800d450:	f8cd c000 	str.w	ip, [sp]
 800d454:	f8de b078 	ldr.w	fp, [lr, #120]	; 0x78
 800d458:	47d8      	blx	fp
 800d45a:	f89a 3000 	ldrb.w	r3, [sl]
 800d45e:	f8ad 001a 	strh.w	r0, [sp, #26]
 800d462:	2b01      	cmp	r3, #1
 800d464:	d11e      	bne.n	800d4a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a0>
 800d466:	e899 0003 	ldmia.w	r9, {r0, r1}
 800d46a:	e888 0003 	stmia.w	r8, {r0, r1}
 800d46e:	4640      	mov	r0, r8
 800d470:	f7ff fb22 	bl	800cab8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800d474:	6823      	ldr	r3, [r4, #0]
 800d476:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d478:	4641      	mov	r1, r8
 800d47a:	4620      	mov	r0, r4
 800d47c:	4798      	blx	r3
 800d47e:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800d482:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800d486:	f8bd 1012 	ldrh.w	r1, [sp, #18]
 800d48a:	4413      	add	r3, r2
 800d48c:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800d490:	440a      	add	r2, r1
 800d492:	b21b      	sxth	r3, r3
 800d494:	b212      	sxth	r2, r2
 800d496:	4293      	cmp	r3, r2
 800d498:	f8ad 3016 	strh.w	r3, [sp, #22]
 800d49c:	dbc6      	blt.n	800d42c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x228>
 800d49e:	3501      	adds	r5, #1
 800d4a0:	b2ad      	uxth	r5, r5
 800d4a2:	e79a      	b.n	800d3da <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d6>
 800d4a4:	6823      	ldr	r3, [r4, #0]
 800d4a6:	4649      	mov	r1, r9
 800d4a8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d4aa:	e7e6      	b.n	800d47a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800d4ac:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800d4b0:	42ab      	cmp	r3, r5
 800d4b2:	f67f af73 	bls.w	800d39c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x198>
 800d4b6:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800d4ba:	ab07      	add	r3, sp, #28
 800d4bc:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800d4c0:	6851      	ldr	r1, [r2, #4]
 800d4c2:	c303      	stmia	r3!, {r0, r1}
 800d4c4:	a807      	add	r0, sp, #28
 800d4c6:	f7fd f873 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 800d4ca:	b920      	cbnz	r0, 800d4d6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d2>
 800d4cc:	6823      	ldr	r3, [r4, #0]
 800d4ce:	a907      	add	r1, sp, #28
 800d4d0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d4d2:	4620      	mov	r0, r4
 800d4d4:	4798      	blx	r3
 800d4d6:	3501      	adds	r5, #1
 800d4d8:	b2ad      	uxth	r5, r5
 800d4da:	e7e7      	b.n	800d4ac <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2a8>
 800d4dc:	20001494 	.word	0x20001494
 800d4e0:	200014a0 	.word	0x200014a0
 800d4e4:	2000001c 	.word	0x2000001c
 800d4e8:	2000143c 	.word	0x2000143c
 800d4ec:	20001432 	.word	0x20001432
 800d4f0:	2000143a 	.word	0x2000143a
 800d4f4:	20001430 	.word	0x20001430
 800d4f8:	20001434 	.word	0x20001434

0800d4fc <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800d4fc:	4b03      	ldr	r3, [pc, #12]	; (800d50c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800d4fe:	2200      	movs	r2, #0
 800d500:	801a      	strh	r2, [r3, #0]
 800d502:	805a      	strh	r2, [r3, #2]
 800d504:	809a      	strh	r2, [r3, #4]
 800d506:	80da      	strh	r2, [r3, #6]
 800d508:	4770      	bx	lr
 800d50a:	bf00      	nop
 800d50c:	200014a0 	.word	0x200014a0

0800d510 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
 800d510:	2000      	movs	r0, #0
 800d512:	4770      	bx	lr

0800d514 <_ZNK8touchgfx4Font12getGSUBTableEv>:
 800d514:	2000      	movs	r0, #0
 800d516:	4770      	bx	lr

0800d518 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800d518:	b508      	push	{r3, lr}
 800d51a:	6803      	ldr	r3, [r0, #0]
 800d51c:	68db      	ldr	r3, [r3, #12]
 800d51e:	4798      	blx	r3
 800d520:	b128      	cbz	r0, 800d52e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800d522:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800d526:	7a80      	ldrb	r0, [r0, #10]
 800d528:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d52c:	4318      	orrs	r0, r3
 800d52e:	bd08      	pop	{r3, pc}

0800d530 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
 800d530:	b40e      	push	{r1, r2, r3}
 800d532:	b533      	push	{r0, r1, r4, r5, lr}
 800d534:	ab05      	add	r3, sp, #20
 800d536:	f853 2b04 	ldr.w	r2, [r3], #4
 800d53a:	9301      	str	r3, [sp, #4]
 800d53c:	4b09      	ldr	r3, [pc, #36]	; (800d564 <_ZNK8touchgfx4Font14getStringWidthEPKtz+0x34>)
 800d53e:	685c      	ldr	r4, [r3, #4]
 800d540:	1061      	asrs	r1, r4, #1
 800d542:	07e4      	lsls	r4, r4, #31
 800d544:	eb00 0501 	add.w	r5, r0, r1
 800d548:	bf45      	ittet	mi
 800d54a:	681b      	ldrmi	r3, [r3, #0]
 800d54c:	5841      	ldrmi	r1, [r0, r1]
 800d54e:	681c      	ldrpl	r4, [r3, #0]
 800d550:	58cc      	ldrmi	r4, [r1, r3]
 800d552:	9b01      	ldr	r3, [sp, #4]
 800d554:	2100      	movs	r1, #0
 800d556:	4628      	mov	r0, r5
 800d558:	47a0      	blx	r4
 800d55a:	b002      	add	sp, #8
 800d55c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d560:	b003      	add	sp, #12
 800d562:	4770      	bx	lr
 800d564:	20000010 	.word	0x20000010

0800d568 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:
 800d568:	b40c      	push	{r2, r3}
 800d56a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d56c:	ab06      	add	r3, sp, #24
 800d56e:	f853 2b04 	ldr.w	r2, [r3], #4
 800d572:	9301      	str	r3, [sp, #4]
 800d574:	4b09      	ldr	r3, [pc, #36]	; (800d59c <_ZNK8touchgfx4Font14getStringWidthEhPKtz+0x34>)
 800d576:	685d      	ldr	r5, [r3, #4]
 800d578:	106c      	asrs	r4, r5, #1
 800d57a:	07ed      	lsls	r5, r5, #31
 800d57c:	eb00 0604 	add.w	r6, r0, r4
 800d580:	bf45      	ittet	mi
 800d582:	681b      	ldrmi	r3, [r3, #0]
 800d584:	5900      	ldrmi	r0, [r0, r4]
 800d586:	681c      	ldrpl	r4, [r3, #0]
 800d588:	58c4      	ldrmi	r4, [r0, r3]
 800d58a:	9b01      	ldr	r3, [sp, #4]
 800d58c:	4630      	mov	r0, r6
 800d58e:	47a0      	blx	r4
 800d590:	b002      	add	sp, #8
 800d592:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d596:	b002      	add	sp, #8
 800d598:	4770      	bx	lr
 800d59a:	bf00      	nop
 800d59c:	20000010 	.word	0x20000010

0800d5a0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800d5a0:	b40e      	push	{r1, r2, r3}
 800d5a2:	b530      	push	{r4, r5, lr}
 800d5a4:	b098      	sub	sp, #96	; 0x60
 800d5a6:	ab1b      	add	r3, sp, #108	; 0x6c
 800d5a8:	4604      	mov	r4, r0
 800d5aa:	f853 5b04 	ldr.w	r5, [r3], #4
 800d5ae:	9301      	str	r3, [sp, #4]
 800d5b0:	a802      	add	r0, sp, #8
 800d5b2:	f001 f82b 	bl	800e60c <_ZN8touchgfx12TextProviderC1Ev>
 800d5b6:	6823      	ldr	r3, [r4, #0]
 800d5b8:	4620      	mov	r0, r4
 800d5ba:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d5bc:	4798      	blx	r3
 800d5be:	9a01      	ldr	r2, [sp, #4]
 800d5c0:	4603      	mov	r3, r0
 800d5c2:	4629      	mov	r1, r5
 800d5c4:	a802      	add	r0, sp, #8
 800d5c6:	f001 f83e 	bl	800e646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d5ca:	a802      	add	r0, sp, #8
 800d5cc:	f001 f874 	bl	800e6b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d5d0:	2401      	movs	r4, #1
 800d5d2:	b2a3      	uxth	r3, r4
 800d5d4:	b140      	cbz	r0, 800d5e8 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x48>
 800d5d6:	280a      	cmp	r0, #10
 800d5d8:	bf08      	it	eq
 800d5da:	3301      	addeq	r3, #1
 800d5dc:	a802      	add	r0, sp, #8
 800d5de:	bf08      	it	eq
 800d5e0:	b21c      	sxtheq	r4, r3
 800d5e2:	f001 f869 	bl	800e6b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d5e6:	e7f4      	b.n	800d5d2 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x32>
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	b018      	add	sp, #96	; 0x60
 800d5ec:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800d5f0:	b003      	add	sp, #12
 800d5f2:	4770      	bx	lr

0800d5f4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800d5f4:	b40e      	push	{r1, r2, r3}
 800d5f6:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d5f8:	b098      	sub	sp, #96	; 0x60
 800d5fa:	ab1d      	add	r3, sp, #116	; 0x74
 800d5fc:	4605      	mov	r5, r0
 800d5fe:	f853 4b04 	ldr.w	r4, [r3], #4
 800d602:	9300      	str	r3, [sp, #0]
 800d604:	a802      	add	r0, sp, #8
 800d606:	f001 f801 	bl	800e60c <_ZN8touchgfx12TextProviderC1Ev>
 800d60a:	682b      	ldr	r3, [r5, #0]
 800d60c:	4f21      	ldr	r7, [pc, #132]	; (800d694 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0xa0>)
 800d60e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d610:	4628      	mov	r0, r5
 800d612:	4798      	blx	r3
 800d614:	ae18      	add	r6, sp, #96	; 0x60
 800d616:	4603      	mov	r3, r0
 800d618:	4621      	mov	r1, r4
 800d61a:	9a00      	ldr	r2, [sp, #0]
 800d61c:	a802      	add	r0, sp, #8
 800d61e:	2400      	movs	r4, #0
 800d620:	f001 f811 	bl	800e646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d624:	f846 4d5c 	str.w	r4, [r6, #-92]!
 800d628:	462a      	mov	r2, r5
 800d62a:	4633      	mov	r3, r6
 800d62c:	4621      	mov	r1, r4
 800d62e:	a802      	add	r0, sp, #8
 800d630:	f001 f96e 	bl	800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d634:	b338      	cbz	r0, 800d686 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x92>
 800d636:	280a      	cmp	r0, #10
 800d638:	d01e      	beq.n	800d678 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800d63a:	9901      	ldr	r1, [sp, #4]
 800d63c:	b1e1      	cbz	r1, 800d678 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x84>
 800d63e:	7b4b      	ldrb	r3, [r1, #13]
 800d640:	f891 c008 	ldrb.w	ip, [r1, #8]
 800d644:	79c9      	ldrb	r1, [r1, #7]
 800d646:	88aa      	ldrh	r2, [r5, #4]
 800d648:	f013 0f40 	tst.w	r3, #64	; 0x40
 800d64c:	ea4f 1e03 	mov.w	lr, r3, lsl #4
 800d650:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800d654:	f40e 7e80 	and.w	lr, lr, #256	; 0x100
 800d658:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800d65c:	bf14      	ite	ne
 800d65e:	4638      	movne	r0, r7
 800d660:	2000      	moveq	r0, #0
 800d662:	ea41 010e 	orr.w	r1, r1, lr
 800d666:	ea43 030c 	orr.w	r3, r3, ip
 800d66a:	440a      	add	r2, r1
 800d66c:	4303      	orrs	r3, r0
 800d66e:	1ad3      	subs	r3, r2, r3
 800d670:	b29b      	uxth	r3, r3
 800d672:	42a3      	cmp	r3, r4
 800d674:	bfc8      	it	gt
 800d676:	b21c      	sxthgt	r4, r3
 800d678:	4633      	mov	r3, r6
 800d67a:	462a      	mov	r2, r5
 800d67c:	2100      	movs	r1, #0
 800d67e:	a802      	add	r0, sp, #8
 800d680:	f001 f946 	bl	800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d684:	e7d6      	b.n	800d634 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x40>
 800d686:	b2a0      	uxth	r0, r4
 800d688:	b018      	add	sp, #96	; 0x60
 800d68a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800d68e:	b003      	add	sp, #12
 800d690:	4770      	bx	lr
 800d692:	bf00      	nop
 800d694:	fffffe00 	.word	0xfffffe00

0800d698 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800d698:	b40e      	push	{r1, r2, r3}
 800d69a:	b570      	push	{r4, r5, r6, lr}
 800d69c:	b099      	sub	sp, #100	; 0x64
 800d69e:	ab1d      	add	r3, sp, #116	; 0x74
 800d6a0:	4604      	mov	r4, r0
 800d6a2:	f853 5b04 	ldr.w	r5, [r3], #4
 800d6a6:	9300      	str	r3, [sp, #0]
 800d6a8:	a802      	add	r0, sp, #8
 800d6aa:	f000 ffaf 	bl	800e60c <_ZN8touchgfx12TextProviderC1Ev>
 800d6ae:	6823      	ldr	r3, [r4, #0]
 800d6b0:	4620      	mov	r0, r4
 800d6b2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d6b4:	4798      	blx	r3
 800d6b6:	4629      	mov	r1, r5
 800d6b8:	4603      	mov	r3, r0
 800d6ba:	9a00      	ldr	r2, [sp, #0]
 800d6bc:	a802      	add	r0, sp, #8
 800d6be:	ad18      	add	r5, sp, #96	; 0x60
 800d6c0:	f000 ffc1 	bl	800e646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d6c4:	2100      	movs	r1, #0
 800d6c6:	f845 1d5c 	str.w	r1, [r5, #-92]!
 800d6ca:	4622      	mov	r2, r4
 800d6cc:	462b      	mov	r3, r5
 800d6ce:	a802      	add	r0, sp, #8
 800d6d0:	f001 f91e 	bl	800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d6d4:	26ff      	movs	r6, #255	; 0xff
 800d6d6:	b190      	cbz	r0, 800d6fe <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x66>
 800d6d8:	280a      	cmp	r0, #10
 800d6da:	d009      	beq.n	800d6f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800d6dc:	9a01      	ldr	r2, [sp, #4]
 800d6de:	b13a      	cbz	r2, 800d6f0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x58>
 800d6e0:	7923      	ldrb	r3, [r4, #4]
 800d6e2:	7a12      	ldrb	r2, [r2, #8]
 800d6e4:	1a9b      	subs	r3, r3, r2
 800d6e6:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 800d6ea:	429e      	cmp	r6, r3
 800d6ec:	bf28      	it	cs
 800d6ee:	461e      	movcs	r6, r3
 800d6f0:	462b      	mov	r3, r5
 800d6f2:	4622      	mov	r2, r4
 800d6f4:	2100      	movs	r1, #0
 800d6f6:	a802      	add	r0, sp, #8
 800d6f8:	f001 f90a 	bl	800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d6fc:	e7eb      	b.n	800d6d6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x3e>
 800d6fe:	4630      	mov	r0, r6
 800d700:	b019      	add	sp, #100	; 0x64
 800d702:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d706:	b003      	add	sp, #12
 800d708:	4770      	bx	lr

0800d70a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800d70a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d70e:	4606      	mov	r6, r0
 800d710:	b099      	sub	sp, #100	; 0x64
 800d712:	a802      	add	r0, sp, #8
 800d714:	4614      	mov	r4, r2
 800d716:	4688      	mov	r8, r1
 800d718:	461d      	mov	r5, r3
 800d71a:	f000 ff77 	bl	800e60c <_ZN8touchgfx12TextProviderC1Ev>
 800d71e:	6833      	ldr	r3, [r6, #0]
 800d720:	4630      	mov	r0, r6
 800d722:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d724:	4798      	blx	r3
 800d726:	462a      	mov	r2, r5
 800d728:	4603      	mov	r3, r0
 800d72a:	4621      	mov	r1, r4
 800d72c:	a802      	add	r0, sp, #8
 800d72e:	f000 ff8a 	bl	800e646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>
 800d732:	f04f 0b00 	mov.w	fp, #0
 800d736:	465f      	mov	r7, fp
 800d738:	46da      	mov	sl, fp
 800d73a:	46d9      	mov	r9, fp
 800d73c:	ab01      	add	r3, sp, #4
 800d73e:	4632      	mov	r2, r6
 800d740:	4641      	mov	r1, r8
 800d742:	a802      	add	r0, sp, #8
 800d744:	f8cd 9004 	str.w	r9, [sp, #4]
 800d748:	f001 f8e2 	bl	800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800d74c:	4605      	mov	r5, r0
 800d74e:	b108      	cbz	r0, 800d754 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x4a>
 800d750:	280a      	cmp	r0, #10
 800d752:	d10b      	bne.n	800d76c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x62>
 800d754:	4557      	cmp	r7, sl
 800d756:	bf38      	it	cc
 800d758:	4657      	movcc	r7, sl
 800d75a:	f04f 0a00 	mov.w	sl, #0
 800d75e:	b91d      	cbnz	r5, 800d768 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800d760:	4638      	mov	r0, r7
 800d762:	b019      	add	sp, #100	; 0x64
 800d764:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d768:	46ab      	mov	fp, r5
 800d76a:	e7e7      	b.n	800d73c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x32>
 800d76c:	9a01      	ldr	r2, [sp, #4]
 800d76e:	2a00      	cmp	r2, #0
 800d770:	d0fa      	beq.n	800d768 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x5e>
 800d772:	f992 400d 	ldrsb.w	r4, [r2, #13]
 800d776:	6833      	ldr	r3, [r6, #0]
 800d778:	8895      	ldrh	r5, [r2, #4]
 800d77a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d77c:	f404 7080 	and.w	r0, r4, #256	; 0x100
 800d780:	7a94      	ldrb	r4, [r2, #10]
 800d782:	4659      	mov	r1, fp
 800d784:	4304      	orrs	r4, r0
 800d786:	4630      	mov	r0, r6
 800d788:	4798      	blx	r3
 800d78a:	4420      	add	r0, r4
 800d78c:	4450      	add	r0, sl
 800d78e:	fa1f fa80 	uxth.w	sl, r0
 800d792:	e7e4      	b.n	800d75e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x54>

0800d794 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800d794:	b513      	push	{r0, r1, r4, lr}
 800d796:	1d01      	adds	r1, r0, #4
 800d798:	4603      	mov	r3, r0
 800d79a:	c903      	ldmia	r1, {r0, r1}
 800d79c:	466a      	mov	r2, sp
 800d79e:	e882 0003 	stmia.w	r2, {r0, r1}
 800d7a2:	2100      	movs	r1, #0
 800d7a4:	9100      	str	r1, [sp, #0]
 800d7a6:	6819      	ldr	r1, [r3, #0]
 800d7a8:	4618      	mov	r0, r3
 800d7aa:	690c      	ldr	r4, [r1, #16]
 800d7ac:	4611      	mov	r1, r2
 800d7ae:	47a0      	blx	r4
 800d7b0:	b002      	add	sp, #8
 800d7b2:	bd10      	pop	{r4, pc}

0800d7b4 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800d7b4:	b538      	push	{r3, r4, r5, lr}
 800d7b6:	680b      	ldr	r3, [r1, #0]
 800d7b8:	460c      	mov	r4, r1
 800d7ba:	68db      	ldr	r3, [r3, #12]
 800d7bc:	4605      	mov	r5, r0
 800d7be:	4798      	blx	r3
 800d7c0:	6823      	ldr	r3, [r4, #0]
 800d7c2:	4620      	mov	r0, r4
 800d7c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d7c6:	4629      	mov	r1, r5
 800d7c8:	4798      	blx	r3
 800d7ca:	4628      	mov	r0, r5
 800d7cc:	bd38      	pop	{r3, r4, r5, pc}

0800d7ce <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800d7ce:	b410      	push	{r4}
 800d7d0:	880a      	ldrh	r2, [r1, #0]
 800d7d2:	8884      	ldrh	r4, [r0, #4]
 800d7d4:	4422      	add	r2, r4
 800d7d6:	800a      	strh	r2, [r1, #0]
 800d7d8:	88c4      	ldrh	r4, [r0, #6]
 800d7da:	884a      	ldrh	r2, [r1, #2]
 800d7dc:	4422      	add	r2, r4
 800d7de:	804a      	strh	r2, [r1, #2]
 800d7e0:	6940      	ldr	r0, [r0, #20]
 800d7e2:	b120      	cbz	r0, 800d7ee <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800d7e4:	6803      	ldr	r3, [r0, #0]
 800d7e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d7ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d7ec:	4718      	bx	r3
 800d7ee:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d7f2:	4770      	bx	lr

0800d7f4 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800d7f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d7f6:	460b      	mov	r3, r1
 800d7f8:	b085      	sub	sp, #20
 800d7fa:	4604      	mov	r4, r0
 800d7fc:	b901      	cbnz	r1, 800d800 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800d7fe:	b1fa      	cbz	r2, 800d840 <_ZN8touchgfx8Drawable12moveRelativeEss+0x4c>
 800d800:	1d27      	adds	r7, r4, #4
 800d802:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d806:	466e      	mov	r6, sp
 800d808:	e886 0003 	stmia.w	r6, {r0, r1}
 800d80c:	88e1      	ldrh	r1, [r4, #6]
 800d80e:	440a      	add	r2, r1
 800d810:	88a1      	ldrh	r1, [r4, #4]
 800d812:	4419      	add	r1, r3
 800d814:	6823      	ldr	r3, [r4, #0]
 800d816:	b209      	sxth	r1, r1
 800d818:	4620      	mov	r0, r4
 800d81a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d81c:	b212      	sxth	r2, r2
 800d81e:	4798      	blx	r3
 800d820:	e897 0003 	ldmia.w	r7, {r0, r1}
 800d824:	ad02      	add	r5, sp, #8
 800d826:	e885 0003 	stmia.w	r5, {r0, r1}
 800d82a:	6960      	ldr	r0, [r4, #20]
 800d82c:	b150      	cbz	r0, 800d844 <_ZN8touchgfx8Drawable12moveRelativeEss+0x50>
 800d82e:	6803      	ldr	r3, [r0, #0]
 800d830:	4631      	mov	r1, r6
 800d832:	691b      	ldr	r3, [r3, #16]
 800d834:	4798      	blx	r3
 800d836:	6960      	ldr	r0, [r4, #20]
 800d838:	6803      	ldr	r3, [r0, #0]
 800d83a:	691b      	ldr	r3, [r3, #16]
 800d83c:	4629      	mov	r1, r5
 800d83e:	4798      	blx	r3
 800d840:	b005      	add	sp, #20
 800d842:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d844:	f7ff fb34 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800d848:	6803      	ldr	r3, [r0, #0]
 800d84a:	4631      	mov	r1, r6
 800d84c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d84e:	4798      	blx	r3
 800d850:	f7ff fb2e 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800d854:	6803      	ldr	r3, [r0, #0]
 800d856:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d858:	e7f0      	b.n	800d83c <_ZN8touchgfx8Drawable12moveRelativeEss+0x48>

0800d85a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800d85a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d85c:	8882      	ldrh	r2, [r0, #4]
 800d85e:	880b      	ldrh	r3, [r1, #0]
 800d860:	4413      	add	r3, r2
 800d862:	800b      	strh	r3, [r1, #0]
 800d864:	88c2      	ldrh	r2, [r0, #6]
 800d866:	884b      	ldrh	r3, [r1, #2]
 800d868:	4413      	add	r3, r2
 800d86a:	4602      	mov	r2, r0
 800d86c:	804b      	strh	r3, [r1, #2]
 800d86e:	4605      	mov	r5, r0
 800d870:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800d874:	460c      	mov	r4, r1
 800d876:	6851      	ldr	r1, [r2, #4]
 800d878:	466b      	mov	r3, sp
 800d87a:	c303      	stmia	r3!, {r0, r1}
 800d87c:	4621      	mov	r1, r4
 800d87e:	4668      	mov	r0, sp
 800d880:	f7fc fe52 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800d884:	466b      	mov	r3, sp
 800d886:	cb03      	ldmia	r3!, {r0, r1}
 800d888:	6020      	str	r0, [r4, #0]
 800d88a:	6061      	str	r1, [r4, #4]
 800d88c:	6968      	ldr	r0, [r5, #20]
 800d88e:	b128      	cbz	r0, 800d89c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800d890:	6803      	ldr	r3, [r0, #0]
 800d892:	691b      	ldr	r3, [r3, #16]
 800d894:	4621      	mov	r1, r4
 800d896:	4798      	blx	r3
 800d898:	b003      	add	sp, #12
 800d89a:	bd30      	pop	{r4, r5, pc}
 800d89c:	f7ff fb08 	bl	800ceb0 <_ZN8touchgfx11Application11getInstanceEv>
 800d8a0:	6803      	ldr	r3, [r0, #0]
 800d8a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d8a4:	e7f6      	b.n	800d894 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800d8a6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800d8a6:	b570      	push	{r4, r5, r6, lr}
 800d8a8:	8882      	ldrh	r2, [r0, #4]
 800d8aa:	880b      	ldrh	r3, [r1, #0]
 800d8ac:	4413      	add	r3, r2
 800d8ae:	800b      	strh	r3, [r1, #0]
 800d8b0:	88c2      	ldrh	r2, [r0, #6]
 800d8b2:	884b      	ldrh	r3, [r1, #2]
 800d8b4:	460c      	mov	r4, r1
 800d8b6:	4413      	add	r3, r2
 800d8b8:	804b      	strh	r3, [r1, #2]
 800d8ba:	4605      	mov	r5, r0
 800d8bc:	1d01      	adds	r1, r0, #4
 800d8be:	4620      	mov	r0, r4
 800d8c0:	f7fc fe32 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800d8c4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800d8c8:	b153      	cbz	r3, 800d8e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800d8ca:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800d8ce:	b13b      	cbz	r3, 800d8e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800d8d0:	6968      	ldr	r0, [r5, #20]
 800d8d2:	b128      	cbz	r0, 800d8e0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3a>
 800d8d4:	6803      	ldr	r3, [r0, #0]
 800d8d6:	4621      	mov	r1, r4
 800d8d8:	6a1b      	ldr	r3, [r3, #32]
 800d8da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d8de:	4718      	bx	r3
 800d8e0:	bd70      	pop	{r4, r5, r6, pc}

0800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800d8e2:	b510      	push	{r4, lr}
 800d8e4:	4604      	mov	r4, r0
 800d8e6:	4608      	mov	r0, r1
 800d8e8:	2300      	movs	r3, #0
 800d8ea:	8023      	strh	r3, [r4, #0]
 800d8ec:	8063      	strh	r3, [r4, #2]
 800d8ee:	6803      	ldr	r3, [r0, #0]
 800d8f0:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800d8f4:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800d8f8:	80a1      	strh	r1, [r4, #4]
 800d8fa:	80e2      	strh	r2, [r4, #6]
 800d8fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d8fe:	4621      	mov	r1, r4
 800d900:	4798      	blx	r3
 800d902:	4620      	mov	r0, r4
 800d904:	bd10      	pop	{r4, pc}
	...

0800d908 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800d908:	b530      	push	{r4, r5, lr}
 800d90a:	8083      	strh	r3, [r0, #4]
 800d90c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800d910:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800d914:	7183      	strb	r3, [r0, #6]
 800d916:	79c3      	ldrb	r3, [r0, #7]
 800d918:	6101      	str	r1, [r0, #16]
 800d91a:	f365 0306 	bfi	r3, r5, #0, #7
 800d91e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800d922:	8282      	strh	r2, [r0, #20]
 800d924:	f365 13c7 	bfi	r3, r5, #7, #1
 800d928:	71c3      	strb	r3, [r0, #7]
 800d92a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800d92e:	7203      	strb	r3, [r0, #8]
 800d930:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800d934:	7243      	strb	r3, [r0, #9]
 800d936:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800d93a:	8143      	strh	r3, [r0, #10]
 800d93c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800d940:	8183      	strh	r3, [r0, #12]
 800d942:	4b01      	ldr	r3, [pc, #4]	; (800d948 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800d944:	6003      	str	r3, [r0, #0]
 800d946:	bd30      	pop	{r4, r5, pc}
 800d948:	0801e5a0 	.word	0x0801e5a0

0800d94c <_ZNK8touchgfx9ConstFont4findEt>:
 800d94c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800d94e:	8a84      	ldrh	r4, [r0, #20]
 800d950:	2500      	movs	r5, #0
 800d952:	3c01      	subs	r4, #1
 800d954:	260e      	movs	r6, #14
 800d956:	42a5      	cmp	r5, r4
 800d958:	dc0c      	bgt.n	800d974 <_ZNK8touchgfx9ConstFont4findEt+0x28>
 800d95a:	192a      	adds	r2, r5, r4
 800d95c:	6903      	ldr	r3, [r0, #16]
 800d95e:	1052      	asrs	r2, r2, #1
 800d960:	fb06 3302 	mla	r3, r6, r2, r3
 800d964:	889f      	ldrh	r7, [r3, #4]
 800d966:	428f      	cmp	r7, r1
 800d968:	d901      	bls.n	800d96e <_ZNK8touchgfx9ConstFont4findEt+0x22>
 800d96a:	1e54      	subs	r4, r2, #1
 800d96c:	e7f3      	b.n	800d956 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800d96e:	d202      	bcs.n	800d976 <_ZNK8touchgfx9ConstFont4findEt+0x2a>
 800d970:	1c55      	adds	r5, r2, #1
 800d972:	e7f0      	b.n	800d956 <_ZNK8touchgfx9ConstFont4findEt+0xa>
 800d974:	2300      	movs	r3, #0
 800d976:	4618      	mov	r0, r3
 800d978:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800d97a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800d97a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d97c:	4605      	mov	r5, r0
 800d97e:	4617      	mov	r7, r2
 800d980:	461e      	mov	r6, r3
 800d982:	f7ff ffe3 	bl	800d94c <_ZNK8touchgfx9ConstFont4findEt>
 800d986:	b9e0      	cbnz	r0, 800d9c2 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x48>
 800d988:	b911      	cbnz	r1, 800d990 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x16>
 800d98a:	2400      	movs	r4, #0
 800d98c:	4620      	mov	r0, r4
 800d98e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d990:	290a      	cmp	r1, #10
 800d992:	d0fa      	beq.n	800d98a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d994:	682b      	ldr	r3, [r5, #0]
 800d996:	4628      	mov	r0, r5
 800d998:	691b      	ldr	r3, [r3, #16]
 800d99a:	4798      	blx	r3
 800d99c:	4601      	mov	r1, r0
 800d99e:	4628      	mov	r0, r5
 800d9a0:	f7ff ffd4 	bl	800d94c <_ZNK8touchgfx9ConstFont4findEt>
 800d9a4:	4604      	mov	r4, r0
 800d9a6:	2800      	cmp	r0, #0
 800d9a8:	d0ef      	beq.n	800d98a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800d9aa:	682b      	ldr	r3, [r5, #0]
 800d9ac:	4621      	mov	r1, r4
 800d9ae:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800d9b0:	4628      	mov	r0, r5
 800d9b2:	4798      	blx	r3
 800d9b4:	6038      	str	r0, [r7, #0]
 800d9b6:	682b      	ldr	r3, [r5, #0]
 800d9b8:	4628      	mov	r0, r5
 800d9ba:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d9bc:	4798      	blx	r3
 800d9be:	7030      	strb	r0, [r6, #0]
 800d9c0:	e7e4      	b.n	800d98c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x12>
 800d9c2:	4604      	mov	r4, r0
 800d9c4:	e7f1      	b.n	800d9aa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x30>

0800d9c6 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 800d9c6:	b538      	push	{r3, r4, r5, lr}
 800d9c8:	4605      	mov	r5, r0
 800d9ca:	f001 fd97 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d9ce:	4604      	mov	r4, r0
 800d9d0:	4628      	mov	r0, r5
 800d9d2:	f001 fcd5 	bl	800f380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800d9d6:	2800      	cmp	r0, #0
 800d9d8:	bf14      	ite	ne
 800d9da:	2002      	movne	r0, #2
 800d9dc:	2000      	moveq	r0, #0
 800d9de:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800d9e2:	b280      	uxth	r0, r0
 800d9e4:	bd38      	pop	{r3, r4, r5, pc}

0800d9e6 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 800d9e6:	b538      	push	{r3, r4, r5, lr}
 800d9e8:	4605      	mov	r5, r0
 800d9ea:	f001 fd87 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d9ee:	4604      	mov	r4, r0
 800d9f0:	4628      	mov	r0, r5
 800d9f2:	f001 fcc5 	bl	800f380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 800d9f6:	2800      	cmp	r0, #0
 800d9f8:	bf14      	ite	ne
 800d9fa:	2002      	movne	r0, #2
 800d9fc:	2000      	moveq	r0, #0
 800d9fe:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 800da02:	f040 0001 	orr.w	r0, r0, #1
 800da06:	b280      	uxth	r0, r0
 800da08:	bd38      	pop	{r3, r4, r5, pc}

0800da0a <_ZN8touchgfx10ClickEventD1Ev>:
 800da0a:	4770      	bx	lr

0800da0c <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800da0c:	2000      	movs	r0, #0
 800da0e:	4770      	bx	lr

0800da10 <_ZN8touchgfx9DragEventD1Ev>:
 800da10:	4770      	bx	lr

0800da12 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800da12:	2001      	movs	r0, #1
 800da14:	4770      	bx	lr

0800da16 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800da16:	2002      	movs	r0, #2
 800da18:	4770      	bx	lr

0800da1a <_ZN8touchgfx12GestureEventD1Ev>:
 800da1a:	4770      	bx	lr

0800da1c <_ZN8touchgfx10ClickEventD0Ev>:
 800da1c:	b510      	push	{r4, lr}
 800da1e:	210c      	movs	r1, #12
 800da20:	4604      	mov	r4, r0
 800da22:	f00d f86b 	bl	801aafc <_ZdlPvj>
 800da26:	4620      	mov	r0, r4
 800da28:	bd10      	pop	{r4, pc}

0800da2a <_ZN8touchgfx9DragEventD0Ev>:
 800da2a:	b510      	push	{r4, lr}
 800da2c:	2110      	movs	r1, #16
 800da2e:	4604      	mov	r4, r0
 800da30:	f00d f864 	bl	801aafc <_ZdlPvj>
 800da34:	4620      	mov	r0, r4
 800da36:	bd10      	pop	{r4, pc}

0800da38 <_ZN8touchgfx12GestureEventD0Ev>:
 800da38:	b510      	push	{r4, lr}
 800da3a:	210c      	movs	r1, #12
 800da3c:	4604      	mov	r4, r0
 800da3e:	f00d f85d 	bl	801aafc <_ZdlPvj>
 800da42:	4620      	mov	r0, r4
 800da44:	bd10      	pop	{r4, pc}
	...

0800da48 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800da48:	b530      	push	{r4, r5, lr}
 800da4a:	460d      	mov	r5, r1
 800da4c:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800da4e:	b087      	sub	sp, #28
 800da50:	4604      	mov	r4, r0
 800da52:	b301      	cbz	r1, 800da96 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800da54:	a801      	add	r0, sp, #4
 800da56:	f7ff ff44 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800da5a:	892a      	ldrh	r2, [r5, #8]
 800da5c:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800da60:	7928      	ldrb	r0, [r5, #4]
 800da62:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800da66:	f88d 0010 	strb.w	r0, [sp, #16]
 800da6a:	1ad2      	subs	r2, r2, r3
 800da6c:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800da6e:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800da70:	f8ad 1012 	strh.w	r1, [sp, #18]
 800da74:	441a      	add	r2, r3
 800da76:	896b      	ldrh	r3, [r5, #10]
 800da78:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800da7c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800da80:	1b5b      	subs	r3, r3, r5
 800da82:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800da84:	442b      	add	r3, r5
 800da86:	4d05      	ldr	r5, [pc, #20]	; (800da9c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800da88:	9503      	str	r5, [sp, #12]
 800da8a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800da8e:	6803      	ldr	r3, [r0, #0]
 800da90:	a903      	add	r1, sp, #12
 800da92:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800da94:	4798      	blx	r3
 800da96:	b007      	add	sp, #28
 800da98:	bd30      	pop	{r4, r5, pc}
 800da9a:	bf00      	nop
 800da9c:	0801e61c 	.word	0x0801e61c

0800daa0 <_ZNK8touchgfx4Rect9intersectEss>:
 800daa0:	b510      	push	{r4, lr}
 800daa2:	f9b0 3000 	ldrsh.w	r3, [r0]
 800daa6:	428b      	cmp	r3, r1
 800daa8:	dc10      	bgt.n	800dacc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800daaa:	8884      	ldrh	r4, [r0, #4]
 800daac:	4423      	add	r3, r4
 800daae:	b21b      	sxth	r3, r3
 800dab0:	4299      	cmp	r1, r3
 800dab2:	da0b      	bge.n	800dacc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800dab4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800dab8:	4293      	cmp	r3, r2
 800daba:	dc07      	bgt.n	800dacc <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800dabc:	88c0      	ldrh	r0, [r0, #6]
 800dabe:	4418      	add	r0, r3
 800dac0:	b200      	sxth	r0, r0
 800dac2:	4282      	cmp	r2, r0
 800dac4:	bfac      	ite	ge
 800dac6:	2000      	movge	r0, #0
 800dac8:	2001      	movlt	r0, #1
 800daca:	bd10      	pop	{r4, pc}
 800dacc:	2000      	movs	r0, #0
 800dace:	e7fc      	b.n	800daca <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800dad0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800dad0:	b5f0      	push	{r4, r5, r6, r7, lr}
 800dad2:	460c      	mov	r4, r1
 800dad4:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800dad6:	b089      	sub	sp, #36	; 0x24
 800dad8:	4605      	mov	r5, r0
 800dada:	2900      	cmp	r1, #0
 800dadc:	d054      	beq.n	800db88 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800dade:	4668      	mov	r0, sp
 800dae0:	f7ff feff 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dae4:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800dae6:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800dae8:	8922      	ldrh	r2, [r4, #8]
 800daea:	88e1      	ldrh	r1, [r4, #6]
 800daec:	443a      	add	r2, r7
 800daee:	4431      	add	r1, r6
 800daf0:	b212      	sxth	r2, r2
 800daf2:	b209      	sxth	r1, r1
 800daf4:	4668      	mov	r0, sp
 800daf6:	f7ff ffd3 	bl	800daa0 <_ZNK8touchgfx4Rect9intersectEss>
 800dafa:	b1d0      	cbz	r0, 800db32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800dafc:	89a2      	ldrh	r2, [r4, #12]
 800dafe:	8961      	ldrh	r1, [r4, #10]
 800db00:	443a      	add	r2, r7
 800db02:	4431      	add	r1, r6
 800db04:	b212      	sxth	r2, r2
 800db06:	b209      	sxth	r1, r1
 800db08:	4668      	mov	r0, sp
 800db0a:	f7ff ffc9 	bl	800daa0 <_ZNK8touchgfx4Rect9intersectEss>
 800db0e:	4603      	mov	r3, r0
 800db10:	b978      	cbnz	r0, 800db32 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800db12:	4a1e      	ldr	r2, [pc, #120]	; (800db8c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800db14:	9204      	str	r2, [sp, #16]
 800db16:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800db18:	f8ad 3016 	strh.w	r3, [sp, #22]
 800db1c:	2202      	movs	r2, #2
 800db1e:	f88d 2014 	strb.w	r2, [sp, #20]
 800db22:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db26:	f8ad 301a 	strh.w	r3, [sp, #26]
 800db2a:	6803      	ldr	r3, [r0, #0]
 800db2c:	a904      	add	r1, sp, #16
 800db2e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800db30:	4798      	blx	r3
 800db32:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800db34:	a802      	add	r0, sp, #8
 800db36:	f7ff fed4 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800db3a:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800db3e:	88e0      	ldrh	r0, [r4, #6]
 800db40:	8961      	ldrh	r1, [r4, #10]
 800db42:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800db46:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800db4a:	8923      	ldrh	r3, [r4, #8]
 800db4c:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800db4e:	7927      	ldrb	r7, [r4, #4]
 800db50:	f88d 7014 	strb.w	r7, [sp, #20]
 800db54:	1a80      	subs	r0, r0, r2
 800db56:	1a89      	subs	r1, r1, r2
 800db58:	89a2      	ldrh	r2, [r4, #12]
 800db5a:	4c0d      	ldr	r4, [pc, #52]	; (800db90 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800db5c:	9404      	str	r4, [sp, #16]
 800db5e:	4460      	add	r0, ip
 800db60:	eba3 030e 	sub.w	r3, r3, lr
 800db64:	eba2 020e 	sub.w	r2, r2, lr
 800db68:	f8ad 0016 	strh.w	r0, [sp, #22]
 800db6c:	4433      	add	r3, r6
 800db6e:	4461      	add	r1, ip
 800db70:	4432      	add	r2, r6
 800db72:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800db74:	f8ad 101a 	strh.w	r1, [sp, #26]
 800db78:	f8ad 3018 	strh.w	r3, [sp, #24]
 800db7c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800db80:	6803      	ldr	r3, [r0, #0]
 800db82:	a904      	add	r1, sp, #16
 800db84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800db86:	4798      	blx	r3
 800db88:	b009      	add	sp, #36	; 0x24
 800db8a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800db8c:	0801e5f4 	.word	0x0801e5f4
 800db90:	0801e608 	.word	0x0801e608

0800db94 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800db94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db98:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800db9c:	790b      	ldrb	r3, [r1, #4]
 800db9e:	b0a1      	sub	sp, #132	; 0x84
 800dba0:	4604      	mov	r4, r0
 800dba2:	460d      	mov	r5, r1
 800dba4:	f1b9 0f00 	cmp.w	r9, #0
 800dba8:	d00f      	beq.n	800dbca <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800dbaa:	2b00      	cmp	r3, #0
 800dbac:	f040 80a0 	bne.w	800dcf0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800dbb0:	b021      	add	sp, #132	; 0x84
 800dbb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dbb6:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800dbba:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dbbe:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800dbc2:	1d20      	adds	r0, r4, #4
 800dbc4:	f7fc fbff 	bl	800a3c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dbc8:	e092      	b.n	800dcf0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800dbca:	2b00      	cmp	r3, #0
 800dbcc:	d1f0      	bne.n	800dbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dbce:	4b5e      	ldr	r3, [pc, #376]	; (800dd48 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800dbd0:	681b      	ldr	r3, [r3, #0]
 800dbd2:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800dbd6:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800dbda:	f1ba 0f03 	cmp.w	sl, #3
 800dbde:	ddea      	ble.n	800dbb6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800dbe0:	f1ba 0f0c 	cmp.w	sl, #12
 800dbe4:	f04f 0303 	mov.w	r3, #3
 800dbe8:	bfdc      	itt	le
 800dbea:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800dbee:	fb92 f3f3 	sdivle	r3, r2, r3
 800dbf2:	9301      	str	r3, [sp, #4]
 800dbf4:	4b55      	ldr	r3, [pc, #340]	; (800dd4c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800dbf6:	4956      	ldr	r1, [pc, #344]	; (800dd50 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800dbf8:	f9b3 2000 	ldrsh.w	r2, [r3]
 800dbfc:	4b55      	ldr	r3, [pc, #340]	; (800dd54 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800dbfe:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800dc02:	f9b3 3000 	ldrsh.w	r3, [r3]
 800dc06:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800dc0a:	ab0e      	add	r3, sp, #56	; 0x38
 800dc0c:	2248      	movs	r2, #72	; 0x48
 800dc0e:	2600      	movs	r6, #0
 800dc10:	4618      	mov	r0, r3
 800dc12:	960a      	str	r6, [sp, #40]	; 0x28
 800dc14:	f00d fdea 	bl	801b7ec <memcpy>
 800dc18:	f04f 32ff 	mov.w	r2, #4294967295
 800dc1c:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800dc20:	f8cd a008 	str.w	sl, [sp, #8]
 800dc24:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800dc28:	fb93 f3f2 	sdiv	r3, r3, r2
 800dc2c:	b29b      	uxth	r3, r3
 800dc2e:	46b3      	mov	fp, r6
 800dc30:	9303      	str	r3, [sp, #12]
 800dc32:	2300      	movs	r3, #0
 800dc34:	9309      	str	r3, [sp, #36]	; 0x24
 800dc36:	9b07      	ldr	r3, [sp, #28]
 800dc38:	9a03      	ldr	r2, [sp, #12]
 800dc3a:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800dc3e:	88ef      	ldrh	r7, [r5, #6]
 800dc40:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800dc44:	fb13 f302 	smulbb	r3, r3, r2
 800dc48:	b29b      	uxth	r3, r3
 800dc4a:	9304      	str	r3, [sp, #16]
 800dc4c:	9b07      	ldr	r3, [sp, #28]
 800dc4e:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800dc52:	a80a      	add	r0, sp, #40	; 0x28
 800dc54:	685b      	ldr	r3, [r3, #4]
 800dc56:	fb13 f302 	smulbb	r3, r3, r2
 800dc5a:	b29b      	uxth	r3, r3
 800dc5c:	9305      	str	r3, [sp, #20]
 800dc5e:	9b04      	ldr	r3, [sp, #16]
 800dc60:	441f      	add	r7, r3
 800dc62:	9b05      	ldr	r3, [sp, #20]
 800dc64:	4498      	add	r8, r3
 800dc66:	b23f      	sxth	r7, r7
 800dc68:	fa0f f888 	sxth.w	r8, r8
 800dc6c:	4642      	mov	r2, r8
 800dc6e:	4639      	mov	r1, r7
 800dc70:	f7ff ff16 	bl	800daa0 <_ZNK8touchgfx4Rect9intersectEss>
 800dc74:	b380      	cbz	r0, 800dcd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dc76:	4639      	mov	r1, r7
 800dc78:	ab09      	add	r3, sp, #36	; 0x24
 800dc7a:	4642      	mov	r2, r8
 800dc7c:	1d20      	adds	r0, r4, #4
 800dc7e:	f7fc fba2 	bl	800a3c6 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800dc82:	9909      	ldr	r1, [sp, #36]	; 0x24
 800dc84:	b341      	cbz	r1, 800dcd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dc86:	4549      	cmp	r1, r9
 800dc88:	d026      	beq.n	800dcd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dc8a:	a80c      	add	r0, sp, #48	; 0x30
 800dc8c:	f7ff fe29 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dc90:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800dc94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dc98:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800dc9c:	2002      	movs	r0, #2
 800dc9e:	fb92 f2f0 	sdiv	r2, r2, r0
 800dca2:	440a      	add	r2, r1
 800dca4:	1a99      	subs	r1, r3, r2
 800dca6:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800dcaa:	fb93 f3f0 	sdiv	r3, r3, r0
 800dcae:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800dcb2:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800dcb6:	4403      	add	r3, r0
 800dcb8:	1ad3      	subs	r3, r2, r3
 800dcba:	435b      	muls	r3, r3
 800dcbc:	9a06      	ldr	r2, [sp, #24]
 800dcbe:	fb01 3301 	mla	r3, r1, r1, r3
 800dcc2:	4293      	cmp	r3, r2
 800dcc4:	d208      	bcs.n	800dcd8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800dcc6:	9a04      	ldr	r2, [sp, #16]
 800dcc8:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800dccc:	86a2      	strh	r2, [r4, #52]	; 0x34
 800dcce:	9a05      	ldr	r2, [sp, #20]
 800dcd0:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800dcd4:	86e2      	strh	r2, [r4, #54]	; 0x36
 800dcd6:	9306      	str	r3, [sp, #24]
 800dcd8:	f10b 0b02 	add.w	fp, fp, #2
 800dcdc:	f1bb 0f08 	cmp.w	fp, #8
 800dce0:	dda7      	ble.n	800dc32 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800dce2:	9b02      	ldr	r3, [sp, #8]
 800dce4:	4453      	add	r3, sl
 800dce6:	9302      	str	r3, [sp, #8]
 800dce8:	9b01      	ldr	r3, [sp, #4]
 800dcea:	3601      	adds	r6, #1
 800dcec:	42b3      	cmp	r3, r6
 800dcee:	d199      	bne.n	800dc24 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800dcf0:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800dcf2:	2900      	cmp	r1, #0
 800dcf4:	f43f af5c 	beq.w	800dbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dcf8:	a80c      	add	r0, sp, #48	; 0x30
 800dcfa:	f7ff fdf2 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dcfe:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800dd02:	88ea      	ldrh	r2, [r5, #6]
 800dd04:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800dd08:	7929      	ldrb	r1, [r5, #4]
 800dd0a:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800dd0e:	1ad2      	subs	r2, r2, r3
 800dd10:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800dd12:	441a      	add	r2, r3
 800dd14:	892b      	ldrh	r3, [r5, #8]
 800dd16:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800dd1a:	1a1b      	subs	r3, r3, r0
 800dd1c:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800dd1e:	4403      	add	r3, r0
 800dd20:	480d      	ldr	r0, [pc, #52]	; (800dd58 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800dd22:	900e      	str	r0, [sp, #56]	; 0x38
 800dd24:	2600      	movs	r6, #0
 800dd26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800dd28:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800dd2c:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800dd30:	6803      	ldr	r3, [r0, #0]
 800dd32:	a90e      	add	r1, sp, #56	; 0x38
 800dd34:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800dd36:	4798      	blx	r3
 800dd38:	792b      	ldrb	r3, [r5, #4]
 800dd3a:	2b00      	cmp	r3, #0
 800dd3c:	f43f af38 	beq.w	800dbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dd40:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800dd44:	e734      	b.n	800dbb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800dd46:	bf00      	nop
 800dd48:	2000143c 	.word	0x2000143c
 800dd4c:	20001430 	.word	0x20001430
 800dd50:	0801ca88 	.word	0x0801ca88
 800dd54:	20001432 	.word	0x20001432
 800dd58:	0801e5f4 	.word	0x0801e5f4

0800dd5c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800dd5c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800dd5e:	4604      	mov	r4, r0
 800dd60:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800dd64:	3201      	adds	r2, #1
 800dd66:	d112      	bne.n	800dd8e <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800dd68:	6803      	ldr	r3, [r0, #0]
 800dd6a:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800dd6e:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800dd72:	f8ad 1004 	strh.w	r1, [sp, #4]
 800dd76:	2500      	movs	r5, #0
 800dd78:	9500      	str	r5, [sp, #0]
 800dd7a:	466d      	mov	r5, sp
 800dd7c:	4629      	mov	r1, r5
 800dd7e:	f8ad 2006 	strh.w	r2, [sp, #6]
 800dd82:	6a1b      	ldr	r3, [r3, #32]
 800dd84:	4798      	blx	r3
 800dd86:	e895 0003 	ldmia.w	r5, {r0, r1}
 800dd8a:	e884 0003 	stmia.w	r4, {r0, r1}
 800dd8e:	4620      	mov	r0, r4
 800dd90:	b003      	add	sp, #12
 800dd92:	bd30      	pop	{r4, r5, pc}

0800dd94 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800dd94:	b513      	push	{r0, r1, r4, lr}
 800dd96:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800dd9a:	3301      	adds	r3, #1
 800dd9c:	4604      	mov	r4, r0
 800dd9e:	d109      	bne.n	800ddb4 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800dda0:	4601      	mov	r1, r0
 800dda2:	4668      	mov	r0, sp
 800dda4:	f7ff fd9d 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dda8:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddac:	8423      	strh	r3, [r4, #32]
 800ddae:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddb2:	8463      	strh	r3, [r4, #34]	; 0x22
 800ddb4:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800ddb8:	b002      	add	sp, #8
 800ddba:	bd10      	pop	{r4, pc}

0800ddbc <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800ddbc:	b513      	push	{r0, r1, r4, lr}
 800ddbe:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800ddc2:	3301      	adds	r3, #1
 800ddc4:	4604      	mov	r4, r0
 800ddc6:	d109      	bne.n	800dddc <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800ddc8:	4601      	mov	r1, r0
 800ddca:	4668      	mov	r0, sp
 800ddcc:	f7ff fd89 	bl	800d8e2 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ddd0:	f8bd 3000 	ldrh.w	r3, [sp]
 800ddd4:	8423      	strh	r3, [r4, #32]
 800ddd6:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800ddda:	8463      	strh	r3, [r4, #34]	; 0x22
 800dddc:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800dde0:	b002      	add	sp, #8
 800dde2:	bd10      	pop	{r4, pc}

0800dde4 <_ZN8touchgfx6ScreenC1Ev>:
 800dde4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dde6:	4605      	mov	r5, r0
 800dde8:	4b17      	ldr	r3, [pc, #92]	; (800de48 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800ddea:	f845 3b04 	str.w	r3, [r5], #4
 800ddee:	2301      	movs	r3, #1
 800ddf0:	f880 3029 	strb.w	r3, [r0, #41]	; 0x29
 800ddf4:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
 800ddf8:	4b14      	ldr	r3, [pc, #80]	; (800de4c <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800ddfa:	4915      	ldr	r1, [pc, #84]	; (800de50 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800ddfc:	f9b3 7000 	ldrsh.w	r7, [r3]
 800de00:	4b14      	ldr	r3, [pc, #80]	; (800de54 <_ZN8touchgfx6ScreenC1Ev+0x70>)
 800de02:	6041      	str	r1, [r0, #4]
 800de04:	2200      	movs	r2, #0
 800de06:	8102      	strh	r2, [r0, #8]
 800de08:	8142      	strh	r2, [r0, #10]
 800de0a:	8182      	strh	r2, [r0, #12]
 800de0c:	81c2      	strh	r2, [r0, #14]
 800de0e:	8202      	strh	r2, [r0, #16]
 800de10:	8242      	strh	r2, [r0, #18]
 800de12:	8282      	strh	r2, [r0, #20]
 800de14:	82c2      	strh	r2, [r0, #22]
 800de16:	e9c0 2206 	strd	r2, r2, [r0, #24]
 800de1a:	6202      	str	r2, [r0, #32]
 800de1c:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800de20:	e9c0 220b 	strd	r2, r2, [r0, #44]	; 0x2c
 800de24:	6342      	str	r2, [r0, #52]	; 0x34
 800de26:	f9b3 6000 	ldrsh.w	r6, [r3]
 800de2a:	4611      	mov	r1, r2
 800de2c:	4604      	mov	r4, r0
 800de2e:	4628      	mov	r0, r5
 800de30:	f7f9 fadb 	bl	80073ea <_ZN8touchgfx8Drawable5setXYEss>
 800de34:	4639      	mov	r1, r7
 800de36:	4628      	mov	r0, r5
 800de38:	f7f9 faf5 	bl	8007426 <_ZN8touchgfx8Drawable8setWidthEs>
 800de3c:	4628      	mov	r0, r5
 800de3e:	4631      	mov	r1, r6
 800de40:	f7f9 fb00 	bl	8007444 <_ZN8touchgfx8Drawable9setHeightEs>
 800de44:	4620      	mov	r0, r4
 800de46:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800de48:	0801e630 	.word	0x0801e630
 800de4c:	20001430 	.word	0x20001430
 800de50:	0801d7c0 	.word	0x0801d7c0
 800de54:	20001432 	.word	0x20001432

0800de58 <_ZN8touchgfx6Screen4drawEv>:
 800de58:	b507      	push	{r0, r1, r2, lr}
 800de5a:	4b09      	ldr	r3, [pc, #36]	; (800de80 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800de5c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800de60:	4b08      	ldr	r3, [pc, #32]	; (800de84 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800de62:	f8ad 2004 	strh.w	r2, [sp, #4]
 800de66:	f9b3 3000 	ldrsh.w	r3, [r3]
 800de6a:	f8ad 3006 	strh.w	r3, [sp, #6]
 800de6e:	6803      	ldr	r3, [r0, #0]
 800de70:	2100      	movs	r1, #0
 800de72:	9100      	str	r1, [sp, #0]
 800de74:	689b      	ldr	r3, [r3, #8]
 800de76:	4669      	mov	r1, sp
 800de78:	4798      	blx	r3
 800de7a:	b003      	add	sp, #12
 800de7c:	f85d fb04 	ldr.w	pc, [sp], #4
 800de80:	20001430 	.word	0x20001430
 800de84:	20001432 	.word	0x20001432

0800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800de88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de8c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800de90:	b089      	sub	sp, #36	; 0x24
 800de92:	4680      	mov	r8, r0
 800de94:	460c      	mov	r4, r1
 800de96:	4615      	mov	r5, r2
 800de98:	b16b      	cbz	r3, 800deb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800de9a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800de9e:	b153      	cbz	r3, 800deb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800dea0:	4628      	mov	r0, r5
 800dea2:	f7ff ff5b 	bl	800dd5c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800dea6:	4621      	mov	r1, r4
 800dea8:	f7fe ff78 	bl	800cd9c <_ZNK8touchgfx4Rect9intersectERKS0_>
 800deac:	69eb      	ldr	r3, [r5, #28]
 800deae:	b928      	cbnz	r0, 800debc <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x34>
 800deb0:	461d      	mov	r5, r3
 800deb2:	2b00      	cmp	r3, #0
 800deb4:	d1f4      	bne.n	800dea0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18>
 800deb6:	b009      	add	sp, #36	; 0x24
 800deb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800debc:	ae04      	add	r6, sp, #16
 800debe:	2b00      	cmp	r3, #0
 800dec0:	d051      	beq.n	800df66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800dec2:	682b      	ldr	r3, [r5, #0]
 800dec4:	4629      	mov	r1, r5
 800dec6:	68db      	ldr	r3, [r3, #12]
 800dec8:	a802      	add	r0, sp, #8
 800deca:	4798      	blx	r3
 800decc:	4628      	mov	r0, r5
 800dece:	f7ff ff61 	bl	800dd94 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800ded2:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800ded6:	4407      	add	r7, r0
 800ded8:	4628      	mov	r0, r5
 800deda:	f7ff ff6f 	bl	800ddbc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dede:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800dee2:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800dee6:	f8ad 2014 	strh.w	r2, [sp, #20]
 800deea:	4418      	add	r0, r3
 800deec:	4621      	mov	r1, r4
 800deee:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800def2:	f8ad 0012 	strh.w	r0, [sp, #18]
 800def6:	b23f      	sxth	r7, r7
 800def8:	4630      	mov	r0, r6
 800defa:	f8ad 3016 	strh.w	r3, [sp, #22]
 800defe:	f8ad 7010 	strh.w	r7, [sp, #16]
 800df02:	f7fc fb11 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800df06:	4628      	mov	r0, r5
 800df08:	f7ff ff28 	bl	800dd5c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df0c:	4602      	mov	r2, r0
 800df0e:	e896 0003 	ldmia.w	r6, {r0, r1}
 800df12:	ab06      	add	r3, sp, #24
 800df14:	e883 0003 	stmia.w	r3, {r0, r1}
 800df18:	4611      	mov	r1, r2
 800df1a:	4618      	mov	r0, r3
 800df1c:	f7fc fb04 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800df20:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800df24:	f9b4 1000 	ldrsh.w	r1, [r4]
 800df28:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800df2c:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800df30:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800df34:	4299      	cmp	r1, r3
 800df36:	d10b      	bne.n	800df50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800df38:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800df3c:	4552      	cmp	r2, sl
 800df3e:	d107      	bne.n	800df50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800df40:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800df44:	455a      	cmp	r2, fp
 800df46:	d103      	bne.n	800df50 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xc8>
 800df48:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800df4c:	454a      	cmp	r2, r9
 800df4e:	d00a      	beq.n	800df66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800df50:	f1bb 0f00 	cmp.w	fp, #0
 800df54:	d002      	beq.n	800df5c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd4>
 800df56:	f1b9 0f00 	cmp.w	r9, #0
 800df5a:	d12e      	bne.n	800dfba <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x132>
 800df5c:	69ea      	ldr	r2, [r5, #28]
 800df5e:	4621      	mov	r1, r4
 800df60:	4640      	mov	r0, r8
 800df62:	f7ff ff91 	bl	800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800df66:	4628      	mov	r0, r5
 800df68:	f7ff fef8 	bl	800dd5c <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800df6c:	6861      	ldr	r1, [r4, #4]
 800df6e:	4602      	mov	r2, r0
 800df70:	6820      	ldr	r0, [r4, #0]
 800df72:	4633      	mov	r3, r6
 800df74:	c303      	stmia	r3!, {r0, r1}
 800df76:	4611      	mov	r1, r2
 800df78:	4630      	mov	r0, r6
 800df7a:	f7fc fad5 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800df7e:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800df82:	2b00      	cmp	r3, #0
 800df84:	d097      	beq.n	800deb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800df86:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800df8a:	2b00      	cmp	r3, #0
 800df8c:	d093      	beq.n	800deb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800df8e:	4628      	mov	r0, r5
 800df90:	f7ff ff00 	bl	800dd94 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800df94:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800df98:	1a18      	subs	r0, r3, r0
 800df9a:	f8ad 0010 	strh.w	r0, [sp, #16]
 800df9e:	4628      	mov	r0, r5
 800dfa0:	f7ff ff0c 	bl	800ddbc <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800dfa4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800dfa8:	1a18      	subs	r0, r3, r0
 800dfaa:	f8ad 0012 	strh.w	r0, [sp, #18]
 800dfae:	682b      	ldr	r3, [r5, #0]
 800dfb0:	4631      	mov	r1, r6
 800dfb2:	689b      	ldr	r3, [r3, #8]
 800dfb4:	4628      	mov	r0, r5
 800dfb6:	4798      	blx	r3
 800dfb8:	e77d      	b.n	800deb6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x2e>
 800dfba:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800dfbe:	fa1f f08a 	uxth.w	r0, sl
 800dfc2:	4552      	cmp	r2, sl
 800dfc4:	9000      	str	r0, [sp, #0]
 800dfc6:	da12      	bge.n	800dfee <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x166>
 800dfc8:	9301      	str	r3, [sp, #4]
 800dfca:	9b00      	ldr	r3, [sp, #0]
 800dfcc:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800dfd0:	f8ad 2012 	strh.w	r2, [sp, #18]
 800dfd4:	1a9a      	subs	r2, r3, r2
 800dfd6:	f8ad 1010 	strh.w	r1, [sp, #16]
 800dfda:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dfde:	f8ad 2016 	strh.w	r2, [sp, #22]
 800dfe2:	69ea      	ldr	r2, [r5, #28]
 800dfe4:	4631      	mov	r1, r6
 800dfe6:	4640      	mov	r0, r8
 800dfe8:	f7ff ff4e 	bl	800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800dfec:	9b01      	ldr	r3, [sp, #4]
 800dfee:	f9b4 2000 	ldrsh.w	r2, [r4]
 800dff2:	429a      	cmp	r2, r3
 800dff4:	b29f      	uxth	r7, r3
 800dff6:	da0d      	bge.n	800e014 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x18c>
 800dff8:	f8ad 2010 	strh.w	r2, [sp, #16]
 800dffc:	1aba      	subs	r2, r7, r2
 800dffe:	f8ad a012 	strh.w	sl, [sp, #18]
 800e002:	f8ad 2014 	strh.w	r2, [sp, #20]
 800e006:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e00a:	69ea      	ldr	r2, [r5, #28]
 800e00c:	4631      	mov	r1, r6
 800e00e:	4640      	mov	r0, r8
 800e010:	f7ff ff3a 	bl	800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e014:	8822      	ldrh	r2, [r4, #0]
 800e016:	88a3      	ldrh	r3, [r4, #4]
 800e018:	445f      	add	r7, fp
 800e01a:	4413      	add	r3, r2
 800e01c:	b29b      	uxth	r3, r3
 800e01e:	b2bf      	uxth	r7, r7
 800e020:	b23a      	sxth	r2, r7
 800e022:	b219      	sxth	r1, r3
 800e024:	4291      	cmp	r1, r2
 800e026:	dd0d      	ble.n	800e044 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1bc>
 800e028:	1bdb      	subs	r3, r3, r7
 800e02a:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e02e:	f8ad a012 	strh.w	sl, [sp, #18]
 800e032:	f8ad 3014 	strh.w	r3, [sp, #20]
 800e036:	f8ad 9016 	strh.w	r9, [sp, #22]
 800e03a:	69ea      	ldr	r2, [r5, #28]
 800e03c:	4631      	mov	r1, r6
 800e03e:	4640      	mov	r0, r8
 800e040:	f7ff ff22 	bl	800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e044:	88e2      	ldrh	r2, [r4, #6]
 800e046:	8863      	ldrh	r3, [r4, #2]
 800e048:	4413      	add	r3, r2
 800e04a:	9a00      	ldr	r2, [sp, #0]
 800e04c:	444a      	add	r2, r9
 800e04e:	b29b      	uxth	r3, r3
 800e050:	fa1f f982 	uxth.w	r9, r2
 800e054:	fa0f f289 	sxth.w	r2, r9
 800e058:	b219      	sxth	r1, r3
 800e05a:	428a      	cmp	r2, r1
 800e05c:	da83      	bge.n	800df66 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xde>
 800e05e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800e062:	f9b4 0000 	ldrsh.w	r0, [r4]
 800e066:	f8ad 1014 	strh.w	r1, [sp, #20]
 800e06a:	eba3 0309 	sub.w	r3, r3, r9
 800e06e:	f8ad 0010 	strh.w	r0, [sp, #16]
 800e072:	f8ad 2012 	strh.w	r2, [sp, #18]
 800e076:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e07a:	69ea      	ldr	r2, [r5, #28]
 800e07c:	4631      	mov	r1, r6
 800e07e:	e76f      	b.n	800df60 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xd8>

0800e080 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800e080:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e082:	aa02      	add	r2, sp, #8
 800e084:	2300      	movs	r3, #0
 800e086:	f842 3d04 	str.w	r3, [r2, #-4]!
 800e08a:	4604      	mov	r4, r0
 800e08c:	3004      	adds	r0, #4
 800e08e:	460d      	mov	r5, r1
 800e090:	f7fc fb21 	bl	800a6d6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800e094:	9a01      	ldr	r2, [sp, #4]
 800e096:	b11a      	cbz	r2, 800e0a0 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800e098:	4629      	mov	r1, r5
 800e09a:	4620      	mov	r0, r4
 800e09c:	f7ff fef4 	bl	800de88 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800e0a0:	b003      	add	sp, #12
 800e0a2:	bd30      	pop	{r4, r5, pc}

0800e0a4 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800e0a4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e0a6:	4602      	mov	r2, r0
 800e0a8:	4604      	mov	r4, r0
 800e0aa:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800e0ae:	460d      	mov	r5, r1
 800e0b0:	6851      	ldr	r1, [r2, #4]
 800e0b2:	466b      	mov	r3, sp
 800e0b4:	c303      	stmia	r3!, {r0, r1}
 800e0b6:	4629      	mov	r1, r5
 800e0b8:	4668      	mov	r0, sp
 800e0ba:	f7fc fa35 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 800e0be:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e0c2:	4669      	mov	r1, sp
 800e0c4:	b123      	cbz	r3, 800e0d0 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800e0c6:	4620      	mov	r0, r4
 800e0c8:	f7ff ffda 	bl	800e080 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800e0cc:	b003      	add	sp, #12
 800e0ce:	bd30      	pop	{r4, r5, pc}
 800e0d0:	1d20      	adds	r0, r4, #4
 800e0d2:	f7fc fac7 	bl	800a664 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800e0d6:	e7f9      	b.n	800e0cc <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800e0d8 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800e0d8:	680a      	ldr	r2, [r1, #0]
 800e0da:	460b      	mov	r3, r1
 800e0dc:	6952      	ldr	r2, [r2, #20]
 800e0de:	1d01      	adds	r1, r0, #4
 800e0e0:	4618      	mov	r0, r3
 800e0e2:	4710      	bx	r2

0800e0e4 <_ZN8touchgfx15EasingEquations16roundRespectSignEf>:
 800e0e4:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 800e0e8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800e0ec:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 800e0f0:	bfcc      	ite	gt
 800e0f2:	ee30 0a27 	vaddgt.f32	s0, s0, s15
 800e0f6:	ee30 0a67 	vsuble.f32	s0, s0, s15
 800e0fa:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 800e0fe:	ee10 3a10 	vmov	r3, s0
 800e102:	b218      	sxth	r0, r3
 800e104:	4770      	bx	lr

0800e106 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 800e106:	b510      	push	{r4, lr}
 800e108:	4298      	cmp	r0, r3
 800e10a:	eb01 0402 	add.w	r4, r1, r2
 800e10e:	b224      	sxth	r4, r4
 800e110:	d219      	bcs.n	800e146 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x40>
 800e112:	b1c3      	cbz	r3, 800e146 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x40>
 800e114:	ee07 2a90 	vmov	s15, r2
 800e118:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e11c:	ee07 0a90 	vmov	s15, r0
 800e120:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800e124:	ee67 7a27 	vmul.f32	s15, s14, s15
 800e128:	ee07 3a10 	vmov	s14, r3
 800e12c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800e130:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800e134:	ee07 1a90 	vmov	s15, r1
 800e138:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 800e13c:	ee36 0a80 	vadd.f32	s0, s13, s0
 800e140:	f7ff ffd0 	bl	800e0e4 <_ZN8touchgfx15EasingEquations16roundRespectSignEf>
 800e144:	4604      	mov	r4, r0
 800e146:	4620      	mov	r0, r4
 800e148:	bd10      	pop	{r4, pc}
	...

0800e14c <_ZNK8touchgfx9GlyphNode3topEv.isra.2>:
 800e14c:	f011 0f40 	tst.w	r1, #64	; 0x40
 800e150:	ea4f 01c1 	mov.w	r1, r1, lsl #3
 800e154:	4b03      	ldr	r3, [pc, #12]	; (800e164 <_ZNK8touchgfx9GlyphNode3topEv.isra.2+0x18>)
 800e156:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800e15a:	bf08      	it	eq
 800e15c:	2300      	moveq	r3, #0
 800e15e:	4308      	orrs	r0, r1
 800e160:	4318      	orrs	r0, r3
 800e162:	4770      	bx	lr
 800e164:	fffffe00 	.word	0xfffffe00

0800e168 <_ZN8touchgfx9GlyphNode6setTopEs>:
 800e168:	7b43      	ldrb	r3, [r0, #13]
 800e16a:	7201      	strb	r1, [r0, #8]
 800e16c:	b289      	uxth	r1, r1
 800e16e:	f003 039f 	and.w	r3, r3, #159	; 0x9f
 800e172:	05ca      	lsls	r2, r1, #23
 800e174:	bf48      	it	mi
 800e176:	f043 0320 	orrmi.w	r3, r3, #32
 800e17a:	7343      	strb	r3, [r0, #13]
 800e17c:	058b      	lsls	r3, r1, #22
 800e17e:	bf42      	ittt	mi
 800e180:	7b43      	ldrbmi	r3, [r0, #13]
 800e182:	f043 0340 	orrmi.w	r3, r3, #64	; 0x40
 800e186:	7343      	strbmi	r3, [r0, #13]
 800e188:	4770      	bx	lr

0800e18a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800e18a:	b530      	push	{r4, r5, lr}
 800e18c:	2500      	movs	r5, #0
 800e18e:	2401      	movs	r4, #1
 800e190:	6843      	ldr	r3, [r0, #4]
 800e192:	b913      	cbnz	r3, 800e19a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800e194:	6803      	ldr	r3, [r0, #0]
 800e196:	b1f3      	cbz	r3, 800e1d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e198:	6043      	str	r3, [r0, #4]
 800e19a:	7c03      	ldrb	r3, [r0, #16]
 800e19c:	b143      	cbz	r3, 800e1b0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800e19e:	68c3      	ldr	r3, [r0, #12]
 800e1a0:	b12b      	cbz	r3, 800e1ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e1a2:	881a      	ldrh	r2, [r3, #0]
 800e1a4:	b11a      	cbz	r2, 800e1ae <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800e1a6:	1c9a      	adds	r2, r3, #2
 800e1a8:	60c2      	str	r2, [r0, #12]
 800e1aa:	8818      	ldrh	r0, [r3, #0]
 800e1ac:	bd30      	pop	{r4, r5, pc}
 800e1ae:	7405      	strb	r5, [r0, #16]
 800e1b0:	6843      	ldr	r3, [r0, #4]
 800e1b2:	8819      	ldrh	r1, [r3, #0]
 800e1b4:	b179      	cbz	r1, 800e1d6 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800e1b6:	1c9a      	adds	r2, r3, #2
 800e1b8:	2902      	cmp	r1, #2
 800e1ba:	6042      	str	r2, [r0, #4]
 800e1bc:	d1f5      	bne.n	800e1aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800e1be:	6883      	ldr	r3, [r0, #8]
 800e1c0:	1d1a      	adds	r2, r3, #4
 800e1c2:	6082      	str	r2, [r0, #8]
 800e1c4:	681b      	ldr	r3, [r3, #0]
 800e1c6:	60c3      	str	r3, [r0, #12]
 800e1c8:	2b00      	cmp	r3, #0
 800e1ca:	d0e1      	beq.n	800e190 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1cc:	881b      	ldrh	r3, [r3, #0]
 800e1ce:	2b00      	cmp	r3, #0
 800e1d0:	d0de      	beq.n	800e190 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1d2:	7404      	strb	r4, [r0, #16]
 800e1d4:	e7dc      	b.n	800e190 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800e1d6:	2000      	movs	r0, #0
 800e1d8:	e7e8      	b.n	800e1ac <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800e1da <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800e1da:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e1dc:	4605      	mov	r5, r0
 800e1de:	4608      	mov	r0, r1
 800e1e0:	b1e9      	cbz	r1, 800e21e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800e1e2:	f105 0440 	add.w	r4, r5, #64	; 0x40
 800e1e6:	460b      	mov	r3, r1
 800e1e8:	f101 0708 	add.w	r7, r1, #8
 800e1ec:	4622      	mov	r2, r4
 800e1ee:	6818      	ldr	r0, [r3, #0]
 800e1f0:	6859      	ldr	r1, [r3, #4]
 800e1f2:	4626      	mov	r6, r4
 800e1f4:	c603      	stmia	r6!, {r0, r1}
 800e1f6:	3308      	adds	r3, #8
 800e1f8:	42bb      	cmp	r3, r7
 800e1fa:	4634      	mov	r4, r6
 800e1fc:	d1f7      	bne.n	800e1ee <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800e1fe:	6818      	ldr	r0, [r3, #0]
 800e200:	6030      	str	r0, [r6, #0]
 800e202:	889b      	ldrh	r3, [r3, #4]
 800e204:	80b3      	strh	r3, [r6, #4]
 800e206:	f895 304d 	ldrb.w	r3, [r5, #77]	; 0x4d
 800e20a:	015b      	lsls	r3, r3, #5
 800e20c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800e210:	f895 3046 	ldrb.w	r3, [r5, #70]	; 0x46
 800e214:	430b      	orrs	r3, r1
 800e216:	425b      	negs	r3, r3
 800e218:	f885 3049 	strb.w	r3, [r5, #73]	; 0x49
 800e21c:	4610      	mov	r0, r2
 800e21e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800e220 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800e220:	b538      	push	{r3, r4, r5, lr}
 800e222:	460c      	mov	r4, r1
 800e224:	6811      	ldr	r1, [r2, #0]
 800e226:	4610      	mov	r0, r2
 800e228:	68cd      	ldr	r5, [r1, #12]
 800e22a:	4619      	mov	r1, r3
 800e22c:	47a8      	blx	r5
 800e22e:	2800      	cmp	r0, #0
 800e230:	bf08      	it	eq
 800e232:	4620      	moveq	r0, r4
 800e234:	bd38      	pop	{r3, r4, r5, pc}

0800e236 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800e236:	b570      	push	{r4, r5, r6, lr}
 800e238:	8810      	ldrh	r0, [r2, #0]
 800e23a:	4298      	cmp	r0, r3
 800e23c:	d817      	bhi.n	800e26e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e23e:	1e48      	subs	r0, r1, #1
 800e240:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800e244:	4298      	cmp	r0, r3
 800e246:	d312      	bcc.n	800e26e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e248:	2400      	movs	r4, #0
 800e24a:	428c      	cmp	r4, r1
 800e24c:	d20f      	bcs.n	800e26e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800e24e:	1860      	adds	r0, r4, r1
 800e250:	1040      	asrs	r0, r0, #1
 800e252:	0085      	lsls	r5, r0, #2
 800e254:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800e258:	42b3      	cmp	r3, r6
 800e25a:	d902      	bls.n	800e262 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800e25c:	3001      	adds	r0, #1
 800e25e:	b284      	uxth	r4, r0
 800e260:	e7f3      	b.n	800e24a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e262:	d102      	bne.n	800e26a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x34>
 800e264:	442a      	add	r2, r5
 800e266:	8850      	ldrh	r0, [r2, #2]
 800e268:	bd70      	pop	{r4, r5, r6, pc}
 800e26a:	b281      	uxth	r1, r0
 800e26c:	e7ed      	b.n	800e24a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800e26e:	2000      	movs	r0, #0
 800e270:	e7fa      	b.n	800e268 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
	...

0800e274 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>:
 800e274:	b510      	push	{r4, lr}
 800e276:	8ac3      	ldrh	r3, [r0, #22]
 800e278:	428b      	cmp	r3, r1
 800e27a:	d805      	bhi.n	800e288 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x14>
 800e27c:	4b07      	ldr	r3, [pc, #28]	; (800e29c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x28>)
 800e27e:	4a08      	ldr	r2, [pc, #32]	; (800e2a0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x2c>)
 800e280:	4808      	ldr	r0, [pc, #32]	; (800e2a4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt+0x30>)
 800e282:	21fd      	movs	r1, #253	; 0xfd
 800e284:	f00d fa34 	bl	801b6f0 <__assert_func>
 800e288:	8a83      	ldrh	r3, [r0, #20]
 800e28a:	240a      	movs	r4, #10
 800e28c:	4419      	add	r1, r3
 800e28e:	fbb1 f3f4 	udiv	r3, r1, r4
 800e292:	fb04 1113 	mls	r1, r4, r3, r1
 800e296:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800e29a:	bd10      	pop	{r4, pc}
 800e29c:	0801e67d 	.word	0x0801e67d
 800e2a0:	0801eaac 	.word	0x0801eaac
 800e2a4:	0801e68b 	.word	0x0801e68b

0800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>:
 800e2a8:	b508      	push	{r3, lr}
 800e2aa:	8ac3      	ldrh	r3, [r0, #22]
 800e2ac:	428b      	cmp	r3, r1
 800e2ae:	d805      	bhi.n	800e2bc <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x14>
 800e2b0:	4b07      	ldr	r3, [pc, #28]	; (800e2d0 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x28>)
 800e2b2:	4a08      	ldr	r2, [pc, #32]	; (800e2d4 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x2c>)
 800e2b4:	4808      	ldr	r0, [pc, #32]	; (800e2d8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt+0x30>)
 800e2b6:	21d3      	movs	r1, #211	; 0xd3
 800e2b8:	f00d fa1a 	bl	801b6f0 <__assert_func>
 800e2bc:	8a83      	ldrh	r3, [r0, #20]
 800e2be:	220a      	movs	r2, #10
 800e2c0:	4419      	add	r1, r3
 800e2c2:	fbb1 f3f2 	udiv	r3, r1, r2
 800e2c6:	fb02 1113 	mls	r1, r2, r3, r1
 800e2ca:	f830 0011 	ldrh.w	r0, [r0, r1, lsl #1]
 800e2ce:	bd08      	pop	{r3, pc}
 800e2d0:	0801e67d 	.word	0x0801e67d
 800e2d4:	0801e7fc 	.word	0x0801e7fc
 800e2d8:	0801e68b 	.word	0x0801e68b

0800e2dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800e2dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e2e0:	4604      	mov	r4, r0
 800e2e2:	4688      	mov	r8, r1
 800e2e4:	4615      	mov	r5, r2
 800e2e6:	b94a      	cbnz	r2, 800e2fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20>
 800e2e8:	f8a4 204e 	strh.w	r2, [r4, #78]	; 0x4e
 800e2ec:	f8a4 2050 	strh.w	r2, [r4, #80]	; 0x50
 800e2f0:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800e2f4:	4691      	mov	r9, r2
 800e2f6:	4648      	mov	r0, r9
 800e2f8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e2fc:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800e300:	8892      	ldrh	r2, [r2, #4]
 800e302:	462b      	mov	r3, r5
 800e304:	f105 0c08 	add.w	ip, r5, #8
 800e308:	46b3      	mov	fp, r6
 800e30a:	6818      	ldr	r0, [r3, #0]
 800e30c:	6859      	ldr	r1, [r3, #4]
 800e30e:	4637      	mov	r7, r6
 800e310:	c703      	stmia	r7!, {r0, r1}
 800e312:	3308      	adds	r3, #8
 800e314:	4563      	cmp	r3, ip
 800e316:	463e      	mov	r6, r7
 800e318:	d1f7      	bne.n	800e30a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x2e>
 800e31a:	6818      	ldr	r0, [r3, #0]
 800e31c:	6038      	str	r0, [r7, #0]
 800e31e:	889b      	ldrh	r3, [r3, #4]
 800e320:	80bb      	strh	r3, [r7, #4]
 800e322:	f894 704d 	ldrb.w	r7, [r4, #77]	; 0x4d
 800e326:	f46f 6363 	mvn.w	r3, #3632	; 0xe30
 800e32a:	ea4f 1a07 	mov.w	sl, r7, lsl #4
 800e32e:	f40a 7180 	and.w	r1, sl, #256	; 0x100
 800e332:	18d3      	adds	r3, r2, r3
 800e334:	f894 a047 	ldrb.w	sl, [r4, #71]	; 0x47
 800e338:	b298      	uxth	r0, r3
 800e33a:	ea4a 0a01 	orr.w	sl, sl, r1
 800e33e:	281d      	cmp	r0, #29
 800e340:	fa1f f68a 	uxth.w	r6, sl
 800e344:	46d9      	mov	r9, fp
 800e346:	d842      	bhi.n	800e3ce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf2>
 800e348:	2301      	movs	r3, #1
 800e34a:	4950      	ldr	r1, [pc, #320]	; (800e48c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b0>)
 800e34c:	4083      	lsls	r3, r0
 800e34e:	420b      	tst	r3, r1
 800e350:	ea4f 0aea 	mov.w	sl, sl, asr #3
 800e354:	d114      	bne.n	800e380 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 800e356:	f413 7f60 	tst.w	r3, #896	; 0x380
 800e35a:	d03c      	beq.n	800e3d6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xfa>
 800e35c:	f8b4 1050 	ldrh.w	r1, [r4, #80]	; 0x50
 800e360:	fa1f fa8a 	uxth.w	sl, sl
 800e364:	eba1 010a 	sub.w	r1, r1, sl
 800e368:	4658      	mov	r0, fp
 800e36a:	b209      	sxth	r1, r1
 800e36c:	f7ff fefc 	bl	800e168 <_ZN8touchgfx9GlyphNode6setTopEs>
 800e370:	f8b4 0050 	ldrh.w	r0, [r4, #80]	; 0x50
 800e374:	1b86      	subs	r6, r0, r6
 800e376:	eba6 0a0a 	sub.w	sl, r6, sl
 800e37a:	f8a4 a050 	strh.w	sl, [r4, #80]	; 0x50
 800e37e:	e7ba      	b.n	800e2f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e380:	2100      	movs	r1, #0
 800e382:	f104 001a 	add.w	r0, r4, #26
 800e386:	f7ff ff8f 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e38a:	f640 6333 	movw	r3, #3635	; 0xe33
 800e38e:	4298      	cmp	r0, r3
 800e390:	4601      	mov	r1, r0
 800e392:	d10a      	bne.n	800e3aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xce>
 800e394:	f8d8 3000 	ldr.w	r3, [r8]
 800e398:	4640      	mov	r0, r8
 800e39a:	68db      	ldr	r3, [r3, #12]
 800e39c:	4798      	blx	r3
 800e39e:	7b41      	ldrb	r1, [r0, #13]
 800e3a0:	7a00      	ldrb	r0, [r0, #8]
 800e3a2:	f7ff fed3 	bl	800e14c <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e3a6:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e3aa:	f8b4 104e 	ldrh.w	r1, [r4, #78]	; 0x4e
 800e3ae:	4431      	add	r1, r6
 800e3b0:	4451      	add	r1, sl
 800e3b2:	b209      	sxth	r1, r1
 800e3b4:	f8a4 104e 	strh.w	r1, [r4, #78]	; 0x4e
 800e3b8:	4658      	mov	r0, fp
 800e3ba:	f7ff fed5 	bl	800e168 <_ZN8touchgfx9GlyphNode6setTopEs>
 800e3be:	f894 3049 	ldrb.w	r3, [r4, #73]	; 0x49
 800e3c2:	f894 2052 	ldrb.w	r2, [r4, #82]	; 0x52
 800e3c6:	1a9b      	subs	r3, r3, r2
 800e3c8:	f884 3049 	strb.w	r3, [r4, #73]	; 0x49
 800e3cc:	e793      	b.n	800e2f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e3ce:	f640 631b 	movw	r3, #3611	; 0xe1b
 800e3d2:	429a      	cmp	r2, r3
 800e3d4:	d005      	beq.n	800e3e2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x106>
 800e3d6:	f022 0302 	bic.w	r3, r2, #2
 800e3da:	f640 611d 	movw	r1, #3613	; 0xe1d
 800e3de:	428b      	cmp	r3, r1
 800e3e0:	d119      	bne.n	800e416 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x13a>
 800e3e2:	1e53      	subs	r3, r2, #1
 800e3e4:	b29b      	uxth	r3, r3
 800e3e6:	4642      	mov	r2, r8
 800e3e8:	4629      	mov	r1, r5
 800e3ea:	4620      	mov	r0, r4
 800e3ec:	f7ff ff18 	bl	800e220 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e3f0:	7b41      	ldrb	r1, [r0, #13]
 800e3f2:	7a00      	ldrb	r0, [r0, #8]
 800e3f4:	f7ff feaa 	bl	800e14c <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e3f8:	f994 304d 	ldrsb.w	r3, [r4, #77]	; 0x4d
 800e3fc:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e400:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e404:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e408:	4313      	orrs	r3, r2
 800e40a:	115a      	asrs	r2, r3, #5
 800e40c:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800e410:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800e414:	e02d      	b.n	800e472 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x196>
 800e416:	4639      	mov	r1, r7
 800e418:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e41c:	f7ff fe96 	bl	800e14c <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e420:	f640 6109 	movw	r1, #3593	; 0xe09
 800e424:	f022 0310 	bic.w	r3, r2, #16
 800e428:	428b      	cmp	r3, r1
 800e42a:	f8a4 004e 	strh.w	r0, [r4, #78]	; 0x4e
 800e42e:	d003      	beq.n	800e438 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x15c>
 800e430:	f640 6313 	movw	r3, #3603	; 0xe13
 800e434:	429a      	cmp	r2, r3
 800e436:	d126      	bne.n	800e486 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1aa>
 800e438:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800e43c:	b27f      	sxtb	r7, r7
 800e43e:	f407 7780 	and.w	r7, r7, #256	; 0x100
 800e442:	431f      	orrs	r7, r3
 800e444:	f640 6313 	movw	r3, #3603	; 0xe13
 800e448:	429a      	cmp	r2, r3
 800e44a:	bf1a      	itte	ne
 800e44c:	f102 33ff 	addne.w	r3, r2, #4294967295
 800e450:	b29b      	uxthne	r3, r3
 800e452:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800e456:	4642      	mov	r2, r8
 800e458:	4629      	mov	r1, r5
 800e45a:	4620      	mov	r0, r4
 800e45c:	f7ff fee0 	bl	800e220 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800e460:	f990 300d 	ldrsb.w	r3, [r0, #13]
 800e464:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e468:	7a83      	ldrb	r3, [r0, #10]
 800e46a:	4313      	orrs	r3, r2
 800e46c:	1aff      	subs	r7, r7, r3
 800e46e:	f8a4 7052 	strh.w	r7, [r4, #82]	; 0x52
 800e472:	f894 104d 	ldrb.w	r1, [r4, #77]	; 0x4d
 800e476:	f894 0048 	ldrb.w	r0, [r4, #72]	; 0x48
 800e47a:	f7ff fe67 	bl	800e14c <_ZNK8touchgfx9GlyphNode3topEv.isra.2>
 800e47e:	1b80      	subs	r0, r0, r6
 800e480:	f8a4 0050 	strh.w	r0, [r4, #80]	; 0x50
 800e484:	e737      	b.n	800e2f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800e486:	2300      	movs	r3, #0
 800e488:	e7c2      	b.n	800e410 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x134>
 800e48a:	bf00      	nop
 800e48c:	3fc00079 	.word	0x3fc00079

0800e490 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800e490:	3a01      	subs	r2, #1
 800e492:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e496:	b292      	uxth	r2, r2
 800e498:	460c      	mov	r4, r1
 800e49a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800e49e:	42b2      	cmp	r2, r6
 800e4a0:	d018      	beq.n	800e4d4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x44>
 800e4a2:	8b01      	ldrh	r1, [r0, #24]
 800e4a4:	f834 5b02 	ldrh.w	r5, [r4], #2
 800e4a8:	4291      	cmp	r1, r2
 800e4aa:	d805      	bhi.n	800e4b8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x28>
 800e4ac:	4b14      	ldr	r3, [pc, #80]	; (800e500 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x70>)
 800e4ae:	4a15      	ldr	r2, [pc, #84]	; (800e504 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x74>)
 800e4b0:	4815      	ldr	r0, [pc, #84]	; (800e508 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x78>)
 800e4b2:	21d3      	movs	r1, #211	; 0xd3
 800e4b4:	f00d f91c 	bl	801b6f0 <__assert_func>
 800e4b8:	8ac1      	ldrh	r1, [r0, #22]
 800e4ba:	4411      	add	r1, r2
 800e4bc:	f001 0101 	and.w	r1, r1, #1
 800e4c0:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800e4c4:	3a01      	subs	r2, #1
 800e4c6:	8a49      	ldrh	r1, [r1, #18]
 800e4c8:	428d      	cmp	r5, r1
 800e4ca:	b292      	uxth	r2, r2
 800e4cc:	d0e7      	beq.n	800e49e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xe>
 800e4ce:	2000      	movs	r0, #0
 800e4d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e4d4:	f8bd 7018 	ldrh.w	r7, [sp, #24]
 800e4d8:	2600      	movs	r6, #0
 800e4da:	441f      	add	r7, r3
 800e4dc:	f100 051a 	add.w	r5, r0, #26
 800e4e0:	b2b1      	uxth	r1, r6
 800e4e2:	42b9      	cmp	r1, r7
 800e4e4:	da09      	bge.n	800e4fa <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x6a>
 800e4e6:	4628      	mov	r0, r5
 800e4e8:	f7ff fede 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e4ec:	f834 8016 	ldrh.w	r8, [r4, r6, lsl #1]
 800e4f0:	4540      	cmp	r0, r8
 800e4f2:	f106 0601 	add.w	r6, r6, #1
 800e4f6:	d0f3      	beq.n	800e4e0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x50>
 800e4f8:	e7e9      	b.n	800e4ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800e4fa:	2001      	movs	r0, #1
 800e4fc:	e7e8      	b.n	800e4d0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800e4fe:	bf00      	nop
 800e500:	0801e67d 	.word	0x0801e67d
 800e504:	0801ec0c 	.word	0x0801ec0c
 800e508:	0801e68b 	.word	0x0801e68b

0800e50c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>:
 800e50c:	b538      	push	{r3, r4, r5, lr}
 800e50e:	8ac3      	ldrh	r3, [r0, #22]
 800e510:	428b      	cmp	r3, r1
 800e512:	d205      	bcs.n	800e520 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x14>
 800e514:	4b08      	ldr	r3, [pc, #32]	; (800e538 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x2c>)
 800e516:	4a09      	ldr	r2, [pc, #36]	; (800e53c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x30>)
 800e518:	4809      	ldr	r0, [pc, #36]	; (800e540 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt+0x34>)
 800e51a:	21d8      	movs	r1, #216	; 0xd8
 800e51c:	f00d f8e8 	bl	801b6f0 <__assert_func>
 800e520:	8a82      	ldrh	r2, [r0, #20]
 800e522:	250a      	movs	r5, #10
 800e524:	440a      	add	r2, r1
 800e526:	1a5b      	subs	r3, r3, r1
 800e528:	fbb2 f4f5 	udiv	r4, r2, r5
 800e52c:	fb05 2214 	mls	r2, r5, r4, r2
 800e530:	8282      	strh	r2, [r0, #20]
 800e532:	82c3      	strh	r3, [r0, #22]
 800e534:	bd38      	pop	{r3, r4, r5, pc}
 800e536:	bf00      	nop
 800e538:	0801e671 	.word	0x0801e671
 800e53c:	0801ea28 	.word	0x0801ea28
 800e540:	0801e68b 	.word	0x0801e68b

0800e544 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>:
 800e544:	b538      	push	{r3, r4, r5, lr}
 800e546:	8ac3      	ldrh	r3, [r0, #22]
 800e548:	2b09      	cmp	r3, #9
 800e54a:	d905      	bls.n	800e558 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x14>
 800e54c:	4b08      	ldr	r3, [pc, #32]	; (800e570 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x2c>)
 800e54e:	4a09      	ldr	r2, [pc, #36]	; (800e574 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x30>)
 800e550:	4809      	ldr	r0, [pc, #36]	; (800e578 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt+0x34>)
 800e552:	21f7      	movs	r1, #247	; 0xf7
 800e554:	f00d f8cc 	bl	801b6f0 <__assert_func>
 800e558:	8a82      	ldrh	r2, [r0, #20]
 800e55a:	250a      	movs	r5, #10
 800e55c:	441a      	add	r2, r3
 800e55e:	fbb2 f4f5 	udiv	r4, r2, r5
 800e562:	fb05 2214 	mls	r2, r5, r4, r2
 800e566:	3301      	adds	r3, #1
 800e568:	f820 1012 	strh.w	r1, [r0, r2, lsl #1]
 800e56c:	82c3      	strh	r3, [r0, #22]
 800e56e:	bd38      	pop	{r3, r4, r5, pc}
 800e570:	0801e665 	.word	0x0801e665
 800e574:	0801e979 	.word	0x0801e979
 800e578:	0801e68b 	.word	0x0801e68b

0800e57c <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800e57c:	b538      	push	{r3, r4, r5, lr}
 800e57e:	4604      	mov	r4, r0
 800e580:	f100 051a 	add.w	r5, r0, #26
 800e584:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e586:	2b0a      	cmp	r3, #10
 800e588:	d01c      	beq.n	800e5c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800e58a:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800e58c:	b962      	cbnz	r2, 800e5a8 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2c>
 800e58e:	f104 051a 	add.w	r5, r4, #26
 800e592:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e594:	2b0a      	cmp	r3, #10
 800e596:	d015      	beq.n	800e5c4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x48>
 800e598:	4620      	mov	r0, r4
 800e59a:	f7ff fdf6 	bl	800e18a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800e59e:	4601      	mov	r1, r0
 800e5a0:	4628      	mov	r0, r5
 800e5a2:	f7ff ffcf 	bl	800e544 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800e5a6:	e7f4      	b.n	800e592 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x16>
 800e5a8:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800e5aa:	eb04 0143 	add.w	r1, r4, r3, lsl #1
 800e5ae:	3301      	adds	r3, #1
 800e5b0:	f003 0301 	and.w	r3, r3, #1
 800e5b4:	3a01      	subs	r2, #1
 800e5b6:	8e49      	ldrh	r1, [r1, #50]	; 0x32
 800e5b8:	86e3      	strh	r3, [r4, #54]	; 0x36
 800e5ba:	8722      	strh	r2, [r4, #56]	; 0x38
 800e5bc:	4628      	mov	r0, r5
 800e5be:	f7ff ffc1 	bl	800e544 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8pushBackEt>
 800e5c2:	e7df      	b.n	800e584 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x8>
 800e5c4:	bd38      	pop	{r3, r4, r5, pc}
	...

0800e5c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>:
 800e5c8:	2300      	movs	r3, #0
 800e5ca:	b510      	push	{r4, lr}
 800e5cc:	6043      	str	r3, [r0, #4]
 800e5ce:	60c3      	str	r3, [r0, #12]
 800e5d0:	7403      	strb	r3, [r0, #16]
 800e5d2:	8603      	strh	r3, [r0, #48]	; 0x30
 800e5d4:	8303      	strh	r3, [r0, #24]
 800e5d6:	8703      	strh	r3, [r0, #56]	; 0x38
 800e5d8:	4604      	mov	r4, r0
 800e5da:	f7ff ffcf 	bl	800e57c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e5de:	4a0a      	ldr	r2, [pc, #40]	; (800e608 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x40>)
 800e5e0:	6813      	ldr	r3, [r2, #0]
 800e5e2:	4611      	mov	r1, r2
 800e5e4:	b913      	cbnz	r3, 800e5ec <_ZN8touchgfx12TextProvider18initializeInternalEv+0x24>
 800e5e6:	6852      	ldr	r2, [r2, #4]
 800e5e8:	07d0      	lsls	r0, r2, #31
 800e5ea:	d50b      	bpl.n	800e604 <_ZN8touchgfx12TextProvider18initializeInternalEv+0x3c>
 800e5ec:	6849      	ldr	r1, [r1, #4]
 800e5ee:	104a      	asrs	r2, r1, #1
 800e5f0:	07c9      	lsls	r1, r1, #31
 800e5f2:	eb04 0002 	add.w	r0, r4, r2
 800e5f6:	bf48      	it	mi
 800e5f8:	58a2      	ldrmi	r2, [r4, r2]
 800e5fa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800e5fe:	bf48      	it	mi
 800e600:	58d3      	ldrmi	r3, [r2, r3]
 800e602:	4718      	bx	r3
 800e604:	bd10      	pop	{r4, pc}
 800e606:	bf00      	nop
 800e608:	200001a0 	.word	0x200001a0

0800e60c <_ZN8touchgfx12TextProviderC1Ev>:
 800e60c:	b510      	push	{r4, lr}
 800e60e:	2300      	movs	r3, #0
 800e610:	2201      	movs	r2, #1
 800e612:	4604      	mov	r4, r0
 800e614:	e9c0 3300 	strd	r3, r3, [r0]
 800e618:	60c3      	str	r3, [r0, #12]
 800e61a:	7403      	strb	r3, [r0, #16]
 800e61c:	82c3      	strh	r3, [r0, #22]
 800e61e:	8303      	strh	r3, [r0, #24]
 800e620:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e622:	8603      	strh	r3, [r0, #48]	; 0x30
 800e624:	86c3      	strh	r3, [r0, #54]	; 0x36
 800e626:	8703      	strh	r3, [r0, #56]	; 0x38
 800e628:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e62a:	f8a0 304e 	strh.w	r3, [r0, #78]	; 0x4e
 800e62e:	f8a0 3050 	strh.w	r3, [r0, #80]	; 0x50
 800e632:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800e636:	f880 2054 	strb.w	r2, [r0, #84]	; 0x54
 800e63a:	f880 3055 	strb.w	r3, [r0, #85]	; 0x55
 800e63e:	f7ff ffc3 	bl	800e5c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800e642:	4620      	mov	r0, r4
 800e644:	bd10      	pop	{r4, pc}

0800e646 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_>:
 800e646:	b410      	push	{r4}
 800e648:	6082      	str	r2, [r0, #8]
 800e64a:	6001      	str	r1, [r0, #0]
 800e64c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800e64e:	f85d 4b04 	ldr.w	r4, [sp], #4
 800e652:	f7ff bfb9 	b.w	800e5c8 <_ZN8touchgfx12TextProvider18initializeInternalEv>
	...

0800e658 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>:
 800e658:	b508      	push	{r3, lr}
 800e65a:	88c2      	ldrh	r2, [r0, #6]
 800e65c:	440a      	add	r2, r1
 800e65e:	2a02      	cmp	r2, #2
 800e660:	dd05      	ble.n	800e66e <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x16>
 800e662:	4b06      	ldr	r3, [pc, #24]	; (800e67c <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x24>)
 800e664:	4a06      	ldr	r2, [pc, #24]	; (800e680 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x28>)
 800e666:	4807      	ldr	r0, [pc, #28]	; (800e684 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt+0x2c>)
 800e668:	21ec      	movs	r1, #236	; 0xec
 800e66a:	f00d f841 	bl	801b6f0 <__assert_func>
 800e66e:	8883      	ldrh	r3, [r0, #4]
 800e670:	80c2      	strh	r2, [r0, #6]
 800e672:	1a59      	subs	r1, r3, r1
 800e674:	f001 0101 	and.w	r1, r1, #1
 800e678:	8081      	strh	r1, [r0, #4]
 800e67a:	bd08      	pop	{r3, pc}
 800e67c:	0801e6b7 	.word	0x0801e6b7
 800e680:	0801eb85 	.word	0x0801eb85
 800e684:	0801e68b 	.word	0x0801e68b

0800e688 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>:
 800e688:	b508      	push	{r3, lr}
 800e68a:	88c3      	ldrh	r3, [r0, #6]
 800e68c:	428b      	cmp	r3, r1
 800e68e:	d805      	bhi.n	800e69c <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x14>
 800e690:	4b06      	ldr	r3, [pc, #24]	; (800e6ac <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x24>)
 800e692:	4a07      	ldr	r2, [pc, #28]	; (800e6b0 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x28>)
 800e694:	4807      	ldr	r0, [pc, #28]	; (800e6b4 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt+0x2c>)
 800e696:	21fd      	movs	r1, #253	; 0xfd
 800e698:	f00d f82a 	bl	801b6f0 <__assert_func>
 800e69c:	8883      	ldrh	r3, [r0, #4]
 800e69e:	4419      	add	r1, r3
 800e6a0:	f001 0101 	and.w	r1, r1, #1
 800e6a4:	f820 2011 	strh.w	r2, [r0, r1, lsl #1]
 800e6a8:	bd08      	pop	{r3, pc}
 800e6aa:	bf00      	nop
 800e6ac:	0801e67d 	.word	0x0801e67d
 800e6b0:	0801ecdd 	.word	0x0801ecdd
 800e6b4:	0801e68b 	.word	0x0801e68b

0800e6b8 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800e6b8:	b570      	push	{r4, r5, r6, lr}
 800e6ba:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800e6bc:	4604      	mov	r4, r0
 800e6be:	b92a      	cbnz	r2, 800e6cc <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800e6c0:	4b12      	ldr	r3, [pc, #72]	; (800e70c <_ZN8touchgfx12TextProvider11getNextCharEv+0x54>)
 800e6c2:	4a13      	ldr	r2, [pc, #76]	; (800e710 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800e6c4:	4813      	ldr	r0, [pc, #76]	; (800e714 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800e6c6:	21de      	movs	r1, #222	; 0xde
 800e6c8:	f00d f812 	bl	801b6f0 <__assert_func>
 800e6cc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800e6ce:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800e6d2:	260a      	movs	r6, #10
 800e6d4:	3301      	adds	r3, #1
 800e6d6:	8b4d      	ldrh	r5, [r1, #26]
 800e6d8:	fbb3 f1f6 	udiv	r1, r3, r6
 800e6dc:	3a01      	subs	r2, #1
 800e6de:	fb06 3311 	mls	r3, r6, r1, r3
 800e6e2:	8602      	strh	r2, [r0, #48]	; 0x30
 800e6e4:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800e6e6:	f7ff ff49 	bl	800e57c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e6ea:	8b23      	ldrh	r3, [r4, #24]
 800e6ec:	2b02      	cmp	r3, #2
 800e6ee:	bf04      	itt	eq
 800e6f0:	2301      	moveq	r3, #1
 800e6f2:	8323      	strheq	r3, [r4, #24]
 800e6f4:	3412      	adds	r4, #18
 800e6f6:	4620      	mov	r0, r4
 800e6f8:	2101      	movs	r1, #1
 800e6fa:	f7ff ffad 	bl	800e658 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800e6fe:	4620      	mov	r0, r4
 800e700:	462a      	mov	r2, r5
 800e702:	2100      	movs	r1, #0
 800e704:	f7ff ffc0 	bl	800e688 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800e708:	4628      	mov	r0, r5
 800e70a:	bd70      	pop	{r4, r5, r6, pc}
 800e70c:	0801e65c 	.word	0x0801e65c
 800e710:	0801e8ce 	.word	0x0801e8ce
 800e714:	0801e68b 	.word	0x0801e68b

0800e718 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800e718:	428a      	cmp	r2, r1
 800e71a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e71e:	4604      	mov	r4, r0
 800e720:	460e      	mov	r6, r1
 800e722:	4615      	mov	r5, r2
 800e724:	469a      	mov	sl, r3
 800e726:	d92b      	bls.n	800e780 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x68>
 800e728:	1a57      	subs	r7, r2, r1
 800e72a:	b2bf      	uxth	r7, r7
 800e72c:	f04f 0800 	mov.w	r8, #0
 800e730:	f100 0932 	add.w	r9, r0, #50	; 0x32
 800e734:	f04f 0b0a 	mov.w	fp, #10
 800e738:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e73a:	b92b      	cbnz	r3, 800e748 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x30>
 800e73c:	4b24      	ldr	r3, [pc, #144]	; (800e7d0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xb8>)
 800e73e:	4a25      	ldr	r2, [pc, #148]	; (800e7d4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xbc>)
 800e740:	21e6      	movs	r1, #230	; 0xe6
 800e742:	4825      	ldr	r0, [pc, #148]	; (800e7d8 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc0>)
 800e744:	f00c ffd4 	bl	801b6f0 <__assert_func>
 800e748:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800e74a:	3b01      	subs	r3, #1
 800e74c:	b29b      	uxth	r3, r3
 800e74e:	441a      	add	r2, r3
 800e750:	8623      	strh	r3, [r4, #48]	; 0x30
 800e752:	fbb2 f3fb 	udiv	r3, r2, fp
 800e756:	fb0b 2313 	mls	r3, fp, r3, r2
 800e75a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800e75e:	2101      	movs	r1, #1
 800e760:	8b5a      	ldrh	r2, [r3, #26]
 800e762:	9201      	str	r2, [sp, #4]
 800e764:	4648      	mov	r0, r9
 800e766:	f7ff ff77 	bl	800e658 <_ZN8touchgfx12TextProvider14circularBufferILj2EE13allocateFrontEt>
 800e76a:	f108 0801 	add.w	r8, r8, #1
 800e76e:	9a01      	ldr	r2, [sp, #4]
 800e770:	2100      	movs	r1, #0
 800e772:	4648      	mov	r0, r9
 800e774:	f7ff ff88 	bl	800e688 <_ZN8touchgfx12TextProvider14circularBufferILj2EE9replaceAtEtt>
 800e778:	fa1f f388 	uxth.w	r3, r8
 800e77c:	429f      	cmp	r7, r3
 800e77e:	d8db      	bhi.n	800e738 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x20>
 800e780:	f104 071a 	add.w	r7, r4, #26
 800e784:	4631      	mov	r1, r6
 800e786:	4638      	mov	r0, r7
 800e788:	f7ff fec0 	bl	800e50c <_ZN8touchgfx12TextProvider14circularBufferILj10EE9dropFrontEt>
 800e78c:	260a      	movs	r6, #10
 800e78e:	b1c5      	cbz	r5, 800e7c2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xaa>
 800e790:	3d01      	subs	r5, #1
 800e792:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800e794:	b2ad      	uxth	r5, r5
 800e796:	2b09      	cmp	r3, #9
 800e798:	f83a 2015 	ldrh.w	r2, [sl, r5, lsl #1]
 800e79c:	d903      	bls.n	800e7a6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8e>
 800e79e:	4b0f      	ldr	r3, [pc, #60]	; (800e7dc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc4>)
 800e7a0:	4a0f      	ldr	r2, [pc, #60]	; (800e7e0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xc8>)
 800e7a2:	21ec      	movs	r1, #236	; 0xec
 800e7a4:	e7cd      	b.n	800e742 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2a>
 800e7a6:	8de1      	ldrh	r1, [r4, #46]	; 0x2e
 800e7a8:	3109      	adds	r1, #9
 800e7aa:	3301      	adds	r3, #1
 800e7ac:	fbb1 f0f6 	udiv	r0, r1, r6
 800e7b0:	fb06 1110 	mls	r1, r6, r0, r1
 800e7b4:	85e1      	strh	r1, [r4, #46]	; 0x2e
 800e7b6:	8623      	strh	r3, [r4, #48]	; 0x30
 800e7b8:	2100      	movs	r1, #0
 800e7ba:	4638      	mov	r0, r7
 800e7bc:	f7ff fd5a 	bl	800e274 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800e7c0:	e7e5      	b.n	800e78e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x76>
 800e7c2:	4620      	mov	r0, r4
 800e7c4:	b003      	add	sp, #12
 800e7c6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7ca:	f7ff bed7 	b.w	800e57c <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800e7ce:	bf00      	nop
 800e7d0:	0801e65c 	.word	0x0801e65c
 800e7d4:	0801e752 	.word	0x0801e752
 800e7d8:	0801e68b 	.word	0x0801e68b
 800e7dc:	0801e6b7 	.word	0x0801e6b7
 800e7e0:	0801e6ca 	.word	0x0801e6ca

0800e7e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800e7e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e7e8:	4605      	mov	r5, r0
 800e7ea:	4616      	mov	r6, r2
 800e7ec:	1c8c      	adds	r4, r1, #2
 800e7ee:	8809      	ldrh	r1, [r1, #0]
 800e7f0:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800e7f4:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800e7f8:	42b3      	cmp	r3, r6
 800e7fa:	d124      	bne.n	800e846 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800e7fc:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800e800:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800e804:	f001 070f 	and.w	r7, r1, #15
 800e808:	f8cd 8000 	str.w	r8, [sp]
 800e80c:	464b      	mov	r3, r9
 800e80e:	4652      	mov	r2, sl
 800e810:	4621      	mov	r1, r4
 800e812:	4628      	mov	r0, r5
 800e814:	f7ff fe3c 	bl	800e490 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800e818:	4683      	mov	fp, r0
 800e81a:	b168      	cbz	r0, 800e838 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800e81c:	eb0a 0109 	add.w	r1, sl, r9
 800e820:	4441      	add	r1, r8
 800e822:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800e826:	463a      	mov	r2, r7
 800e828:	4649      	mov	r1, r9
 800e82a:	4628      	mov	r0, r5
 800e82c:	f7ff ff74 	bl	800e718 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800e830:	4658      	mov	r0, fp
 800e832:	b003      	add	sp, #12
 800e834:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e838:	eb07 010a 	add.w	r1, r7, sl
 800e83c:	4449      	add	r1, r9
 800e83e:	4441      	add	r1, r8
 800e840:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800e844:	e7d2      	b.n	800e7ec <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800e846:	f04f 0b00 	mov.w	fp, #0
 800e84a:	e7f1      	b.n	800e830 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800e84c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800e84c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800e850:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800e852:	886f      	ldrh	r7, [r5, #2]
 800e854:	4604      	mov	r4, r0
 800e856:	087f      	lsrs	r7, r7, #1
 800e858:	260b      	movs	r6, #11
 800e85a:	f100 091a 	add.w	r9, r0, #26
 800e85e:	3e01      	subs	r6, #1
 800e860:	d013      	beq.n	800e88a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800e862:	2100      	movs	r1, #0
 800e864:	4648      	mov	r0, r9
 800e866:	f7ff fd1f 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e86a:	462a      	mov	r2, r5
 800e86c:	4680      	mov	r8, r0
 800e86e:	4603      	mov	r3, r0
 800e870:	4639      	mov	r1, r7
 800e872:	4620      	mov	r0, r4
 800e874:	f7ff fcdf 	bl	800e236 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800e878:	b138      	cbz	r0, 800e88a <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3e>
 800e87a:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800e87e:	4642      	mov	r2, r8
 800e880:	4620      	mov	r0, r4
 800e882:	f7ff ffaf 	bl	800e7e4 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800e886:	2800      	cmp	r0, #0
 800e888:	d1e9      	bne.n	800e85e <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x12>
 800e88a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	...

0800e890 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:
 800e890:	b570      	push	{r4, r5, r6, lr}
 800e892:	4b1e      	ldr	r3, [pc, #120]	; (800e90c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 800e894:	e9d3 2300 	ldrd	r2, r3, [r3]
 800e898:	4604      	mov	r4, r0
 800e89a:	f003 0501 	and.w	r5, r3, #1
 800e89e:	b902      	cbnz	r2, 800e8a2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
 800e8a0:	b165      	cbz	r5, 800e8bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2c>
 800e8a2:	105b      	asrs	r3, r3, #1
 800e8a4:	f104 061a 	add.w	r6, r4, #26
 800e8a8:	18e0      	adds	r0, r4, r3
 800e8aa:	b10d      	cbz	r5, 800e8b0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x20>
 800e8ac:	58e3      	ldr	r3, [r4, r3]
 800e8ae:	589a      	ldr	r2, [r3, r2]
 800e8b0:	4790      	blx	r2
 800e8b2:	2100      	movs	r1, #0
 800e8b4:	4602      	mov	r2, r0
 800e8b6:	4630      	mov	r0, r6
 800e8b8:	f7ff fcdc 	bl	800e274 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800e8bc:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800e8be:	b303      	cbz	r3, 800e902 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800e8c0:	f104 051a 	add.w	r5, r4, #26
 800e8c4:	2100      	movs	r1, #0
 800e8c6:	4628      	mov	r0, r5
 800e8c8:	f7ff fcee 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e8cc:	b1c8      	cbz	r0, 800e902 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800e8ce:	4620      	mov	r0, r4
 800e8d0:	f7ff ffbc 	bl	800e84c <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
 800e8d4:	2101      	movs	r1, #1
 800e8d6:	4628      	mov	r0, r5
 800e8d8:	f7ff fce6 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e8dc:	f640 133f 	movw	r3, #2367	; 0x93f
 800e8e0:	4298      	cmp	r0, r3
 800e8e2:	4606      	mov	r6, r0
 800e8e4:	d10d      	bne.n	800e902 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x72>
 800e8e6:	2100      	movs	r1, #0
 800e8e8:	4628      	mov	r0, r5
 800e8ea:	f7ff fcdd 	bl	800e2a8 <_ZN8touchgfx12TextProvider14circularBufferILj10EE8peekCharEt>
 800e8ee:	2101      	movs	r1, #1
 800e8f0:	4602      	mov	r2, r0
 800e8f2:	4628      	mov	r0, r5
 800e8f4:	f7ff fcbe 	bl	800e274 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800e8f8:	4632      	mov	r2, r6
 800e8fa:	2100      	movs	r1, #0
 800e8fc:	4628      	mov	r0, r5
 800e8fe:	f7ff fcb9 	bl	800e274 <_ZN8touchgfx12TextProvider14circularBufferILj10EE9replaceAtEtt>
 800e902:	4620      	mov	r0, r4
 800e904:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800e908:	f7ff bed6 	b.w	800e6b8 <_ZN8touchgfx12TextProvider11getNextCharEv>
 800e90c:	200001a8 	.word	0x200001a8

0800e910 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800e910:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e912:	4617      	mov	r7, r2
 800e914:	461e      	mov	r6, r3
 800e916:	4605      	mov	r5, r0
 800e918:	f7ff ffba 	bl	800e890 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800e91c:	683b      	ldr	r3, [r7, #0]
 800e91e:	4604      	mov	r4, r0
 800e920:	68db      	ldr	r3, [r3, #12]
 800e922:	4601      	mov	r1, r0
 800e924:	4638      	mov	r0, r7
 800e926:	4798      	blx	r3
 800e928:	f5a4 6360 	sub.w	r3, r4, #3584	; 0xe00
 800e92c:	b29b      	uxth	r3, r3
 800e92e:	2b7f      	cmp	r3, #127	; 0x7f
 800e930:	4602      	mov	r2, r0
 800e932:	6030      	str	r0, [r6, #0]
 800e934:	d813      	bhi.n	800e95e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x4e>
 800e936:	4639      	mov	r1, r7
 800e938:	4628      	mov	r0, r5
 800e93a:	f7ff fccf 	bl	800e2dc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800e93e:	6030      	str	r0, [r6, #0]
 800e940:	6833      	ldr	r3, [r6, #0]
 800e942:	b143      	cbz	r3, 800e956 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 800e944:	f993 200d 	ldrsb.w	r2, [r3, #13]
 800e948:	7a9b      	ldrb	r3, [r3, #10]
 800e94a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800e94e:	4313      	orrs	r3, r2
 800e950:	bf0c      	ite	eq
 800e952:	2301      	moveq	r3, #1
 800e954:	2300      	movne	r3, #0
 800e956:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 800e95a:	4620      	mov	r0, r4
 800e95c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800e95e:	f895 3055 	ldrb.w	r3, [r5, #85]	; 0x55
 800e962:	2b00      	cmp	r3, #0
 800e964:	d0ec      	beq.n	800e940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800e966:	f640 1302 	movw	r3, #2306	; 0x902
 800e96a:	429c      	cmp	r4, r3
 800e96c:	d1e8      	bne.n	800e940 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x30>
 800e96e:	4601      	mov	r1, r0
 800e970:	4628      	mov	r0, r5
 800e972:	f7ff fc32 	bl	800e1da <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800e976:	e7e2      	b.n	800e93e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>

0800e978 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 800e978:	b5f0      	push	{r4, r5, r6, r7, lr}
 800e97a:	b08d      	sub	sp, #52	; 0x34
 800e97c:	2300      	movs	r3, #0
 800e97e:	9304      	str	r3, [sp, #16]
 800e980:	9305      	str	r3, [sp, #20]
 800e982:	9306      	str	r3, [sp, #24]
 800e984:	aa04      	add	r2, sp, #16
 800e986:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 800e98a:	9307      	str	r3, [sp, #28]
 800e98c:	f100 0640 	add.w	r6, r0, #64	; 0x40
 800e990:	4613      	mov	r3, r2
 800e992:	f101 0710 	add.w	r7, r1, #16
 800e996:	eddf 7a0f 	vldr	s15, [pc, #60]	; 800e9d4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 800e99a:	460c      	mov	r4, r1
 800e99c:	4605      	mov	r5, r0
 800e99e:	ecb4 7a01 	vldmia	r4!, {s14}
 800e9a2:	ecf5 6a01 	vldmia	r5!, {s13}
 800e9a6:	42bc      	cmp	r4, r7
 800e9a8:	eee6 7a87 	vfma.f32	s15, s13, s14
 800e9ac:	d1f7      	bne.n	800e99e <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 800e9ae:	3010      	adds	r0, #16
 800e9b0:	42b0      	cmp	r0, r6
 800e9b2:	ece2 7a01 	vstmia	r2!, {s15}
 800e9b6:	d1ee      	bne.n	800e996 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 800e9b8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800e9ba:	ac0c      	add	r4, sp, #48	; 0x30
 800e9bc:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 800e9c0:	ed9d 0a08 	vldr	s0, [sp, #32]
 800e9c4:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 800e9c8:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 800e9cc:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 800e9d0:	b00d      	add	sp, #52	; 0x34
 800e9d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800e9d4:	00000000 	.word	0x00000000

0800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>:
 800e9d8:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 800ea08 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 800e9dc:	2300      	movs	r3, #0
 800e9de:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800e9e2:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 800e9e6:	2200      	movs	r2, #0
 800e9e8:	4293      	cmp	r3, r2
 800e9ea:	f102 0201 	add.w	r2, r2, #1
 800e9ee:	bf14      	ite	ne
 800e9f0:	eef0 6a47 	vmovne.f32	s13, s14
 800e9f4:	eef0 6a67 	vmoveq.f32	s13, s15
 800e9f8:	2a04      	cmp	r2, #4
 800e9fa:	ece1 6a01 	vstmia	r1!, {s13}
 800e9fe:	d1f3      	bne.n	800e9e8 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 800ea00:	3301      	adds	r3, #1
 800ea02:	2b04      	cmp	r3, #4
 800ea04:	d1ed      	bne.n	800e9e2 <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 800ea06:	4770      	bx	lr
 800ea08:	00000000 	.word	0x00000000

0800ea0c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 800ea0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ea10:	460c      	mov	r4, r1
 800ea12:	4605      	mov	r5, r0
 800ea14:	4690      	mov	r8, r2
 800ea16:	f7ff ffdf 	bl	800e9d8 <_ZN8touchgfx9Matrix4x4C1Ev>
 800ea1a:	4628      	mov	r0, r5
 800ea1c:	4621      	mov	r1, r4
 800ea1e:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 800ea22:	2300      	movs	r3, #0
 800ea24:	eddf 7a0f 	vldr	s15, [pc, #60]	; 800ea64 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 800ea28:	eb08 0603 	add.w	r6, r8, r3
 800ea2c:	460f      	mov	r7, r1
 800ea2e:	2400      	movs	r4, #0
 800ea30:	4632      	mov	r2, r6
 800ea32:	ecf7 6a01 	vldmia	r7!, {s13}
 800ea36:	ed92 7a00 	vldr	s14, [r2]
 800ea3a:	3401      	adds	r4, #1
 800ea3c:	2c04      	cmp	r4, #4
 800ea3e:	f106 0610 	add.w	r6, r6, #16
 800ea42:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ea46:	d1f3      	bne.n	800ea30 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 800ea48:	18c2      	adds	r2, r0, r3
 800ea4a:	3304      	adds	r3, #4
 800ea4c:	2b10      	cmp	r3, #16
 800ea4e:	edc2 7a00 	vstr	s15, [r2]
 800ea52:	d1e7      	bne.n	800ea24 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 800ea54:	3110      	adds	r1, #16
 800ea56:	4561      	cmp	r1, ip
 800ea58:	f100 0010 	add.w	r0, r0, #16
 800ea5c:	d1e1      	bne.n	800ea22 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 800ea5e:	4628      	mov	r0, r5
 800ea60:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ea64:	00000000 	.word	0x00000000

0800ea68 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 800ea68:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 800ea6c:	ee87 0a80 	vdiv.f32	s0, s15, s0
 800ea70:	f100 0320 	add.w	r3, r0, #32
 800ea74:	3030      	adds	r0, #48	; 0x30
 800ea76:	ecf3 7a01 	vldmia	r3!, {s15}
 800ea7a:	ee60 7a27 	vmul.f32	s15, s0, s15
 800ea7e:	4283      	cmp	r3, r0
 800ea80:	edc3 7a03 	vstr	s15, [r3, #12]
 800ea84:	d1f7      	bne.n	800ea76 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 800ea86:	4770      	bx	lr

0800ea88 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 800ea88:	b510      	push	{r4, lr}
 800ea8a:	ed2d 8b02 	vpush	{d8}
 800ea8e:	4604      	mov	r4, r0
 800ea90:	eef0 8a40 	vmov.f32	s17, s0
 800ea94:	f00c f91a 	bl	801accc <sinf>
 800ea98:	eeb0 8a40 	vmov.f32	s16, s0
 800ea9c:	eeb0 0a68 	vmov.f32	s0, s17
 800eaa0:	f00c f892 	bl	801abc8 <cosf>
 800eaa4:	f104 0310 	add.w	r3, r4, #16
 800eaa8:	f104 0220 	add.w	r2, r4, #32
 800eaac:	eeb1 6a48 	vneg.f32	s12, s16
 800eab0:	edd3 7a04 	vldr	s15, [r3, #16]
 800eab4:	edd3 6a00 	vldr	s13, [r3]
 800eab8:	ee26 7a27 	vmul.f32	s14, s12, s15
 800eabc:	ee67 7a80 	vmul.f32	s15, s15, s0
 800eac0:	eea6 7a80 	vfma.f32	s14, s13, s0
 800eac4:	eee6 7a88 	vfma.f32	s15, s13, s16
 800eac8:	eca3 7a01 	vstmia	r3!, {s14}
 800eacc:	429a      	cmp	r2, r3
 800eace:	edc3 7a03 	vstr	s15, [r3, #12]
 800ead2:	d1ed      	bne.n	800eab0 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 800ead4:	ecbd 8b02 	vpop	{d8}
 800ead8:	4620      	mov	r0, r4
 800eada:	bd10      	pop	{r4, pc}

0800eadc <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 800eadc:	b510      	push	{r4, lr}
 800eade:	ed2d 8b02 	vpush	{d8}
 800eae2:	4604      	mov	r4, r0
 800eae4:	eef0 8a40 	vmov.f32	s17, s0
 800eae8:	f00c f8f0 	bl	801accc <sinf>
 800eaec:	eeb0 8a40 	vmov.f32	s16, s0
 800eaf0:	eeb0 0a68 	vmov.f32	s0, s17
 800eaf4:	f00c f868 	bl	801abc8 <cosf>
 800eaf8:	4623      	mov	r3, r4
 800eafa:	f104 0210 	add.w	r2, r4, #16
 800eafe:	eeb1 6a48 	vneg.f32	s12, s16
 800eb02:	edd3 7a08 	vldr	s15, [r3, #32]
 800eb06:	edd3 6a00 	vldr	s13, [r3]
 800eb0a:	ee27 7a88 	vmul.f32	s14, s15, s16
 800eb0e:	ee67 7a80 	vmul.f32	s15, s15, s0
 800eb12:	eea6 7a80 	vfma.f32	s14, s13, s0
 800eb16:	eee6 7a26 	vfma.f32	s15, s12, s13
 800eb1a:	eca3 7a01 	vstmia	r3!, {s14}
 800eb1e:	429a      	cmp	r2, r3
 800eb20:	edc3 7a07 	vstr	s15, [r3, #28]
 800eb24:	d1ed      	bne.n	800eb02 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 800eb26:	ecbd 8b02 	vpop	{d8}
 800eb2a:	4620      	mov	r0, r4
 800eb2c:	bd10      	pop	{r4, pc}

0800eb2e <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 800eb2e:	b510      	push	{r4, lr}
 800eb30:	ed2d 8b02 	vpush	{d8}
 800eb34:	4604      	mov	r4, r0
 800eb36:	eef0 8a40 	vmov.f32	s17, s0
 800eb3a:	f00c f8c7 	bl	801accc <sinf>
 800eb3e:	eeb0 8a40 	vmov.f32	s16, s0
 800eb42:	eeb0 0a68 	vmov.f32	s0, s17
 800eb46:	f00c f83f 	bl	801abc8 <cosf>
 800eb4a:	4623      	mov	r3, r4
 800eb4c:	f104 0210 	add.w	r2, r4, #16
 800eb50:	eeb1 6a48 	vneg.f32	s12, s16
 800eb54:	edd3 7a04 	vldr	s15, [r3, #16]
 800eb58:	edd3 6a00 	vldr	s13, [r3]
 800eb5c:	ee26 7a27 	vmul.f32	s14, s12, s15
 800eb60:	ee67 7a80 	vmul.f32	s15, s15, s0
 800eb64:	eea6 7a80 	vfma.f32	s14, s13, s0
 800eb68:	eee6 7a88 	vfma.f32	s15, s13, s16
 800eb6c:	eca3 7a01 	vstmia	r3!, {s14}
 800eb70:	429a      	cmp	r2, r3
 800eb72:	edc3 7a03 	vstr	s15, [r3, #12]
 800eb76:	d1ed      	bne.n	800eb54 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 800eb78:	ecbd 8b02 	vpop	{d8}
 800eb7c:	4620      	mov	r0, r4
 800eb7e:	bd10      	pop	{r4, pc}

0800eb80 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 800eb80:	4603      	mov	r3, r0
 800eb82:	f100 0210 	add.w	r2, r0, #16
 800eb86:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 800eb8a:	edd3 7a00 	vldr	s15, [r3]
 800eb8e:	eee7 7a00 	vfma.f32	s15, s14, s0
 800eb92:	ece3 7a01 	vstmia	r3!, {s15}
 800eb96:	4293      	cmp	r3, r2
 800eb98:	d1f5      	bne.n	800eb86 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 800eb9a:	4770      	bx	lr

0800eb9c <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 800eb9c:	f100 0310 	add.w	r3, r0, #16
 800eba0:	f100 0220 	add.w	r2, r0, #32
 800eba4:	ed93 7a08 	vldr	s14, [r3, #32]
 800eba8:	edd3 7a00 	vldr	s15, [r3]
 800ebac:	eee7 7a00 	vfma.f32	s15, s14, s0
 800ebb0:	ece3 7a01 	vstmia	r3!, {s15}
 800ebb4:	4293      	cmp	r3, r2
 800ebb6:	d1f5      	bne.n	800eba4 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 800ebb8:	4770      	bx	lr

0800ebba <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 800ebba:	f100 0320 	add.w	r3, r0, #32
 800ebbe:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800ebc2:	ed93 7a04 	vldr	s14, [r3, #16]
 800ebc6:	edd3 7a00 	vldr	s15, [r3]
 800ebca:	eee7 7a00 	vfma.f32	s15, s14, s0
 800ebce:	ece3 7a01 	vstmia	r3!, {s15}
 800ebd2:	4293      	cmp	r3, r2
 800ebd4:	d1f5      	bne.n	800ebc2 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 800ebd6:	4770      	bx	lr

0800ebd8 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 800ebd8:	4603      	mov	r3, r0
 800ebda:	f100 0210 	add.w	r2, r0, #16
 800ebde:	edd3 7a00 	vldr	s15, [r3]
 800ebe2:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ebe6:	ece3 7a01 	vstmia	r3!, {s15}
 800ebea:	4293      	cmp	r3, r2
 800ebec:	d1f7      	bne.n	800ebde <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 800ebee:	4770      	bx	lr

0800ebf0 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 800ebf0:	f100 0310 	add.w	r3, r0, #16
 800ebf4:	f100 0220 	add.w	r2, r0, #32
 800ebf8:	edd3 7a00 	vldr	s15, [r3]
 800ebfc:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ec00:	ece3 7a01 	vstmia	r3!, {s15}
 800ec04:	4293      	cmp	r3, r2
 800ec06:	d1f7      	bne.n	800ebf8 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 800ec08:	4770      	bx	lr

0800ec0a <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 800ec0a:	f100 0320 	add.w	r3, r0, #32
 800ec0e:	f100 0230 	add.w	r2, r0, #48	; 0x30
 800ec12:	edd3 7a00 	vldr	s15, [r3]
 800ec16:	ee67 7a80 	vmul.f32	s15, s15, s0
 800ec1a:	ece3 7a01 	vstmia	r3!, {s15}
 800ec1e:	4293      	cmp	r3, r2
 800ec20:	d1f7      	bne.n	800ec12 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 800ec22:	4770      	bx	lr

0800ec24 <_ZN8touchgfx8ceil28_4El>:
 800ec24:	f110 030f 	adds.w	r3, r0, #15
 800ec28:	d401      	bmi.n	800ec2e <_ZN8touchgfx8ceil28_4El+0xa>
 800ec2a:	1118      	asrs	r0, r3, #4
 800ec2c:	4770      	bx	lr
 800ec2e:	f1c0 0001 	rsb	r0, r0, #1
 800ec32:	f010 000f 	ands.w	r0, r0, #15
 800ec36:	bf18      	it	ne
 800ec38:	2001      	movne	r0, #1
 800ec3a:	2210      	movs	r2, #16
 800ec3c:	fb93 f3f2 	sdiv	r3, r3, r2
 800ec40:	1a18      	subs	r0, r3, r0
 800ec42:	4770      	bx	lr

0800ec44 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800ec44:	2900      	cmp	r1, #0
 800ec46:	b538      	push	{r3, r4, r5, lr}
 800ec48:	dc06      	bgt.n	800ec58 <_ZN8touchgfx11floorDivModEllRlS0_+0x14>
 800ec4a:	4b10      	ldr	r3, [pc, #64]	; (800ec8c <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800ec4c:	4a10      	ldr	r2, [pc, #64]	; (800ec90 <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800ec4e:	4811      	ldr	r0, [pc, #68]	; (800ec94 <_ZN8touchgfx11floorDivModEllRlS0_+0x50>)
 800ec50:	f240 1111 	movw	r1, #273	; 0x111
 800ec54:	f00c fd4c 	bl	801b6f0 <__assert_func>
 800ec58:	2800      	cmp	r0, #0
 800ec5a:	db06      	blt.n	800ec6a <_ZN8touchgfx11floorDivModEllRlS0_+0x26>
 800ec5c:	fb90 f4f1 	sdiv	r4, r0, r1
 800ec60:	6014      	str	r4, [r2, #0]
 800ec62:	fb01 0114 	mls	r1, r1, r4, r0
 800ec66:	6019      	str	r1, [r3, #0]
 800ec68:	bd38      	pop	{r3, r4, r5, pc}
 800ec6a:	4240      	negs	r0, r0
 800ec6c:	fb90 f4f1 	sdiv	r4, r0, r1
 800ec70:	4265      	negs	r5, r4
 800ec72:	fb01 0014 	mls	r0, r1, r4, r0
 800ec76:	6015      	str	r5, [r2, #0]
 800ec78:	6018      	str	r0, [r3, #0]
 800ec7a:	2800      	cmp	r0, #0
 800ec7c:	d0f4      	beq.n	800ec68 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800ec7e:	6810      	ldr	r0, [r2, #0]
 800ec80:	3801      	subs	r0, #1
 800ec82:	6010      	str	r0, [r2, #0]
 800ec84:	6818      	ldr	r0, [r3, #0]
 800ec86:	1a09      	subs	r1, r1, r0
 800ec88:	e7ed      	b.n	800ec66 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800ec8a:	bf00      	nop
 800ec8c:	0801edb5 	.word	0x0801edb5
 800ec90:	0801edf4 	.word	0x0801edf4
 800ec94:	0801edc5 	.word	0x0801edc5

0800ec98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800ec98:	b570      	push	{r4, r5, r6, lr}
 800ec9a:	694a      	ldr	r2, [r1, #20]
 800ec9c:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800ec9e:	684b      	ldr	r3, [r1, #4]
 800eca0:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800eca2:	1b54      	subs	r4, r2, r5
 800eca4:	f000 8106 	beq.w	800eeb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800eca8:	1b9b      	subs	r3, r3, r6
 800ecaa:	d003      	beq.n	800ecb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800ecac:	4363      	muls	r3, r4
 800ecae:	2210      	movs	r2, #16
 800ecb0:	fb93 f3f2 	sdiv	r3, r3, r2
 800ecb4:	680c      	ldr	r4, [r1, #0]
 800ecb6:	698a      	ldr	r2, [r1, #24]
 800ecb8:	1b65      	subs	r5, r4, r5
 800ecba:	f000 80fd 	beq.w	800eeb8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800ecbe:	1b92      	subs	r2, r2, r6
 800ecc0:	d003      	beq.n	800ecca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800ecc2:	436a      	muls	r2, r5
 800ecc4:	2410      	movs	r4, #16
 800ecc6:	fb92 f2f4 	sdiv	r2, r2, r4
 800ecca:	1a9b      	subs	r3, r3, r2
 800eccc:	ee07 3a90 	vmov	s15, r3
 800ecd0:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800eef4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800ecd4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ecd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800ecdc:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ece0:	460a      	mov	r2, r1
 800ece2:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800ece6:	4603      	mov	r3, r0
 800ece8:	f100 040c 	add.w	r4, r0, #12
 800ecec:	eeb1 6a43 	vneg.f32	s12, s6
 800ecf0:	edd2 7a02 	vldr	s15, [r2, #8]
 800ecf4:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800ecf8:	3214      	adds	r2, #20
 800ecfa:	ece3 6a01 	vstmia	r3!, {s13}
 800ecfe:	ed52 7a02 	vldr	s15, [r2, #-8]
 800ed02:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed06:	429c      	cmp	r4, r3
 800ed08:	edc3 7a02 	vstr	s15, [r3, #8]
 800ed0c:	ed52 7a01 	vldr	s15, [r2, #-4]
 800ed10:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800ed14:	edc3 7a05 	vstr	s15, [r3, #20]
 800ed18:	d1ea      	bne.n	800ecf0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800ed1a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ed1c:	698b      	ldr	r3, [r1, #24]
 800ed1e:	edd0 4a02 	vldr	s9, [r0, #8]
 800ed22:	edd0 3a00 	vldr	s7, [r0]
 800ed26:	edd0 6a01 	vldr	s13, [r0, #4]
 800ed2a:	ed90 5a05 	vldr	s10, [r0, #20]
 800ed2e:	ed90 2a03 	vldr	s4, [r0, #12]
 800ed32:	edd0 5a04 	vldr	s11, [r0, #16]
 800ed36:	ed90 1a07 	vldr	s2, [r0, #28]
 800ed3a:	edd0 2a06 	vldr	s5, [r0, #24]
 800ed3e:	1a9b      	subs	r3, r3, r2
 800ed40:	ee07 3a90 	vmov	s15, r3
 800ed44:	684b      	ldr	r3, [r1, #4]
 800ed46:	1a9b      	subs	r3, r3, r2
 800ed48:	ee07 3a10 	vmov	s14, r3
 800ed4c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed50:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800ed54:	ee67 7a84 	vmul.f32	s15, s15, s8
 800ed58:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800ed5c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ed60:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800ed64:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ed68:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800ed6c:	eee6 7a87 	vfma.f32	s15, s13, s14
 800ed70:	ee32 5a45 	vsub.f32	s10, s4, s10
 800ed74:	ee67 7a83 	vmul.f32	s15, s15, s6
 800ed78:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800ed7c:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ed7e:	694a      	ldr	r2, [r1, #20]
 800ed80:	1b13      	subs	r3, r2, r4
 800ed82:	ee07 3a10 	vmov	s14, r3
 800ed86:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ed8a:	680b      	ldr	r3, [r1, #0]
 800ed8c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ed90:	1b1b      	subs	r3, r3, r4
 800ed92:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800ed96:	ee07 3a10 	vmov	s14, r3
 800ed9a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ed9e:	ee27 7a04 	vmul.f32	s14, s14, s8
 800eda2:	eee6 4a87 	vfma.f32	s9, s13, s14
 800eda6:	ee64 4a86 	vmul.f32	s9, s9, s12
 800edaa:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800edae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800edb0:	698b      	ldr	r3, [r1, #24]
 800edb2:	1a9b      	subs	r3, r3, r2
 800edb4:	ee06 3a90 	vmov	s13, r3
 800edb8:	684b      	ldr	r3, [r1, #4]
 800edba:	1a9b      	subs	r3, r3, r2
 800edbc:	ee07 3a10 	vmov	s14, r3
 800edc0:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800edc4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edc8:	ee66 6a84 	vmul.f32	s13, s13, s8
 800edcc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edd0:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800edd4:	eee5 6a87 	vfma.f32	s13, s11, s14
 800edd8:	ee66 6a83 	vmul.f32	s13, s13, s6
 800eddc:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800ede0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ede2:	694a      	ldr	r2, [r1, #20]
 800ede4:	1b13      	subs	r3, r2, r4
 800ede6:	ee07 3a10 	vmov	s14, r3
 800edea:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800edee:	680b      	ldr	r3, [r1, #0]
 800edf0:	ee27 7a04 	vmul.f32	s14, s14, s8
 800edf4:	1b1b      	subs	r3, r3, r4
 800edf6:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800edfa:	ee07 3a10 	vmov	s14, r3
 800edfe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee02:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee06:	eea5 5a87 	vfma.f32	s10, s11, s14
 800ee0a:	edd0 5a08 	vldr	s11, [r0, #32]
 800ee0e:	ee25 5a06 	vmul.f32	s10, s10, s12
 800ee12:	ee31 1a65 	vsub.f32	s2, s2, s11
 800ee16:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800ee1a:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800ee1c:	698b      	ldr	r3, [r1, #24]
 800ee1e:	1a9b      	subs	r3, r3, r2
 800ee20:	ee07 3a10 	vmov	s14, r3
 800ee24:	684b      	ldr	r3, [r1, #4]
 800ee26:	1a9b      	subs	r3, r3, r2
 800ee28:	ee01 3a90 	vmov	s3, r3
 800ee2c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ee30:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800ee34:	ee27 7a04 	vmul.f32	s14, s14, s8
 800ee38:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800ee3c:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800ee40:	ee61 1a84 	vmul.f32	s3, s3, s8
 800ee44:	eea1 7a21 	vfma.f32	s14, s2, s3
 800ee48:	ee27 7a03 	vmul.f32	s14, s14, s6
 800ee4c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800ee50:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800ee52:	694a      	ldr	r2, [r1, #20]
 800ee54:	1b13      	subs	r3, r2, r4
 800ee56:	ee03 3a10 	vmov	s6, r3
 800ee5a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ee5e:	680b      	ldr	r3, [r1, #0]
 800ee60:	ee23 3a04 	vmul.f32	s6, s6, s8
 800ee64:	1b1b      	subs	r3, r3, r4
 800ee66:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800ee6a:	ee03 3a10 	vmov	s6, r3
 800ee6e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800ee72:	ee23 4a04 	vmul.f32	s8, s6, s8
 800ee76:	eee1 5a04 	vfma.f32	s11, s2, s8
 800ee7a:	ee25 6a86 	vmul.f32	s12, s11, s12
 800ee7e:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800ee82:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800ee86:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800ee8a:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800ee8e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800ee92:	dd13      	ble.n	800eebc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800ee94:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800ee98:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800ee9c:	63c3      	str	r3, [r0, #60]	; 0x3c
 800ee9e:	eee3 7a87 	vfma.f32	s15, s7, s14
 800eea2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800eea6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eeaa:	dd15      	ble.n	800eed8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800eeac:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800eeb0:	6403      	str	r3, [r0, #64]	; 0x40
 800eeb2:	bd70      	pop	{r4, r5, r6, pc}
 800eeb4:	4623      	mov	r3, r4
 800eeb6:	e6fd      	b.n	800ecb4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800eeb8:	462a      	mov	r2, r5
 800eeba:	e706      	b.n	800ecca <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800eebc:	d502      	bpl.n	800eec4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800eebe:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800eec2:	e7e9      	b.n	800ee98 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800eec4:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800eec8:	eea3 2a85 	vfma.f32	s4, s7, s10
 800eecc:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800eed0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eed4:	dade      	bge.n	800ee94 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800eed6:	e7f2      	b.n	800eebe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800eed8:	d502      	bpl.n	800eee0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800eeda:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800eede:	e7e7      	b.n	800eeb0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800eee0:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800eee4:	eee3 4a86 	vfma.f32	s9, s7, s12
 800eee8:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800eeec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800eef0:	dadc      	bge.n	800eeac <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800eef2:	e7f2      	b.n	800eeda <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800eef4:	3d800000 	.word	0x3d800000

0800eef8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800eef8:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eefc:	f04f 0814 	mov.w	r8, #20
 800ef00:	fb08 f903 	mul.w	r9, r8, r3
 800ef04:	eb02 0a09 	add.w	sl, r2, r9
 800ef08:	4604      	mov	r4, r0
 800ef0a:	f8da 0004 	ldr.w	r0, [sl, #4]
 800ef0e:	4617      	mov	r7, r2
 800ef10:	460d      	mov	r5, r1
 800ef12:	461e      	mov	r6, r3
 800ef14:	f7ff fe86 	bl	800ec24 <_ZN8touchgfx8ceil28_4El>
 800ef18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ef1a:	6160      	str	r0, [r4, #20]
 800ef1c:	fb08 f803 	mul.w	r8, r8, r3
 800ef20:	eb07 0b08 	add.w	fp, r7, r8
 800ef24:	9001      	str	r0, [sp, #4]
 800ef26:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ef2a:	f7ff fe7b 	bl	800ec24 <_ZN8touchgfx8ceil28_4El>
 800ef2e:	9a01      	ldr	r2, [sp, #4]
 800ef30:	1a80      	subs	r0, r0, r2
 800ef32:	61a0      	str	r0, [r4, #24]
 800ef34:	2800      	cmp	r0, #0
 800ef36:	f000 8088 	beq.w	800f04a <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800ef3a:	f857 3009 	ldr.w	r3, [r7, r9]
 800ef3e:	f857 c008 	ldr.w	ip, [r7, r8]
 800ef42:	f8da 1004 	ldr.w	r1, [sl, #4]
 800ef46:	f8db 0004 	ldr.w	r0, [fp, #4]
 800ef4a:	ebac 0c03 	sub.w	ip, ip, r3
 800ef4e:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800ef52:	fb0b f202 	mul.w	r2, fp, r2
 800ef56:	fb0c 2211 	mls	r2, ip, r1, r2
 800ef5a:	1a40      	subs	r0, r0, r1
 800ef5c:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800ef60:	fb00 2003 	mla	r0, r0, r3, r2
 800ef64:	3801      	subs	r0, #1
 800ef66:	f104 0310 	add.w	r3, r4, #16
 800ef6a:	4622      	mov	r2, r4
 800ef6c:	4641      	mov	r1, r8
 800ef6e:	4440      	add	r0, r8
 800ef70:	f7ff fe68 	bl	800ec44 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ef74:	f104 0308 	add.w	r3, r4, #8
 800ef78:	1d22      	adds	r2, r4, #4
 800ef7a:	4641      	mov	r1, r8
 800ef7c:	4658      	mov	r0, fp
 800ef7e:	f7ff fe61 	bl	800ec44 <_ZN8touchgfx11floorDivModEllRlS0_>
 800ef82:	f8c4 800c 	str.w	r8, [r4, #12]
 800ef86:	f8da 3004 	ldr.w	r3, [sl, #4]
 800ef8a:	6962      	ldr	r2, [r4, #20]
 800ef8c:	eddf 6a31 	vldr	s13, [pc, #196]	; 800f054 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800ef90:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800ef94:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800ef98:	ee07 3a10 	vmov	s14, r3
 800ef9c:	6822      	ldr	r2, [r4, #0]
 800ef9e:	f857 3009 	ldr.w	r3, [r7, r9]
 800efa2:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800efa6:	ee07 3a90 	vmov	s15, r3
 800efaa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800efae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800efb2:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800efb6:	ee27 7a26 	vmul.f32	s14, s14, s13
 800efba:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800efbe:	edd3 6a00 	vldr	s13, [r3]
 800efc2:	eee6 6a07 	vfma.f32	s13, s12, s14
 800efc6:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800efca:	eee6 6a27 	vfma.f32	s13, s12, s15
 800efce:	edc4 6a07 	vstr	s13, [r4, #28]
 800efd2:	edd4 6a01 	vldr	s13, [r4, #4]
 800efd6:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800efda:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800efde:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800efe2:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800efe6:	ed84 6a08 	vstr	s12, [r4, #32]
 800efea:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800efec:	6262      	str	r2, [r4, #36]	; 0x24
 800efee:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800eff2:	ed93 6a03 	vldr	s12, [r3, #12]
 800eff6:	eea5 6a87 	vfma.f32	s12, s11, s14
 800effa:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800effe:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800f002:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800f006:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800f00a:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800f00e:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800f012:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800f016:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800f018:	6322      	str	r2, [r4, #48]	; 0x30
 800f01a:	ed93 6a06 	vldr	s12, [r3, #24]
 800f01e:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800f022:	eea5 6a87 	vfma.f32	s12, s11, s14
 800f026:	eeb0 7a46 	vmov.f32	s14, s12
 800f02a:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800f02e:	eea6 7a27 	vfma.f32	s14, s12, s15
 800f032:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800f036:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800f03a:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800f03e:	eee6 7a87 	vfma.f32	s15, s13, s14
 800f042:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800f046:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800f048:	63e3      	str	r3, [r4, #60]	; 0x3c
 800f04a:	4620      	mov	r0, r4
 800f04c:	b003      	add	sp, #12
 800f04e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f052:	bf00      	nop
 800f054:	3d800000 	.word	0x3d800000

0800f058 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800f058:	4b01      	ldr	r3, [pc, #4]	; (800f060 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800f05a:	6018      	str	r0, [r3, #0]
 800f05c:	4770      	bx	lr
 800f05e:	bf00      	nop
 800f060:	200014bc 	.word	0x200014bc

0800f064 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800f064:	4b07      	ldr	r3, [pc, #28]	; (800f084 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x20>)
 800f066:	881a      	ldrh	r2, [r3, #0]
 800f068:	4282      	cmp	r2, r0
 800f06a:	d809      	bhi.n	800f080 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f06c:	4b06      	ldr	r3, [pc, #24]	; (800f088 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x24>)
 800f06e:	881b      	ldrh	r3, [r3, #0]
 800f070:	4413      	add	r3, r2
 800f072:	4298      	cmp	r0, r3
 800f074:	da04      	bge.n	800f080 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x1c>
 800f076:	4b05      	ldr	r3, [pc, #20]	; (800f08c <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x28>)
 800f078:	681b      	ldr	r3, [r3, #0]
 800f07a:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 800f07e:	4770      	bx	lr
 800f080:	2000      	movs	r0, #0
 800f082:	4770      	bx	lr
 800f084:	200014dc 	.word	0x200014dc
 800f088:	200014e0 	.word	0x200014e0
 800f08c:	200014c0 	.word	0x200014c0

0800f090 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800f090:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f094:	4d26      	ldr	r5, [pc, #152]	; (800f130 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 800f096:	682b      	ldr	r3, [r5, #0]
 800f098:	2b00      	cmp	r3, #0
 800f09a:	d046      	beq.n	800f12a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f09c:	4a25      	ldr	r2, [pc, #148]	; (800f134 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 800f09e:	4f26      	ldr	r7, [pc, #152]	; (800f138 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800f0a0:	8810      	ldrh	r0, [r2, #0]
 800f0a2:	883c      	ldrh	r4, [r7, #0]
 800f0a4:	4e25      	ldr	r6, [pc, #148]	; (800f13c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800f0a6:	4420      	add	r0, r4
 800f0a8:	1c42      	adds	r2, r0, #1
 800f0aa:	f022 0201 	bic.w	r2, r2, #1
 800f0ae:	0412      	lsls	r2, r2, #16
 800f0b0:	0c12      	lsrs	r2, r2, #16
 800f0b2:	0051      	lsls	r1, r2, #1
 800f0b4:	220e      	movs	r2, #14
 800f0b6:	fb02 fc04 	mul.w	ip, r2, r4
 800f0ba:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800f0be:	4c20      	ldr	r4, [pc, #128]	; (800f140 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800f0c0:	eb03 0208 	add.w	r2, r3, r8
 800f0c4:	eb08 0e01 	add.w	lr, r8, r1
 800f0c8:	6022      	str	r2, [r4, #0]
 800f0ca:	eb03 020e 	add.w	r2, r3, lr
 800f0ce:	6032      	str	r2, [r6, #0]
 800f0d0:	44e6      	add	lr, ip
 800f0d2:	4a1c      	ldr	r2, [pc, #112]	; (800f144 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800f0d4:	4473      	add	r3, lr
 800f0d6:	6013      	str	r3, [r2, #0]
 800f0d8:	4a1b      	ldr	r2, [pc, #108]	; (800f148 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800f0da:	2300      	movs	r3, #0
 800f0dc:	8013      	strh	r3, [r2, #0]
 800f0de:	4a1b      	ldr	r2, [pc, #108]	; (800f14c <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800f0e0:	6812      	ldr	r2, [r2, #0]
 800f0e2:	eba2 0208 	sub.w	r2, r2, r8
 800f0e6:	1a52      	subs	r2, r2, r1
 800f0e8:	4919      	ldr	r1, [pc, #100]	; (800f150 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800f0ea:	eba2 020c 	sub.w	r2, r2, ip
 800f0ee:	600a      	str	r2, [r1, #0]
 800f0f0:	4a18      	ldr	r2, [pc, #96]	; (800f154 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800f0f2:	469c      	mov	ip, r3
 800f0f4:	8013      	strh	r3, [r2, #0]
 800f0f6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f0fa:	4283      	cmp	r3, r0
 800f0fc:	d10d      	bne.n	800f11a <_ZN8touchgfx6Bitmap10clearCacheEv+0x8a>
 800f0fe:	883d      	ldrh	r5, [r7, #0]
 800f100:	6830      	ldr	r0, [r6, #0]
 800f102:	2300      	movs	r3, #0
 800f104:	240e      	movs	r4, #14
 800f106:	429d      	cmp	r5, r3
 800f108:	d90f      	bls.n	800f12a <_ZN8touchgfx6Bitmap10clearCacheEv+0x9a>
 800f10a:	fb04 0203 	mla	r2, r4, r3, r0
 800f10e:	3301      	adds	r3, #1
 800f110:	7b11      	ldrb	r1, [r2, #12]
 800f112:	f36f 1145 	bfc	r1, #5, #1
 800f116:	7311      	strb	r1, [r2, #12]
 800f118:	e7f5      	b.n	800f106 <_ZN8touchgfx6Bitmap10clearCacheEv+0x76>
 800f11a:	682a      	ldr	r2, [r5, #0]
 800f11c:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800f120:	6822      	ldr	r2, [r4, #0]
 800f122:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800f126:	3301      	adds	r3, #1
 800f128:	e7e7      	b.n	800f0fa <_ZN8touchgfx6Bitmap10clearCacheEv+0x6a>
 800f12a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f12e:	bf00      	nop
 800f130:	200014c0 	.word	0x200014c0
 800f134:	200014dc 	.word	0x200014dc
 800f138:	200014e0 	.word	0x200014e0
 800f13c:	200014c4 	.word	0x200014c4
 800f140:	200014d4 	.word	0x200014d4
 800f144:	200014cc 	.word	0x200014cc
 800f148:	200014de 	.word	0x200014de
 800f14c:	200014c8 	.word	0x200014c8
 800f150:	200014d8 	.word	0x200014d8
 800f154:	200014d0 	.word	0x200014d0

0800f158 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800f158:	b510      	push	{r4, lr}
 800f15a:	4b10      	ldr	r3, [pc, #64]	; (800f19c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800f15c:	681b      	ldr	r3, [r3, #0]
 800f15e:	b9db      	cbnz	r3, 800f198 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f160:	b1d1      	cbz	r1, 800f198 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800f162:	4b0f      	ldr	r3, [pc, #60]	; (800f1a0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800f164:	801a      	strh	r2, [r3, #0]
 800f166:	4b0f      	ldr	r3, [pc, #60]	; (800f1a4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800f168:	881b      	ldrh	r3, [r3, #0]
 800f16a:	b292      	uxth	r2, r2
 800f16c:	240e      	movs	r4, #14
 800f16e:	4413      	add	r3, r2
 800f170:	4362      	muls	r2, r4
 800f172:	2406      	movs	r4, #6
 800f174:	fb04 2203 	mla	r2, r4, r3, r2
 800f178:	428a      	cmp	r2, r1
 800f17a:	d305      	bcc.n	800f188 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800f17c:	4b0a      	ldr	r3, [pc, #40]	; (800f1a8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800f17e:	4a0b      	ldr	r2, [pc, #44]	; (800f1ac <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800f180:	480b      	ldr	r0, [pc, #44]	; (800f1b0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800f182:	2137      	movs	r1, #55	; 0x37
 800f184:	f00c fab4 	bl	801b6f0 <__assert_func>
 800f188:	4b0a      	ldr	r3, [pc, #40]	; (800f1b4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800f18a:	6019      	str	r1, [r3, #0]
 800f18c:	4b0a      	ldr	r3, [pc, #40]	; (800f1b8 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800f18e:	6018      	str	r0, [r3, #0]
 800f190:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800f194:	f7ff bf7c 	b.w	800f090 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800f198:	bd10      	pop	{r4, pc}
 800f19a:	bf00      	nop
 800f19c:	200014cc 	.word	0x200014cc
 800f1a0:	200014e0 	.word	0x200014e0
 800f1a4:	200014dc 	.word	0x200014dc
 800f1a8:	0801ee92 	.word	0x0801ee92
 800f1ac:	0801ef27 	.word	0x0801ef27
 800f1b0:	0801ee6d 	.word	0x0801ee6d
 800f1b4:	200014c8 	.word	0x200014c8
 800f1b8:	200014c0 	.word	0x200014c0

0800f1bc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800f1bc:	b470      	push	{r4, r5, r6}
 800f1be:	4c07      	ldr	r4, [pc, #28]	; (800f1dc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800f1c0:	6826      	ldr	r6, [r4, #0]
 800f1c2:	4605      	mov	r5, r0
 800f1c4:	4610      	mov	r0, r2
 800f1c6:	9a03      	ldr	r2, [sp, #12]
 800f1c8:	b936      	cbnz	r6, 800f1d8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800f1ca:	6025      	str	r5, [r4, #0]
 800f1cc:	4c04      	ldr	r4, [pc, #16]	; (800f1e0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800f1ce:	8021      	strh	r1, [r4, #0]
 800f1d0:	bc70      	pop	{r4, r5, r6}
 800f1d2:	4619      	mov	r1, r3
 800f1d4:	f7ff bfc0 	b.w	800f158 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800f1d8:	bc70      	pop	{r4, r5, r6}
 800f1da:	4770      	bx	lr
 800f1dc:	200014e4 	.word	0x200014e4
 800f1e0:	200014dc 	.word	0x200014dc

0800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800f1e4:	b508      	push	{r3, lr}
 800f1e6:	4b14      	ldr	r3, [pc, #80]	; (800f238 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800f1e8:	6819      	ldr	r1, [r3, #0]
 800f1ea:	b931      	cbnz	r1, 800f1fa <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800f1ec:	4b13      	ldr	r3, [pc, #76]	; (800f23c <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800f1ee:	4a14      	ldr	r2, [pc, #80]	; (800f240 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800f1f0:	4814      	ldr	r0, [pc, #80]	; (800f244 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800f1f2:	f240 21e6 	movw	r1, #742	; 0x2e6
 800f1f6:	f00c fa7b 	bl	801b6f0 <__assert_func>
 800f1fa:	4a13      	ldr	r2, [pc, #76]	; (800f248 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800f1fc:	8803      	ldrh	r3, [r0, #0]
 800f1fe:	8812      	ldrh	r2, [r2, #0]
 800f200:	4293      	cmp	r3, r2
 800f202:	d204      	bcs.n	800f20e <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800f204:	2214      	movs	r2, #20
 800f206:	fb02 1303 	mla	r3, r2, r3, r1
 800f20a:	8918      	ldrh	r0, [r3, #8]
 800f20c:	bd08      	pop	{r3, pc}
 800f20e:	490f      	ldr	r1, [pc, #60]	; (800f24c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800f210:	8809      	ldrh	r1, [r1, #0]
 800f212:	4411      	add	r1, r2
 800f214:	428b      	cmp	r3, r1
 800f216:	da06      	bge.n	800f226 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800f218:	1a9b      	subs	r3, r3, r2
 800f21a:	4a0d      	ldr	r2, [pc, #52]	; (800f250 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800f21c:	6812      	ldr	r2, [r2, #0]
 800f21e:	210e      	movs	r1, #14
 800f220:	fb01 2303 	mla	r3, r1, r3, r2
 800f224:	e7f1      	b.n	800f20a <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800f226:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f22a:	4293      	cmp	r3, r2
 800f22c:	bf0a      	itet	eq
 800f22e:	4b09      	ldreq	r3, [pc, #36]	; (800f254 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800f230:	2000      	movne	r0, #0
 800f232:	8818      	ldrheq	r0, [r3, #0]
 800f234:	e7ea      	b.n	800f20c <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800f236:	bf00      	nop
 800f238:	200014e4 	.word	0x200014e4
 800f23c:	0801eeeb 	.word	0x0801eeeb
 800f240:	0801efd4 	.word	0x0801efd4
 800f244:	0801ee6d 	.word	0x0801ee6d
 800f248:	200014dc 	.word	0x200014dc
 800f24c:	200014e0 	.word	0x200014e0
 800f250:	200014c4 	.word	0x200014c4
 800f254:	20001430 	.word	0x20001430

0800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800f258:	b508      	push	{r3, lr}
 800f25a:	4b14      	ldr	r3, [pc, #80]	; (800f2ac <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800f25c:	6819      	ldr	r1, [r3, #0]
 800f25e:	b931      	cbnz	r1, 800f26e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800f260:	4b13      	ldr	r3, [pc, #76]	; (800f2b0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800f262:	4a14      	ldr	r2, [pc, #80]	; (800f2b4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800f264:	4814      	ldr	r0, [pc, #80]	; (800f2b8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800f266:	f240 21fa 	movw	r1, #762	; 0x2fa
 800f26a:	f00c fa41 	bl	801b6f0 <__assert_func>
 800f26e:	4a13      	ldr	r2, [pc, #76]	; (800f2bc <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800f270:	8803      	ldrh	r3, [r0, #0]
 800f272:	8812      	ldrh	r2, [r2, #0]
 800f274:	4293      	cmp	r3, r2
 800f276:	d204      	bcs.n	800f282 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800f278:	2214      	movs	r2, #20
 800f27a:	fb02 1303 	mla	r3, r2, r3, r1
 800f27e:	8958      	ldrh	r0, [r3, #10]
 800f280:	bd08      	pop	{r3, pc}
 800f282:	490f      	ldr	r1, [pc, #60]	; (800f2c0 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800f284:	8809      	ldrh	r1, [r1, #0]
 800f286:	4411      	add	r1, r2
 800f288:	428b      	cmp	r3, r1
 800f28a:	da06      	bge.n	800f29a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800f28c:	1a9b      	subs	r3, r3, r2
 800f28e:	4a0d      	ldr	r2, [pc, #52]	; (800f2c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800f290:	6812      	ldr	r2, [r2, #0]
 800f292:	210e      	movs	r1, #14
 800f294:	fb01 2303 	mla	r3, r1, r3, r2
 800f298:	e7f1      	b.n	800f27e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800f29a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f29e:	4293      	cmp	r3, r2
 800f2a0:	bf0a      	itet	eq
 800f2a2:	4b09      	ldreq	r3, [pc, #36]	; (800f2c8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800f2a4:	2000      	movne	r0, #0
 800f2a6:	8818      	ldrheq	r0, [r3, #0]
 800f2a8:	e7ea      	b.n	800f280 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800f2aa:	bf00      	nop
 800f2ac:	200014e4 	.word	0x200014e4
 800f2b0:	0801eeeb 	.word	0x0801eeeb
 800f2b4:	0801f000 	.word	0x0801f000
 800f2b8:	0801ee6d 	.word	0x0801ee6d
 800f2bc:	200014dc 	.word	0x200014dc
 800f2c0:	200014e0 	.word	0x200014e0
 800f2c4:	200014c4 	.word	0x200014c4
 800f2c8:	20001432 	.word	0x20001432

0800f2cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800f2cc:	b510      	push	{r4, lr}
 800f2ce:	4b23      	ldr	r3, [pc, #140]	; (800f35c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800f2d0:	681c      	ldr	r4, [r3, #0]
 800f2d2:	b934      	cbnz	r4, 800f2e2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800f2d4:	4b22      	ldr	r3, [pc, #136]	; (800f360 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800f2d6:	4a23      	ldr	r2, [pc, #140]	; (800f364 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800f2d8:	4823      	ldr	r0, [pc, #140]	; (800f368 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800f2da:	f240 310e 	movw	r1, #782	; 0x30e
 800f2de:	f00c fa07 	bl	801b6f0 <__assert_func>
 800f2e2:	4a22      	ldr	r2, [pc, #136]	; (800f36c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800f2e4:	880b      	ldrh	r3, [r1, #0]
 800f2e6:	8812      	ldrh	r2, [r2, #0]
 800f2e8:	4293      	cmp	r3, r2
 800f2ea:	d211      	bcs.n	800f310 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800f2ec:	2214      	movs	r2, #20
 800f2ee:	fb02 4303 	mla	r3, r2, r3, r4
 800f2f2:	8a1a      	ldrh	r2, [r3, #16]
 800f2f4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800f2f8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800f2fc:	8a5b      	ldrh	r3, [r3, #18]
 800f2fe:	8004      	strh	r4, [r0, #0]
 800f300:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f304:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800f308:	8041      	strh	r1, [r0, #2]
 800f30a:	8082      	strh	r2, [r0, #4]
 800f30c:	80c3      	strh	r3, [r0, #6]
 800f30e:	e00e      	b.n	800f32e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f310:	4917      	ldr	r1, [pc, #92]	; (800f370 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800f312:	8809      	ldrh	r1, [r1, #0]
 800f314:	4411      	add	r1, r2
 800f316:	428b      	cmp	r3, r1
 800f318:	da0a      	bge.n	800f330 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800f31a:	1a9b      	subs	r3, r3, r2
 800f31c:	4a15      	ldr	r2, [pc, #84]	; (800f374 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800f31e:	6812      	ldr	r2, [r2, #0]
 800f320:	210e      	movs	r1, #14
 800f322:	fb01 2303 	mla	r3, r1, r3, r2
 800f326:	681a      	ldr	r2, [r3, #0]
 800f328:	6002      	str	r2, [r0, #0]
 800f32a:	685a      	ldr	r2, [r3, #4]
 800f32c:	6042      	str	r2, [r0, #4]
 800f32e:	bd10      	pop	{r4, pc}
 800f330:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f334:	4293      	cmp	r3, r2
 800f336:	d10b      	bne.n	800f350 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800f338:	4b0f      	ldr	r3, [pc, #60]	; (800f378 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800f33a:	f9b3 1000 	ldrsh.w	r1, [r3]
 800f33e:	4b0f      	ldr	r3, [pc, #60]	; (800f37c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800f340:	8081      	strh	r1, [r0, #4]
 800f342:	f9b3 2000 	ldrsh.w	r2, [r3]
 800f346:	80c2      	strh	r2, [r0, #6]
 800f348:	2300      	movs	r3, #0
 800f34a:	8003      	strh	r3, [r0, #0]
 800f34c:	8043      	strh	r3, [r0, #2]
 800f34e:	e7ee      	b.n	800f32e <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800f350:	2300      	movs	r3, #0
 800f352:	8003      	strh	r3, [r0, #0]
 800f354:	8043      	strh	r3, [r0, #2]
 800f356:	8083      	strh	r3, [r0, #4]
 800f358:	e7d8      	b.n	800f30c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800f35a:	bf00      	nop
 800f35c:	200014e4 	.word	0x200014e4
 800f360:	0801eeeb 	.word	0x0801eeeb
 800f364:	0801ef6d 	.word	0x0801ef6d
 800f368:	0801ee6d 	.word	0x0801ee6d
 800f36c:	200014dc 	.word	0x200014dc
 800f370:	200014e0 	.word	0x200014e0
 800f374:	200014c4 	.word	0x200014c4
 800f378:	20001430 	.word	0x20001430
 800f37c:	20001432 	.word	0x20001432

0800f380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800f380:	4b18      	ldr	r3, [pc, #96]	; (800f3e4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800f382:	681b      	ldr	r3, [r3, #0]
 800f384:	b34b      	cbz	r3, 800f3da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f386:	4a18      	ldr	r2, [pc, #96]	; (800f3e8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800f388:	8800      	ldrh	r0, [r0, #0]
 800f38a:	8812      	ldrh	r2, [r2, #0]
 800f38c:	4290      	cmp	r0, r2
 800f38e:	d211      	bcs.n	800f3b4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800f390:	2214      	movs	r2, #20
 800f392:	fb02 3300 	mla	r3, r2, r0, r3
 800f396:	8a1a      	ldrh	r2, [r3, #16]
 800f398:	8919      	ldrh	r1, [r3, #8]
 800f39a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800f39e:	428a      	cmp	r2, r1
 800f3a0:	db1d      	blt.n	800f3de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f3a2:	8a58      	ldrh	r0, [r3, #18]
 800f3a4:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800f3a8:	895b      	ldrh	r3, [r3, #10]
 800f3aa:	4298      	cmp	r0, r3
 800f3ac:	bfac      	ite	ge
 800f3ae:	2000      	movge	r0, #0
 800f3b0:	2001      	movlt	r0, #1
 800f3b2:	4770      	bx	lr
 800f3b4:	4b0d      	ldr	r3, [pc, #52]	; (800f3ec <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800f3b6:	881b      	ldrh	r3, [r3, #0]
 800f3b8:	4413      	add	r3, r2
 800f3ba:	4298      	cmp	r0, r3
 800f3bc:	da0d      	bge.n	800f3da <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800f3be:	4b0c      	ldr	r3, [pc, #48]	; (800f3f0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800f3c0:	681b      	ldr	r3, [r3, #0]
 800f3c2:	1a80      	subs	r0, r0, r2
 800f3c4:	220e      	movs	r2, #14
 800f3c6:	fb02 3300 	mla	r3, r2, r0, r3
 800f3ca:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800f3ce:	891a      	ldrh	r2, [r3, #8]
 800f3d0:	4291      	cmp	r1, r2
 800f3d2:	db04      	blt.n	800f3de <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800f3d4:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800f3d8:	e7e6      	b.n	800f3a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800f3da:	2000      	movs	r0, #0
 800f3dc:	4770      	bx	lr
 800f3de:	2001      	movs	r0, #1
 800f3e0:	4770      	bx	lr
 800f3e2:	bf00      	nop
 800f3e4:	200014e4 	.word	0x200014e4
 800f3e8:	200014dc 	.word	0x200014dc
 800f3ec:	200014e0 	.word	0x200014e0
 800f3f0:	200014c4 	.word	0x200014c4

0800f3f4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800f3f4:	b508      	push	{r3, lr}
 800f3f6:	4b12      	ldr	r3, [pc, #72]	; (800f440 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800f3f8:	6819      	ldr	r1, [r3, #0]
 800f3fa:	b931      	cbnz	r1, 800f40a <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800f3fc:	4b11      	ldr	r3, [pc, #68]	; (800f444 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800f3fe:	4a12      	ldr	r2, [pc, #72]	; (800f448 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800f400:	4812      	ldr	r0, [pc, #72]	; (800f44c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800f402:	f240 3132 	movw	r1, #818	; 0x332
 800f406:	f00c f973 	bl	801b6f0 <__assert_func>
 800f40a:	8803      	ldrh	r3, [r0, #0]
 800f40c:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800f410:	4293      	cmp	r3, r2
 800f412:	d012      	beq.n	800f43a <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800f414:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f418:	4293      	cmp	r3, r2
 800f41a:	d103      	bne.n	800f424 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800f41c:	4b0c      	ldr	r3, [pc, #48]	; (800f450 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800f41e:	681b      	ldr	r3, [r3, #0]
 800f420:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800f422:	bd08      	pop	{r3, pc}
 800f424:	4a0b      	ldr	r2, [pc, #44]	; (800f454 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800f426:	6812      	ldr	r2, [r2, #0]
 800f428:	b11a      	cbz	r2, 800f432 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800f42a:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800f42e:	2800      	cmp	r0, #0
 800f430:	d1f7      	bne.n	800f422 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f432:	2214      	movs	r2, #20
 800f434:	4353      	muls	r3, r2
 800f436:	58c8      	ldr	r0, [r1, r3]
 800f438:	e7f3      	b.n	800f422 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f43a:	2000      	movs	r0, #0
 800f43c:	e7f1      	b.n	800f422 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800f43e:	bf00      	nop
 800f440:	200014e4 	.word	0x200014e4
 800f444:	0801eeeb 	.word	0x0801eeeb
 800f448:	0801efa3 	.word	0x0801efa3
 800f44c:	0801ee6d 	.word	0x0801ee6d
 800f450:	2000143c 	.word	0x2000143c
 800f454:	200014c0 	.word	0x200014c0

0800f458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800f458:	8802      	ldrh	r2, [r0, #0]
 800f45a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800f45e:	429a      	cmp	r2, r3
 800f460:	d840      	bhi.n	800f4e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f462:	4b21      	ldr	r3, [pc, #132]	; (800f4e8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>)
 800f464:	881b      	ldrh	r3, [r3, #0]
 800f466:	429a      	cmp	r2, r3
 800f468:	d220      	bcs.n	800f4ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x54>
 800f46a:	4b20      	ldr	r3, [pc, #128]	; (800f4ec <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 800f46c:	6819      	ldr	r1, [r3, #0]
 800f46e:	2314      	movs	r3, #20
 800f470:	fb03 1302 	mla	r3, r3, r2, r1
 800f474:	6858      	ldr	r0, [r3, #4]
 800f476:	2800      	cmp	r0, #0
 800f478:	d035      	beq.n	800f4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f47a:	491d      	ldr	r1, [pc, #116]	; (800f4f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f47c:	6809      	ldr	r1, [r1, #0]
 800f47e:	2900      	cmp	r1, #0
 800f480:	d031      	beq.n	800f4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f482:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800f486:	b371      	cbz	r1, 800f4e6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800f488:	895a      	ldrh	r2, [r3, #10]
 800f48a:	8918      	ldrh	r0, [r3, #8]
 800f48c:	4350      	muls	r0, r2
 800f48e:	7c5a      	ldrb	r2, [r3, #17]
 800f490:	7cdb      	ldrb	r3, [r3, #19]
 800f492:	0952      	lsrs	r2, r2, #5
 800f494:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800f498:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800f49c:	2b0b      	cmp	r3, #11
 800f49e:	bf18      	it	ne
 800f4a0:	0040      	lslne	r0, r0, #1
 800f4a2:	3003      	adds	r0, #3
 800f4a4:	f020 0003 	bic.w	r0, r0, #3
 800f4a8:	4408      	add	r0, r1
 800f4aa:	4770      	bx	lr
 800f4ac:	4911      	ldr	r1, [pc, #68]	; (800f4f4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800f4ae:	8809      	ldrh	r1, [r1, #0]
 800f4b0:	4419      	add	r1, r3
 800f4b2:	428a      	cmp	r2, r1
 800f4b4:	da16      	bge.n	800f4e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f4b6:	4910      	ldr	r1, [pc, #64]	; (800f4f8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800f4b8:	6809      	ldr	r1, [r1, #0]
 800f4ba:	1ad3      	subs	r3, r2, r3
 800f4bc:	200e      	movs	r0, #14
 800f4be:	fb00 1303 	mla	r3, r0, r3, r1
 800f4c2:	7b19      	ldrb	r1, [r3, #12]
 800f4c4:	f001 011f 	and.w	r1, r1, #31
 800f4c8:	290b      	cmp	r1, #11
 800f4ca:	d10b      	bne.n	800f4e4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8c>
 800f4cc:	8919      	ldrh	r1, [r3, #8]
 800f4ce:	8958      	ldrh	r0, [r3, #10]
 800f4d0:	4b07      	ldr	r3, [pc, #28]	; (800f4f0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 800f4d2:	4348      	muls	r0, r1
 800f4d4:	6819      	ldr	r1, [r3, #0]
 800f4d6:	3003      	adds	r0, #3
 800f4d8:	f020 0303 	bic.w	r3, r0, #3
 800f4dc:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800f4e0:	4418      	add	r0, r3
 800f4e2:	4770      	bx	lr
 800f4e4:	2000      	movs	r0, #0
 800f4e6:	4770      	bx	lr
 800f4e8:	200014dc 	.word	0x200014dc
 800f4ec:	200014e4 	.word	0x200014e4
 800f4f0:	200014c0 	.word	0x200014c0
 800f4f4:	200014e0 	.word	0x200014e0
 800f4f8:	200014c4 	.word	0x200014c4

0800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800f4fc:	4b19      	ldr	r3, [pc, #100]	; (800f564 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800f4fe:	6819      	ldr	r1, [r3, #0]
 800f500:	8803      	ldrh	r3, [r0, #0]
 800f502:	b1e9      	cbz	r1, 800f540 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f504:	4a18      	ldr	r2, [pc, #96]	; (800f568 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800f506:	8812      	ldrh	r2, [r2, #0]
 800f508:	429a      	cmp	r2, r3
 800f50a:	d90a      	bls.n	800f522 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800f50c:	2214      	movs	r2, #20
 800f50e:	fb02 1303 	mla	r3, r2, r3, r1
 800f512:	7c58      	ldrb	r0, [r3, #17]
 800f514:	0942      	lsrs	r2, r0, #5
 800f516:	7cd8      	ldrb	r0, [r3, #19]
 800f518:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800f51c:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800f520:	4770      	bx	lr
 800f522:	4912      	ldr	r1, [pc, #72]	; (800f56c <_ZNK8touchgfx6Bitmap9getFormatEv+0x70>)
 800f524:	8809      	ldrh	r1, [r1, #0]
 800f526:	4411      	add	r1, r2
 800f528:	428b      	cmp	r3, r1
 800f52a:	da09      	bge.n	800f540 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 800f52c:	1a9b      	subs	r3, r3, r2
 800f52e:	4a10      	ldr	r2, [pc, #64]	; (800f570 <_ZNK8touchgfx6Bitmap9getFormatEv+0x74>)
 800f530:	6812      	ldr	r2, [r2, #0]
 800f532:	210e      	movs	r1, #14
 800f534:	fb01 2303 	mla	r3, r1, r3, r2
 800f538:	7b18      	ldrb	r0, [r3, #12]
 800f53a:	f000 001f 	and.w	r0, r0, #31
 800f53e:	4770      	bx	lr
 800f540:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800f544:	4293      	cmp	r3, r2
 800f546:	d10a      	bne.n	800f55e <_ZNK8touchgfx6Bitmap9getFormatEv+0x62>
 800f548:	4b0a      	ldr	r3, [pc, #40]	; (800f574 <_ZNK8touchgfx6Bitmap9getFormatEv+0x78>)
 800f54a:	681b      	ldr	r3, [r3, #0]
 800f54c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f550:	b10a      	cbz	r2, 800f556 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 800f552:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f554:	b900      	cbnz	r0, 800f558 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800f556:	6898      	ldr	r0, [r3, #8]
 800f558:	6803      	ldr	r3, [r0, #0]
 800f55a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800f55c:	4718      	bx	r3
 800f55e:	2000      	movs	r0, #0
 800f560:	4770      	bx	lr
 800f562:	bf00      	nop
 800f564:	200014e4 	.word	0x200014e4
 800f568:	200014dc 	.word	0x200014dc
 800f56c:	200014e0 	.word	0x200014e0
 800f570:	200014c4 	.word	0x200014c4
 800f574:	2000143c 	.word	0x2000143c

0800f578 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800f578:	2010      	movs	r0, #16
 800f57a:	4770      	bx	lr

0800f57c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800f57c:	2000      	movs	r0, #0
 800f57e:	4770      	bx	lr

0800f580 <_ZNK8touchgfx8LCD16bpp20getColorFrom24BitRGBEhhh>:
 800f580:	00d2      	lsls	r2, r2, #3
 800f582:	0209      	lsls	r1, r1, #8
 800f584:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800f588:	ea42 02d3 	orr.w	r2, r2, r3, lsr #3
 800f58c:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 800f590:	4310      	orrs	r0, r2
 800f592:	4770      	bx	lr

0800f594 <_ZNK8touchgfx8LCD16bpp11getRedColorENS_9colortypeE>:
 800f594:	1209      	asrs	r1, r1, #8
 800f596:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f59a:	4770      	bx	lr

0800f59c <_ZNK8touchgfx8LCD16bpp13getGreenColorENS_9colortypeE>:
 800f59c:	f3c1 01cc 	ubfx	r1, r1, #3, #13
 800f5a0:	f001 00fc 	and.w	r0, r1, #252	; 0xfc
 800f5a4:	4770      	bx	lr

0800f5a6 <_ZNK8touchgfx8LCD16bpp12getBlueColorENS_9colortypeE>:
 800f5a6:	00c9      	lsls	r1, r1, #3
 800f5a8:	f001 00f8 	and.w	r0, r1, #248	; 0xf8
 800f5ac:	4770      	bx	lr

0800f5ae <_ZN8touchgfx8LCD16bpp4initEv>:
 800f5ae:	4770      	bx	lr

0800f5b0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800f5b0:	2bff      	cmp	r3, #255	; 0xff
 800f5b2:	d050      	beq.n	800f656 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800f5b4:	2a0b      	cmp	r2, #11
 800f5b6:	d04a      	beq.n	800f64e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f5b8:	d80e      	bhi.n	800f5d8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800f5ba:	2a03      	cmp	r2, #3
 800f5bc:	d03f      	beq.n	800f63e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800f5be:	d804      	bhi.n	800f5ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800f5c0:	2a01      	cmp	r2, #1
 800f5c2:	d03e      	beq.n	800f642 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800f5c4:	d93f      	bls.n	800f646 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800f5c6:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800f5c8:	4770      	bx	lr
 800f5ca:	2a09      	cmp	r2, #9
 800f5cc:	d03f      	beq.n	800f64e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800f5ce:	d83c      	bhi.n	800f64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f5d0:	2a08      	cmp	r2, #8
 800f5d2:	d03a      	beq.n	800f64a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800f5d4:	2000      	movs	r0, #0
 800f5d6:	4770      	bx	lr
 800f5d8:	2a2f      	cmp	r2, #47	; 0x2f
 800f5da:	d024      	beq.n	800f626 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800f5dc:	d80d      	bhi.n	800f5fa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800f5de:	2a2d      	cmp	r2, #45	; 0x2d
 800f5e0:	d014      	beq.n	800f60c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800f5e2:	d826      	bhi.n	800f632 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800f5e4:	2a2c      	cmp	r2, #44	; 0x2c
 800f5e6:	d1f5      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f5e8:	684b      	ldr	r3, [r1, #4]
 800f5ea:	781b      	ldrb	r3, [r3, #0]
 800f5ec:	2b01      	cmp	r3, #1
 800f5ee:	d018      	beq.n	800f622 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800f5f0:	d323      	bcc.n	800f63a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800f5f2:	2b02      	cmp	r3, #2
 800f5f4:	d1ee      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f5f6:	6880      	ldr	r0, [r0, #8]
 800f5f8:	4770      	bx	lr
 800f5fa:	2a31      	cmp	r2, #49	; 0x31
 800f5fc:	d004      	beq.n	800f608 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800f5fe:	d328      	bcc.n	800f652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f600:	2a32      	cmp	r2, #50	; 0x32
 800f602:	d026      	beq.n	800f652 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800f604:	2a33      	cmp	r2, #51	; 0x33
 800f606:	d1e5      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f608:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800f60a:	4770      	bx	lr
 800f60c:	684b      	ldr	r3, [r1, #4]
 800f60e:	781b      	ldrb	r3, [r3, #0]
 800f610:	2b01      	cmp	r3, #1
 800f612:	d004      	beq.n	800f61e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800f614:	d30b      	bcc.n	800f62e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800f616:	2b02      	cmp	r3, #2
 800f618:	d1dc      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f61a:	6900      	ldr	r0, [r0, #16]
 800f61c:	4770      	bx	lr
 800f61e:	6a00      	ldr	r0, [r0, #32]
 800f620:	4770      	bx	lr
 800f622:	6980      	ldr	r0, [r0, #24]
 800f624:	4770      	bx	lr
 800f626:	684b      	ldr	r3, [r1, #4]
 800f628:	781b      	ldrb	r3, [r3, #0]
 800f62a:	2b00      	cmp	r3, #0
 800f62c:	d1d2      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f62e:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800f630:	4770      	bx	lr
 800f632:	684b      	ldr	r3, [r1, #4]
 800f634:	781b      	ldrb	r3, [r3, #0]
 800f636:	2b00      	cmp	r3, #0
 800f638:	d1cc      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f63a:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800f63c:	4770      	bx	lr
 800f63e:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800f640:	4770      	bx	lr
 800f642:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800f644:	4770      	bx	lr
 800f646:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800f648:	4770      	bx	lr
 800f64a:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800f64c:	4770      	bx	lr
 800f64e:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800f650:	4770      	bx	lr
 800f652:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800f654:	4770      	bx	lr
 800f656:	2a0b      	cmp	r2, #11
 800f658:	d049      	beq.n	800f6ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f65a:	d80e      	bhi.n	800f67a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800f65c:	2a03      	cmp	r2, #3
 800f65e:	d040      	beq.n	800f6e2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800f660:	d804      	bhi.n	800f66c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800f662:	2a01      	cmp	r2, #1
 800f664:	d03f      	beq.n	800f6e6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800f666:	d940      	bls.n	800f6ea <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800f668:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800f66a:	4770      	bx	lr
 800f66c:	2a09      	cmp	r2, #9
 800f66e:	d03e      	beq.n	800f6ee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800f670:	d801      	bhi.n	800f676 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800f672:	2a08      	cmp	r2, #8
 800f674:	d1ae      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f676:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800f678:	4770      	bx	lr
 800f67a:	2a2f      	cmp	r2, #47	; 0x2f
 800f67c:	d024      	beq.n	800f6c8 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800f67e:	d80d      	bhi.n	800f69c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800f680:	2a2d      	cmp	r2, #45	; 0x2d
 800f682:	d014      	beq.n	800f6ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800f684:	d826      	bhi.n	800f6d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800f686:	2a2c      	cmp	r2, #44	; 0x2c
 800f688:	d1a4      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f68a:	684b      	ldr	r3, [r1, #4]
 800f68c:	781b      	ldrb	r3, [r3, #0]
 800f68e:	2b01      	cmp	r3, #1
 800f690:	d018      	beq.n	800f6c4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800f692:	d324      	bcc.n	800f6de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800f694:	2b02      	cmp	r3, #2
 800f696:	d19d      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f698:	68c0      	ldr	r0, [r0, #12]
 800f69a:	4770      	bx	lr
 800f69c:	2a31      	cmp	r2, #49	; 0x31
 800f69e:	d004      	beq.n	800f6aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800f6a0:	d327      	bcc.n	800f6f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f6a2:	2a32      	cmp	r2, #50	; 0x32
 800f6a4:	d025      	beq.n	800f6f2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800f6a6:	2a33      	cmp	r2, #51	; 0x33
 800f6a8:	d194      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f6aa:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800f6ac:	4770      	bx	lr
 800f6ae:	684b      	ldr	r3, [r1, #4]
 800f6b0:	781b      	ldrb	r3, [r3, #0]
 800f6b2:	2b01      	cmp	r3, #1
 800f6b4:	d004      	beq.n	800f6c0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800f6b6:	d30b      	bcc.n	800f6d0 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800f6b8:	2b02      	cmp	r3, #2
 800f6ba:	d18b      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f6bc:	6940      	ldr	r0, [r0, #20]
 800f6be:	4770      	bx	lr
 800f6c0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800f6c2:	4770      	bx	lr
 800f6c4:	69c0      	ldr	r0, [r0, #28]
 800f6c6:	4770      	bx	lr
 800f6c8:	684b      	ldr	r3, [r1, #4]
 800f6ca:	781b      	ldrb	r3, [r3, #0]
 800f6cc:	2b00      	cmp	r3, #0
 800f6ce:	d181      	bne.n	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f6d0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800f6d2:	4770      	bx	lr
 800f6d4:	684b      	ldr	r3, [r1, #4]
 800f6d6:	781b      	ldrb	r3, [r3, #0]
 800f6d8:	2b00      	cmp	r3, #0
 800f6da:	f47f af7b 	bne.w	800f5d4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800f6de:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800f6e0:	4770      	bx	lr
 800f6e2:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800f6e4:	4770      	bx	lr
 800f6e6:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800f6e8:	4770      	bx	lr
 800f6ea:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800f6ec:	4770      	bx	lr
 800f6ee:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800f6f0:	4770      	bx	lr
 800f6f2:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800f6f4:	4770      	bx	lr

0800f6f6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f6f6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f6fa:	b087      	sub	sp, #28
 800f6fc:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800f6fe:	9205      	str	r2, [sp, #20]
 800f700:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800f704:	9202      	str	r2, [sp, #8]
 800f706:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 800f70a:	9101      	str	r1, [sp, #4]
 800f70c:	6871      	ldr	r1, [r6, #4]
 800f70e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800f710:	f89d 406c 	ldrb.w	r4, [sp, #108]	; 0x6c
 800f714:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 800f718:	fb01 2505 	mla	r5, r1, r5, r2
 800f71c:	6832      	ldr	r2, [r6, #0]
 800f71e:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 800f722:	6802      	ldr	r2, [r0, #0]
 800f724:	9203      	str	r2, [sp, #12]
 800f726:	6842      	ldr	r2, [r0, #4]
 800f728:	fa1f fe84 	uxth.w	lr, r4
 800f72c:	3204      	adds	r2, #4
 800f72e:	43e4      	mvns	r4, r4
 800f730:	9204      	str	r2, [sp, #16]
 800f732:	b2e4      	uxtb	r4, r4
 800f734:	9a01      	ldr	r2, [sp, #4]
 800f736:	2a00      	cmp	r2, #0
 800f738:	dc03      	bgt.n	800f742 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800f73a:	9a05      	ldr	r2, [sp, #20]
 800f73c:	2a00      	cmp	r2, #0
 800f73e:	f340 8119 	ble.w	800f974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f742:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f744:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f748:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f74a:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f74e:	2b00      	cmp	r3, #0
 800f750:	dd0f      	ble.n	800f772 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800f752:	1408      	asrs	r0, r1, #16
 800f754:	d406      	bmi.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f756:	4540      	cmp	r0, r8
 800f758:	da04      	bge.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f75a:	1410      	asrs	r0, r2, #16
 800f75c:	d402      	bmi.n	800f764 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800f75e:	9e02      	ldr	r6, [sp, #8]
 800f760:	42b0      	cmp	r0, r6
 800f762:	db07      	blt.n	800f774 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800f764:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f766:	4401      	add	r1, r0
 800f768:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f76a:	3b01      	subs	r3, #1
 800f76c:	4402      	add	r2, r0
 800f76e:	3502      	adds	r5, #2
 800f770:	e7ed      	b.n	800f74e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800f772:	d00f      	beq.n	800f794 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800f774:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f776:	1e58      	subs	r0, r3, #1
 800f778:	fb06 1600 	mla	r6, r6, r0, r1
 800f77c:	1436      	asrs	r6, r6, #16
 800f77e:	d547      	bpl.n	800f810 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800f780:	469b      	mov	fp, r3
 800f782:	46aa      	mov	sl, r5
 800f784:	f1bb 0f00 	cmp.w	fp, #0
 800f788:	f300 809e 	bgt.w	800f8c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 800f78c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f790:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800f794:	9b01      	ldr	r3, [sp, #4]
 800f796:	2b00      	cmp	r3, #0
 800f798:	f340 80ec 	ble.w	800f974 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27e>
 800f79c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f7a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f7a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f7a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f7ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f7b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f7b6:	eef0 6a62 	vmov.f32	s13, s5
 800f7ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f7be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f7c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f7c6:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800f7ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f7ce:	eef0 6a43 	vmov.f32	s13, s6
 800f7d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f7d6:	ee12 2a90 	vmov	r2, s5
 800f7da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f7de:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7e2:	ee13 2a10 	vmov	r2, s6
 800f7e6:	9313      	str	r3, [sp, #76]	; 0x4c
 800f7e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f7ea:	fb92 f3f3 	sdiv	r3, r2, r3
 800f7ee:	9314      	str	r3, [sp, #80]	; 0x50
 800f7f0:	9b01      	ldr	r3, [sp, #4]
 800f7f2:	9a05      	ldr	r2, [sp, #20]
 800f7f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f7f8:	3b01      	subs	r3, #1
 800f7fa:	9301      	str	r3, [sp, #4]
 800f7fc:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800f800:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f802:	eeb0 3a67 	vmov.f32	s6, s15
 800f806:	bf08      	it	eq
 800f808:	4613      	moveq	r3, r2
 800f80a:	eef0 2a47 	vmov.f32	s5, s14
 800f80e:	e791      	b.n	800f734 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800f810:	4546      	cmp	r6, r8
 800f812:	dab5      	bge.n	800f780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f814:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800f816:	fb06 2000 	mla	r0, r6, r0, r2
 800f81a:	1400      	asrs	r0, r0, #16
 800f81c:	d4b0      	bmi.n	800f780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f81e:	9e02      	ldr	r6, [sp, #8]
 800f820:	42b0      	cmp	r0, r6
 800f822:	daad      	bge.n	800f780 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800f824:	469a      	mov	sl, r3
 800f826:	46ab      	mov	fp, r5
 800f828:	f1ba 0f00 	cmp.w	sl, #0
 800f82c:	ddae      	ble.n	800f78c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f82e:	9f03      	ldr	r7, [sp, #12]
 800f830:	1410      	asrs	r0, r2, #16
 800f832:	140e      	asrs	r6, r1, #16
 800f834:	fb08 7000 	mla	r0, r8, r0, r7
 800f838:	f10a 3aff 	add.w	sl, sl, #4294967295
 800f83c:	5d80      	ldrb	r0, [r0, r6]
 800f83e:	9e04      	ldr	r6, [sp, #16]
 800f840:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f844:	f8bb 6000 	ldrh.w	r6, [fp]
 800f848:	1237      	asrs	r7, r6, #8
 800f84a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f84e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f852:	fb17 f704 	smulbb	r7, r7, r4
 800f856:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f85a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f85e:	00f6      	lsls	r6, r6, #3
 800f860:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f864:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f868:	10c7      	asrs	r7, r0, #3
 800f86a:	b2f6      	uxtb	r6, r6
 800f86c:	00c0      	lsls	r0, r0, #3
 800f86e:	fb19 f904 	smulbb	r9, r9, r4
 800f872:	fb16 f604 	smulbb	r6, r6, r4
 800f876:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f87a:	b2c0      	uxtb	r0, r0
 800f87c:	fa1f fc8c 	uxth.w	ip, ip
 800f880:	fb07 970e 	mla	r7, r7, lr, r9
 800f884:	fb00 600e 	mla	r0, r0, lr, r6
 800f888:	b280      	uxth	r0, r0
 800f88a:	b2bf      	uxth	r7, r7
 800f88c:	f10c 0601 	add.w	r6, ip, #1
 800f890:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f894:	f107 0901 	add.w	r9, r7, #1
 800f898:	1c46      	adds	r6, r0, #1
 800f89a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f89e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f8a2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f8a4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f8a8:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f8ac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f8b0:	ea4c 0c06 	orr.w	ip, ip, r6
 800f8b4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f8b8:	4401      	add	r1, r0
 800f8ba:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f8bc:	ea4c 0c09 	orr.w	ip, ip, r9
 800f8c0:	f82b cb02 	strh.w	ip, [fp], #2
 800f8c4:	4402      	add	r2, r0
 800f8c6:	e7af      	b.n	800f828 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800f8c8:	140e      	asrs	r6, r1, #16
 800f8ca:	d44a      	bmi.n	800f962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f8cc:	4546      	cmp	r6, r8
 800f8ce:	da48      	bge.n	800f962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f8d0:	1410      	asrs	r0, r2, #16
 800f8d2:	d446      	bmi.n	800f962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f8d4:	9f02      	ldr	r7, [sp, #8]
 800f8d6:	42b8      	cmp	r0, r7
 800f8d8:	da43      	bge.n	800f962 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x26c>
 800f8da:	9f03      	ldr	r7, [sp, #12]
 800f8dc:	fb08 7000 	mla	r0, r8, r0, r7
 800f8e0:	5d80      	ldrb	r0, [r0, r6]
 800f8e2:	9e04      	ldr	r6, [sp, #16]
 800f8e4:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 800f8e8:	f8ba 6000 	ldrh.w	r6, [sl]
 800f8ec:	1237      	asrs	r7, r6, #8
 800f8ee:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f8f2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f8f6:	fb17 f704 	smulbb	r7, r7, r4
 800f8fa:	ea4f 09e6 	mov.w	r9, r6, asr #3
 800f8fe:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f902:	00f6      	lsls	r6, r6, #3
 800f904:	fb0c 7c0e 	mla	ip, ip, lr, r7
 800f908:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f90c:	10c7      	asrs	r7, r0, #3
 800f90e:	b2f6      	uxtb	r6, r6
 800f910:	00c0      	lsls	r0, r0, #3
 800f912:	fb19 f904 	smulbb	r9, r9, r4
 800f916:	fb16 f604 	smulbb	r6, r6, r4
 800f91a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f91e:	b2c0      	uxtb	r0, r0
 800f920:	fa1f fc8c 	uxth.w	ip, ip
 800f924:	fb07 970e 	mla	r7, r7, lr, r9
 800f928:	fb00 600e 	mla	r0, r0, lr, r6
 800f92c:	b2bf      	uxth	r7, r7
 800f92e:	b280      	uxth	r0, r0
 800f930:	f10c 0601 	add.w	r6, ip, #1
 800f934:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 800f938:	f107 0901 	add.w	r9, r7, #1
 800f93c:	1c46      	adds	r6, r0, #1
 800f93e:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 800f942:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f946:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f94a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f94e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f952:	ea4c 0c06 	orr.w	ip, ip, r6
 800f956:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f95a:	ea4c 0c09 	orr.w	ip, ip, r9
 800f95e:	f8aa c000 	strh.w	ip, [sl]
 800f962:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f964:	4401      	add	r1, r0
 800f966:	9814      	ldr	r0, [sp, #80]	; 0x50
 800f968:	f10a 0a02 	add.w	sl, sl, #2
 800f96c:	4402      	add	r2, r0
 800f96e:	f10b 3bff 	add.w	fp, fp, #4294967295
 800f972:	e707      	b.n	800f784 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800f974:	b007      	add	sp, #28
 800f976:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f97a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800f97a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f97e:	b085      	sub	sp, #20
 800f980:	e9dd 7611 	ldrd	r7, r6, [sp, #68]	; 0x44
 800f984:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f986:	9203      	str	r2, [sp, #12]
 800f988:	6842      	ldr	r2, [r0, #4]
 800f98a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800f98c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 800f98e:	6800      	ldr	r0, [r0, #0]
 800f990:	f9bd c058 	ldrsh.w	ip, [sp, #88]	; 0x58
 800f994:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800f998:	4696      	mov	lr, r2
 800f99a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f99c:	fb0e 2505 	mla	r5, lr, r5, r2
 800f9a0:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800f9a4:	6860      	ldr	r0, [r4, #4]
 800f9a6:	6822      	ldr	r2, [r4, #0]
 800f9a8:	9201      	str	r2, [sp, #4]
 800f9aa:	1d02      	adds	r2, r0, #4
 800f9ac:	9202      	str	r2, [sp, #8]
 800f9ae:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f9b2:	2900      	cmp	r1, #0
 800f9b4:	dc03      	bgt.n	800f9be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 800f9b6:	9a03      	ldr	r2, [sp, #12]
 800f9b8:	2a00      	cmp	r2, #0
 800f9ba:	f340 809b 	ble.w	800faf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800f9be:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f9c0:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 800f9c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f9c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f9ca:	2b00      	cmp	r3, #0
 800f9cc:	dd0e      	ble.n	800f9ec <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 800f9ce:	ea5f 4e24 	movs.w	lr, r4, asr #16
 800f9d2:	d406      	bmi.n	800f9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9d4:	45e6      	cmp	lr, ip
 800f9d6:	da04      	bge.n	800f9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9d8:	ea5f 4e20 	movs.w	lr, r0, asr #16
 800f9dc:	d401      	bmi.n	800f9e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 800f9de:	45c6      	cmp	lr, r8
 800f9e0:	db05      	blt.n	800f9ee <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 800f9e2:	443c      	add	r4, r7
 800f9e4:	4430      	add	r0, r6
 800f9e6:	3b01      	subs	r3, #1
 800f9e8:	3502      	adds	r5, #2
 800f9ea:	e7ee      	b.n	800f9ca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 800f9ec:	d010      	beq.n	800fa10 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800f9ee:	f103 3eff 	add.w	lr, r3, #4294967295
 800f9f2:	fb07 490e 	mla	r9, r7, lr, r4
 800f9f6:	ea5f 4929 	movs.w	r9, r9, asr #16
 800f9fa:	d53d      	bpl.n	800fa78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 800f9fc:	469e      	mov	lr, r3
 800f9fe:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 800fa02:	f1be 0f00 	cmp.w	lr, #0
 800fa06:	dc58      	bgt.n	800faba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x140>
 800fa08:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fa0c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 800fa10:	2900      	cmp	r1, #0
 800fa12:	dd6f      	ble.n	800faf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x17a>
 800fa14:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fa18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fa1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fa20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fa22:	3901      	subs	r1, #1
 800fa24:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fa28:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fa2c:	eeb0 6a62 	vmov.f32	s12, s5
 800fa30:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fa34:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa38:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fa3c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fa40:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fa44:	eeb0 6a43 	vmov.f32	s12, s6
 800fa48:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fa4c:	ee12 2a90 	vmov	r2, s5
 800fa50:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fa54:	fb92 f7f3 	sdiv	r7, r2, r3
 800fa58:	ee13 2a10 	vmov	r2, s6
 800fa5c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa60:	fb92 f6f3 	sdiv	r6, r2, r3
 800fa64:	9a03      	ldr	r2, [sp, #12]
 800fa66:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fa6a:	bf08      	it	eq
 800fa6c:	4613      	moveq	r3, r2
 800fa6e:	eeb0 3a67 	vmov.f32	s6, s15
 800fa72:	eef0 2a47 	vmov.f32	s5, s14
 800fa76:	e79c      	b.n	800f9b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 800fa78:	45e1      	cmp	r9, ip
 800fa7a:	dabf      	bge.n	800f9fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800fa7c:	fb06 0e0e 	mla	lr, r6, lr, r0
 800fa80:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800fa84:	d4ba      	bmi.n	800f9fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800fa86:	45c6      	cmp	lr, r8
 800fa88:	dab8      	bge.n	800f9fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 800fa8a:	469e      	mov	lr, r3
 800fa8c:	46aa      	mov	sl, r5
 800fa8e:	f1be 0f00 	cmp.w	lr, #0
 800fa92:	ddb9      	ble.n	800fa08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800fa94:	9a01      	ldr	r2, [sp, #4]
 800fa96:	ea4f 4920 	mov.w	r9, r0, asr #16
 800fa9a:	ea4f 4b24 	mov.w	fp, r4, asr #16
 800fa9e:	fb0c 2909 	mla	r9, ip, r9, r2
 800faa2:	9a02      	ldr	r2, [sp, #8]
 800faa4:	f819 900b 	ldrb.w	r9, [r9, fp]
 800faa8:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 800faac:	f82a 9b02 	strh.w	r9, [sl], #2
 800fab0:	443c      	add	r4, r7
 800fab2:	4430      	add	r0, r6
 800fab4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fab8:	e7e9      	b.n	800fa8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800faba:	ea5f 4a24 	movs.w	sl, r4, asr #16
 800fabe:	d414      	bmi.n	800faea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fac0:	45e2      	cmp	sl, ip
 800fac2:	da12      	bge.n	800faea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fac4:	ea5f 4920 	movs.w	r9, r0, asr #16
 800fac8:	d40f      	bmi.n	800faea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800faca:	45c1      	cmp	r9, r8
 800facc:	da0d      	bge.n	800faea <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800face:	9a01      	ldr	r2, [sp, #4]
 800fad0:	fb0c 2909 	mla	r9, ip, r9, r2
 800fad4:	9a02      	ldr	r2, [sp, #8]
 800fad6:	f819 900a 	ldrb.w	r9, [r9, sl]
 800fada:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 800fade:	f06f 0201 	mvn.w	r2, #1
 800fae2:	fb02 f90e 	mul.w	r9, r2, lr
 800fae6:	f82b a009 	strh.w	sl, [fp, r9]
 800faea:	443c      	add	r4, r7
 800faec:	4430      	add	r0, r6
 800faee:	f10e 3eff 	add.w	lr, lr, #4294967295
 800faf2:	e786      	b.n	800fa02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 800faf4:	b005      	add	sp, #20
 800faf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800fafa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fafa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fafe:	b087      	sub	sp, #28
 800fb00:	9e15      	ldr	r6, [sp, #84]	; 0x54
 800fb02:	9205      	str	r2, [sp, #20]
 800fb04:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800fb08:	9202      	str	r2, [sp, #8]
 800fb0a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fb0e:	9101      	str	r1, [sp, #4]
 800fb10:	6871      	ldr	r1, [r6, #4]
 800fb12:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 800fb14:	f89d 006c 	ldrb.w	r0, [sp, #108]	; 0x6c
 800fb18:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800fb1c:	fb01 2404 	mla	r4, r1, r4, r2
 800fb20:	6832      	ldr	r2, [r6, #0]
 800fb22:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fb26:	682a      	ldr	r2, [r5, #0]
 800fb28:	9203      	str	r2, [sp, #12]
 800fb2a:	686a      	ldr	r2, [r5, #4]
 800fb2c:	fa1f fc80 	uxth.w	ip, r0
 800fb30:	3204      	adds	r2, #4
 800fb32:	43c0      	mvns	r0, r0
 800fb34:	9200      	str	r2, [sp, #0]
 800fb36:	b2c0      	uxtb	r0, r0
 800fb38:	9a01      	ldr	r2, [sp, #4]
 800fb3a:	2a00      	cmp	r2, #0
 800fb3c:	dc03      	bgt.n	800fb46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fb3e:	9a05      	ldr	r2, [sp, #20]
 800fb40:	2a00      	cmp	r2, #0
 800fb42:	f340 811b 	ble.w	800fd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800fb46:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fb48:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fb4c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fb4e:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fb52:	2b00      	cmp	r3, #0
 800fb54:	dd0f      	ble.n	800fb76 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800fb56:	140d      	asrs	r5, r1, #16
 800fb58:	d406      	bmi.n	800fb68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fb5a:	4575      	cmp	r5, lr
 800fb5c:	da04      	bge.n	800fb68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fb5e:	1415      	asrs	r5, r2, #16
 800fb60:	d402      	bmi.n	800fb68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fb62:	9e02      	ldr	r6, [sp, #8]
 800fb64:	42b5      	cmp	r5, r6
 800fb66:	db07      	blt.n	800fb78 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fb68:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fb6a:	4429      	add	r1, r5
 800fb6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fb6e:	3b01      	subs	r3, #1
 800fb70:	442a      	add	r2, r5
 800fb72:	3402      	adds	r4, #2
 800fb74:	e7ed      	b.n	800fb52 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58>
 800fb76:	d00f      	beq.n	800fb98 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 800fb78:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fb7a:	1e5d      	subs	r5, r3, #1
 800fb7c:	fb06 1605 	mla	r6, r6, r5, r1
 800fb80:	1436      	asrs	r6, r6, #16
 800fb82:	d547      	bpl.n	800fc14 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11a>
 800fb84:	469a      	mov	sl, r3
 800fb86:	46a1      	mov	r9, r4
 800fb88:	f1ba 0f00 	cmp.w	sl, #0
 800fb8c:	f300 809f 	bgt.w	800fcce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 800fb90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fb94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fb98:	9b01      	ldr	r3, [sp, #4]
 800fb9a:	2b00      	cmp	r3, #0
 800fb9c:	f340 80ee 	ble.w	800fd7c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x282>
 800fba0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fba4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800fba8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800fbac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fbae:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fbb2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fbb6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fbba:	eef0 6a62 	vmov.f32	s13, s5
 800fbbe:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fbc2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fbc6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fbca:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800fbce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fbd2:	eef0 6a43 	vmov.f32	s13, s6
 800fbd6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fbda:	ee12 2a90 	vmov	r2, s5
 800fbde:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fbe2:	fb92 f3f3 	sdiv	r3, r2, r3
 800fbe6:	ee13 2a10 	vmov	r2, s6
 800fbea:	9313      	str	r3, [sp, #76]	; 0x4c
 800fbec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fbee:	fb92 f3f3 	sdiv	r3, r2, r3
 800fbf2:	9314      	str	r3, [sp, #80]	; 0x50
 800fbf4:	9b01      	ldr	r3, [sp, #4]
 800fbf6:	9a05      	ldr	r2, [sp, #20]
 800fbf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800fbfc:	3b01      	subs	r3, #1
 800fbfe:	9301      	str	r3, [sp, #4]
 800fc00:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800fc04:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fc06:	eeb0 3a67 	vmov.f32	s6, s15
 800fc0a:	bf08      	it	eq
 800fc0c:	4613      	moveq	r3, r2
 800fc0e:	eef0 2a47 	vmov.f32	s5, s14
 800fc12:	e791      	b.n	800fb38 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 800fc14:	4576      	cmp	r6, lr
 800fc16:	dab5      	bge.n	800fb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fc18:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800fc1a:	fb06 2505 	mla	r5, r6, r5, r2
 800fc1e:	142d      	asrs	r5, r5, #16
 800fc20:	d4b0      	bmi.n	800fb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fc22:	9e02      	ldr	r6, [sp, #8]
 800fc24:	42b5      	cmp	r5, r6
 800fc26:	daad      	bge.n	800fb84 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800fc28:	4699      	mov	r9, r3
 800fc2a:	46a2      	mov	sl, r4
 800fc2c:	f1b9 0f00 	cmp.w	r9, #0
 800fc30:	ddae      	ble.n	800fb90 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 800fc32:	9f03      	ldr	r7, [sp, #12]
 800fc34:	1415      	asrs	r5, r2, #16
 800fc36:	140e      	asrs	r6, r1, #16
 800fc38:	fb0e 7505 	mla	r5, lr, r5, r7
 800fc3c:	f109 39ff 	add.w	r9, r9, #4294967295
 800fc40:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fc44:	9d00      	ldr	r5, [sp, #0]
 800fc46:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fc4a:	eb05 0b08 	add.w	fp, r5, r8
 800fc4e:	f8ba 5000 	ldrh.w	r5, [sl]
 800fc52:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fc56:	f89b b001 	ldrb.w	fp, [fp, #1]
 800fc5a:	122f      	asrs	r7, r5, #8
 800fc5c:	fb16 f60c 	smulbb	r6, r6, ip
 800fc60:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fc64:	fb07 6700 	mla	r7, r7, r0, r6
 800fc68:	10ee      	asrs	r6, r5, #3
 800fc6a:	fb1b fb0c 	smulbb	fp, fp, ip
 800fc6e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fc72:	fb06 b600 	mla	r6, r6, r0, fp
 800fc76:	b2b6      	uxth	r6, r6
 800fc78:	9604      	str	r6, [sp, #16]
 800fc7a:	9e00      	ldr	r6, [sp, #0]
 800fc7c:	00ed      	lsls	r5, r5, #3
 800fc7e:	f816 8008 	ldrb.w	r8, [r6, r8]
 800fc82:	b2ed      	uxtb	r5, r5
 800fc84:	fb15 f500 	smulbb	r5, r5, r0
 800fc88:	b2bf      	uxth	r7, r7
 800fc8a:	fb08 580c 	mla	r8, r8, ip, r5
 800fc8e:	fa1f f888 	uxth.w	r8, r8
 800fc92:	1c7d      	adds	r5, r7, #1
 800fc94:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fc98:	f108 0501 	add.w	r5, r8, #1
 800fc9c:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fca0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fca4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fca8:	432f      	orrs	r7, r5
 800fcaa:	9d04      	ldr	r5, [sp, #16]
 800fcac:	f105 0b01 	add.w	fp, r5, #1
 800fcb0:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fcb4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fcb6:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fcba:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fcbe:	4429      	add	r1, r5
 800fcc0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fcc2:	ea47 070b 	orr.w	r7, r7, fp
 800fcc6:	f82a 7b02 	strh.w	r7, [sl], #2
 800fcca:	442a      	add	r2, r5
 800fccc:	e7ae      	b.n	800fc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x132>
 800fcce:	140e      	asrs	r6, r1, #16
 800fcd0:	d44b      	bmi.n	800fd6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fcd2:	4576      	cmp	r6, lr
 800fcd4:	da49      	bge.n	800fd6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fcd6:	1415      	asrs	r5, r2, #16
 800fcd8:	d447      	bmi.n	800fd6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fcda:	9f02      	ldr	r7, [sp, #8]
 800fcdc:	42bd      	cmp	r5, r7
 800fcde:	da44      	bge.n	800fd6a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 800fce0:	9f03      	ldr	r7, [sp, #12]
 800fce2:	fb0e 7505 	mla	r5, lr, r5, r7
 800fce6:	f815 8006 	ldrb.w	r8, [r5, r6]
 800fcea:	9d00      	ldr	r5, [sp, #0]
 800fcec:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800fcf0:	eb05 0b08 	add.w	fp, r5, r8
 800fcf4:	f8b9 5000 	ldrh.w	r5, [r9]
 800fcf8:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800fcfc:	f89b b001 	ldrb.w	fp, [fp, #1]
 800fd00:	122f      	asrs	r7, r5, #8
 800fd02:	fb16 f60c 	smulbb	r6, r6, ip
 800fd06:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fd0a:	fb07 6700 	mla	r7, r7, r0, r6
 800fd0e:	10ee      	asrs	r6, r5, #3
 800fd10:	fb1b fb0c 	smulbb	fp, fp, ip
 800fd14:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800fd18:	fb06 b600 	mla	r6, r6, r0, fp
 800fd1c:	b2b6      	uxth	r6, r6
 800fd1e:	9604      	str	r6, [sp, #16]
 800fd20:	9e00      	ldr	r6, [sp, #0]
 800fd22:	00ed      	lsls	r5, r5, #3
 800fd24:	f816 8008 	ldrb.w	r8, [r6, r8]
 800fd28:	b2ed      	uxtb	r5, r5
 800fd2a:	fb15 f500 	smulbb	r5, r5, r0
 800fd2e:	b2bf      	uxth	r7, r7
 800fd30:	fb08 580c 	mla	r8, r8, ip, r5
 800fd34:	fa1f f888 	uxth.w	r8, r8
 800fd38:	1c7d      	adds	r5, r7, #1
 800fd3a:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800fd3e:	f108 0501 	add.w	r5, r8, #1
 800fd42:	eb05 2518 	add.w	r5, r5, r8, lsr #8
 800fd46:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fd4a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800fd4e:	432f      	orrs	r7, r5
 800fd50:	9d04      	ldr	r5, [sp, #16]
 800fd52:	f105 0b01 	add.w	fp, r5, #1
 800fd56:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 800fd5a:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800fd5e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800fd62:	ea47 070b 	orr.w	r7, r7, fp
 800fd66:	f8a9 7000 	strh.w	r7, [r9]
 800fd6a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fd6c:	4429      	add	r1, r5
 800fd6e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fd70:	f109 0902 	add.w	r9, r9, #2
 800fd74:	442a      	add	r2, r5
 800fd76:	f10a 3aff 	add.w	sl, sl, #4294967295
 800fd7a:	e705      	b.n	800fb88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 800fd7c:	b007      	add	sp, #28
 800fd7e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800fd84 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800fd84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fd88:	b085      	sub	sp, #20
 800fd8a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fd8e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800fd90:	9203      	str	r2, [sp, #12]
 800fd92:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800fd96:	6870      	ldr	r0, [r6, #4]
 800fd98:	9d18      	ldr	r5, [sp, #96]	; 0x60
 800fd9a:	f9bd 7058 	ldrsh.w	r7, [sp, #88]	; 0x58
 800fd9e:	f9bd 805c 	ldrsh.w	r8, [sp, #92]	; 0x5c
 800fda2:	9101      	str	r1, [sp, #4]
 800fda4:	fb00 2404 	mla	r4, r0, r4, r2
 800fda8:	6832      	ldr	r2, [r6, #0]
 800fdaa:	686e      	ldr	r6, [r5, #4]
 800fdac:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fdb0:	682a      	ldr	r2, [r5, #0]
 800fdb2:	9202      	str	r2, [sp, #8]
 800fdb4:	3604      	adds	r6, #4
 800fdb6:	9a01      	ldr	r2, [sp, #4]
 800fdb8:	2a00      	cmp	r2, #0
 800fdba:	dc03      	bgt.n	800fdc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x40>
 800fdbc:	9a03      	ldr	r2, [sp, #12]
 800fdbe:	2a00      	cmp	r2, #0
 800fdc0:	f340 80c7 	ble.w	800ff52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fdc4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800fdc6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fdca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800fdcc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800fdd0:	2b00      	cmp	r3, #0
 800fdd2:	dd0e      	ble.n	800fdf2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 800fdd4:	1405      	asrs	r5, r0, #16
 800fdd6:	d405      	bmi.n	800fde4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fdd8:	42bd      	cmp	r5, r7
 800fdda:	da03      	bge.n	800fde4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fddc:	1415      	asrs	r5, r2, #16
 800fdde:	d401      	bmi.n	800fde4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 800fde0:	4545      	cmp	r5, r8
 800fde2:	db07      	blt.n	800fdf4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 800fde4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800fde6:	4428      	add	r0, r5
 800fde8:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800fdea:	3b01      	subs	r3, #1
 800fdec:	442a      	add	r2, r5
 800fdee:	3402      	adds	r4, #2
 800fdf0:	e7ee      	b.n	800fdd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4c>
 800fdf2:	d010      	beq.n	800fe16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 800fdf4:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fdf6:	1e5d      	subs	r5, r3, #1
 800fdf8:	fb01 0c05 	mla	ip, r1, r5, r0
 800fdfc:	ea5f 4c2c 	movs.w	ip, ip, asr #16
 800fe00:	d545      	bpl.n	800fe8e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 800fe02:	469e      	mov	lr, r3
 800fe04:	eb04 0b43 	add.w	fp, r4, r3, lsl #1
 800fe08:	f1be 0f00 	cmp.w	lr, #0
 800fe0c:	dc72      	bgt.n	800fef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x170>
 800fe0e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fe12:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fe16:	9b01      	ldr	r3, [sp, #4]
 800fe18:	2b00      	cmp	r3, #0
 800fe1a:	f340 809a 	ble.w	800ff52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ce>
 800fe1e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fe22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fe26:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fe2a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe2c:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fe30:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fe34:	eeb0 6a62 	vmov.f32	s12, s5
 800fe38:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fe3c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe40:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fe44:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800fe48:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fe4c:	eeb0 6a43 	vmov.f32	s12, s6
 800fe50:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fe54:	ee12 2a90 	vmov	r2, s5
 800fe58:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fe5c:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe60:	ee13 2a10 	vmov	r2, s6
 800fe64:	9311      	str	r3, [sp, #68]	; 0x44
 800fe66:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe68:	fb92 f3f3 	sdiv	r3, r2, r3
 800fe6c:	9312      	str	r3, [sp, #72]	; 0x48
 800fe6e:	9b01      	ldr	r3, [sp, #4]
 800fe70:	9a03      	ldr	r2, [sp, #12]
 800fe72:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fe76:	3b01      	subs	r3, #1
 800fe78:	9301      	str	r3, [sp, #4]
 800fe7a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800fe7e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800fe80:	eeb0 3a67 	vmov.f32	s6, s15
 800fe84:	bf08      	it	eq
 800fe86:	4613      	moveq	r3, r2
 800fe88:	eef0 2a47 	vmov.f32	s5, s14
 800fe8c:	e793      	b.n	800fdb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x32>
 800fe8e:	45bc      	cmp	ip, r7
 800fe90:	dab7      	bge.n	800fe02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fe92:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fe94:	fb01 2505 	mla	r5, r1, r5, r2
 800fe98:	142d      	asrs	r5, r5, #16
 800fe9a:	d4b2      	bmi.n	800fe02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fe9c:	4545      	cmp	r5, r8
 800fe9e:	dab0      	bge.n	800fe02 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 800fea0:	469e      	mov	lr, r3
 800fea2:	46a2      	mov	sl, r4
 800fea4:	f1be 0f00 	cmp.w	lr, #0
 800fea8:	ddb1      	ble.n	800fe0e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 800feaa:	9902      	ldr	r1, [sp, #8]
 800feac:	1415      	asrs	r5, r2, #16
 800feae:	fb07 1505 	mla	r5, r7, r5, r1
 800feb2:	ea4f 4c20 	mov.w	ip, r0, asr #16
 800feb6:	4928      	ldr	r1, [pc, #160]	; (800ff58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>)
 800feb8:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800febc:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800fec0:	eb06 0b0c 	add.w	fp, r6, ip
 800fec4:	f10e 3eff 	add.w	lr, lr, #4294967295
 800fec8:	f89b 5001 	ldrb.w	r5, [fp, #1]
 800fecc:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800fed0:	00ed      	lsls	r5, r5, #3
 800fed2:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800fed6:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800feda:	9911      	ldr	r1, [sp, #68]	; 0x44
 800fedc:	ea49 0505 	orr.w	r5, r9, r5
 800fee0:	f816 900c 	ldrb.w	r9, [r6, ip]
 800fee4:	4408      	add	r0, r1
 800fee6:	9912      	ldr	r1, [sp, #72]	; 0x48
 800fee8:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800feec:	f82a 5b02 	strh.w	r5, [sl], #2
 800fef0:	440a      	add	r2, r1
 800fef2:	e7d7      	b.n	800fea4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x120>
 800fef4:	ea5f 4c20 	movs.w	ip, r0, asr #16
 800fef8:	d424      	bmi.n	800ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fefa:	45bc      	cmp	ip, r7
 800fefc:	da22      	bge.n	800ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800fefe:	1415      	asrs	r5, r2, #16
 800ff00:	d420      	bmi.n	800ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ff02:	4545      	cmp	r5, r8
 800ff04:	da1e      	bge.n	800ff44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 800ff06:	9902      	ldr	r1, [sp, #8]
 800ff08:	fb07 1505 	mla	r5, r7, r5, r1
 800ff0c:	f06f 0101 	mvn.w	r1, #1
 800ff10:	f815 c00c 	ldrb.w	ip, [r5, ip]
 800ff14:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 800ff18:	eb06 050c 	add.w	r5, r6, ip
 800ff1c:	fb01 f90e 	mul.w	r9, r1, lr
 800ff20:	f895 a002 	ldrb.w	sl, [r5, #2]
 800ff24:	786d      	ldrb	r5, [r5, #1]
 800ff26:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800ff2a:	00ed      	lsls	r5, r5, #3
 800ff2c:	ea01 2a0a 	and.w	sl, r1, sl, lsl #8
 800ff30:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800ff34:	ea4a 0505 	orr.w	r5, sl, r5
 800ff38:	f816 a00c 	ldrb.w	sl, [r6, ip]
 800ff3c:	ea45 05da 	orr.w	r5, r5, sl, lsr #3
 800ff40:	f82b 5009 	strh.w	r5, [fp, r9]
 800ff44:	9911      	ldr	r1, [sp, #68]	; 0x44
 800ff46:	4408      	add	r0, r1
 800ff48:	9912      	ldr	r1, [sp, #72]	; 0x48
 800ff4a:	f10e 3eff 	add.w	lr, lr, #4294967295
 800ff4e:	440a      	add	r2, r1
 800ff50:	e75a      	b.n	800fe08 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 800ff52:	b005      	add	sp, #20
 800ff54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ff58:	fffff800 	.word	0xfffff800

0800ff5c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 800ff5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff60:	b087      	sub	sp, #28
 800ff62:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ff66:	9204      	str	r2, [sp, #16]
 800ff68:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 800ff6c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800ff6e:	9201      	str	r2, [sp, #4]
 800ff70:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 800ff74:	9205      	str	r2, [sp, #20]
 800ff76:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800ff7a:	9100      	str	r1, [sp, #0]
 800ff7c:	6869      	ldr	r1, [r5, #4]
 800ff7e:	981a      	ldr	r0, [sp, #104]	; 0x68
 800ff80:	f9bd e060 	ldrsh.w	lr, [sp, #96]	; 0x60
 800ff84:	fb01 2404 	mla	r4, r1, r4, r2
 800ff88:	682a      	ldr	r2, [r5, #0]
 800ff8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800ff8e:	6802      	ldr	r2, [r0, #0]
 800ff90:	9202      	str	r2, [sp, #8]
 800ff92:	6842      	ldr	r2, [r0, #4]
 800ff94:	3204      	adds	r2, #4
 800ff96:	9203      	str	r2, [sp, #12]
 800ff98:	9a00      	ldr	r2, [sp, #0]
 800ff9a:	2a00      	cmp	r2, #0
 800ff9c:	dc03      	bgt.n	800ffa6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 800ff9e:	9a04      	ldr	r2, [sp, #16]
 800ffa0:	2a00      	cmp	r2, #0
 800ffa2:	f340 812c 	ble.w	80101fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 800ffa6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ffa8:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800ffac:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ffae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ffb2:	2b00      	cmp	r3, #0
 800ffb4:	dd0f      	ble.n	800ffd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 800ffb6:	1402      	asrs	r2, r0, #16
 800ffb8:	d406      	bmi.n	800ffc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800ffba:	4572      	cmp	r2, lr
 800ffbc:	da04      	bge.n	800ffc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800ffbe:	140a      	asrs	r2, r1, #16
 800ffc0:	d402      	bmi.n	800ffc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 800ffc2:	9d01      	ldr	r5, [sp, #4]
 800ffc4:	42aa      	cmp	r2, r5
 800ffc6:	db07      	blt.n	800ffd8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c>
 800ffc8:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800ffca:	4410      	add	r0, r2
 800ffcc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800ffce:	3b01      	subs	r3, #1
 800ffd0:	4411      	add	r1, r2
 800ffd2:	3402      	adds	r4, #2
 800ffd4:	e7ed      	b.n	800ffb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56>
 800ffd6:	d00f      	beq.n	800fff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 800ffd8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ffda:	1e5a      	subs	r2, r3, #1
 800ffdc:	fb05 0502 	mla	r5, r5, r2, r0
 800ffe0:	142d      	asrs	r5, r5, #16
 800ffe2:	d545      	bpl.n	8010070 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x114>
 800ffe4:	4699      	mov	r9, r3
 800ffe6:	46a0      	mov	r8, r4
 800ffe8:	f1b9 0f00 	cmp.w	r9, #0
 800ffec:	f300 80a7 	bgt.w	801013e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 800fff0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fff4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fff8:	9b00      	ldr	r3, [sp, #0]
 800fffa:	2b00      	cmp	r3, #0
 800fffc:	f340 80ff 	ble.w	80101fe <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010000:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010004:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010008:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801000c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801000e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010012:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010016:	eeb0 6a62 	vmov.f32	s12, s5
 801001a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801001e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010022:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010026:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801002a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801002e:	eeb0 6a43 	vmov.f32	s12, s6
 8010032:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010036:	ee12 2a90 	vmov	r2, s5
 801003a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801003e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010042:	ee13 2a10 	vmov	r2, s6
 8010046:	9313      	str	r3, [sp, #76]	; 0x4c
 8010048:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801004a:	fb92 f3f3 	sdiv	r3, r2, r3
 801004e:	9314      	str	r3, [sp, #80]	; 0x50
 8010050:	9b00      	ldr	r3, [sp, #0]
 8010052:	9a04      	ldr	r2, [sp, #16]
 8010054:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010058:	3b01      	subs	r3, #1
 801005a:	9300      	str	r3, [sp, #0]
 801005c:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010060:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010062:	eeb0 3a67 	vmov.f32	s6, s15
 8010066:	bf08      	it	eq
 8010068:	4613      	moveq	r3, r2
 801006a:	eef0 2a47 	vmov.f32	s5, s14
 801006e:	e793      	b.n	800ff98 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3c>
 8010070:	4575      	cmp	r5, lr
 8010072:	dab7      	bge.n	800ffe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010074:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010076:	fb05 1202 	mla	r2, r5, r2, r1
 801007a:	1412      	asrs	r2, r2, #16
 801007c:	d4b2      	bmi.n	800ffe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 801007e:	9d01      	ldr	r5, [sp, #4]
 8010080:	42aa      	cmp	r2, r5
 8010082:	daaf      	bge.n	800ffe4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x88>
 8010084:	f04f 0800 	mov.w	r8, #0
 8010088:	eba3 0208 	sub.w	r2, r3, r8
 801008c:	2a00      	cmp	r2, #0
 801008e:	ddaf      	ble.n	800fff0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8010090:	9e02      	ldr	r6, [sp, #8]
 8010092:	140a      	asrs	r2, r1, #16
 8010094:	1405      	asrs	r5, r0, #16
 8010096:	fb0e 6202 	mla	r2, lr, r2, r6
 801009a:	5d52      	ldrb	r2, [r2, r5]
 801009c:	9d03      	ldr	r5, [sp, #12]
 801009e:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 80100a2:	0e2e      	lsrs	r6, r5, #24
 80100a4:	d044      	beq.n	8010130 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d4>
 80100a6:	9a05      	ldr	r2, [sp, #20]
 80100a8:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 80100ac:	4356      	muls	r6, r2
 80100ae:	1c72      	adds	r2, r6, #1
 80100b0:	eb02 2226 	add.w	r2, r2, r6, asr #8
 80100b4:	1212      	asrs	r2, r2, #8
 80100b6:	fa1f f982 	uxth.w	r9, r2
 80100ba:	ea4f 272c 	mov.w	r7, ip, asr #8
 80100be:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80100c2:	43d2      	mvns	r2, r2
 80100c4:	b2d2      	uxtb	r2, r2
 80100c6:	fb16 f609 	smulbb	r6, r6, r9
 80100ca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80100ce:	fb07 6702 	mla	r7, r7, r2, r6
 80100d2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80100d6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80100da:	b2ed      	uxtb	r5, r5
 80100dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80100e0:	fa5f fc8c 	uxtb.w	ip, ip
 80100e4:	fb15 f509 	smulbb	r5, r5, r9
 80100e8:	fb0c 5502 	mla	r5, ip, r2, r5
 80100ec:	b2bf      	uxth	r7, r7
 80100ee:	fb1a fa09 	smulbb	sl, sl, r9
 80100f2:	b2ad      	uxth	r5, r5
 80100f4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80100f8:	fb06 a602 	mla	r6, r6, r2, sl
 80100fc:	1c7a      	adds	r2, r7, #1
 80100fe:	f105 0a01 	add.w	sl, r5, #1
 8010102:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010106:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801010a:	b2b6      	uxth	r6, r6
 801010c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010110:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010114:	ea47 070a 	orr.w	r7, r7, sl
 8010118:	f106 0a01 	add.w	sl, r6, #1
 801011c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010120:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010124:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010128:	ea47 070a 	orr.w	r7, r7, sl
 801012c:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8010130:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010132:	4410      	add	r0, r2
 8010134:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010136:	f108 0801 	add.w	r8, r8, #1
 801013a:	4411      	add	r1, r2
 801013c:	e7a4      	b.n	8010088 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x12c>
 801013e:	1405      	asrs	r5, r0, #16
 8010140:	d454      	bmi.n	80101ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010142:	4575      	cmp	r5, lr
 8010144:	da52      	bge.n	80101ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010146:	140a      	asrs	r2, r1, #16
 8010148:	d450      	bmi.n	80101ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801014a:	9e01      	ldr	r6, [sp, #4]
 801014c:	42b2      	cmp	r2, r6
 801014e:	da4d      	bge.n	80101ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010150:	9e02      	ldr	r6, [sp, #8]
 8010152:	fb0e 6202 	mla	r2, lr, r2, r6
 8010156:	5d52      	ldrb	r2, [r2, r5]
 8010158:	9d03      	ldr	r5, [sp, #12]
 801015a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801015e:	0e2e      	lsrs	r6, r5, #24
 8010160:	d044      	beq.n	80101ec <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8010162:	9a05      	ldr	r2, [sp, #20]
 8010164:	f8b8 c000 	ldrh.w	ip, [r8]
 8010168:	4356      	muls	r6, r2
 801016a:	1c72      	adds	r2, r6, #1
 801016c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010170:	1212      	asrs	r2, r2, #8
 8010172:	fa1f fa82 	uxth.w	sl, r2
 8010176:	ea4f 272c 	mov.w	r7, ip, asr #8
 801017a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801017e:	43d2      	mvns	r2, r2
 8010180:	b2d2      	uxtb	r2, r2
 8010182:	fb16 f60a 	smulbb	r6, r6, sl
 8010186:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801018a:	fb07 6702 	mla	r7, r7, r2, r6
 801018e:	f3c5 2b07 	ubfx	fp, r5, #8, #8
 8010192:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8010196:	b2ed      	uxtb	r5, r5
 8010198:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801019c:	fa5f fc8c 	uxtb.w	ip, ip
 80101a0:	fb15 f50a 	smulbb	r5, r5, sl
 80101a4:	fb0c 5502 	mla	r5, ip, r2, r5
 80101a8:	b2bf      	uxth	r7, r7
 80101aa:	fb1b fb0a 	smulbb	fp, fp, sl
 80101ae:	b2ad      	uxth	r5, r5
 80101b0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80101b4:	fb06 b602 	mla	r6, r6, r2, fp
 80101b8:	1c7a      	adds	r2, r7, #1
 80101ba:	f105 0b01 	add.w	fp, r5, #1
 80101be:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80101c2:	eb0b 2b15 	add.w	fp, fp, r5, lsr #8
 80101c6:	b2b6      	uxth	r6, r6
 80101c8:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80101cc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80101d0:	ea47 070b 	orr.w	r7, r7, fp
 80101d4:	f106 0b01 	add.w	fp, r6, #1
 80101d8:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80101dc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80101e0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80101e4:	ea47 070b 	orr.w	r7, r7, fp
 80101e8:	f8a8 7000 	strh.w	r7, [r8]
 80101ec:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80101ee:	4410      	add	r0, r2
 80101f0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80101f2:	f108 0802 	add.w	r8, r8, #2
 80101f6:	4411      	add	r1, r2
 80101f8:	f109 39ff 	add.w	r9, r9, #4294967295
 80101fc:	e6f4      	b.n	800ffe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 80101fe:	b007      	add	sp, #28
 8010200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010204 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010208:	b087      	sub	sp, #28
 801020a:	468b      	mov	fp, r1
 801020c:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801020e:	9205      	str	r2, [sp, #20]
 8010210:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010214:	9201      	str	r2, [sp, #4]
 8010216:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 801021a:	6869      	ldr	r1, [r5, #4]
 801021c:	981a      	ldr	r0, [sp, #104]	; 0x68
 801021e:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010222:	fb01 2404 	mla	r4, r1, r4, r2
 8010226:	682a      	ldr	r2, [r5, #0]
 8010228:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801022c:	6802      	ldr	r2, [r0, #0]
 801022e:	9203      	str	r2, [sp, #12]
 8010230:	6842      	ldr	r2, [r0, #4]
 8010232:	3204      	adds	r2, #4
 8010234:	9204      	str	r2, [sp, #16]
 8010236:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801023a:	f1bb 0f00 	cmp.w	fp, #0
 801023e:	dc03      	bgt.n	8010248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010240:	9a05      	ldr	r2, [sp, #20]
 8010242:	2a00      	cmp	r2, #0
 8010244:	f340 814a 	ble.w	80104dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 8010248:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801024a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801024e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010250:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010254:	2b00      	cmp	r3, #0
 8010256:	dd0f      	ble.n	8010278 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010258:	1408      	asrs	r0, r1, #16
 801025a:	d406      	bmi.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 801025c:	4540      	cmp	r0, r8
 801025e:	da04      	bge.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010260:	1410      	asrs	r0, r2, #16
 8010262:	d402      	bmi.n	801026a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010264:	9d01      	ldr	r5, [sp, #4]
 8010266:	42a8      	cmp	r0, r5
 8010268:	db07      	blt.n	801027a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 801026a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801026c:	4401      	add	r1, r0
 801026e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010270:	3b01      	subs	r3, #1
 8010272:	4402      	add	r2, r0
 8010274:	3402      	adds	r4, #2
 8010276:	e7ed      	b.n	8010254 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010278:	d018      	beq.n	80102ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa8>
 801027a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801027c:	1e58      	subs	r0, r3, #1
 801027e:	fb05 1500 	mla	r5, r5, r0, r1
 8010282:	142d      	asrs	r5, r5, #16
 8010284:	d40a      	bmi.n	801029c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010286:	4545      	cmp	r5, r8
 8010288:	da08      	bge.n	801029c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 801028a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801028c:	fb05 2000 	mla	r0, r5, r0, r2
 8010290:	1400      	asrs	r0, r0, #16
 8010292:	d403      	bmi.n	801029c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010294:	9d01      	ldr	r5, [sp, #4]
 8010296:	42a8      	cmp	r0, r5
 8010298:	f2c0 80b7 	blt.w	801040a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x206>
 801029c:	2600      	movs	r6, #0
 801029e:	1998      	adds	r0, r3, r6
 80102a0:	2800      	cmp	r0, #0
 80102a2:	dc3e      	bgt.n	8010322 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11e>
 80102a4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80102a8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80102ac:	f1bb 0f00 	cmp.w	fp, #0
 80102b0:	f340 8114 	ble.w	80104dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d8>
 80102b4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80102b8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80102bc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80102c0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80102c2:	f1bb 0b01 	subs.w	fp, fp, #1
 80102c6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80102ca:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80102ce:	eeb0 6a62 	vmov.f32	s12, s5
 80102d2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80102d6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80102da:	ee77 2a62 	vsub.f32	s5, s14, s5
 80102de:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80102e2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80102e6:	eeb0 6a43 	vmov.f32	s12, s6
 80102ea:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80102ee:	ee12 2a90 	vmov	r2, s5
 80102f2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80102f6:	fb92 f3f3 	sdiv	r3, r2, r3
 80102fa:	ee13 2a10 	vmov	r2, s6
 80102fe:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010302:	9313      	str	r3, [sp, #76]	; 0x4c
 8010304:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010306:	fb92 f3f3 	sdiv	r3, r2, r3
 801030a:	9a05      	ldr	r2, [sp, #20]
 801030c:	9314      	str	r3, [sp, #80]	; 0x50
 801030e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010312:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010314:	eeb0 3a67 	vmov.f32	s6, s15
 8010318:	bf08      	it	eq
 801031a:	4613      	moveq	r3, r2
 801031c:	eef0 2a47 	vmov.f32	s5, s14
 8010320:	e78b      	b.n	801023a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010322:	140d      	asrs	r5, r1, #16
 8010324:	d459      	bmi.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010326:	4545      	cmp	r5, r8
 8010328:	da57      	bge.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801032a:	1410      	asrs	r0, r2, #16
 801032c:	d455      	bmi.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801032e:	9f01      	ldr	r7, [sp, #4]
 8010330:	42b8      	cmp	r0, r7
 8010332:	da52      	bge.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010334:	9f03      	ldr	r7, [sp, #12]
 8010336:	fb08 7000 	mla	r0, r8, r0, r7
 801033a:	5d40      	ldrb	r0, [r0, r5]
 801033c:	9d04      	ldr	r5, [sp, #16]
 801033e:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8010342:	0e07      	lsrs	r7, r0, #24
 8010344:	2fff      	cmp	r7, #255	; 0xff
 8010346:	d04e      	beq.n	80103e6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8010348:	b2fd      	uxtb	r5, r7
 801034a:	2f00      	cmp	r7, #0
 801034c:	d045      	beq.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801034e:	f06f 0701 	mvn.w	r7, #1
 8010352:	4377      	muls	r7, r6
 8010354:	fa1f f985 	uxth.w	r9, r5
 8010358:	f834 e007 	ldrh.w	lr, [r4, r7]
 801035c:	9702      	str	r7, [sp, #8]
 801035e:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010362:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8010366:	43ed      	mvns	r5, r5
 8010368:	b2ed      	uxtb	r5, r5
 801036a:	fb17 f709 	smulbb	r7, r7, r9
 801036e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010372:	fb0c 7c05 	mla	ip, ip, r5, r7
 8010376:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801037a:	ea4f 07ee 	mov.w	r7, lr, asr #3
 801037e:	b2c0      	uxtb	r0, r0
 8010380:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010384:	fa5f fe8e 	uxtb.w	lr, lr
 8010388:	fb10 f009 	smulbb	r0, r0, r9
 801038c:	fb0e 0005 	mla	r0, lr, r5, r0
 8010390:	b280      	uxth	r0, r0
 8010392:	fa1f fc8c 	uxth.w	ip, ip
 8010396:	fb1a fa09 	smulbb	sl, sl, r9
 801039a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801039e:	fb07 a705 	mla	r7, r7, r5, sl
 80103a2:	f100 0a01 	add.w	sl, r0, #1
 80103a6:	f10c 0501 	add.w	r5, ip, #1
 80103aa:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80103ae:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80103b2:	b2bf      	uxth	r7, r7
 80103b4:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80103b8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80103bc:	ea4c 0c0a 	orr.w	ip, ip, sl
 80103c0:	f107 0a01 	add.w	sl, r7, #1
 80103c4:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80103c8:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80103cc:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80103d0:	9802      	ldr	r0, [sp, #8]
 80103d2:	ea4c 0c0a 	orr.w	ip, ip, sl
 80103d6:	f824 c000 	strh.w	ip, [r4, r0]
 80103da:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80103dc:	4401      	add	r1, r0
 80103de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80103e0:	3e01      	subs	r6, #1
 80103e2:	4402      	add	r2, r0
 80103e4:	e75b      	b.n	801029e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 80103e6:	f06f 0501 	mvn.w	r5, #1
 80103ea:	fb05 f706 	mul.w	r7, r5, r6
 80103ee:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80103f2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80103f6:	0945      	lsrs	r5, r0, #5
 80103f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80103fc:	ea4c 0505 	orr.w	r5, ip, r5
 8010400:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8010404:	4305      	orrs	r5, r0
 8010406:	53e5      	strh	r5, [r4, r7]
 8010408:	e7e7      	b.n	80103da <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801040a:	f04f 0e00 	mov.w	lr, #0
 801040e:	eba3 000e 	sub.w	r0, r3, lr
 8010412:	2800      	cmp	r0, #0
 8010414:	f77f af46 	ble.w	80102a4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa0>
 8010418:	9e03      	ldr	r6, [sp, #12]
 801041a:	1410      	asrs	r0, r2, #16
 801041c:	140d      	asrs	r5, r1, #16
 801041e:	fb08 6000 	mla	r0, r8, r0, r6
 8010422:	5d40      	ldrb	r0, [r0, r5]
 8010424:	9d04      	ldr	r5, [sp, #16]
 8010426:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 801042a:	0e06      	lsrs	r6, r0, #24
 801042c:	2eff      	cmp	r6, #255	; 0xff
 801042e:	d048      	beq.n	80104c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8010430:	b2f5      	uxtb	r5, r6
 8010432:	2e00      	cmp	r6, #0
 8010434:	d03e      	beq.n	80104b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8010436:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 801043a:	fa1f f985 	uxth.w	r9, r5
 801043e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8010442:	f3c0 4607 	ubfx	r6, r0, #16, #8
 8010446:	43ed      	mvns	r5, r5
 8010448:	b2ed      	uxtb	r5, r5
 801044a:	fb16 f609 	smulbb	r6, r6, r9
 801044e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010452:	fb07 6705 	mla	r7, r7, r5, r6
 8010456:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801045a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801045e:	b2c0      	uxtb	r0, r0
 8010460:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8010464:	fa5f fc8c 	uxtb.w	ip, ip
 8010468:	fb10 f009 	smulbb	r0, r0, r9
 801046c:	fb0c 0005 	mla	r0, ip, r5, r0
 8010470:	b2bf      	uxth	r7, r7
 8010472:	fb1a fa09 	smulbb	sl, sl, r9
 8010476:	b280      	uxth	r0, r0
 8010478:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801047c:	fb06 a605 	mla	r6, r6, r5, sl
 8010480:	1c7d      	adds	r5, r7, #1
 8010482:	f100 0a01 	add.w	sl, r0, #1
 8010486:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 801048a:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801048e:	b2b6      	uxth	r6, r6
 8010490:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010494:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8010498:	ea47 070a 	orr.w	r7, r7, sl
 801049c:	f106 0a01 	add.w	sl, r6, #1
 80104a0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80104a4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80104a8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80104ac:	ea47 070a 	orr.w	r7, r7, sl
 80104b0:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80104b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80104b6:	4401      	add	r1, r0
 80104b8:	9814      	ldr	r0, [sp, #80]	; 0x50
 80104ba:	f10e 0e01 	add.w	lr, lr, #1
 80104be:	4402      	add	r2, r0
 80104c0:	e7a5      	b.n	801040e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20a>
 80104c2:	4d08      	ldr	r5, [pc, #32]	; (80104e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e0>)
 80104c4:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 80104c8:	0945      	lsrs	r5, r0, #5
 80104ca:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80104ce:	4335      	orrs	r5, r6
 80104d0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80104d4:	4305      	orrs	r5, r0
 80104d6:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 80104da:	e7eb      	b.n	80104b4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80104dc:	b007      	add	sp, #28
 80104de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104e2:	bf00      	nop
 80104e4:	fffff800 	.word	0xfffff800

080104e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80104e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80104ec:	b087      	sub	sp, #28
 80104ee:	468b      	mov	fp, r1
 80104f0:	9204      	str	r2, [sp, #16]
 80104f2:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80104f6:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80104f8:	9201      	str	r2, [sp, #4]
 80104fa:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 80104fe:	9205      	str	r2, [sp, #20]
 8010500:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010504:	6869      	ldr	r1, [r5, #4]
 8010506:	981a      	ldr	r0, [sp, #104]	; 0x68
 8010508:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 801050c:	fb01 2404 	mla	r4, r1, r4, r2
 8010510:	682a      	ldr	r2, [r5, #0]
 8010512:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010516:	6802      	ldr	r2, [r0, #0]
 8010518:	9202      	str	r2, [sp, #8]
 801051a:	6842      	ldr	r2, [r0, #4]
 801051c:	9203      	str	r2, [sp, #12]
 801051e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010522:	f1bb 0f00 	cmp.w	fp, #0
 8010526:	dc03      	bgt.n	8010530 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8010528:	9a04      	ldr	r2, [sp, #16]
 801052a:	2a00      	cmp	r2, #0
 801052c:	f340 8136 	ble.w	801079c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8010530:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010532:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010536:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010538:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801053c:	2b00      	cmp	r3, #0
 801053e:	dd0f      	ble.n	8010560 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010540:	1408      	asrs	r0, r1, #16
 8010542:	d406      	bmi.n	8010552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010544:	4540      	cmp	r0, r8
 8010546:	da04      	bge.n	8010552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010548:	1410      	asrs	r0, r2, #16
 801054a:	d402      	bmi.n	8010552 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801054c:	9d01      	ldr	r5, [sp, #4]
 801054e:	42a8      	cmp	r0, r5
 8010550:	db07      	blt.n	8010562 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 8010552:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010554:	4401      	add	r1, r0
 8010556:	9814      	ldr	r0, [sp, #80]	; 0x50
 8010558:	3b01      	subs	r3, #1
 801055a:	4402      	add	r2, r0
 801055c:	3402      	adds	r4, #2
 801055e:	e7ed      	b.n	801053c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8010560:	d00f      	beq.n	8010582 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8010562:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010564:	1e58      	subs	r0, r3, #1
 8010566:	fb05 1500 	mla	r5, r5, r0, r1
 801056a:	142d      	asrs	r5, r5, #16
 801056c:	d544      	bpl.n	80105f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 801056e:	9300      	str	r3, [sp, #0]
 8010570:	46a2      	mov	sl, r4
 8010572:	9800      	ldr	r0, [sp, #0]
 8010574:	2800      	cmp	r0, #0
 8010576:	f300 80ab 	bgt.w	80106d0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801057a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801057e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010582:	f1bb 0f00 	cmp.w	fp, #0
 8010586:	f340 8109 	ble.w	801079c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801058a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801058e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010592:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010596:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010598:	f1bb 0b01 	subs.w	fp, fp, #1
 801059c:	ee31 1a05 	vadd.f32	s2, s2, s10
 80105a0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80105a4:	eeb0 6a62 	vmov.f32	s12, s5
 80105a8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80105ac:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105b0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80105b4:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80105b8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80105bc:	eeb0 6a43 	vmov.f32	s12, s6
 80105c0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80105c4:	ee12 2a90 	vmov	r2, s5
 80105c8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80105cc:	fb92 f3f3 	sdiv	r3, r2, r3
 80105d0:	ee13 2a10 	vmov	r2, s6
 80105d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80105d8:	9313      	str	r3, [sp, #76]	; 0x4c
 80105da:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105dc:	fb92 f3f3 	sdiv	r3, r2, r3
 80105e0:	9a04      	ldr	r2, [sp, #16]
 80105e2:	9314      	str	r3, [sp, #80]	; 0x50
 80105e4:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80105e8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80105ea:	eeb0 3a67 	vmov.f32	s6, s15
 80105ee:	bf08      	it	eq
 80105f0:	4613      	moveq	r3, r2
 80105f2:	eef0 2a47 	vmov.f32	s5, s14
 80105f6:	e794      	b.n	8010522 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80105f8:	4545      	cmp	r5, r8
 80105fa:	dab8      	bge.n	801056e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 80105fc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80105fe:	fb05 2000 	mla	r0, r5, r0, r2
 8010602:	1400      	asrs	r0, r0, #16
 8010604:	d4b3      	bmi.n	801056e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 8010606:	9d01      	ldr	r5, [sp, #4]
 8010608:	42a8      	cmp	r0, r5
 801060a:	dab0      	bge.n	801056e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x86>
 801060c:	f04f 0900 	mov.w	r9, #0
 8010610:	eba3 0009 	sub.w	r0, r3, r9
 8010614:	2800      	cmp	r0, #0
 8010616:	ddb0      	ble.n	801057a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8010618:	140d      	asrs	r5, r1, #16
 801061a:	1410      	asrs	r0, r2, #16
 801061c:	fb08 5000 	mla	r0, r8, r0, r5
 8010620:	9d03      	ldr	r5, [sp, #12]
 8010622:	5c2e      	ldrb	r6, [r5, r0]
 8010624:	2e00      	cmp	r6, #0
 8010626:	d04c      	beq.n	80106c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1da>
 8010628:	9d02      	ldr	r5, [sp, #8]
 801062a:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 801062e:	9805      	ldr	r0, [sp, #20]
 8010630:	f834 5019 	ldrh.w	r5, [r4, r9, lsl #1]
 8010634:	4346      	muls	r6, r0
 8010636:	1c70      	adds	r0, r6, #1
 8010638:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 801063c:	1200      	asrs	r0, r0, #8
 801063e:	b287      	uxth	r7, r0
 8010640:	122e      	asrs	r6, r5, #8
 8010642:	43c0      	mvns	r0, r0
 8010644:	b2c0      	uxtb	r0, r0
 8010646:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801064a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801064e:	fb16 f600 	smulbb	r6, r6, r0
 8010652:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8010656:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801065a:	00ed      	lsls	r5, r5, #3
 801065c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010660:	b2ed      	uxtb	r5, r5
 8010662:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010666:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801066a:	fb15 f500 	smulbb	r5, r5, r0
 801066e:	fa5f fe8e 	uxtb.w	lr, lr
 8010672:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010676:	fb0e 5507 	mla	r5, lr, r7, r5
 801067a:	fb1a fa00 	smulbb	sl, sl, r0
 801067e:	fa1f fc8c 	uxth.w	ip, ip
 8010682:	b2ad      	uxth	r5, r5
 8010684:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010688:	fb06 a607 	mla	r6, r6, r7, sl
 801068c:	f10c 0001 	add.w	r0, ip, #1
 8010690:	f105 0a01 	add.w	sl, r5, #1
 8010694:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 8010698:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801069c:	b2b6      	uxth	r6, r6
 801069e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80106a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80106a6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80106aa:	f106 0a01 	add.w	sl, r6, #1
 80106ae:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80106b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80106b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80106ba:	ea4c 0c0a 	orr.w	ip, ip, sl
 80106be:	f824 c019 	strh.w	ip, [r4, r9, lsl #1]
 80106c2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80106c4:	4401      	add	r1, r0
 80106c6:	9814      	ldr	r0, [sp, #80]	; 0x50
 80106c8:	f109 0901 	add.w	r9, r9, #1
 80106cc:	4402      	add	r2, r0
 80106ce:	e79f      	b.n	8010610 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x128>
 80106d0:	1408      	asrs	r0, r1, #16
 80106d2:	d459      	bmi.n	8010788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80106d4:	4540      	cmp	r0, r8
 80106d6:	da57      	bge.n	8010788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80106d8:	1415      	asrs	r5, r2, #16
 80106da:	d455      	bmi.n	8010788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80106dc:	9e01      	ldr	r6, [sp, #4]
 80106de:	42b5      	cmp	r5, r6
 80106e0:	da52      	bge.n	8010788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80106e2:	fb08 0005 	mla	r0, r8, r5, r0
 80106e6:	9d03      	ldr	r5, [sp, #12]
 80106e8:	5c2e      	ldrb	r6, [r5, r0]
 80106ea:	2e00      	cmp	r6, #0
 80106ec:	d04c      	beq.n	8010788 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a0>
 80106ee:	9d02      	ldr	r5, [sp, #8]
 80106f0:	f835 e010 	ldrh.w	lr, [r5, r0, lsl #1]
 80106f4:	9805      	ldr	r0, [sp, #20]
 80106f6:	f8ba 5000 	ldrh.w	r5, [sl]
 80106fa:	4346      	muls	r6, r0
 80106fc:	1c70      	adds	r0, r6, #1
 80106fe:	eb00 2016 	add.w	r0, r0, r6, lsr #8
 8010702:	1200      	asrs	r0, r0, #8
 8010704:	b287      	uxth	r7, r0
 8010706:	122e      	asrs	r6, r5, #8
 8010708:	43c0      	mvns	r0, r0
 801070a:	b2c0      	uxtb	r0, r0
 801070c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8010710:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8010714:	fb16 f600 	smulbb	r6, r6, r0
 8010718:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801071c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010720:	00ed      	lsls	r5, r5, #3
 8010722:	fb0c 6c07 	mla	ip, ip, r7, r6
 8010726:	b2ed      	uxtb	r5, r5
 8010728:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801072c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010730:	fb15 f500 	smulbb	r5, r5, r0
 8010734:	fa5f fe8e 	uxtb.w	lr, lr
 8010738:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801073c:	fb0e 5507 	mla	r5, lr, r7, r5
 8010740:	fb19 f900 	smulbb	r9, r9, r0
 8010744:	fa1f fc8c 	uxth.w	ip, ip
 8010748:	b2ad      	uxth	r5, r5
 801074a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801074e:	fb06 9607 	mla	r6, r6, r7, r9
 8010752:	f10c 0001 	add.w	r0, ip, #1
 8010756:	f105 0901 	add.w	r9, r5, #1
 801075a:	eb00 2c1c 	add.w	ip, r0, ip, lsr #8
 801075e:	eb09 2915 	add.w	r9, r9, r5, lsr #8
 8010762:	b2b6      	uxth	r6, r6
 8010764:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8010768:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801076c:	ea4c 0c09 	orr.w	ip, ip, r9
 8010770:	f106 0901 	add.w	r9, r6, #1
 8010774:	eb09 2916 	add.w	r9, r9, r6, lsr #8
 8010778:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801077c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010780:	ea4c 0c09 	orr.w	ip, ip, r9
 8010784:	f8aa c000 	strh.w	ip, [sl]
 8010788:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801078a:	4401      	add	r1, r0
 801078c:	9814      	ldr	r0, [sp, #80]	; 0x50
 801078e:	4402      	add	r2, r0
 8010790:	9800      	ldr	r0, [sp, #0]
 8010792:	3801      	subs	r0, #1
 8010794:	f10a 0a02 	add.w	sl, sl, #2
 8010798:	9000      	str	r0, [sp, #0]
 801079a:	e6ea      	b.n	8010572 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8a>
 801079c:	b007      	add	sp, #28
 801079e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080107a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80107a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107a6:	b087      	sub	sp, #28
 80107a8:	468b      	mov	fp, r1
 80107aa:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80107ac:	9205      	str	r2, [sp, #20]
 80107ae:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80107b2:	9202      	str	r2, [sp, #8]
 80107b4:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80107b8:	6869      	ldr	r1, [r5, #4]
 80107ba:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 80107bc:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 80107c0:	fb01 2000 	mla	r0, r1, r0, r2
 80107c4:	682a      	ldr	r2, [r5, #0]
 80107c6:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80107ca:	6822      	ldr	r2, [r4, #0]
 80107cc:	9201      	str	r2, [sp, #4]
 80107ce:	6862      	ldr	r2, [r4, #4]
 80107d0:	9204      	str	r2, [sp, #16]
 80107d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80107d6:	f1bb 0f00 	cmp.w	fp, #0
 80107da:	dc03      	bgt.n	80107e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80107dc:	9a05      	ldr	r2, [sp, #20]
 80107de:	2a00      	cmp	r2, #0
 80107e0:	f340 813d 	ble.w	8010a5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80107e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80107e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80107ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80107ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80107f0:	2b00      	cmp	r3, #0
 80107f2:	dd0f      	ble.n	8010814 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80107f4:	140c      	asrs	r4, r1, #16
 80107f6:	d406      	bmi.n	8010806 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80107f8:	454c      	cmp	r4, r9
 80107fa:	da04      	bge.n	8010806 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80107fc:	1414      	asrs	r4, r2, #16
 80107fe:	d402      	bmi.n	8010806 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 8010800:	9d02      	ldr	r5, [sp, #8]
 8010802:	42ac      	cmp	r4, r5
 8010804:	db07      	blt.n	8010816 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010806:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010808:	4421      	add	r1, r4
 801080a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801080c:	3b01      	subs	r3, #1
 801080e:	4422      	add	r2, r4
 8010810:	3002      	adds	r0, #2
 8010812:	e7ed      	b.n	80107f0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e>
 8010814:	d018      	beq.n	8010848 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa6>
 8010816:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010818:	1e5c      	subs	r4, r3, #1
 801081a:	fb05 1504 	mla	r5, r5, r4, r1
 801081e:	142d      	asrs	r5, r5, #16
 8010820:	d40a      	bmi.n	8010838 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010822:	454d      	cmp	r5, r9
 8010824:	da08      	bge.n	8010838 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010826:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010828:	fb05 2404 	mla	r4, r5, r4, r2
 801082c:	1424      	asrs	r4, r4, #16
 801082e:	d403      	bmi.n	8010838 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 8010830:	9d02      	ldr	r5, [sp, #8]
 8010832:	42ac      	cmp	r4, r5
 8010834:	f2c0 80ae 	blt.w	8010994 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f2>
 8010838:	2600      	movs	r6, #0
 801083a:	199c      	adds	r4, r3, r6
 801083c:	2c00      	cmp	r4, #0
 801083e:	dc3e      	bgt.n	80108be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 8010840:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010844:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010848:	f1bb 0f00 	cmp.w	fp, #0
 801084c:	f340 8107 	ble.w	8010a5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8010850:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010854:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010858:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801085c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801085e:	f1bb 0b01 	subs.w	fp, fp, #1
 8010862:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010866:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801086a:	eeb0 6a62 	vmov.f32	s12, s5
 801086e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010872:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010876:	ee77 2a62 	vsub.f32	s5, s14, s5
 801087a:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 801087e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010882:	eeb0 6a43 	vmov.f32	s12, s6
 8010886:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801088a:	ee12 2a90 	vmov	r2, s5
 801088e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010892:	fb92 f3f3 	sdiv	r3, r2, r3
 8010896:	ee13 2a10 	vmov	r2, s6
 801089a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801089e:	9313      	str	r3, [sp, #76]	; 0x4c
 80108a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108a2:	fb92 f3f3 	sdiv	r3, r2, r3
 80108a6:	9a05      	ldr	r2, [sp, #20]
 80108a8:	9314      	str	r3, [sp, #80]	; 0x50
 80108aa:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80108ae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80108b0:	eeb0 3a67 	vmov.f32	s6, s15
 80108b4:	bf08      	it	eq
 80108b6:	4613      	moveq	r3, r2
 80108b8:	eef0 2a47 	vmov.f32	s5, s14
 80108bc:	e78b      	b.n	80107d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34>
 80108be:	140c      	asrs	r4, r1, #16
 80108c0:	d45a      	bmi.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80108c2:	454c      	cmp	r4, r9
 80108c4:	da58      	bge.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80108c6:	1415      	asrs	r5, r2, #16
 80108c8:	d456      	bmi.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80108ca:	9f02      	ldr	r7, [sp, #8]
 80108cc:	42bd      	cmp	r5, r7
 80108ce:	da53      	bge.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80108d0:	fb09 4505 	mla	r5, r9, r5, r4
 80108d4:	9c04      	ldr	r4, [sp, #16]
 80108d6:	5d64      	ldrb	r4, [r4, r5]
 80108d8:	2cff      	cmp	r4, #255	; 0xff
 80108da:	d053      	beq.n	8010984 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 80108dc:	2c00      	cmp	r4, #0
 80108de:	d04b      	beq.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80108e0:	9f01      	ldr	r7, [sp, #4]
 80108e2:	f837 8015 	ldrh.w	r8, [r7, r5, lsl #1]
 80108e6:	f06f 0501 	mvn.w	r5, #1
 80108ea:	4375      	muls	r5, r6
 80108ec:	9503      	str	r5, [sp, #12]
 80108ee:	5b45      	ldrh	r5, [r0, r5]
 80108f0:	fa1f fc84 	uxth.w	ip, r4
 80108f4:	122f      	asrs	r7, r5, #8
 80108f6:	43e4      	mvns	r4, r4
 80108f8:	b2e4      	uxtb	r4, r4
 80108fa:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80108fe:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010902:	fb17 f704 	smulbb	r7, r7, r4
 8010906:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801090a:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801090e:	00ed      	lsls	r5, r5, #3
 8010910:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8010914:	b2ed      	uxtb	r5, r5
 8010916:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801091a:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801091e:	fb15 f504 	smulbb	r5, r5, r4
 8010922:	fa5f f888 	uxtb.w	r8, r8
 8010926:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801092a:	fb08 550c 	mla	r5, r8, ip, r5
 801092e:	fb1a fa04 	smulbb	sl, sl, r4
 8010932:	fa1f fe8e 	uxth.w	lr, lr
 8010936:	b2ad      	uxth	r5, r5
 8010938:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801093c:	fb07 a70c 	mla	r7, r7, ip, sl
 8010940:	f10e 0401 	add.w	r4, lr, #1
 8010944:	f105 0a01 	add.w	sl, r5, #1
 8010948:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 801094c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010950:	b2bf      	uxth	r7, r7
 8010952:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010956:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801095a:	ea4e 0e0a 	orr.w	lr, lr, sl
 801095e:	f107 0a01 	add.w	sl, r7, #1
 8010962:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010966:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801096a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801096e:	9c03      	ldr	r4, [sp, #12]
 8010970:	ea4e 0e0a 	orr.w	lr, lr, sl
 8010974:	f820 e004 	strh.w	lr, [r0, r4]
 8010978:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801097a:	4421      	add	r1, r4
 801097c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801097e:	3e01      	subs	r6, #1
 8010980:	4422      	add	r2, r4
 8010982:	e75a      	b.n	801083a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010984:	9c01      	ldr	r4, [sp, #4]
 8010986:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 801098a:	f06f 0401 	mvn.w	r4, #1
 801098e:	4374      	muls	r4, r6
 8010990:	5305      	strh	r5, [r0, r4]
 8010992:	e7f1      	b.n	8010978 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010994:	f04f 0800 	mov.w	r8, #0
 8010998:	eba3 0408 	sub.w	r4, r3, r8
 801099c:	2c00      	cmp	r4, #0
 801099e:	f77f af4f 	ble.w	8010840 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80109a2:	140c      	asrs	r4, r1, #16
 80109a4:	1415      	asrs	r5, r2, #16
 80109a6:	fb09 4505 	mla	r5, r9, r5, r4
 80109aa:	9c04      	ldr	r4, [sp, #16]
 80109ac:	5d64      	ldrb	r4, [r4, r5]
 80109ae:	2cff      	cmp	r4, #255	; 0xff
 80109b0:	d04f      	beq.n	8010a52 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 80109b2:	2c00      	cmp	r4, #0
 80109b4:	d046      	beq.n	8010a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 80109b6:	9e01      	ldr	r6, [sp, #4]
 80109b8:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80109bc:	f830 5018 	ldrh.w	r5, [r0, r8, lsl #1]
 80109c0:	b2a7      	uxth	r7, r4
 80109c2:	122e      	asrs	r6, r5, #8
 80109c4:	43e4      	mvns	r4, r4
 80109c6:	b2e4      	uxtb	r4, r4
 80109c8:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80109cc:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80109d0:	fb16 f604 	smulbb	r6, r6, r4
 80109d4:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80109d8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80109dc:	00ed      	lsls	r5, r5, #3
 80109de:	fb0c 6c07 	mla	ip, ip, r7, r6
 80109e2:	b2ed      	uxtb	r5, r5
 80109e4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80109e8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80109ec:	fb15 f504 	smulbb	r5, r5, r4
 80109f0:	fa5f fe8e 	uxtb.w	lr, lr
 80109f4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80109f8:	fb0e 5507 	mla	r5, lr, r7, r5
 80109fc:	fb1a fa04 	smulbb	sl, sl, r4
 8010a00:	fa1f fc8c 	uxth.w	ip, ip
 8010a04:	b2ad      	uxth	r5, r5
 8010a06:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010a0a:	fb06 a607 	mla	r6, r6, r7, sl
 8010a0e:	f10c 0401 	add.w	r4, ip, #1
 8010a12:	f105 0a01 	add.w	sl, r5, #1
 8010a16:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8010a1a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010a1e:	b2b6      	uxth	r6, r6
 8010a20:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010a24:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010a28:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a2c:	f106 0a01 	add.w	sl, r6, #1
 8010a30:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8010a34:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010a38:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010a3c:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010a40:	f820 c018 	strh.w	ip, [r0, r8, lsl #1]
 8010a44:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8010a46:	4421      	add	r1, r4
 8010a48:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8010a4a:	f108 0801 	add.w	r8, r8, #1
 8010a4e:	4422      	add	r2, r4
 8010a50:	e7a2      	b.n	8010998 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8010a52:	9c01      	ldr	r4, [sp, #4]
 8010a54:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8010a58:	f820 4018 	strh.w	r4, [r0, r8, lsl #1]
 8010a5c:	e7f2      	b.n	8010a44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a2>
 8010a5e:	b007      	add	sp, #28
 8010a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a64 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010a64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a68:	b085      	sub	sp, #20
 8010a6a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8010a6c:	9203      	str	r2, [sp, #12]
 8010a6e:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8010a72:	9201      	str	r2, [sp, #4]
 8010a74:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8010a78:	9100      	str	r1, [sp, #0]
 8010a7a:	6841      	ldr	r1, [r0, #4]
 8010a7c:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 8010a80:	f9bd 8058 	ldrsh.w	r8, [sp, #88]	; 0x58
 8010a84:	fb01 2404 	mla	r4, r1, r4, r2
 8010a88:	6802      	ldr	r2, [r0, #0]
 8010a8a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010a8e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010a90:	fa1f fe85 	uxth.w	lr, r5
 8010a94:	6812      	ldr	r2, [r2, #0]
 8010a96:	9202      	str	r2, [sp, #8]
 8010a98:	43ed      	mvns	r5, r5
 8010a9a:	b2ed      	uxtb	r5, r5
 8010a9c:	9a00      	ldr	r2, [sp, #0]
 8010a9e:	2a00      	cmp	r2, #0
 8010aa0:	dc03      	bgt.n	8010aaa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010aa2:	9a03      	ldr	r2, [sp, #12]
 8010aa4:	2a00      	cmp	r2, #0
 8010aa6:	f340 8117 	ble.w	8010cd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8010aaa:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8010aac:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010ab0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010ab2:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8010ab6:	2b00      	cmp	r3, #0
 8010ab8:	dd0f      	ble.n	8010ada <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010aba:	1408      	asrs	r0, r1, #16
 8010abc:	d406      	bmi.n	8010acc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010abe:	4540      	cmp	r0, r8
 8010ac0:	da04      	bge.n	8010acc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010ac2:	1410      	asrs	r0, r2, #16
 8010ac4:	d402      	bmi.n	8010acc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010ac6:	9e01      	ldr	r6, [sp, #4]
 8010ac8:	42b0      	cmp	r0, r6
 8010aca:	db07      	blt.n	8010adc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010acc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ace:	4401      	add	r1, r0
 8010ad0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010ad2:	3b01      	subs	r3, #1
 8010ad4:	4402      	add	r2, r0
 8010ad6:	3402      	adds	r4, #2
 8010ad8:	e7ed      	b.n	8010ab6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52>
 8010ada:	d069      	beq.n	8010bb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x14c>
 8010adc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010ade:	1e58      	subs	r0, r3, #1
 8010ae0:	fb06 1600 	mla	r6, r6, r0, r1
 8010ae4:	1436      	asrs	r6, r6, #16
 8010ae6:	d459      	bmi.n	8010b9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010ae8:	4546      	cmp	r6, r8
 8010aea:	da57      	bge.n	8010b9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010aec:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8010aee:	fb06 2000 	mla	r0, r6, r0, r2
 8010af2:	1400      	asrs	r0, r0, #16
 8010af4:	d452      	bmi.n	8010b9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010af6:	9e01      	ldr	r6, [sp, #4]
 8010af8:	42b0      	cmp	r0, r6
 8010afa:	da4f      	bge.n	8010b9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x138>
 8010afc:	469a      	mov	sl, r3
 8010afe:	46a3      	mov	fp, r4
 8010b00:	f1ba 0f00 	cmp.w	sl, #0
 8010b04:	dd50      	ble.n	8010ba8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x144>
 8010b06:	140e      	asrs	r6, r1, #16
 8010b08:	1410      	asrs	r0, r2, #16
 8010b0a:	fb08 6000 	mla	r0, r8, r0, r6
 8010b0e:	9e02      	ldr	r6, [sp, #8]
 8010b10:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010b14:	f8bb 6000 	ldrh.w	r6, [fp]
 8010b18:	1237      	asrs	r7, r6, #8
 8010b1a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010b1e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010b22:	fb17 f705 	smulbb	r7, r7, r5
 8010b26:	ea4f 09e6 	mov.w	r9, r6, asr #3
 8010b2a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010b2e:	00f6      	lsls	r6, r6, #3
 8010b30:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010b34:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010b38:	10c7      	asrs	r7, r0, #3
 8010b3a:	b2f6      	uxtb	r6, r6
 8010b3c:	00c0      	lsls	r0, r0, #3
 8010b3e:	fb19 f905 	smulbb	r9, r9, r5
 8010b42:	fb16 f605 	smulbb	r6, r6, r5
 8010b46:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010b4a:	b2c0      	uxtb	r0, r0
 8010b4c:	fa1f fc8c 	uxth.w	ip, ip
 8010b50:	fb07 970e 	mla	r7, r7, lr, r9
 8010b54:	fb00 600e 	mla	r0, r0, lr, r6
 8010b58:	b280      	uxth	r0, r0
 8010b5a:	b2bf      	uxth	r7, r7
 8010b5c:	f10c 0601 	add.w	r6, ip, #1
 8010b60:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010b64:	f107 0901 	add.w	r9, r7, #1
 8010b68:	1c46      	adds	r6, r0, #1
 8010b6a:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010b6e:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8010b72:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010b74:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010b78:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010b7c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8010b80:	ea4c 0c06 	orr.w	ip, ip, r6
 8010b84:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8010b88:	4401      	add	r1, r0
 8010b8a:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010b8c:	ea4c 0c09 	orr.w	ip, ip, r9
 8010b90:	f82b cb02 	strh.w	ip, [fp], #2
 8010b94:	4402      	add	r2, r0
 8010b96:	f10a 3aff 	add.w	sl, sl, #4294967295
 8010b9a:	e7b1      	b.n	8010b00 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8010b9c:	f04f 0900 	mov.w	r9, #0
 8010ba0:	eb03 0009 	add.w	r0, r3, r9
 8010ba4:	2800      	cmp	r0, #0
 8010ba6:	dc41      	bgt.n	8010c2c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c8>
 8010ba8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010bac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010bb0:	9b00      	ldr	r3, [sp, #0]
 8010bb2:	2b00      	cmp	r3, #0
 8010bb4:	f340 8090 	ble.w	8010cd8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8010bb8:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010bbc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8010bc0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8010bc4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010bc6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010bca:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010bce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010bd2:	eef0 6a62 	vmov.f32	s13, s5
 8010bd6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010bda:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010bde:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010be2:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8010be6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010bea:	eef0 6a43 	vmov.f32	s13, s6
 8010bee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010bf2:	ee12 2a90 	vmov	r2, s5
 8010bf6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010bfa:	fb92 f3f3 	sdiv	r3, r2, r3
 8010bfe:	ee13 2a10 	vmov	r2, s6
 8010c02:	9311      	str	r3, [sp, #68]	; 0x44
 8010c04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c06:	fb92 f3f3 	sdiv	r3, r2, r3
 8010c0a:	9312      	str	r3, [sp, #72]	; 0x48
 8010c0c:	9b00      	ldr	r3, [sp, #0]
 8010c0e:	9a03      	ldr	r2, [sp, #12]
 8010c10:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010c14:	3b01      	subs	r3, #1
 8010c16:	9300      	str	r3, [sp, #0]
 8010c18:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8010c1c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010c1e:	eeb0 3a67 	vmov.f32	s6, s15
 8010c22:	bf08      	it	eq
 8010c24:	4613      	moveq	r3, r2
 8010c26:	eef0 2a47 	vmov.f32	s5, s14
 8010c2a:	e737      	b.n	8010a9c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38>
 8010c2c:	140e      	asrs	r6, r1, #16
 8010c2e:	d44c      	bmi.n	8010cca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010c30:	4546      	cmp	r6, r8
 8010c32:	da4a      	bge.n	8010cca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010c34:	1410      	asrs	r0, r2, #16
 8010c36:	d448      	bmi.n	8010cca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010c38:	9f01      	ldr	r7, [sp, #4]
 8010c3a:	42b8      	cmp	r0, r7
 8010c3c:	da45      	bge.n	8010cca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8010c3e:	fb08 6000 	mla	r0, r8, r0, r6
 8010c42:	9e02      	ldr	r6, [sp, #8]
 8010c44:	f836 0010 	ldrh.w	r0, [r6, r0, lsl #1]
 8010c48:	f06f 0601 	mvn.w	r6, #1
 8010c4c:	fb06 fb09 	mul.w	fp, r6, r9
 8010c50:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8010c54:	f834 600b 	ldrh.w	r6, [r4, fp]
 8010c58:	1237      	asrs	r7, r6, #8
 8010c5a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010c5e:	fb17 f705 	smulbb	r7, r7, r5
 8010c62:	ea4f 0ae6 	mov.w	sl, r6, asr #3
 8010c66:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010c6a:	00f6      	lsls	r6, r6, #3
 8010c6c:	fb0c 7c0e 	mla	ip, ip, lr, r7
 8010c70:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8010c74:	10c7      	asrs	r7, r0, #3
 8010c76:	b2f6      	uxtb	r6, r6
 8010c78:	00c0      	lsls	r0, r0, #3
 8010c7a:	fb1a fa05 	smulbb	sl, sl, r5
 8010c7e:	fb16 f605 	smulbb	r6, r6, r5
 8010c82:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010c86:	b2c0      	uxtb	r0, r0
 8010c88:	fa1f fc8c 	uxth.w	ip, ip
 8010c8c:	fb07 a70e 	mla	r7, r7, lr, sl
 8010c90:	fb00 600e 	mla	r0, r0, lr, r6
 8010c94:	b2bf      	uxth	r7, r7
 8010c96:	b280      	uxth	r0, r0
 8010c98:	f10c 0601 	add.w	r6, ip, #1
 8010c9c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8010ca0:	f107 0a01 	add.w	sl, r7, #1
 8010ca4:	1c46      	adds	r6, r0, #1
 8010ca6:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8010caa:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8010cae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8010cb2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010cb6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8010cba:	ea4c 0c06 	orr.w	ip, ip, r6
 8010cbe:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8010cc2:	ea4c 0c0a 	orr.w	ip, ip, sl
 8010cc6:	f824 c00b 	strh.w	ip, [r4, fp]
 8010cca:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ccc:	4401      	add	r1, r0
 8010cce:	9812      	ldr	r0, [sp, #72]	; 0x48
 8010cd0:	f109 39ff 	add.w	r9, r9, #4294967295
 8010cd4:	4402      	add	r2, r0
 8010cd6:	e763      	b.n	8010ba0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x13c>
 8010cd8:	b005      	add	sp, #20
 8010cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010cde <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010cde:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010ce2:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010ce4:	9201      	str	r2, [sp, #4]
 8010ce6:	e9dd 2512 	ldrd	r2, r5, [sp, #72]	; 0x48
 8010cea:	6844      	ldr	r4, [r0, #4]
 8010cec:	6800      	ldr	r0, [r0, #0]
 8010cee:	f9bd c050 	ldrsh.w	ip, [sp, #80]	; 0x50
 8010cf2:	f9bd e054 	ldrsh.w	lr, [sp, #84]	; 0x54
 8010cf6:	fb04 2505 	mla	r5, r4, r5, r2
 8010cfa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8010cfe:	9816      	ldr	r0, [sp, #88]	; 0x58
 8010d00:	e9dd 760f 	ldrd	r7, r6, [sp, #60]	; 0x3c
 8010d04:	6802      	ldr	r2, [r0, #0]
 8010d06:	9200      	str	r2, [sp, #0]
 8010d08:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010d0c:	2900      	cmp	r1, #0
 8010d0e:	dc03      	bgt.n	8010d18 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 8010d10:	9a01      	ldr	r2, [sp, #4]
 8010d12:	2a00      	cmp	r2, #0
 8010d14:	f340 8095 	ble.w	8010e42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010d18:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8010d1a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8010d1e:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8010d20:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010d24:	2b00      	cmp	r3, #0
 8010d26:	dd0e      	ble.n	8010d46 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8010d28:	ea5f 4824 	movs.w	r8, r4, asr #16
 8010d2c:	d406      	bmi.n	8010d3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010d2e:	45e0      	cmp	r8, ip
 8010d30:	da04      	bge.n	8010d3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010d32:	ea5f 4820 	movs.w	r8, r0, asr #16
 8010d36:	d401      	bmi.n	8010d3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 8010d38:	45f0      	cmp	r8, lr
 8010d3a:	db05      	blt.n	8010d48 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8010d3c:	443c      	add	r4, r7
 8010d3e:	4430      	add	r0, r6
 8010d40:	3b01      	subs	r3, #1
 8010d42:	3502      	adds	r5, #2
 8010d44:	e7ee      	b.n	8010d24 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46>
 8010d46:	d010      	beq.n	8010d6a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8c>
 8010d48:	f103 38ff 	add.w	r8, r3, #4294967295
 8010d4c:	fb07 4908 	mla	r9, r7, r8, r4
 8010d50:	ea5f 4929 	movs.w	r9, r9, asr #16
 8010d54:	d53d      	bpl.n	8010dd2 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8010d56:	4698      	mov	r8, r3
 8010d58:	eb05 0b43 	add.w	fp, r5, r3, lsl #1
 8010d5c:	f1b8 0f00 	cmp.w	r8, #0
 8010d60:	dc55      	bgt.n	8010e0e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x130>
 8010d62:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010d66:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8010d6a:	2900      	cmp	r1, #0
 8010d6c:	dd69      	ble.n	8010e42 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x164>
 8010d6e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010d72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010d76:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010d7a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010d7c:	3901      	subs	r1, #1
 8010d7e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010d82:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010d86:	eeb0 6a62 	vmov.f32	s12, s5
 8010d8a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010d8e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010d92:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010d96:	ed8d 6a0d 	vstr	s12, [sp, #52]	; 0x34
 8010d9a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010d9e:	eeb0 6a43 	vmov.f32	s12, s6
 8010da2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010da6:	ee12 2a90 	vmov	r2, s5
 8010daa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010dae:	fb92 f7f3 	sdiv	r7, r2, r3
 8010db2:	ee13 2a10 	vmov	r2, s6
 8010db6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010dba:	fb92 f6f3 	sdiv	r6, r2, r3
 8010dbe:	9a01      	ldr	r2, [sp, #4]
 8010dc0:	ed8d 6a0e 	vstr	s12, [sp, #56]	; 0x38
 8010dc4:	bf08      	it	eq
 8010dc6:	4613      	moveq	r3, r2
 8010dc8:	eeb0 3a67 	vmov.f32	s6, s15
 8010dcc:	eef0 2a47 	vmov.f32	s5, s14
 8010dd0:	e79c      	b.n	8010d0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e>
 8010dd2:	45e1      	cmp	r9, ip
 8010dd4:	dabf      	bge.n	8010d56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010dd6:	fb06 0808 	mla	r8, r6, r8, r0
 8010dda:	ea5f 4828 	movs.w	r8, r8, asr #16
 8010dde:	d4ba      	bmi.n	8010d56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010de0:	45f0      	cmp	r8, lr
 8010de2:	dab8      	bge.n	8010d56 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8010de4:	4698      	mov	r8, r3
 8010de6:	46aa      	mov	sl, r5
 8010de8:	f1b8 0f00 	cmp.w	r8, #0
 8010dec:	ddb9      	ble.n	8010d62 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8010dee:	ea4f 4920 	mov.w	r9, r0, asr #16
 8010df2:	ea4f 4b24 	mov.w	fp, r4, asr #16
 8010df6:	fb0c b909 	mla	r9, ip, r9, fp
 8010dfa:	9a00      	ldr	r2, [sp, #0]
 8010dfc:	f832 9019 	ldrh.w	r9, [r2, r9, lsl #1]
 8010e00:	f82a 9b02 	strh.w	r9, [sl], #2
 8010e04:	443c      	add	r4, r7
 8010e06:	4430      	add	r0, r6
 8010e08:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e0c:	e7ec      	b.n	8010de8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8010e0e:	ea5f 4a24 	movs.w	sl, r4, asr #16
 8010e12:	d411      	bmi.n	8010e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010e14:	45e2      	cmp	sl, ip
 8010e16:	da0f      	bge.n	8010e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010e18:	ea5f 4920 	movs.w	r9, r0, asr #16
 8010e1c:	d40c      	bmi.n	8010e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010e1e:	45f1      	cmp	r9, lr
 8010e20:	da0a      	bge.n	8010e38 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8010e22:	fb0c a909 	mla	r9, ip, r9, sl
 8010e26:	9a00      	ldr	r2, [sp, #0]
 8010e28:	f832 a019 	ldrh.w	sl, [r2, r9, lsl #1]
 8010e2c:	f06f 0201 	mvn.w	r2, #1
 8010e30:	fb02 f908 	mul.w	r9, r2, r8
 8010e34:	f82b a009 	strh.w	sl, [fp, r9]
 8010e38:	443c      	add	r4, r7
 8010e3a:	4430      	add	r0, r6
 8010e3c:	f108 38ff 	add.w	r8, r8, #4294967295
 8010e40:	e78c      	b.n	8010d5c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7e>
 8010e42:	b003      	add	sp, #12
 8010e44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010e48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8010e48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010e4c:	b087      	sub	sp, #28
 8010e4e:	468b      	mov	fp, r1
 8010e50:	9204      	str	r2, [sp, #16]
 8010e52:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 8010e56:	9815      	ldr	r0, [sp, #84]	; 0x54
 8010e58:	9201      	str	r2, [sp, #4]
 8010e5a:	f89d 206c 	ldrb.w	r2, [sp, #108]	; 0x6c
 8010e5e:	9205      	str	r2, [sp, #20]
 8010e60:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8010e64:	6841      	ldr	r1, [r0, #4]
 8010e66:	f9bd 8060 	ldrsh.w	r8, [sp, #96]	; 0x60
 8010e6a:	fb01 2404 	mla	r4, r1, r4, r2
 8010e6e:	6802      	ldr	r2, [r0, #0]
 8010e70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8010e74:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8010e76:	6812      	ldr	r2, [r2, #0]
 8010e78:	9203      	str	r2, [sp, #12]
 8010e7a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8010e7e:	f1bb 0f00 	cmp.w	fp, #0
 8010e82:	dc03      	bgt.n	8010e8c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44>
 8010e84:	9a04      	ldr	r2, [sp, #16]
 8010e86:	2a00      	cmp	r2, #0
 8010e88:	f340 812c 	ble.w	80110e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010e8c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8010e8e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8010e92:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8010e94:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8010e98:	2b00      	cmp	r3, #0
 8010e9a:	dd0f      	ble.n	8010ebc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8010e9c:	1402      	asrs	r2, r0, #16
 8010e9e:	d406      	bmi.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010ea0:	4542      	cmp	r2, r8
 8010ea2:	da04      	bge.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010ea4:	140a      	asrs	r2, r1, #16
 8010ea6:	d402      	bmi.n	8010eae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8010ea8:	9d01      	ldr	r5, [sp, #4]
 8010eaa:	42aa      	cmp	r2, r5
 8010eac:	db07      	blt.n	8010ebe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8010eae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8010eb0:	4410      	add	r0, r2
 8010eb2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010eb4:	3b01      	subs	r3, #1
 8010eb6:	4411      	add	r1, r2
 8010eb8:	3402      	adds	r4, #2
 8010eba:	e7ed      	b.n	8010e98 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8010ebc:	d01a      	beq.n	8010ef4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 8010ebe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010ec0:	1e5a      	subs	r2, r3, #1
 8010ec2:	fb05 0502 	mla	r5, r5, r2, r0
 8010ec6:	142d      	asrs	r5, r5, #16
 8010ec8:	d40a      	bmi.n	8010ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010eca:	4545      	cmp	r5, r8
 8010ecc:	da08      	bge.n	8010ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010ece:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8010ed0:	fb05 1202 	mla	r2, r5, r2, r1
 8010ed4:	1412      	asrs	r2, r2, #16
 8010ed6:	d403      	bmi.n	8010ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x98>
 8010ed8:	9d01      	ldr	r5, [sp, #4]
 8010eda:	42aa      	cmp	r2, r5
 8010edc:	f2c0 80a6 	blt.w	801102c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8010ee0:	f04f 0c00 	mov.w	ip, #0
 8010ee4:	eb03 020c 	add.w	r2, r3, ip
 8010ee8:	2a00      	cmp	r2, #0
 8010eea:	dc3e      	bgt.n	8010f6a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x122>
 8010eec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8010ef0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010ef4:	f1bb 0f00 	cmp.w	fp, #0
 8010ef8:	f340 80f4 	ble.w	80110e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 8010efc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8010f00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8010f04:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8010f08:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f0a:	f1bb 0b01 	subs.w	fp, fp, #1
 8010f0e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8010f12:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8010f16:	eeb0 6a62 	vmov.f32	s12, s5
 8010f1a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8010f1e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f22:	ee77 2a62 	vsub.f32	s5, s14, s5
 8010f26:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8010f2a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8010f2e:	eeb0 6a43 	vmov.f32	s12, s6
 8010f32:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8010f36:	ee12 2a90 	vmov	r2, s5
 8010f3a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8010f3e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f42:	ee13 2a10 	vmov	r2, s6
 8010f46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8010f4a:	9313      	str	r3, [sp, #76]	; 0x4c
 8010f4c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f4e:	fb92 f3f3 	sdiv	r3, r2, r3
 8010f52:	9a04      	ldr	r2, [sp, #16]
 8010f54:	9314      	str	r3, [sp, #80]	; 0x50
 8010f56:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8010f5a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010f5c:	eeb0 3a67 	vmov.f32	s6, s15
 8010f60:	bf08      	it	eq
 8010f62:	4613      	moveq	r3, r2
 8010f64:	eef0 2a47 	vmov.f32	s5, s14
 8010f68:	e789      	b.n	8010e7e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36>
 8010f6a:	1405      	asrs	r5, r0, #16
 8010f6c:	d457      	bmi.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f6e:	4545      	cmp	r5, r8
 8010f70:	da55      	bge.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f72:	140a      	asrs	r2, r1, #16
 8010f74:	d453      	bmi.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f76:	9e01      	ldr	r6, [sp, #4]
 8010f78:	42b2      	cmp	r2, r6
 8010f7a:	da50      	bge.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f7c:	fb08 5202 	mla	r2, r8, r2, r5
 8010f80:	9d03      	ldr	r5, [sp, #12]
 8010f82:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8010f86:	0e2e      	lsrs	r6, r5, #24
 8010f88:	d049      	beq.n	801101e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8010f8a:	f06f 0201 	mvn.w	r2, #1
 8010f8e:	fb02 f20c 	mul.w	r2, r2, ip
 8010f92:	9202      	str	r2, [sp, #8]
 8010f94:	f834 e002 	ldrh.w	lr, [r4, r2]
 8010f98:	9a05      	ldr	r2, [sp, #20]
 8010f9a:	4356      	muls	r6, r2
 8010f9c:	1c72      	adds	r2, r6, #1
 8010f9e:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8010fa2:	1212      	asrs	r2, r2, #8
 8010fa4:	fa1f f982 	uxth.w	r9, r2
 8010fa8:	ea4f 272e 	mov.w	r7, lr, asr #8
 8010fac:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8010fb0:	43d2      	mvns	r2, r2
 8010fb2:	b2d2      	uxtb	r2, r2
 8010fb4:	fb16 f609 	smulbb	r6, r6, r9
 8010fb8:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010fbc:	fb07 6702 	mla	r7, r7, r2, r6
 8010fc0:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8010fc4:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8010fc8:	b2ed      	uxtb	r5, r5
 8010fca:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8010fce:	fa5f fe8e 	uxtb.w	lr, lr
 8010fd2:	fb15 f509 	smulbb	r5, r5, r9
 8010fd6:	fb0e 5502 	mla	r5, lr, r2, r5
 8010fda:	b2bf      	uxth	r7, r7
 8010fdc:	fb1a fa09 	smulbb	sl, sl, r9
 8010fe0:	b2ad      	uxth	r5, r5
 8010fe2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010fe6:	fb06 a602 	mla	r6, r6, r2, sl
 8010fea:	1c7a      	adds	r2, r7, #1
 8010fec:	f105 0a01 	add.w	sl, r5, #1
 8010ff0:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8010ff4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8010ff8:	b2b6      	uxth	r6, r6
 8010ffa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8010ffe:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011002:	ea47 070a 	orr.w	r7, r7, sl
 8011006:	f106 0a01 	add.w	sl, r6, #1
 801100a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801100e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8011012:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8011016:	9a02      	ldr	r2, [sp, #8]
 8011018:	ea47 070a 	orr.w	r7, r7, sl
 801101c:	52a7      	strh	r7, [r4, r2]
 801101e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8011020:	4410      	add	r0, r2
 8011022:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011024:	f10c 3cff 	add.w	ip, ip, #4294967295
 8011028:	4411      	add	r1, r2
 801102a:	e75b      	b.n	8010ee4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801102c:	f04f 0e00 	mov.w	lr, #0
 8011030:	eba3 020e 	sub.w	r2, r3, lr
 8011034:	2a00      	cmp	r2, #0
 8011036:	f77f af59 	ble.w	8010eec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 801103a:	1405      	asrs	r5, r0, #16
 801103c:	140a      	asrs	r2, r1, #16
 801103e:	fb08 5202 	mla	r2, r8, r2, r5
 8011042:	9d03      	ldr	r5, [sp, #12]
 8011044:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8011048:	0e2e      	lsrs	r6, r5, #24
 801104a:	d044      	beq.n	80110d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28e>
 801104c:	9a05      	ldr	r2, [sp, #20]
 801104e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8011052:	4356      	muls	r6, r2
 8011054:	1c72      	adds	r2, r6, #1
 8011056:	eb02 2226 	add.w	r2, r2, r6, asr #8
 801105a:	1212      	asrs	r2, r2, #8
 801105c:	fa1f f982 	uxth.w	r9, r2
 8011060:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011064:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8011068:	43d2      	mvns	r2, r2
 801106a:	b2d2      	uxtb	r2, r2
 801106c:	fb16 f609 	smulbb	r6, r6, r9
 8011070:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011074:	fb07 6702 	mla	r7, r7, r2, r6
 8011078:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 801107c:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8011080:	b2ed      	uxtb	r5, r5
 8011082:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8011086:	fa5f fc8c 	uxtb.w	ip, ip
 801108a:	fb15 f509 	smulbb	r5, r5, r9
 801108e:	fb0c 5502 	mla	r5, ip, r2, r5
 8011092:	b2bf      	uxth	r7, r7
 8011094:	fb1a fa09 	smulbb	sl, sl, r9
 8011098:	b2ad      	uxth	r5, r5
 801109a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801109e:	fb06 a602 	mla	r6, r6, r2, sl
 80110a2:	1c7a      	adds	r2, r7, #1
 80110a4:	f105 0a01 	add.w	sl, r5, #1
 80110a8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80110ac:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80110b0:	b2b6      	uxth	r6, r6
 80110b2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80110b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80110ba:	ea47 070a 	orr.w	r7, r7, sl
 80110be:	f106 0a01 	add.w	sl, r6, #1
 80110c2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80110c6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80110ca:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80110ce:	ea47 070a 	orr.w	r7, r7, sl
 80110d2:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 80110d6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80110d8:	4410      	add	r0, r2
 80110da:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80110dc:	f10e 0e01 	add.w	lr, lr, #1
 80110e0:	4411      	add	r1, r2
 80110e2:	e7a5      	b.n	8011030 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 80110e4:	b007      	add	sp, #28
 80110e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080110ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80110ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80110f0:	b087      	sub	sp, #28
 80110f2:	468b      	mov	fp, r1
 80110f4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80110f6:	9205      	str	r2, [sp, #20]
 80110f8:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80110fc:	9201      	str	r2, [sp, #4]
 80110fe:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8011102:	6861      	ldr	r1, [r4, #4]
 8011104:	f9bd 9060 	ldrsh.w	r9, [sp, #96]	; 0x60
 8011108:	fb01 2000 	mla	r0, r1, r0, r2
 801110c:	6822      	ldr	r2, [r4, #0]
 801110e:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8011112:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011114:	6812      	ldr	r2, [r2, #0]
 8011116:	9203      	str	r2, [sp, #12]
 8011118:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801111c:	f1bb 0f00 	cmp.w	fp, #0
 8011120:	dc03      	bgt.n	801112a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3e>
 8011122:	9a05      	ldr	r2, [sp, #20]
 8011124:	2a00      	cmp	r2, #0
 8011126:	f340 814b 	ble.w	80113c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 801112a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801112c:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8011130:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011132:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8011136:	2b00      	cmp	r3, #0
 8011138:	dd0f      	ble.n	801115a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 801113a:	140c      	asrs	r4, r1, #16
 801113c:	d406      	bmi.n	801114c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801113e:	454c      	cmp	r4, r9
 8011140:	da04      	bge.n	801114c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011142:	1414      	asrs	r4, r2, #16
 8011144:	d402      	bmi.n	801114c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 8011146:	9d01      	ldr	r5, [sp, #4]
 8011148:	42ac      	cmp	r4, r5
 801114a:	db07      	blt.n	801115c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801114c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801114e:	4421      	add	r1, r4
 8011150:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8011152:	3b01      	subs	r3, #1
 8011154:	4422      	add	r2, r4
 8011156:	3002      	adds	r0, #2
 8011158:	e7ed      	b.n	8011136 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a>
 801115a:	d018      	beq.n	801118e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa2>
 801115c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801115e:	1e5c      	subs	r4, r3, #1
 8011160:	fb05 1504 	mla	r5, r5, r4, r1
 8011164:	142d      	asrs	r5, r5, #16
 8011166:	d40a      	bmi.n	801117e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011168:	454d      	cmp	r5, r9
 801116a:	da08      	bge.n	801117e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 801116c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801116e:	fb05 2404 	mla	r4, r5, r4, r2
 8011172:	1424      	asrs	r4, r4, #16
 8011174:	d403      	bmi.n	801117e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8011176:	9d01      	ldr	r5, [sp, #4]
 8011178:	42ac      	cmp	r4, r5
 801117a:	f2c0 80bb 	blt.w	80112f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x208>
 801117e:	2700      	movs	r7, #0
 8011180:	19dc      	adds	r4, r3, r7
 8011182:	2c00      	cmp	r4, #0
 8011184:	dc3e      	bgt.n	8011204 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x118>
 8011186:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801118a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801118e:	f1bb 0f00 	cmp.w	fp, #0
 8011192:	f340 8115 	ble.w	80113c0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d4>
 8011196:	ee30 0a04 	vadd.f32	s0, s0, s8
 801119a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801119e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80111a2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111a4:	f1bb 0b01 	subs.w	fp, fp, #1
 80111a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80111ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80111b0:	eeb0 6a62 	vmov.f32	s12, s5
 80111b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80111b8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80111bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 80111c0:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80111c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80111c8:	eeb0 6a43 	vmov.f32	s12, s6
 80111cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80111d0:	ee12 2a90 	vmov	r2, s5
 80111d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80111d8:	fb92 f3f3 	sdiv	r3, r2, r3
 80111dc:	ee13 2a10 	vmov	r2, s6
 80111e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80111e4:	9313      	str	r3, [sp, #76]	; 0x4c
 80111e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111e8:	fb92 f3f3 	sdiv	r3, r2, r3
 80111ec:	9a05      	ldr	r2, [sp, #20]
 80111ee:	9314      	str	r3, [sp, #80]	; 0x50
 80111f0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80111f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80111f6:	eeb0 3a67 	vmov.f32	s6, s15
 80111fa:	bf08      	it	eq
 80111fc:	4613      	moveq	r3, r2
 80111fe:	eef0 2a47 	vmov.f32	s5, s14
 8011202:	e78b      	b.n	801111c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30>
 8011204:	140d      	asrs	r5, r1, #16
 8011206:	d45c      	bmi.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011208:	454d      	cmp	r5, r9
 801120a:	da5a      	bge.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 801120c:	1414      	asrs	r4, r2, #16
 801120e:	d458      	bmi.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011210:	9e01      	ldr	r6, [sp, #4]
 8011212:	42b4      	cmp	r4, r6
 8011214:	da55      	bge.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011216:	fb09 5404 	mla	r4, r9, r4, r5
 801121a:	9d03      	ldr	r5, [sp, #12]
 801121c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011220:	ea5f 6e14 	movs.w	lr, r4, lsr #24
 8011224:	d04d      	beq.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 8011226:	0a26      	lsrs	r6, r4, #8
 8011228:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801122c:	fa5f f58e 	uxtb.w	r5, lr
 8011230:	ea4f 4c14 	mov.w	ip, r4, lsr #16
 8011234:	9604      	str	r6, [sp, #16]
 8011236:	d04a      	beq.n	80112ce <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e2>
 8011238:	f06f 0601 	mvn.w	r6, #1
 801123c:	437e      	muls	r6, r7
 801123e:	fa1f fa85 	uxth.w	sl, r5
 8011242:	f830 8006 	ldrh.w	r8, [r0, r6]
 8011246:	9602      	str	r6, [sp, #8]
 8011248:	ea4f 2e28 	mov.w	lr, r8, asr #8
 801124c:	43ed      	mvns	r5, r5
 801124e:	fa5f fc8c 	uxtb.w	ip, ip
 8011252:	b2ed      	uxtb	r5, r5
 8011254:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8011258:	fb1c fc0a 	smulbb	ip, ip, sl
 801125c:	fb0e cc05 	mla	ip, lr, r5, ip
 8011260:	b2e4      	uxtb	r4, r4
 8011262:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 8011266:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801126a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 801126e:	fa5f f888 	uxtb.w	r8, r8
 8011272:	fb14 f40a 	smulbb	r4, r4, sl
 8011276:	fb08 4405 	mla	r4, r8, r5, r4
 801127a:	b2a4      	uxth	r4, r4
 801127c:	fa1f fc8c 	uxth.w	ip, ip
 8011280:	fb16 f60a 	smulbb	r6, r6, sl
 8011284:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8011288:	fb0e 6e05 	mla	lr, lr, r5, r6
 801128c:	1c66      	adds	r6, r4, #1
 801128e:	f10c 0501 	add.w	r5, ip, #1
 8011292:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8011296:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801129a:	fa1f fe8e 	uxth.w	lr, lr
 801129e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80112a2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80112a6:	ea4c 0c06 	orr.w	ip, ip, r6
 80112aa:	f10e 0601 	add.w	r6, lr, #1
 80112ae:	eb06 261e 	add.w	r6, r6, lr, lsr #8
 80112b2:	0976      	lsrs	r6, r6, #5
 80112b4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80112b8:	9c02      	ldr	r4, [sp, #8]
 80112ba:	ea4c 0c06 	orr.w	ip, ip, r6
 80112be:	f820 c004 	strh.w	ip, [r0, r4]
 80112c2:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80112c4:	4421      	add	r1, r4
 80112c6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80112c8:	3f01      	subs	r7, #1
 80112ca:	4422      	add	r2, r4
 80112cc:	e758      	b.n	8011180 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80112ce:	4e3e      	ldr	r6, [pc, #248]	; (80113c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80112d0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80112d4:	ea06 2c0c 	and.w	ip, r6, ip, lsl #8
 80112d8:	ea4c 0c04 	orr.w	ip, ip, r4
 80112dc:	9c04      	ldr	r4, [sp, #16]
 80112de:	f06f 0501 	mvn.w	r5, #1
 80112e2:	00e6      	lsls	r6, r4, #3
 80112e4:	437d      	muls	r5, r7
 80112e6:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80112ea:	ea4c 0c04 	orr.w	ip, ip, r4
 80112ee:	f820 c005 	strh.w	ip, [r0, r5]
 80112f2:	e7e6      	b.n	80112c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d6>
 80112f4:	f04f 0800 	mov.w	r8, #0
 80112f8:	eba3 0408 	sub.w	r4, r3, r8
 80112fc:	2c00      	cmp	r4, #0
 80112fe:	f77f af42 	ble.w	8011186 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8011302:	140d      	asrs	r5, r1, #16
 8011304:	1414      	asrs	r4, r2, #16
 8011306:	fb09 5404 	mla	r4, r9, r4, r5
 801130a:	9d03      	ldr	r5, [sp, #12]
 801130c:	f855 4024 	ldr.w	r4, [r5, r4, lsl #2]
 8011310:	ea5f 6c14 	movs.w	ip, r4, lsr #24
 8011314:	d042      	beq.n	801139c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8011316:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801131a:	fa5f f58c 	uxtb.w	r5, ip
 801131e:	ea4f 4714 	mov.w	r7, r4, lsr #16
 8011322:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8011326:	d040      	beq.n	80113aa <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8011328:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 801132c:	fa1f fa85 	uxth.w	sl, r5
 8011330:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011334:	43ed      	mvns	r5, r5
 8011336:	b2ff      	uxtb	r7, r7
 8011338:	b2ed      	uxtb	r5, r5
 801133a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801133e:	fb17 f70a 	smulbb	r7, r7, sl
 8011342:	fb0c 7705 	mla	r7, ip, r5, r7
 8011346:	b2e4      	uxtb	r4, r4
 8011348:	ea4f 0cee 	mov.w	ip, lr, asr #3
 801134c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011350:	fa5f fe8e 	uxtb.w	lr, lr
 8011354:	fb14 f40a 	smulbb	r4, r4, sl
 8011358:	fb0e 4405 	mla	r4, lr, r5, r4
 801135c:	b2f6      	uxtb	r6, r6
 801135e:	b2bf      	uxth	r7, r7
 8011360:	fb16 f60a 	smulbb	r6, r6, sl
 8011364:	b2a4      	uxth	r4, r4
 8011366:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801136a:	fb0c 6c05 	mla	ip, ip, r5, r6
 801136e:	1c7d      	adds	r5, r7, #1
 8011370:	1c66      	adds	r6, r4, #1
 8011372:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8011376:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801137a:	fa1f fc8c 	uxth.w	ip, ip
 801137e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8011382:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8011386:	4337      	orrs	r7, r6
 8011388:	f10c 0601 	add.w	r6, ip, #1
 801138c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8011390:	0976      	lsrs	r6, r6, #5
 8011392:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011396:	4337      	orrs	r7, r6
 8011398:	f820 7018 	strh.w	r7, [r0, r8, lsl #1]
 801139c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801139e:	4421      	add	r1, r4
 80113a0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80113a2:	f108 0801 	add.w	r8, r8, #1
 80113a6:	4422      	add	r2, r4
 80113a8:	e7a6      	b.n	80112f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x20c>
 80113aa:	4d07      	ldr	r5, [pc, #28]	; (80113c8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2dc>)
 80113ac:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80113b0:	ea05 2707 	and.w	r7, r5, r7, lsl #8
 80113b4:	00f6      	lsls	r6, r6, #3
 80113b6:	4327      	orrs	r7, r4
 80113b8:	f406 64fc 	and.w	r4, r6, #2016	; 0x7e0
 80113bc:	4327      	orrs	r7, r4
 80113be:	e7eb      	b.n	8011398 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ac>
 80113c0:	b007      	add	sp, #28
 80113c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113c6:	bf00      	nop
 80113c8:	fffff800 	.word	0xfffff800

080113cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80113cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80113d0:	b089      	sub	sp, #36	; 0x24
 80113d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80113d6:	9206      	str	r2, [sp, #24]
 80113d8:	f9bd 2068 	ldrsh.w	r2, [sp, #104]	; 0x68
 80113dc:	9202      	str	r2, [sp, #8]
 80113de:	f9bd 206c 	ldrsh.w	r2, [sp, #108]	; 0x6c
 80113e2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80113e4:	9203      	str	r2, [sp, #12]
 80113e6:	f89d 2074 	ldrb.w	r2, [sp, #116]	; 0x74
 80113ea:	9207      	str	r2, [sp, #28]
 80113ec:	e9dd 2518 	ldrd	r2, r5, [sp, #96]	; 0x60
 80113f0:	6860      	ldr	r0, [r4, #4]
 80113f2:	9101      	str	r1, [sp, #4]
 80113f4:	fb00 2505 	mla	r5, r0, r5, r2
 80113f8:	6822      	ldr	r2, [r4, #0]
 80113fa:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80113fe:	9a02      	ldr	r2, [sp, #8]
 8011400:	3201      	adds	r2, #1
 8011402:	f022 0201 	bic.w	r2, r2, #1
 8011406:	9204      	str	r2, [sp, #16]
 8011408:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 801140a:	6812      	ldr	r2, [r2, #0]
 801140c:	9205      	str	r2, [sp, #20]
 801140e:	9a01      	ldr	r2, [sp, #4]
 8011410:	2a00      	cmp	r2, #0
 8011412:	dc03      	bgt.n	801141c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50>
 8011414:	9a06      	ldr	r2, [sp, #24]
 8011416:	2a00      	cmp	r2, #0
 8011418:	f340 8153 	ble.w	80116c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 801141c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801141e:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 8011422:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011424:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011428:	2b00      	cmp	r3, #0
 801142a:	dd10      	ble.n	801144e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x82>
 801142c:	1422      	asrs	r2, r4, #16
 801142e:	d407      	bmi.n	8011440 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011430:	9e02      	ldr	r6, [sp, #8]
 8011432:	4296      	cmp	r6, r2
 8011434:	dd04      	ble.n	8011440 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8011436:	1402      	asrs	r2, r0, #16
 8011438:	d402      	bmi.n	8011440 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 801143a:	9e03      	ldr	r6, [sp, #12]
 801143c:	42b2      	cmp	r2, r6
 801143e:	db07      	blt.n	8011450 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x84>
 8011440:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8011442:	4414      	add	r4, r2
 8011444:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8011446:	3b01      	subs	r3, #1
 8011448:	4410      	add	r0, r2
 801144a:	3502      	adds	r5, #2
 801144c:	e7ec      	b.n	8011428 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5c>
 801144e:	d00f      	beq.n	8011470 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 8011450:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8011452:	1e5a      	subs	r2, r3, #1
 8011454:	fb06 4602 	mla	r6, r6, r2, r4
 8011458:	1436      	asrs	r6, r6, #16
 801145a:	d545      	bpl.n	80114e8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x11c>
 801145c:	469a      	mov	sl, r3
 801145e:	46a9      	mov	r9, r5
 8011460:	f1ba 0f00 	cmp.w	sl, #0
 8011464:	f300 80ba 	bgt.w	80115dc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x210>
 8011468:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801146c:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8011470:	9b01      	ldr	r3, [sp, #4]
 8011472:	2b00      	cmp	r3, #0
 8011474:	f340 8125 	ble.w	80116c2 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8011478:	ee30 0a04 	vadd.f32	s0, s0, s8
 801147c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8011480:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011484:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8011486:	ee31 1a05 	vadd.f32	s2, s2, s10
 801148a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801148e:	eeb0 6a62 	vmov.f32	s12, s5
 8011492:	ee61 7a27 	vmul.f32	s15, s2, s15
 8011496:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801149a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801149e:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 80114a2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80114a6:	eeb0 6a43 	vmov.f32	s12, s6
 80114aa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80114ae:	ee12 2a90 	vmov	r2, s5
 80114b2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80114b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80114ba:	ee13 2a10 	vmov	r2, s6
 80114be:	9315      	str	r3, [sp, #84]	; 0x54
 80114c0:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80114c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80114c6:	9316      	str	r3, [sp, #88]	; 0x58
 80114c8:	9b01      	ldr	r3, [sp, #4]
 80114ca:	9a06      	ldr	r2, [sp, #24]
 80114cc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80114d0:	3b01      	subs	r3, #1
 80114d2:	9301      	str	r3, [sp, #4]
 80114d4:	ed8d 6a14 	vstr	s12, [sp, #80]	; 0x50
 80114d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80114da:	eeb0 3a67 	vmov.f32	s6, s15
 80114de:	bf08      	it	eq
 80114e0:	4613      	moveq	r3, r2
 80114e2:	eef0 2a47 	vmov.f32	s5, s14
 80114e6:	e792      	b.n	801140e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42>
 80114e8:	9f02      	ldr	r7, [sp, #8]
 80114ea:	42b7      	cmp	r7, r6
 80114ec:	ddb6      	ble.n	801145c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80114ee:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80114f0:	fb06 0202 	mla	r2, r6, r2, r0
 80114f4:	1412      	asrs	r2, r2, #16
 80114f6:	d4b1      	bmi.n	801145c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80114f8:	9e03      	ldr	r6, [sp, #12]
 80114fa:	42b2      	cmp	r2, r6
 80114fc:	daae      	bge.n	801145c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x90>
 80114fe:	f04f 0800 	mov.w	r8, #0
 8011502:	eba3 0208 	sub.w	r2, r3, r8
 8011506:	2a00      	cmp	r2, #0
 8011508:	ddae      	ble.n	8011468 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801150a:	9904      	ldr	r1, [sp, #16]
 801150c:	1422      	asrs	r2, r4, #16
 801150e:	1406      	asrs	r6, r0, #16
 8011510:	fb01 2606 	mla	r6, r1, r6, r2
 8011514:	0872      	lsrs	r2, r6, #1
 8011516:	9905      	ldr	r1, [sp, #20]
 8011518:	5c8a      	ldrb	r2, [r1, r2]
 801151a:	07f1      	lsls	r1, r6, #31
 801151c:	bf54      	ite	pl
 801151e:	f002 020f 	andpl.w	r2, r2, #15
 8011522:	1112      	asrmi	r2, r2, #4
 8011524:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011528:	b2d2      	uxtb	r2, r2
 801152a:	2a00      	cmp	r2, #0
 801152c:	d04f      	beq.n	80115ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 801152e:	4966      	ldr	r1, [pc, #408]	; (80116c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011530:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8011534:	680e      	ldr	r6, [r1, #0]
 8011536:	9907      	ldr	r1, [sp, #28]
 8011538:	434a      	muls	r2, r1
 801153a:	1c57      	adds	r7, r2, #1
 801153c:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011540:	1212      	asrs	r2, r2, #8
 8011542:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8011546:	fa1f fa82 	uxth.w	sl, r2
 801154a:	ea4f 272e 	mov.w	r7, lr, asr #8
 801154e:	43d2      	mvns	r2, r2
 8011550:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011554:	b2d2      	uxtb	r2, r2
 8011556:	fb1c fc0a 	smulbb	ip, ip, sl
 801155a:	f3c6 09cc 	ubfx	r9, r6, #3, #13
 801155e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011562:	495a      	ldr	r1, [pc, #360]	; (80116cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 8011564:	fb07 c702 	mla	r7, r7, r2, ip
 8011568:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801156c:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011570:	fb19 f90a 	smulbb	r9, r9, sl
 8011574:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8011578:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801157c:	fb0c 9c02 	mla	ip, ip, r2, r9
 8011580:	b2f6      	uxtb	r6, r6
 8011582:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011586:	fa1f fc8c 	uxth.w	ip, ip
 801158a:	fa5f fe8e 	uxtb.w	lr, lr
 801158e:	fb16 f60a 	smulbb	r6, r6, sl
 8011592:	b2bf      	uxth	r7, r7
 8011594:	fb0e 6602 	mla	r6, lr, r2, r6
 8011598:	f10c 0901 	add.w	r9, ip, #1
 801159c:	b2b6      	uxth	r6, r6
 801159e:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80115a2:	f107 0b01 	add.w	fp, r7, #1
 80115a6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80115aa:	eb0b 2717 	add.w	r7, fp, r7, lsr #8
 80115ae:	f106 0e01 	add.w	lr, r6, #1
 80115b2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80115b6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80115ba:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80115be:	ea4c 0c07 	orr.w	ip, ip, r7
 80115c2:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80115c6:	ea4c 0c0e 	orr.w	ip, ip, lr
 80115ca:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 80115ce:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80115d0:	4414      	add	r4, r2
 80115d2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80115d4:	f108 0801 	add.w	r8, r8, #1
 80115d8:	4410      	add	r0, r2
 80115da:	e792      	b.n	8011502 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x136>
 80115dc:	1422      	asrs	r2, r4, #16
 80115de:	d467      	bmi.n	80116b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80115e0:	9e02      	ldr	r6, [sp, #8]
 80115e2:	4296      	cmp	r6, r2
 80115e4:	dd64      	ble.n	80116b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80115e6:	1406      	asrs	r6, r0, #16
 80115e8:	d462      	bmi.n	80116b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80115ea:	9f03      	ldr	r7, [sp, #12]
 80115ec:	42be      	cmp	r6, r7
 80115ee:	da5f      	bge.n	80116b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 80115f0:	9f04      	ldr	r7, [sp, #16]
 80115f2:	fb06 2607 	mla	r6, r6, r7, r2
 80115f6:	0872      	lsrs	r2, r6, #1
 80115f8:	9f05      	ldr	r7, [sp, #20]
 80115fa:	5cba      	ldrb	r2, [r7, r2]
 80115fc:	07f6      	lsls	r6, r6, #31
 80115fe:	bf54      	ite	pl
 8011600:	f002 020f 	andpl.w	r2, r2, #15
 8011604:	1112      	asrmi	r2, r2, #4
 8011606:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801160a:	b2d2      	uxtb	r2, r2
 801160c:	2a00      	cmp	r2, #0
 801160e:	d04f      	beq.n	80116b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e4>
 8011610:	9f07      	ldr	r7, [sp, #28]
 8011612:	4e2d      	ldr	r6, [pc, #180]	; (80116c8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fc>)
 8011614:	f8b9 e000 	ldrh.w	lr, [r9]
 8011618:	6836      	ldr	r6, [r6, #0]
 801161a:	492c      	ldr	r1, [pc, #176]	; (80116cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>)
 801161c:	437a      	muls	r2, r7
 801161e:	1c57      	adds	r7, r2, #1
 8011620:	eb07 2222 	add.w	r2, r7, r2, asr #8
 8011624:	1212      	asrs	r2, r2, #8
 8011626:	ea4f 2c26 	mov.w	ip, r6, asr #8
 801162a:	fa1f fb82 	uxth.w	fp, r2
 801162e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8011632:	43d2      	mvns	r2, r2
 8011634:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011638:	b2d2      	uxtb	r2, r2
 801163a:	fb1c fc0b 	smulbb	ip, ip, fp
 801163e:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011642:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011646:	fb07 c702 	mla	r7, r7, r2, ip
 801164a:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801164e:	ea4f 0cee 	mov.w	ip, lr, asr #3
 8011652:	fb18 f80b 	smulbb	r8, r8, fp
 8011656:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801165a:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801165e:	fb0c 8c02 	mla	ip, ip, r2, r8
 8011662:	b2f6      	uxtb	r6, r6
 8011664:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8011668:	fa1f fc8c 	uxth.w	ip, ip
 801166c:	fa5f fe8e 	uxtb.w	lr, lr
 8011670:	fb16 f60b 	smulbb	r6, r6, fp
 8011674:	b2bf      	uxth	r7, r7
 8011676:	fb0e 6602 	mla	r6, lr, r2, r6
 801167a:	f10c 0801 	add.w	r8, ip, #1
 801167e:	b2b6      	uxth	r6, r6
 8011680:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 8011684:	f107 0801 	add.w	r8, r7, #1
 8011688:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801168c:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 8011690:	f106 0e01 	add.w	lr, r6, #1
 8011694:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8011698:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801169c:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80116a0:	ea4c 0c07 	orr.w	ip, ip, r7
 80116a4:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80116a8:	ea4c 0c0e 	orr.w	ip, ip, lr
 80116ac:	f8a9 c000 	strh.w	ip, [r9]
 80116b0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80116b2:	4414      	add	r4, r2
 80116b4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80116b6:	f109 0902 	add.w	r9, r9, #2
 80116ba:	4410      	add	r0, r2
 80116bc:	f10a 3aff 	add.w	sl, sl, #4294967295
 80116c0:	e6ce      	b.n	8011460 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 80116c2:	b009      	add	sp, #36	; 0x24
 80116c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116c8:	20001444 	.word	0x20001444
 80116cc:	0007fff8 	.word	0x0007fff8

080116d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80116d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80116d4:	b087      	sub	sp, #28
 80116d6:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80116da:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80116dc:	9205      	str	r2, [sp, #20]
 80116de:	f9bd 2064 	ldrsh.w	r2, [sp, #100]	; 0x64
 80116e2:	9201      	str	r2, [sp, #4]
 80116e4:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 80116e8:	6860      	ldr	r0, [r4, #4]
 80116ea:	f9bd b060 	ldrsh.w	fp, [sp, #96]	; 0x60
 80116ee:	9100      	str	r1, [sp, #0]
 80116f0:	fb00 2505 	mla	r5, r0, r5, r2
 80116f4:	6822      	ldr	r2, [r4, #0]
 80116f6:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 80116fa:	f10b 0201 	add.w	r2, fp, #1
 80116fe:	f022 0201 	bic.w	r2, r2, #1
 8011702:	9203      	str	r2, [sp, #12]
 8011704:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8011706:	6812      	ldr	r2, [r2, #0]
 8011708:	9204      	str	r2, [sp, #16]
 801170a:	9a00      	ldr	r2, [sp, #0]
 801170c:	2a00      	cmp	r2, #0
 801170e:	dc03      	bgt.n	8011718 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x48>
 8011710:	9a05      	ldr	r2, [sp, #20]
 8011712:	2a00      	cmp	r2, #0
 8011714:	f340 815c 	ble.w	80119d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011718:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801171a:	f502 4400 	add.w	r4, r2, #32768	; 0x8000
 801171e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8011720:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8011724:	2b00      	cmp	r3, #0
 8011726:	dd0f      	ble.n	8011748 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8011728:	1422      	asrs	r2, r4, #16
 801172a:	d406      	bmi.n	801173a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 801172c:	4593      	cmp	fp, r2
 801172e:	dd04      	ble.n	801173a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011730:	1402      	asrs	r2, r0, #16
 8011732:	d402      	bmi.n	801173a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8011734:	9e01      	ldr	r6, [sp, #4]
 8011736:	42b2      	cmp	r2, r6
 8011738:	db07      	blt.n	801174a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a>
 801173a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801173c:	4414      	add	r4, r2
 801173e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011740:	3b01      	subs	r3, #1
 8011742:	4410      	add	r0, r2
 8011744:	3502      	adds	r5, #2
 8011746:	e7ed      	b.n	8011724 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54>
 8011748:	d018      	beq.n	801177c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xac>
 801174a:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801174c:	1e5a      	subs	r2, r3, #1
 801174e:	fb06 4602 	mla	r6, r6, r2, r4
 8011752:	1436      	asrs	r6, r6, #16
 8011754:	d40a      	bmi.n	801176c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011756:	45b3      	cmp	fp, r6
 8011758:	dd08      	ble.n	801176c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 801175a:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801175c:	fb06 0202 	mla	r2, r6, r2, r0
 8011760:	1412      	asrs	r2, r2, #16
 8011762:	d403      	bmi.n	801176c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8011764:	9e01      	ldr	r6, [sp, #4]
 8011766:	42b2      	cmp	r2, r6
 8011768:	f2c0 80bf 	blt.w	80118ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21a>
 801176c:	2700      	movs	r7, #0
 801176e:	19da      	adds	r2, r3, r7
 8011770:	2a00      	cmp	r2, #0
 8011772:	dc3f      	bgt.n	80117f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x124>
 8011774:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8011778:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801177c:	9b00      	ldr	r3, [sp, #0]
 801177e:	2b00      	cmp	r3, #0
 8011780:	f340 8126 	ble.w	80119d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x300>
 8011784:	ee30 0a04 	vadd.f32	s0, s0, s8
 8011788:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801178c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8011790:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8011792:	ee31 1a05 	vadd.f32	s2, s2, s10
 8011796:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801179a:	eeb0 6a62 	vmov.f32	s12, s5
 801179e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80117a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80117aa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80117ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80117b2:	eeb0 6a43 	vmov.f32	s12, s6
 80117b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80117ba:	ee12 2a90 	vmov	r2, s5
 80117be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80117c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80117c6:	ee13 2a10 	vmov	r2, s6
 80117ca:	9313      	str	r3, [sp, #76]	; 0x4c
 80117cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117ce:	fb92 f3f3 	sdiv	r3, r2, r3
 80117d2:	9314      	str	r3, [sp, #80]	; 0x50
 80117d4:	9b00      	ldr	r3, [sp, #0]
 80117d6:	9a05      	ldr	r2, [sp, #20]
 80117d8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80117dc:	3b01      	subs	r3, #1
 80117de:	9300      	str	r3, [sp, #0]
 80117e0:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80117e4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80117e6:	eeb0 3a67 	vmov.f32	s6, s15
 80117ea:	bf08      	it	eq
 80117ec:	4613      	moveq	r3, r2
 80117ee:	eef0 2a47 	vmov.f32	s5, s14
 80117f2:	e78a      	b.n	801170a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a>
 80117f4:	1422      	asrs	r2, r4, #16
 80117f6:	d466      	bmi.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80117f8:	4593      	cmp	fp, r2
 80117fa:	dd64      	ble.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80117fc:	1406      	asrs	r6, r0, #16
 80117fe:	d462      	bmi.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011800:	9901      	ldr	r1, [sp, #4]
 8011802:	428e      	cmp	r6, r1
 8011804:	da5f      	bge.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011806:	9903      	ldr	r1, [sp, #12]
 8011808:	fb06 2601 	mla	r6, r6, r1, r2
 801180c:	0872      	lsrs	r2, r6, #1
 801180e:	9904      	ldr	r1, [sp, #16]
 8011810:	5c8a      	ldrb	r2, [r1, r2]
 8011812:	07f6      	lsls	r6, r6, #31
 8011814:	bf54      	ite	pl
 8011816:	f002 020f 	andpl.w	r2, r2, #15
 801181a:	1112      	asrmi	r2, r2, #4
 801181c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011820:	b2d2      	uxtb	r2, r2
 8011822:	2a00      	cmp	r2, #0
 8011824:	d04f      	beq.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 8011826:	496c      	ldr	r1, [pc, #432]	; (80119d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 8011828:	680e      	ldr	r6, [r1, #0]
 801182a:	496c      	ldr	r1, [pc, #432]	; (80119dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 801182c:	ea4f 2926 	mov.w	r9, r6, asr #8
 8011830:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 8011834:	2aff      	cmp	r2, #255	; 0xff
 8011836:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 801183a:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 801183e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011842:	b2f6      	uxtb	r6, r6
 8011844:	d045      	beq.n	80118d2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 8011846:	f06f 0101 	mvn.w	r1, #1
 801184a:	4379      	muls	r1, r7
 801184c:	fa1f fa82 	uxth.w	sl, r2
 8011850:	f835 e001 	ldrh.w	lr, [r5, r1]
 8011854:	9102      	str	r1, [sp, #8]
 8011856:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801185a:	43d2      	mvns	r2, r2
 801185c:	b2d2      	uxtb	r2, r2
 801185e:	fb19 f90a 	smulbb	r9, r9, sl
 8011862:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011866:	fb0c 9c02 	mla	ip, ip, r2, r9
 801186a:	ea4f 09ee 	mov.w	r9, lr, asr #3
 801186e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011872:	fb18 f80a 	smulbb	r8, r8, sl
 8011876:	fb09 8802 	mla	r8, r9, r2, r8
 801187a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801187e:	fa1f f888 	uxth.w	r8, r8
 8011882:	fa5f fe8e 	uxtb.w	lr, lr
 8011886:	fb16 f60a 	smulbb	r6, r6, sl
 801188a:	fa1f fc8c 	uxth.w	ip, ip
 801188e:	fb0e 6602 	mla	r6, lr, r2, r6
 8011892:	f108 0901 	add.w	r9, r8, #1
 8011896:	b2b6      	uxth	r6, r6
 8011898:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 801189c:	f10c 0901 	add.w	r9, ip, #1
 80118a0:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80118a4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80118a8:	1c72      	adds	r2, r6, #1
 80118aa:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80118ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80118b2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80118b6:	ea48 080c 	orr.w	r8, r8, ip
 80118ba:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80118be:	ea48 0806 	orr.w	r8, r8, r6
 80118c2:	f825 8001 	strh.w	r8, [r5, r1]
 80118c6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80118c8:	4414      	add	r4, r2
 80118ca:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80118cc:	3f01      	subs	r7, #1
 80118ce:	4410      	add	r0, r2
 80118d0:	e74d      	b.n	801176e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 80118d2:	f06f 0201 	mvn.w	r2, #1
 80118d6:	08f6      	lsrs	r6, r6, #3
 80118d8:	fb02 fe07 	mul.w	lr, r2, r7
 80118dc:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80118e0:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80118e4:	f825 600e 	strh.w	r6, [r5, lr]
 80118e8:	e7ed      	b.n	80118c6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f6>
 80118ea:	f04f 0e00 	mov.w	lr, #0
 80118ee:	eba3 020e 	sub.w	r2, r3, lr
 80118f2:	2a00      	cmp	r2, #0
 80118f4:	f77f af3e 	ble.w	8011774 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xa4>
 80118f8:	9903      	ldr	r1, [sp, #12]
 80118fa:	1422      	asrs	r2, r4, #16
 80118fc:	1406      	asrs	r6, r0, #16
 80118fe:	fb01 2606 	mla	r6, r1, r6, r2
 8011902:	0872      	lsrs	r2, r6, #1
 8011904:	9904      	ldr	r1, [sp, #16]
 8011906:	5c8a      	ldrb	r2, [r1, r2]
 8011908:	07f1      	lsls	r1, r6, #31
 801190a:	bf54      	ite	pl
 801190c:	f002 020f 	andpl.w	r2, r2, #15
 8011910:	1112      	asrmi	r2, r2, #4
 8011912:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8011916:	b2d2      	uxtb	r2, r2
 8011918:	2a00      	cmp	r2, #0
 801191a:	d04a      	beq.n	80119b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 801191c:	492e      	ldr	r1, [pc, #184]	; (80119d8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x308>)
 801191e:	680e      	ldr	r6, [r1, #0]
 8011920:	492e      	ldr	r1, [pc, #184]	; (80119dc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x30c>)
 8011922:	ea4f 2926 	mov.w	r9, r6, asr #8
 8011926:	f3c6 08cc 	ubfx	r8, r6, #3, #13
 801192a:	2aff      	cmp	r2, #255	; 0xff
 801192c:	ea01 06c6 	and.w	r6, r1, r6, lsl #3
 8011930:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8011934:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8011938:	b2f6      	uxtb	r6, r6
 801193a:	d041      	beq.n	80119c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f0>
 801193c:	f835 c01e 	ldrh.w	ip, [r5, lr, lsl #1]
 8011940:	fa1f fa82 	uxth.w	sl, r2
 8011944:	ea4f 272c 	mov.w	r7, ip, asr #8
 8011948:	43d2      	mvns	r2, r2
 801194a:	b2d2      	uxtb	r2, r2
 801194c:	fb19 f90a 	smulbb	r9, r9, sl
 8011950:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8011954:	fb07 9702 	mla	r7, r7, r2, r9
 8011958:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801195c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011960:	fb18 f80a 	smulbb	r8, r8, sl
 8011964:	fb09 8802 	mla	r8, r9, r2, r8
 8011968:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801196c:	fa1f f888 	uxth.w	r8, r8
 8011970:	fa5f fc8c 	uxtb.w	ip, ip
 8011974:	fb16 f60a 	smulbb	r6, r6, sl
 8011978:	b2bf      	uxth	r7, r7
 801197a:	fb0c 6602 	mla	r6, ip, r2, r6
 801197e:	f108 0901 	add.w	r9, r8, #1
 8011982:	b2b6      	uxth	r6, r6
 8011984:	eb09 2818 	add.w	r8, r9, r8, lsr #8
 8011988:	f107 0901 	add.w	r9, r7, #1
 801198c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8011990:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8011994:	1c72      	adds	r2, r6, #1
 8011996:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801199a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801199e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 80119a2:	ea48 0807 	orr.w	r8, r8, r7
 80119a6:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 80119aa:	ea48 0806 	orr.w	r8, r8, r6
 80119ae:	f825 801e 	strh.w	r8, [r5, lr, lsl #1]
 80119b2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80119b4:	4414      	add	r4, r2
 80119b6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80119b8:	f10e 0e01 	add.w	lr, lr, #1
 80119bc:	4410      	add	r0, r2
 80119be:	e796      	b.n	80118ee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x21e>
 80119c0:	08f6      	lsrs	r6, r6, #3
 80119c2:	ea46 2609 	orr.w	r6, r6, r9, lsl #8
 80119c6:	ea46 06c8 	orr.w	r6, r6, r8, lsl #3
 80119ca:	f825 601e 	strh.w	r6, [r5, lr, lsl #1]
 80119ce:	e7f0      	b.n	80119b2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e2>
 80119d0:	b007      	add	sp, #28
 80119d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80119d6:	bf00      	nop
 80119d8:	20001444 	.word	0x20001444
 80119dc:	0007fff8 	.word	0x0007fff8

080119e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 80119e0:	4770      	bx	lr

080119e2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 80119e2:	4770      	bx	lr

080119e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 80119e4:	4770      	bx	lr

080119e6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 80119e6:	4770      	bx	lr

080119e8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80119e8:	4770      	bx	lr

080119ea <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80119ea:	4770      	bx	lr

080119ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80119ec:	4770      	bx	lr

080119ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80119ee:	4770      	bx	lr

080119f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80119f0:	4770      	bx	lr

080119f2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80119f2:	4770      	bx	lr

080119f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80119f4:	4770      	bx	lr

080119f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80119f6:	4770      	bx	lr

080119f8 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80119f8:	4770      	bx	lr

080119fa <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80119fa:	4770      	bx	lr

080119fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80119fc:	4770      	bx	lr

080119fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80119fe:	4770      	bx	lr

08011a00 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8011a00:	4770      	bx	lr

08011a02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8011a02:	4770      	bx	lr

08011a04 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 8011a04:	4770      	bx	lr

08011a06 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 8011a06:	4770      	bx	lr

08011a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011a08:	4770      	bx	lr

08011a0a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 8011a0a:	4770      	bx	lr

08011a0c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011a0c:	4770      	bx	lr

08011a0e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 8011a0e:	4770      	bx	lr

08011a10 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 8011a10:	4770      	bx	lr

08011a12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8011a12:	4770      	bx	lr

08011a14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8011a14:	4770      	bx	lr

08011a16 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8011a16:	4770      	bx	lr

08011a18 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8011a18:	b508      	push	{r3, lr}
 8011a1a:	4b06      	ldr	r3, [pc, #24]	; (8011a34 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 8011a1c:	8818      	ldrh	r0, [r3, #0]
 8011a1e:	b928      	cbnz	r0, 8011a2c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 8011a20:	4b05      	ldr	r3, [pc, #20]	; (8011a38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 8011a22:	4a06      	ldr	r2, [pc, #24]	; (8011a3c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 8011a24:	4806      	ldr	r0, [pc, #24]	; (8011a40 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 8011a26:	21d7      	movs	r1, #215	; 0xd7
 8011a28:	f009 fe62 	bl	801b6f0 <__assert_func>
 8011a2c:	0040      	lsls	r0, r0, #1
 8011a2e:	b280      	uxth	r0, r0
 8011a30:	bd08      	pop	{r3, pc}
 8011a32:	bf00      	nop
 8011a34:	20001436 	.word	0x20001436
 8011a38:	0801f3cd 	.word	0x0801f3cd
 8011a3c:	0801f953 	.word	0x0801f953
 8011a40:	0801f40f 	.word	0x0801f40f

08011a44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8011a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011a48:	b08d      	sub	sp, #52	; 0x34
 8011a4a:	460f      	mov	r7, r1
 8011a4c:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 8011a50:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 8011a54:	4616      	mov	r6, r2
 8011a56:	f1b9 0f00 	cmp.w	r9, #0
 8011a5a:	d046      	beq.n	8011aea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011a5c:	6810      	ldr	r0, [r2, #0]
 8011a5e:	6851      	ldr	r1, [r2, #4]
 8011a60:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8011c28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>
 8011a64:	ad08      	add	r5, sp, #32
 8011a66:	c503      	stmia	r5!, {r0, r1}
 8011a68:	6818      	ldr	r0, [r3, #0]
 8011a6a:	6859      	ldr	r1, [r3, #4]
 8011a6c:	ad0a      	add	r5, sp, #40	; 0x28
 8011a6e:	c503      	stmia	r5!, {r0, r1}
 8011a70:	a808      	add	r0, sp, #32
 8011a72:	f7fb f897 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011a76:	4631      	mov	r1, r6
 8011a78:	a80a      	add	r0, sp, #40	; 0x28
 8011a7a:	f7fb f87b 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8011a7e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8011a82:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8011a86:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 8011a8a:	f8d8 0000 	ldr.w	r0, [r8]
 8011a8e:	f9bd 502c 	ldrsh.w	r5, [sp, #44]	; 0x2c
 8011a92:	fb16 2103 	smlabb	r1, r6, r3, r2
 8011a96:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8011a9a:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8011a9e:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	; 0x2e
 8011aa2:	440a      	add	r2, r1
 8011aa4:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011aa8:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8011aac:	4413      	add	r3, r2
 8011aae:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011ab2:	6803      	ldr	r3, [r0, #0]
 8011ab4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011ab6:	4798      	blx	r3
 8011ab8:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011abc:	d018      	beq.n	8011af0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8011abe:	f010 0f04 	tst.w	r0, #4
 8011ac2:	d019      	beq.n	8011af8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011ac4:	f8d8 0000 	ldr.w	r0, [r8]
 8011ac8:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8011acc:	6801      	ldr	r1, [r0, #0]
 8011ace:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8011ad2:	e9cd 9403 	strd	r9, r4, [sp, #12]
 8011ad6:	b2bf      	uxth	r7, r7
 8011ad8:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011adc:	9402      	str	r4, [sp, #8]
 8011ade:	b2ad      	uxth	r5, r5
 8011ae0:	9701      	str	r7, [sp, #4]
 8011ae2:	9500      	str	r5, [sp, #0]
 8011ae4:	6b8c      	ldr	r4, [r1, #56]	; 0x38
 8011ae6:	4631      	mov	r1, r6
 8011ae8:	47a0      	blx	r4
 8011aea:	b00d      	add	sp, #52	; 0x34
 8011aec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011af0:	b914      	cbnz	r4, 8011af8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 8011af2:	f010 0f01 	tst.w	r0, #1
 8011af6:	e7e4      	b.n	8011ac2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 8011af8:	f8d8 0000 	ldr.w	r0, [r8]
 8011afc:	6803      	ldr	r3, [r0, #0]
 8011afe:	6a1b      	ldr	r3, [r3, #32]
 8011b00:	4798      	blx	r3
 8011b02:	4a48      	ldr	r2, [pc, #288]	; (8011c24 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e0>)
 8011b04:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8011b08:	8814      	ldrh	r4, [r2, #0]
 8011b0a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8011b0e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8011b12:	fb01 3404 	mla	r4, r1, r4, r3
 8011b16:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8011b1a:	4692      	mov	sl, r2
 8011b1c:	d118      	bne.n	8011b50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x10c>
 8011b1e:	ea4f 0b45 	mov.w	fp, r5, lsl #1
 8011b22:	f04f 0900 	mov.w	r9, #0
 8011b26:	f8d8 0000 	ldr.w	r0, [r8]
 8011b2a:	45b9      	cmp	r9, r7
 8011b2c:	6803      	ldr	r3, [r0, #0]
 8011b2e:	da73      	bge.n	8011c18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8011b30:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8011b32:	4632      	mov	r2, r6
 8011b34:	465b      	mov	r3, fp
 8011b36:	4621      	mov	r1, r4
 8011b38:	47a8      	blx	r5
 8011b3a:	f8ba 3000 	ldrh.w	r3, [sl]
 8011b3e:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8011b42:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 8011b46:	f109 0901 	add.w	r9, r9, #1
 8011b4a:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8011b4e:	e7ea      	b.n	8011b26 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xe2>
 8011b50:	f1c9 08ff 	rsb	r8, r9, #255	; 0xff
 8011b54:	ea25 7ae5 	bic.w	sl, r5, r5, asr #31
 8011b58:	ea4f 0a4a 	mov.w	sl, sl, lsl #1
 8011b5c:	f04f 0b00 	mov.w	fp, #0
 8011b60:	fa1f f389 	uxth.w	r3, r9
 8011b64:	fa1f f888 	uxth.w	r8, r8
 8011b68:	9207      	str	r2, [sp, #28]
 8011b6a:	45bb      	cmp	fp, r7
 8011b6c:	da54      	bge.n	8011c18 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>
 8011b6e:	f04f 0e00 	mov.w	lr, #0
 8011b72:	45ae      	cmp	lr, r5
 8011b74:	da41      	bge.n	8011bfa <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1b6>
 8011b76:	f834 101e 	ldrh.w	r1, [r4, lr, lsl #1]
 8011b7a:	f836 201e 	ldrh.w	r2, [r6, lr, lsl #1]
 8011b7e:	1208      	asrs	r0, r1, #8
 8011b80:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8011b84:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011b88:	fb10 f008 	smulbb	r0, r0, r8
 8011b8c:	ea4f 09e1 	mov.w	r9, r1, asr #3
 8011b90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8011b94:	00c9      	lsls	r1, r1, #3
 8011b96:	fb0c 0c03 	mla	ip, ip, r3, r0
 8011b9a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8011b9e:	10d0      	asrs	r0, r2, #3
 8011ba0:	b2c9      	uxtb	r1, r1
 8011ba2:	00d2      	lsls	r2, r2, #3
 8011ba4:	fa1f fc8c 	uxth.w	ip, ip
 8011ba8:	fb19 f908 	smulbb	r9, r9, r8
 8011bac:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8011bb0:	b2d2      	uxtb	r2, r2
 8011bb2:	fb11 f108 	smulbb	r1, r1, r8
 8011bb6:	fb00 9003 	mla	r0, r0, r3, r9
 8011bba:	fb02 1203 	mla	r2, r2, r3, r1
 8011bbe:	f10c 0901 	add.w	r9, ip, #1
 8011bc2:	b292      	uxth	r2, r2
 8011bc4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8011bc8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8011bcc:	f102 0c01 	add.w	ip, r2, #1
 8011bd0:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8011bd4:	b280      	uxth	r0, r0
 8011bd6:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011bda:	ea49 0c02 	orr.w	ip, r9, r2
 8011bde:	f100 0901 	add.w	r9, r0, #1
 8011be2:	eb09 2010 	add.w	r0, r9, r0, lsr #8
 8011be6:	0940      	lsrs	r0, r0, #5
 8011be8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8011bec:	ea4c 0c00 	orr.w	ip, ip, r0
 8011bf0:	f824 c01e 	strh.w	ip, [r4, lr, lsl #1]
 8011bf4:	f10e 0e01 	add.w	lr, lr, #1
 8011bf8:	e7bb      	b.n	8011b72 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x12e>
 8011bfa:	9a07      	ldr	r2, [sp, #28]
 8011bfc:	8812      	ldrh	r2, [r2, #0]
 8011bfe:	1b52      	subs	r2, r2, r5
 8011c00:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011c04:	4414      	add	r4, r2
 8011c06:	f9bd 2024 	ldrsh.w	r2, [sp, #36]	; 0x24
 8011c0a:	1b52      	subs	r2, r2, r5
 8011c0c:	eb0a 0242 	add.w	r2, sl, r2, lsl #1
 8011c10:	4416      	add	r6, r2
 8011c12:	f10b 0b01 	add.w	fp, fp, #1
 8011c16:	e7a8      	b.n	8011b6a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x126>
 8011c18:	4b03      	ldr	r3, [pc, #12]	; (8011c28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1e4>)
 8011c1a:	6818      	ldr	r0, [r3, #0]
 8011c1c:	6803      	ldr	r3, [r0, #0]
 8011c1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011c20:	4798      	blx	r3
 8011c22:	e762      	b.n	8011aea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 8011c24:	20001436 	.word	0x20001436
 8011c28:	2000143c 	.word	0x2000143c

08011c2c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011c2c:	b510      	push	{r4, lr}
 8011c2e:	2104      	movs	r1, #4
 8011c30:	4604      	mov	r4, r0
 8011c32:	f008 ff63 	bl	801aafc <_ZdlPvj>
 8011c36:	4620      	mov	r0, r4
 8011c38:	bd10      	pop	{r4, pc}

08011c3a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011c3a:	b510      	push	{r4, lr}
 8011c3c:	2104      	movs	r1, #4
 8011c3e:	4604      	mov	r4, r0
 8011c40:	f008 ff5c 	bl	801aafc <_ZdlPvj>
 8011c44:	4620      	mov	r0, r4
 8011c46:	bd10      	pop	{r4, pc}

08011c48 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011c48:	b510      	push	{r4, lr}
 8011c4a:	2104      	movs	r1, #4
 8011c4c:	4604      	mov	r4, r0
 8011c4e:	f008 ff55 	bl	801aafc <_ZdlPvj>
 8011c52:	4620      	mov	r0, r4
 8011c54:	bd10      	pop	{r4, pc}

08011c56 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011c56:	b510      	push	{r4, lr}
 8011c58:	2104      	movs	r1, #4
 8011c5a:	4604      	mov	r4, r0
 8011c5c:	f008 ff4e 	bl	801aafc <_ZdlPvj>
 8011c60:	4620      	mov	r0, r4
 8011c62:	bd10      	pop	{r4, pc}

08011c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011c64:	b510      	push	{r4, lr}
 8011c66:	2104      	movs	r1, #4
 8011c68:	4604      	mov	r4, r0
 8011c6a:	f008 ff47 	bl	801aafc <_ZdlPvj>
 8011c6e:	4620      	mov	r0, r4
 8011c70:	bd10      	pop	{r4, pc}

08011c72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8011c72:	b510      	push	{r4, lr}
 8011c74:	2104      	movs	r1, #4
 8011c76:	4604      	mov	r4, r0
 8011c78:	f008 ff40 	bl	801aafc <_ZdlPvj>
 8011c7c:	4620      	mov	r0, r4
 8011c7e:	bd10      	pop	{r4, pc}

08011c80 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011c80:	b510      	push	{r4, lr}
 8011c82:	2104      	movs	r1, #4
 8011c84:	4604      	mov	r4, r0
 8011c86:	f008 ff39 	bl	801aafc <_ZdlPvj>
 8011c8a:	4620      	mov	r0, r4
 8011c8c:	bd10      	pop	{r4, pc}

08011c8e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8011c8e:	b510      	push	{r4, lr}
 8011c90:	2104      	movs	r1, #4
 8011c92:	4604      	mov	r4, r0
 8011c94:	f008 ff32 	bl	801aafc <_ZdlPvj>
 8011c98:	4620      	mov	r0, r4
 8011c9a:	bd10      	pop	{r4, pc}

08011c9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011c9c:	b510      	push	{r4, lr}
 8011c9e:	2104      	movs	r1, #4
 8011ca0:	4604      	mov	r4, r0
 8011ca2:	f008 ff2b 	bl	801aafc <_ZdlPvj>
 8011ca6:	4620      	mov	r0, r4
 8011ca8:	bd10      	pop	{r4, pc}

08011caa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011caa:	b510      	push	{r4, lr}
 8011cac:	2104      	movs	r1, #4
 8011cae:	4604      	mov	r4, r0
 8011cb0:	f008 ff24 	bl	801aafc <_ZdlPvj>
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	bd10      	pop	{r4, pc}

08011cb8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011cb8:	b510      	push	{r4, lr}
 8011cba:	2104      	movs	r1, #4
 8011cbc:	4604      	mov	r4, r0
 8011cbe:	f008 ff1d 	bl	801aafc <_ZdlPvj>
 8011cc2:	4620      	mov	r0, r4
 8011cc4:	bd10      	pop	{r4, pc}

08011cc6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011cc6:	b510      	push	{r4, lr}
 8011cc8:	2104      	movs	r1, #4
 8011cca:	4604      	mov	r4, r0
 8011ccc:	f008 ff16 	bl	801aafc <_ZdlPvj>
 8011cd0:	4620      	mov	r0, r4
 8011cd2:	bd10      	pop	{r4, pc}

08011cd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8011cd4:	b510      	push	{r4, lr}
 8011cd6:	2104      	movs	r1, #4
 8011cd8:	4604      	mov	r4, r0
 8011cda:	f008 ff0f 	bl	801aafc <_ZdlPvj>
 8011cde:	4620      	mov	r0, r4
 8011ce0:	bd10      	pop	{r4, pc}

08011ce2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8011ce2:	b510      	push	{r4, lr}
 8011ce4:	2104      	movs	r1, #4
 8011ce6:	4604      	mov	r4, r0
 8011ce8:	f008 ff08 	bl	801aafc <_ZdlPvj>
 8011cec:	4620      	mov	r0, r4
 8011cee:	bd10      	pop	{r4, pc}

08011cf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011cf0:	b510      	push	{r4, lr}
 8011cf2:	2104      	movs	r1, #4
 8011cf4:	4604      	mov	r4, r0
 8011cf6:	f008 ff01 	bl	801aafc <_ZdlPvj>
 8011cfa:	4620      	mov	r0, r4
 8011cfc:	bd10      	pop	{r4, pc}

08011cfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011cfe:	b510      	push	{r4, lr}
 8011d00:	2104      	movs	r1, #4
 8011d02:	4604      	mov	r4, r0
 8011d04:	f008 fefa 	bl	801aafc <_ZdlPvj>
 8011d08:	4620      	mov	r0, r4
 8011d0a:	bd10      	pop	{r4, pc}

08011d0c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8011d0c:	b510      	push	{r4, lr}
 8011d0e:	2104      	movs	r1, #4
 8011d10:	4604      	mov	r4, r0
 8011d12:	f008 fef3 	bl	801aafc <_ZdlPvj>
 8011d16:	4620      	mov	r0, r4
 8011d18:	bd10      	pop	{r4, pc}

08011d1a <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8011d1a:	b510      	push	{r4, lr}
 8011d1c:	2104      	movs	r1, #4
 8011d1e:	4604      	mov	r4, r0
 8011d20:	f008 feec 	bl	801aafc <_ZdlPvj>
 8011d24:	4620      	mov	r0, r4
 8011d26:	bd10      	pop	{r4, pc}

08011d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011d28:	b510      	push	{r4, lr}
 8011d2a:	2104      	movs	r1, #4
 8011d2c:	4604      	mov	r4, r0
 8011d2e:	f008 fee5 	bl	801aafc <_ZdlPvj>
 8011d32:	4620      	mov	r0, r4
 8011d34:	bd10      	pop	{r4, pc}

08011d36 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011d36:	b510      	push	{r4, lr}
 8011d38:	2104      	movs	r1, #4
 8011d3a:	4604      	mov	r4, r0
 8011d3c:	f008 fede 	bl	801aafc <_ZdlPvj>
 8011d40:	4620      	mov	r0, r4
 8011d42:	bd10      	pop	{r4, pc}

08011d44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8011d44:	b510      	push	{r4, lr}
 8011d46:	2104      	movs	r1, #4
 8011d48:	4604      	mov	r4, r0
 8011d4a:	f008 fed7 	bl	801aafc <_ZdlPvj>
 8011d4e:	4620      	mov	r0, r4
 8011d50:	bd10      	pop	{r4, pc}

08011d52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8011d52:	b510      	push	{r4, lr}
 8011d54:	2104      	movs	r1, #4
 8011d56:	4604      	mov	r4, r0
 8011d58:	f008 fed0 	bl	801aafc <_ZdlPvj>
 8011d5c:	4620      	mov	r0, r4
 8011d5e:	bd10      	pop	{r4, pc}

08011d60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8011d60:	b510      	push	{r4, lr}
 8011d62:	2104      	movs	r1, #4
 8011d64:	4604      	mov	r4, r0
 8011d66:	f008 fec9 	bl	801aafc <_ZdlPvj>
 8011d6a:	4620      	mov	r0, r4
 8011d6c:	bd10      	pop	{r4, pc}

08011d6e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8011d6e:	b510      	push	{r4, lr}
 8011d70:	2104      	movs	r1, #4
 8011d72:	4604      	mov	r4, r0
 8011d74:	f008 fec2 	bl	801aafc <_ZdlPvj>
 8011d78:	4620      	mov	r0, r4
 8011d7a:	bd10      	pop	{r4, pc}

08011d7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8011d7c:	b510      	push	{r4, lr}
 8011d7e:	2104      	movs	r1, #4
 8011d80:	4604      	mov	r4, r0
 8011d82:	f008 febb 	bl	801aafc <_ZdlPvj>
 8011d86:	4620      	mov	r0, r4
 8011d88:	bd10      	pop	{r4, pc}

08011d8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8011d8a:	b510      	push	{r4, lr}
 8011d8c:	2104      	movs	r1, #4
 8011d8e:	4604      	mov	r4, r0
 8011d90:	f008 feb4 	bl	801aafc <_ZdlPvj>
 8011d94:	4620      	mov	r0, r4
 8011d96:	bd10      	pop	{r4, pc}

08011d98 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8011d98:	b510      	push	{r4, lr}
 8011d9a:	2104      	movs	r1, #4
 8011d9c:	4604      	mov	r4, r0
 8011d9e:	f008 fead 	bl	801aafc <_ZdlPvj>
 8011da2:	4620      	mov	r0, r4
 8011da4:	bd10      	pop	{r4, pc}

08011da6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8011da6:	b510      	push	{r4, lr}
 8011da8:	2104      	movs	r1, #4
 8011daa:	4604      	mov	r4, r0
 8011dac:	f008 fea6 	bl	801aafc <_ZdlPvj>
 8011db0:	4620      	mov	r0, r4
 8011db2:	bd10      	pop	{r4, pc}

08011db4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8011db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011db8:	460e      	mov	r6, r1
 8011dba:	b08b      	sub	sp, #44	; 0x2c
 8011dbc:	4615      	mov	r5, r2
 8011dbe:	461c      	mov	r4, r3
 8011dc0:	b323      	cbz	r3, 8011e0c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011dc2:	4608      	mov	r0, r1
 8011dc4:	f7f8 fbf4 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011dc8:	bb00      	cbnz	r0, 8011e0c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011dca:	6830      	ldr	r0, [r6, #0]
 8011dcc:	6871      	ldr	r1, [r6, #4]
 8011dce:	4e55      	ldr	r6, [pc, #340]	; (8011f24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011dd0:	ab08      	add	r3, sp, #32
 8011dd2:	c303      	stmia	r3!, {r0, r1}
 8011dd4:	a808      	add	r0, sp, #32
 8011dd6:	f7fa fee5 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011dda:	6830      	ldr	r0, [r6, #0]
 8011ddc:	6803      	ldr	r3, [r0, #0]
 8011dde:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8011de0:	4798      	blx	r3
 8011de2:	2cff      	cmp	r4, #255	; 0xff
 8011de4:	d015      	beq.n	8011e12 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5e>
 8011de6:	f010 0f08 	tst.w	r0, #8
 8011dea:	d015      	beq.n	8011e18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x64>
 8011dec:	6830      	ldr	r0, [r6, #0]
 8011dee:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8011df2:	6801      	ldr	r1, [r0, #0]
 8011df4:	9402      	str	r4, [sp, #8]
 8011df6:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 8011dfa:	9401      	str	r4, [sp, #4]
 8011dfc:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8011e00:	9400      	str	r4, [sp, #0]
 8011e02:	6c8c      	ldr	r4, [r1, #72]	; 0x48
 8011e04:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8011e08:	4629      	mov	r1, r5
 8011e0a:	47a0      	blx	r4
 8011e0c:	b00b      	add	sp, #44	; 0x2c
 8011e0e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e12:	f010 0f02 	tst.w	r0, #2
 8011e16:	e7e8      	b.n	8011dea <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8011e18:	6830      	ldr	r0, [r6, #0]
 8011e1a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8011e1e:	6803      	ldr	r3, [r0, #0]
 8011e20:	f9bd 9026 	ldrsh.w	r9, [sp, #38]	; 0x26
 8011e24:	6a1b      	ldr	r3, [r3, #32]
 8011e26:	4798      	blx	r3
 8011e28:	4a3f      	ldr	r2, [pc, #252]	; (8011f28 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x174>)
 8011e2a:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8011e2e:	8816      	ldrh	r6, [r2, #0]
 8011e30:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8011e34:	2cff      	cmp	r4, #255	; 0xff
 8011e36:	fb06 1303 	mla	r3, r6, r3, r1
 8011e3a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011e3e:	ea4f 0b48 	mov.w	fp, r8, lsl #1
 8011e42:	4616      	mov	r6, r2
 8011e44:	ea28 71e8 	bic.w	r1, r8, r8, asr #31
 8011e48:	d10a      	bne.n	8011e60 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xac>
 8011e4a:	0049      	lsls	r1, r1, #1
 8011e4c:	2200      	movs	r2, #0
 8011e4e:	454a      	cmp	r2, r9
 8011e50:	da62      	bge.n	8011f18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011e52:	2300      	movs	r3, #0
 8011e54:	4543      	cmp	r3, r8
 8011e56:	da58      	bge.n	8011f0a <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x156>
 8011e58:	f820 5013 	strh.w	r5, [r0, r3, lsl #1]
 8011e5c:	3301      	adds	r3, #1
 8011e5e:	e7f9      	b.n	8011e54 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>
 8011e60:	122b      	asrs	r3, r5, #8
 8011e62:	f1c4 07ff 	rsb	r7, r4, #255	; 0xff
 8011e66:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8011e6a:	b2a4      	uxth	r4, r4
 8011e6c:	4363      	muls	r3, r4
 8011e6e:	9305      	str	r3, [sp, #20]
 8011e70:	f3c5 06cc 	ubfx	r6, r5, #3, #13
 8011e74:	00eb      	lsls	r3, r5, #3
 8011e76:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8011e7a:	b2db      	uxtb	r3, r3
 8011e7c:	0049      	lsls	r1, r1, #1
 8011e7e:	4366      	muls	r6, r4
 8011e80:	4363      	muls	r3, r4
 8011e82:	9106      	str	r1, [sp, #24]
 8011e84:	f04f 0c00 	mov.w	ip, #0
 8011e88:	b2bf      	uxth	r7, r7
 8011e8a:	9207      	str	r2, [sp, #28]
 8011e8c:	45cc      	cmp	ip, r9
 8011e8e:	da43      	bge.n	8011f18 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x164>
 8011e90:	4682      	mov	sl, r0
 8011e92:	f04f 0e00 	mov.w	lr, #0
 8011e96:	45c6      	cmp	lr, r8
 8011e98:	da2d      	bge.n	8011ef6 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x142>
 8011e9a:	f8ba 2000 	ldrh.w	r2, [sl]
 8011e9e:	9905      	ldr	r1, [sp, #20]
 8011ea0:	1214      	asrs	r4, r2, #8
 8011ea2:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8011ea6:	fb14 f407 	smulbb	r4, r4, r7
 8011eaa:	440c      	add	r4, r1
 8011eac:	10d1      	asrs	r1, r2, #3
 8011eae:	00d2      	lsls	r2, r2, #3
 8011eb0:	b2d2      	uxtb	r2, r2
 8011eb2:	fb12 f207 	smulbb	r2, r2, r7
 8011eb6:	b2a4      	uxth	r4, r4
 8011eb8:	441a      	add	r2, r3
 8011eba:	b292      	uxth	r2, r2
 8011ebc:	1c65      	adds	r5, r4, #1
 8011ebe:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011ec2:	eb05 2414 	add.w	r4, r5, r4, lsr #8
 8011ec6:	fb11 f107 	smulbb	r1, r1, r7
 8011eca:	1c55      	adds	r5, r2, #1
 8011ecc:	4431      	add	r1, r6
 8011ece:	eb05 2212 	add.w	r2, r5, r2, lsr #8
 8011ed2:	b289      	uxth	r1, r1
 8011ed4:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8011ed8:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8011edc:	4314      	orrs	r4, r2
 8011ede:	1c4a      	adds	r2, r1, #1
 8011ee0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8011ee4:	0949      	lsrs	r1, r1, #5
 8011ee6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8011eea:	430c      	orrs	r4, r1
 8011eec:	f82a 4b02 	strh.w	r4, [sl], #2
 8011ef0:	f10e 0e01 	add.w	lr, lr, #1
 8011ef4:	e7cf      	b.n	8011e96 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xe2>
 8011ef6:	9a07      	ldr	r2, [sp, #28]
 8011ef8:	9906      	ldr	r1, [sp, #24]
 8011efa:	8812      	ldrh	r2, [r2, #0]
 8011efc:	ebcb 0242 	rsb	r2, fp, r2, lsl #1
 8011f00:	440a      	add	r2, r1
 8011f02:	4410      	add	r0, r2
 8011f04:	f10c 0c01 	add.w	ip, ip, #1
 8011f08:	e7c0      	b.n	8011e8c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xd8>
 8011f0a:	8833      	ldrh	r3, [r6, #0]
 8011f0c:	ebcb 0343 	rsb	r3, fp, r3, lsl #1
 8011f10:	440b      	add	r3, r1
 8011f12:	4418      	add	r0, r3
 8011f14:	3201      	adds	r2, #1
 8011f16:	e79a      	b.n	8011e4e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9a>
 8011f18:	4b02      	ldr	r3, [pc, #8]	; (8011f24 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x170>)
 8011f1a:	6818      	ldr	r0, [r3, #0]
 8011f1c:	6803      	ldr	r3, [r0, #0]
 8011f1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f20:	4798      	blx	r3
 8011f22:	e773      	b.n	8011e0c <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x58>
 8011f24:	2000143c 	.word	0x2000143c
 8011f28:	20001436 	.word	0x20001436

08011f2c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 8011f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011f30:	4d9b      	ldr	r5, [pc, #620]	; (80121a0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8011f32:	4690      	mov	r8, r2
 8011f34:	682a      	ldr	r2, [r5, #0]
 8011f36:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 8011f3a:	2a02      	cmp	r2, #2
 8011f3c:	b08f      	sub	sp, #60	; 0x3c
 8011f3e:	4604      	mov	r4, r0
 8011f40:	4689      	mov	r9, r1
 8011f42:	d106      	bne.n	8011f52 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 8011f44:	4b97      	ldr	r3, [pc, #604]	; (80121a4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8011f46:	4a98      	ldr	r2, [pc, #608]	; (80121a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011f48:	f240 21c2 	movw	r1, #706	; 0x2c2
 8011f4c:	4897      	ldr	r0, [pc, #604]	; (80121ac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8011f4e:	f009 fbcf 	bl	801b6f0 <__assert_func>
 8011f52:	ae0e      	add	r6, sp, #56	; 0x38
 8011f54:	f826 3d24 	strh.w	r3, [r6, #-36]!
 8011f58:	4630      	mov	r0, r6
 8011f5a:	f7fd facf 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8011f5e:	6823      	ldr	r3, [r4, #0]
 8011f60:	4607      	mov	r7, r0
 8011f62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011f64:	4620      	mov	r0, r4
 8011f66:	4798      	blx	r3
 8011f68:	4287      	cmp	r7, r0
 8011f6a:	d004      	beq.n	8011f76 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8011f6c:	4b90      	ldr	r3, [pc, #576]	; (80121b0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8011f6e:	4a8e      	ldr	r2, [pc, #568]	; (80121a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011f70:	f44f 7131 	mov.w	r1, #708	; 0x2c4
 8011f74:	e7ea      	b.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011f76:	4630      	mov	r0, r6
 8011f78:	f7fd fa3c 	bl	800f3f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8011f7c:	4607      	mov	r7, r0
 8011f7e:	b920      	cbnz	r0, 8011f8a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8011f80:	4b8c      	ldr	r3, [pc, #560]	; (80121b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x288>)
 8011f82:	4a89      	ldr	r2, [pc, #548]	; (80121a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8011f84:	f240 21c6 	movw	r1, #710	; 0x2c6
 8011f88:	e7e0      	b.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8011f8a:	f8d8 0000 	ldr.w	r0, [r8]
 8011f8e:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011f92:	f9b8 a000 	ldrsh.w	sl, [r8]
 8011f96:	ab06      	add	r3, sp, #24
 8011f98:	c303      	stmia	r3!, {r0, r1}
 8011f9a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 8011f9e:	f8d9 0000 	ldr.w	r0, [r9]
 8011fa2:	f9b8 9002 	ldrsh.w	r9, [r8, #2]
 8011fa6:	ab08      	add	r3, sp, #32
 8011fa8:	c303      	stmia	r3!, {r0, r1}
 8011faa:	4630      	mov	r0, r6
 8011fac:	f7fd f91a 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011fb0:	4680      	mov	r8, r0
 8011fb2:	4630      	mov	r0, r6
 8011fb4:	f7fd f950 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011fb8:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 8011fbc:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8011fc0:	f10d 0920 	add.w	r9, sp, #32
 8011fc4:	a806      	add	r0, sp, #24
 8011fc6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011fca:	f8ad 802c 	strh.w	r8, [sp, #44]	; 0x2c
 8011fce:	f7fa fde9 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fd2:	4648      	mov	r0, r9
 8011fd4:	f7fa fde6 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fd8:	a80a      	add	r0, sp, #40	; 0x28
 8011fda:	f7fa fde3 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011fde:	4e76      	ldr	r6, [pc, #472]	; (80121b8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x28c>)
 8011fe0:	4b76      	ldr	r3, [pc, #472]	; (80121bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 8011fe2:	f9b6 2000 	ldrsh.w	r2, [r6]
 8011fe6:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011fea:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011fee:	2100      	movs	r1, #0
 8011ff0:	910c      	str	r1, [sp, #48]	; 0x30
 8011ff2:	4648      	mov	r0, r9
 8011ff4:	a90c      	add	r1, sp, #48	; 0x30
 8011ff6:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011ffa:	f7f8 fa95 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 8011ffe:	4648      	mov	r0, r9
 8012000:	f7f8 fad6 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012004:	2800      	cmp	r0, #0
 8012006:	f040 80bd 	bne.w	8012184 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801200a:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801200e:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012012:	4288      	cmp	r0, r1
 8012014:	db37      	blt.n	8012086 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012016:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801201a:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 801201e:	429a      	cmp	r2, r3
 8012020:	db31      	blt.n	8012086 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012022:	f8bd c024 	ldrh.w	ip, [sp, #36]	; 0x24
 8012026:	4460      	add	r0, ip
 8012028:	f8bd c01c 	ldrh.w	ip, [sp, #28]
 801202c:	4461      	add	r1, ip
 801202e:	b200      	sxth	r0, r0
 8012030:	b209      	sxth	r1, r1
 8012032:	4288      	cmp	r0, r1
 8012034:	dc27      	bgt.n	8012086 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 8012036:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 801203a:	440a      	add	r2, r1
 801203c:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 8012040:	440b      	add	r3, r1
 8012042:	b212      	sxth	r2, r2
 8012044:	b21b      	sxth	r3, r3
 8012046:	429a      	cmp	r2, r3
 8012048:	dc1d      	bgt.n	8012086 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x15a>
 801204a:	6823      	ldr	r3, [r4, #0]
 801204c:	4620      	mov	r0, r4
 801204e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012050:	4798      	blx	r3
 8012052:	4682      	mov	sl, r0
 8012054:	6828      	ldr	r0, [r5, #0]
 8012056:	6803      	ldr	r3, [r0, #0]
 8012058:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801205a:	4798      	blx	r3
 801205c:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8012060:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8012064:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012068:	1a9b      	subs	r3, r3, r2
 801206a:	b29b      	uxth	r3, r3
 801206c:	b21c      	sxth	r4, r3
 801206e:	2c00      	cmp	r4, #0
 8012070:	dc0e      	bgt.n	8012090 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x164>
 8012072:	bf1f      	itttt	ne
 8012074:	f8ad 2020 	strhne.w	r2, [sp, #32]
 8012078:	f8bd 2024 	ldrhne.w	r2, [sp, #36]	; 0x24
 801207c:	189b      	addne	r3, r3, r2
 801207e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8012082:	463c      	mov	r4, r7
 8012084:	e00a      	b.n	801209c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x170>
 8012086:	4b4e      	ldr	r3, [pc, #312]	; (80121c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x294>)
 8012088:	4a47      	ldr	r2, [pc, #284]	; (80121a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 801208a:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 801208e:	e75d      	b.n	8011f4c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8012090:	ebab 0303 	sub.w	r3, fp, r3
 8012094:	eb07 0444 	add.w	r4, r7, r4, lsl #1
 8012098:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801209c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 80120a0:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 80120a4:	1a5b      	subs	r3, r3, r1
 80120a6:	b29b      	uxth	r3, r3
 80120a8:	b21a      	sxth	r2, r3
 80120aa:	2a00      	cmp	r2, #0
 80120ac:	dd4a      	ble.n	8012144 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x218>
 80120ae:	fb02 f20b 	mul.w	r2, r2, fp
 80120b2:	eb04 0442 	add.w	r4, r4, r2, lsl #1
 80120b6:	f8bd 202e 	ldrh.w	r2, [sp, #46]	; 0x2e
 80120ba:	1ad3      	subs	r3, r2, r3
 80120bc:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 80120c0:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	; 0x2c
 80120c4:	2b00      	cmp	r3, #0
 80120c6:	dd5d      	ble.n	8012184 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80120c8:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	; 0x2e
 80120cc:	f1bc 0f00 	cmp.w	ip, #0
 80120d0:	dd58      	ble.n	8012184 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80120d2:	f9bd 1022 	ldrsh.w	r1, [sp, #34]	; 0x22
 80120d6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80120da:	fb0a f801 	mul.w	r8, sl, r1
 80120de:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 80120e2:	4480      	add	r8, r0
 80120e4:	8830      	ldrh	r0, [r6, #0]
 80120e6:	f9bd 6024 	ldrsh.w	r6, [sp, #36]	; 0x24
 80120ea:	42b3      	cmp	r3, r6
 80120ec:	bfa8      	it	ge
 80120ee:	4633      	movge	r3, r6
 80120f0:	1a82      	subs	r2, r0, r2
 80120f2:	4293      	cmp	r3, r2
 80120f4:	bfa8      	it	ge
 80120f6:	4613      	movge	r3, r2
 80120f8:	4a30      	ldr	r2, [pc, #192]	; (80121bc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x290>)
 80120fa:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 80120fe:	8812      	ldrh	r2, [r2, #0]
 8012100:	4566      	cmp	r6, ip
 8012102:	eba2 0101 	sub.w	r1, r2, r1
 8012106:	bfa8      	it	ge
 8012108:	4666      	movge	r6, ip
 801210a:	428e      	cmp	r6, r1
 801210c:	4632      	mov	r2, r6
 801210e:	bfa8      	it	ge
 8012110:	460a      	movge	r2, r1
 8012112:	4298      	cmp	r0, r3
 8012114:	9202      	str	r2, [sp, #8]
 8012116:	d01e      	beq.n	8012156 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x22a>
 8012118:	005b      	lsls	r3, r3, #1
 801211a:	9303      	str	r3, [sp, #12]
 801211c:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8012120:	f04f 0900 	mov.w	r9, #0
 8012124:	9b02      	ldr	r3, [sp, #8]
 8012126:	454b      	cmp	r3, r9
 8012128:	dd2c      	ble.n	8012184 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 801212a:	6828      	ldr	r0, [r5, #0]
 801212c:	6803      	ldr	r3, [r0, #0]
 801212e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012130:	4642      	mov	r2, r8
 8012132:	461e      	mov	r6, r3
 8012134:	4621      	mov	r1, r4
 8012136:	9b03      	ldr	r3, [sp, #12]
 8012138:	47b0      	blx	r6
 801213a:	44d0      	add	r8, sl
 801213c:	445c      	add	r4, fp
 801213e:	f109 0901 	add.w	r9, r9, #1
 8012142:	e7ef      	b.n	8012124 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1f8>
 8012144:	bf1f      	itttt	ne
 8012146:	f8bd 2026 	ldrhne.w	r2, [sp, #38]	; 0x26
 801214a:	f8ad 1022 	strhne.w	r1, [sp, #34]	; 0x22
 801214e:	189b      	addne	r3, r3, r2
 8012150:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 8012154:	e7b4      	b.n	80120c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x194>
 8012156:	4558      	cmp	r0, fp
 8012158:	d1de      	bne.n	8012118 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x1ec>
 801215a:	6828      	ldr	r0, [r5, #0]
 801215c:	6803      	ldr	r3, [r0, #0]
 801215e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012160:	4798      	blx	r3
 8012162:	07c3      	lsls	r3, r0, #31
 8012164:	d512      	bpl.n	801218c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x260>
 8012166:	6828      	ldr	r0, [r5, #0]
 8012168:	9b02      	ldr	r3, [sp, #8]
 801216a:	f8ad b024 	strh.w	fp, [sp, #36]	; 0x24
 801216e:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 8012172:	6803      	ldr	r3, [r0, #0]
 8012174:	f8cd b000 	str.w	fp, [sp]
 8012178:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 801217a:	e899 0006 	ldmia.w	r9, {r1, r2}
 801217e:	4623      	mov	r3, r4
 8012180:	47a8      	blx	r5
 8012182:	4607      	mov	r7, r0
 8012184:	4638      	mov	r0, r7
 8012186:	b00f      	add	sp, #60	; 0x3c
 8012188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801218c:	6828      	ldr	r0, [r5, #0]
 801218e:	6803      	ldr	r3, [r0, #0]
 8012190:	6add      	ldr	r5, [r3, #44]	; 0x2c
 8012192:	9b02      	ldr	r3, [sp, #8]
 8012194:	4642      	mov	r2, r8
 8012196:	fb03 f30a 	mul.w	r3, r3, sl
 801219a:	4621      	mov	r1, r4
 801219c:	47a8      	blx	r5
 801219e:	e7f1      	b.n	8012184 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x258>
 80121a0:	2000143c 	.word	0x2000143c
 80121a4:	0801f1bf 	.word	0x0801f1bf
 80121a8:	0801fa03 	.word	0x0801fa03
 80121ac:	0801f273 	.word	0x0801f273
 80121b0:	0801f2a5 	.word	0x0801f2a5
 80121b4:	0801f2fa 	.word	0x0801f2fa
 80121b8:	20001436 	.word	0x20001436
 80121bc:	20001438 	.word	0x20001438
 80121c0:	0801f338 	.word	0x0801f338

080121c4 <_ZN8touchgfx8LCD16bppC1Ev>:
 80121c4:	2200      	movs	r2, #0
 80121c6:	4910      	ldr	r1, [pc, #64]	; (8012208 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80121c8:	6042      	str	r2, [r0, #4]
 80121ca:	6001      	str	r1, [r0, #0]
 80121cc:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80121d0:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80121d4:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80121d8:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80121dc:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80121e0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80121e4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80121e8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80121ec:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80121f0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80121f4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80121f8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80121fc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8012200:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8012204:	4770      	bx	lr
 8012206:	bf00      	nop
 8012208:	0801f67c 	.word	0x0801f67c

0801220c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801220c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012210:	460c      	mov	r4, r1
 8012212:	b08d      	sub	sp, #52	; 0x34
 8012214:	4682      	mov	sl, r0
 8012216:	6808      	ldr	r0, [r1, #0]
 8012218:	6849      	ldr	r1, [r1, #4]
 801221a:	469b      	mov	fp, r3
 801221c:	ab08      	add	r3, sp, #32
 801221e:	c303      	stmia	r3!, {r0, r1}
 8012220:	6810      	ldr	r0, [r2, #0]
 8012222:	6851      	ldr	r1, [r2, #4]
 8012224:	ab0a      	add	r3, sp, #40	; 0x28
 8012226:	c303      	stmia	r3!, {r0, r1}
 8012228:	a808      	add	r0, sp, #32
 801222a:	f7fa fcbb 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801222e:	4621      	mov	r1, r4
 8012230:	a80a      	add	r0, sp, #40	; 0x28
 8012232:	f7fa fc9f 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012236:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 801223a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 801223e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8012242:	4c60      	ldr	r4, [pc, #384]	; (80123c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 8012244:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8012248:	6820      	ldr	r0, [r4, #0]
 801224a:	f9bd 902e 	ldrsh.w	r9, [sp, #46]	; 0x2e
 801224e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012252:	eb0a 0a81 	add.w	sl, sl, r1, lsl #2
 8012256:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801225a:	440a      	add	r2, r1
 801225c:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8012260:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8012264:	4413      	add	r3, r2
 8012266:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 801226a:	6803      	ldr	r3, [r0, #0]
 801226c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801226e:	4798      	blx	r3
 8012270:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8012274:	d119      	bne.n	80122aa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8012276:	f010 0f20 	tst.w	r0, #32
 801227a:	6820      	ldr	r0, [r4, #0]
 801227c:	d018      	beq.n	80122b0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801227e:	f8bd 4024 	ldrh.w	r4, [sp, #36]	; 0x24
 8012282:	6801      	ldr	r1, [r0, #0]
 8012284:	9402      	str	r4, [sp, #8]
 8012286:	fa1f f489 	uxth.w	r4, r9
 801228a:	9401      	str	r4, [sp, #4]
 801228c:	fa1f f488 	uxth.w	r4, r8
 8012290:	f8cd b00c 	str.w	fp, [sp, #12]
 8012294:	9400      	str	r4, [sp, #0]
 8012296:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8012298:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801229c:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80122a0:	4651      	mov	r1, sl
 80122a2:	47a0      	blx	r4
 80122a4:	b00d      	add	sp, #52	; 0x34
 80122a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80122aa:	f010 0f40 	tst.w	r0, #64	; 0x40
 80122ae:	e7e4      	b.n	801227a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80122b0:	6803      	ldr	r3, [r0, #0]
 80122b2:	6a1b      	ldr	r3, [r3, #32]
 80122b4:	4798      	blx	r3
 80122b6:	4a44      	ldr	r2, [pc, #272]	; (80123c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1bc>)
 80122b8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80122bc:	8813      	ldrh	r3, [r2, #0]
 80122be:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	; 0x2a
 80122c2:	9207      	str	r2, [sp, #28]
 80122c4:	fb04 1303 	mla	r3, r4, r3, r1
 80122c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80122cc:	ea28 73e8 	bic.w	r3, r8, r8, asr #31
 80122d0:	0099      	lsls	r1, r3, #2
 80122d2:	005b      	lsls	r3, r3, #1
 80122d4:	9106      	str	r1, [sp, #24]
 80122d6:	9305      	str	r3, [sp, #20]
 80122d8:	f04f 0c00 	mov.w	ip, #0
 80122dc:	45cc      	cmp	ip, r9
 80122de:	da6b      	bge.n	80123b8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1ac>
 80122e0:	2300      	movs	r3, #0
 80122e2:	4543      	cmp	r3, r8
 80122e4:	da55      	bge.n	8012392 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x186>
 80122e6:	f85a 4023 	ldr.w	r4, [sl, r3, lsl #2]
 80122ea:	0e25      	lsrs	r5, r4, #24
 80122ec:	d013      	beq.n	8012316 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 80122ee:	2dff      	cmp	r5, #255	; 0xff
 80122f0:	ea4f 2714 	mov.w	r7, r4, lsr #8
 80122f4:	d111      	bne.n	801231a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80122f6:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80122fa:	d10e      	bne.n	801231a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10e>
 80122fc:	0962      	lsrs	r2, r4, #5
 80122fe:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8012302:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8012306:	f027 0707 	bic.w	r7, r7, #7
 801230a:	4317      	orrs	r7, r2
 801230c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8012310:	433c      	orrs	r4, r7
 8012312:	f820 4013 	strh.w	r4, [r0, r3, lsl #1]
 8012316:	3301      	adds	r3, #1
 8012318:	e7e3      	b.n	80122e2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd6>
 801231a:	fb0b f505 	mul.w	r5, fp, r5
 801231e:	1c6a      	adds	r2, r5, #1
 8012320:	f830 1013 	ldrh.w	r1, [r0, r3, lsl #1]
 8012324:	eb02 2225 	add.w	r2, r2, r5, asr #8
 8012328:	1212      	asrs	r2, r2, #8
 801232a:	fa1f fe82 	uxth.w	lr, r2
 801232e:	120e      	asrs	r6, r1, #8
 8012330:	f3c4 4507 	ubfx	r5, r4, #16, #8
 8012334:	43d2      	mvns	r2, r2
 8012336:	b2d2      	uxtb	r2, r2
 8012338:	fb15 f50e 	smulbb	r5, r5, lr
 801233c:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012340:	fb06 5602 	mla	r6, r6, r2, r5
 8012344:	b2e4      	uxtb	r4, r4
 8012346:	10cd      	asrs	r5, r1, #3
 8012348:	00c9      	lsls	r1, r1, #3
 801234a:	b2c9      	uxtb	r1, r1
 801234c:	fb14 f40e 	smulbb	r4, r4, lr
 8012350:	fb01 4402 	mla	r4, r1, r2, r4
 8012354:	b2ff      	uxtb	r7, r7
 8012356:	b2b6      	uxth	r6, r6
 8012358:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801235c:	b2a4      	uxth	r4, r4
 801235e:	fb17 f70e 	smulbb	r7, r7, lr
 8012362:	fb05 7702 	mla	r7, r5, r2, r7
 8012366:	1c72      	adds	r2, r6, #1
 8012368:	1c65      	adds	r5, r4, #1
 801236a:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801236e:	eb05 2514 	add.w	r5, r5, r4, lsr #8
 8012372:	b2bf      	uxth	r7, r7
 8012374:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8012378:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801237c:	432e      	orrs	r6, r5
 801237e:	1c7d      	adds	r5, r7, #1
 8012380:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 8012384:	097f      	lsrs	r7, r7, #5
 8012386:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801238a:	433e      	orrs	r6, r7
 801238c:	f820 6013 	strh.w	r6, [r0, r3, lsl #1]
 8012390:	e7c1      	b.n	8012316 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x10a>
 8012392:	9b07      	ldr	r3, [sp, #28]
 8012394:	9a05      	ldr	r2, [sp, #20]
 8012396:	881b      	ldrh	r3, [r3, #0]
 8012398:	eba3 0308 	sub.w	r3, r3, r8
 801239c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80123a0:	4418      	add	r0, r3
 80123a2:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 80123a6:	9a06      	ldr	r2, [sp, #24]
 80123a8:	eba3 0308 	sub.w	r3, r3, r8
 80123ac:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 80123b0:	449a      	add	sl, r3
 80123b2:	f10c 0c01 	add.w	ip, ip, #1
 80123b6:	e791      	b.n	80122dc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xd0>
 80123b8:	4b02      	ldr	r3, [pc, #8]	; (80123c4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b8>)
 80123ba:	6818      	ldr	r0, [r3, #0]
 80123bc:	6803      	ldr	r3, [r0, #0]
 80123be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123c0:	4798      	blx	r3
 80123c2:	e76f      	b.n	80122a4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80123c4:	2000143c 	.word	0x2000143c
 80123c8:	20001436 	.word	0x20001436

080123cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80123cc:	b570      	push	{r4, r5, r6, lr}
 80123ce:	9d04      	ldr	r5, [sp, #16]
 80123d0:	f89d 6018 	ldrb.w	r6, [sp, #24]
 80123d4:	460c      	mov	r4, r1
 80123d6:	4619      	mov	r1, r3
 80123d8:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80123dc:	2a0c      	cmp	r2, #12
 80123de:	d820      	bhi.n	8012422 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80123e0:	e8df f002 	tbb	[pc, r2]
 80123e4:	18121807 	.word	0x18121807
 80123e8:	18181818 	.word	0x18181818
 80123ec:	18181818 	.word	0x18181818
 80123f0:	18          	.byte	0x18
 80123f1:	00          	.byte	0x00
 80123f2:	6802      	ldr	r2, [r0, #0]
 80123f4:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80123f8:	6916      	ldr	r6, [r2, #16]
 80123fa:	462b      	mov	r3, r5
 80123fc:	460a      	mov	r2, r1
 80123fe:	46b4      	mov	ip, r6
 8012400:	4621      	mov	r1, r4
 8012402:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012406:	4760      	bx	ip
 8012408:	462a      	mov	r2, r5
 801240a:	4620      	mov	r0, r4
 801240c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012410:	f7ff befc 	b.w	801220c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012414:	4b03      	ldr	r3, [pc, #12]	; (8012424 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 8012416:	4a04      	ldr	r2, [pc, #16]	; (8012428 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 8012418:	4804      	ldr	r0, [pc, #16]	; (801242c <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 801241a:	f240 21bb 	movw	r1, #699	; 0x2bb
 801241e:	f009 f967 	bl	801b6f0 <__assert_func>
 8012422:	bd70      	pop	{r4, r5, r6, pc}
 8012424:	0801f398 	.word	0x0801f398
 8012428:	0801fa89 	.word	0x0801fa89
 801242c:	0801f273 	.word	0x0801f273

08012430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8012430:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012434:	b093      	sub	sp, #76	; 0x4c
 8012436:	880f      	ldrh	r7, [r1, #0]
 8012438:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 801243c:	4681      	mov	r9, r0
 801243e:	4688      	mov	r8, r1
 8012440:	4615      	mov	r5, r2
 8012442:	b12f      	cbz	r7, 8012450 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x20>
 8012444:	4b71      	ldr	r3, [pc, #452]	; (801260c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8012446:	4a72      	ldr	r2, [pc, #456]	; (8012610 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8012448:	4872      	ldr	r0, [pc, #456]	; (8012614 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 801244a:	21ec      	movs	r1, #236	; 0xec
 801244c:	f009 f950 	bl	801b6f0 <__assert_func>
 8012450:	6810      	ldr	r0, [r2, #0]
 8012452:	6851      	ldr	r1, [r2, #4]
 8012454:	ac0e      	add	r4, sp, #56	; 0x38
 8012456:	c403      	stmia	r4!, {r0, r1}
 8012458:	6818      	ldr	r0, [r3, #0]
 801245a:	6859      	ldr	r1, [r3, #4]
 801245c:	ac10      	add	r4, sp, #64	; 0x40
 801245e:	c403      	stmia	r4!, {r0, r1}
 8012460:	a80e      	add	r0, sp, #56	; 0x38
 8012462:	f7fa fb9f 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012466:	4629      	mov	r1, r5
 8012468:	a810      	add	r0, sp, #64	; 0x40
 801246a:	f7fa fb83 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801246e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012472:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012476:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801247a:	4d67      	ldr	r5, [pc, #412]	; (8012618 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 801247c:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 8012480:	6828      	ldr	r0, [r5, #0]
 8012482:	4c66      	ldr	r4, [pc, #408]	; (801261c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ec>)
 8012484:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012488:	4489      	add	r9, r1
 801248a:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801248e:	440a      	add	r2, r1
 8012490:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012494:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012498:	4413      	add	r3, r2
 801249a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801249e:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80124a2:	930a      	str	r3, [sp, #40]	; 0x28
 80124a4:	6803      	ldr	r3, [r0, #0]
 80124a6:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80124aa:	4798      	blx	r3
 80124ac:	2801      	cmp	r0, #1
 80124ae:	d11d      	bne.n	80124ec <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbc>
 80124b0:	220b      	movs	r2, #11
 80124b2:	9708      	str	r7, [sp, #32]
 80124b4:	9207      	str	r2, [sp, #28]
 80124b6:	8822      	ldrh	r2, [r4, #0]
 80124b8:	f8cd a010 	str.w	sl, [sp, #16]
 80124bc:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80124c0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80124c4:	9203      	str	r2, [sp, #12]
 80124c6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80124ca:	9202      	str	r2, [sp, #8]
 80124cc:	fa1f f28b 	uxth.w	r2, fp
 80124d0:	9201      	str	r2, [sp, #4]
 80124d2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80124d6:	9200      	str	r2, [sp, #0]
 80124d8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80124dc:	6828      	ldr	r0, [r5, #0]
 80124de:	4642      	mov	r2, r8
 80124e0:	4649      	mov	r1, r9
 80124e2:	f7f8 fc6f 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80124e6:	b013      	add	sp, #76	; 0x4c
 80124e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80124ec:	6828      	ldr	r0, [r5, #0]
 80124ee:	6803      	ldr	r3, [r0, #0]
 80124f0:	6a1b      	ldr	r3, [r3, #32]
 80124f2:	4798      	blx	r3
 80124f4:	8823      	ldrh	r3, [r4, #0]
 80124f6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80124fa:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80124fe:	fb01 2303 	mla	r3, r1, r3, r2
 8012502:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012506:	ea2b 73eb 	bic.w	r3, fp, fp, asr #31
 801250a:	930b      	str	r3, [sp, #44]	; 0x2c
 801250c:	005b      	lsls	r3, r3, #1
 801250e:	e9cd 340c 	strd	r3, r4, [sp, #48]	; 0x30
 8012512:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012514:	429f      	cmp	r7, r3
 8012516:	da72      	bge.n	80125fe <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ce>
 8012518:	2100      	movs	r1, #0
 801251a:	4559      	cmp	r1, fp
 801251c:	da5e      	bge.n	80125dc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801251e:	f819 3001 	ldrb.w	r3, [r9, r1]
 8012522:	2204      	movs	r2, #4
 8012524:	fb12 2303 	smlabb	r3, r2, r3, r2
 8012528:	f858 2003 	ldr.w	r2, [r8, r3]
 801252c:	0e15      	lsrs	r5, r2, #24
 801252e:	d013      	beq.n	8012558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8012530:	2dff      	cmp	r5, #255	; 0xff
 8012532:	ea4f 2412 	mov.w	r4, r2, lsr #8
 8012536:	d111      	bne.n	801255c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 8012538:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801253c:	d10e      	bne.n	801255c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801253e:	0953      	lsrs	r3, r2, #5
 8012540:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8012544:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012548:	f024 0407 	bic.w	r4, r4, #7
 801254c:	431c      	orrs	r4, r3
 801254e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8012552:	4314      	orrs	r4, r2
 8012554:	f820 4011 	strh.w	r4, [r0, r1, lsl #1]
 8012558:	3101      	adds	r1, #1
 801255a:	e7de      	b.n	801251a <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xea>
 801255c:	fb0a f505 	mul.w	r5, sl, r5
 8012560:	1c6b      	adds	r3, r5, #1
 8012562:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8012566:	eb03 2325 	add.w	r3, r3, r5, asr #8
 801256a:	121b      	asrs	r3, r3, #8
 801256c:	fa1f fe83 	uxth.w	lr, r3
 8012570:	ea4f 262c 	mov.w	r6, ip, asr #8
 8012574:	f3c2 4507 	ubfx	r5, r2, #16, #8
 8012578:	43db      	mvns	r3, r3
 801257a:	b2db      	uxtb	r3, r3
 801257c:	fb15 f50e 	smulbb	r5, r5, lr
 8012580:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012584:	fb06 5603 	mla	r6, r6, r3, r5
 8012588:	b2d2      	uxtb	r2, r2
 801258a:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801258e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8012592:	fa5f fc8c 	uxtb.w	ip, ip
 8012596:	fb12 f20e 	smulbb	r2, r2, lr
 801259a:	fb0c 2203 	mla	r2, ip, r3, r2
 801259e:	b2e4      	uxtb	r4, r4
 80125a0:	b2b6      	uxth	r6, r6
 80125a2:	fb14 f40e 	smulbb	r4, r4, lr
 80125a6:	b292      	uxth	r2, r2
 80125a8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80125ac:	fb05 4503 	mla	r5, r5, r3, r4
 80125b0:	1c73      	adds	r3, r6, #1
 80125b2:	1c54      	adds	r4, r2, #1
 80125b4:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 80125b8:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 80125bc:	b2ad      	uxth	r5, r5
 80125be:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80125c2:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 80125c6:	4326      	orrs	r6, r4
 80125c8:	1c6c      	adds	r4, r5, #1
 80125ca:	eb04 2415 	add.w	r4, r4, r5, lsr #8
 80125ce:	0964      	lsrs	r4, r4, #5
 80125d0:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 80125d4:	4326      	orrs	r6, r4
 80125d6:	f820 6011 	strh.w	r6, [r0, r1, lsl #1]
 80125da:	e7bd      	b.n	8012558 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80125dc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80125de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80125e0:	881b      	ldrh	r3, [r3, #0]
 80125e2:	eba3 030b 	sub.w	r3, r3, fp
 80125e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80125ea:	4418      	add	r0, r3
 80125ec:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80125f0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80125f2:	eba3 030b 	sub.w	r3, r3, fp
 80125f6:	4413      	add	r3, r2
 80125f8:	4499      	add	r9, r3
 80125fa:	3701      	adds	r7, #1
 80125fc:	e789      	b.n	8012512 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 80125fe:	4b06      	ldr	r3, [pc, #24]	; (8012618 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>)
 8012600:	6818      	ldr	r0, [r3, #0]
 8012602:	6803      	ldr	r3, [r0, #0]
 8012604:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012606:	4798      	blx	r3
 8012608:	e76d      	b.n	80124e6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb6>
 801260a:	bf00      	nop
 801260c:	0801f16f 	.word	0x0801f16f
 8012610:	0801f85a 	.word	0x0801f85a
 8012614:	0801f273 	.word	0x0801f273
 8012618:	2000143c 	.word	0x2000143c
 801261c:	20001436 	.word	0x20001436

08012620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8012620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012624:	4614      	mov	r4, r2
 8012626:	880a      	ldrh	r2, [r1, #0]
 8012628:	b093      	sub	sp, #76	; 0x4c
 801262a:	2a02      	cmp	r2, #2
 801262c:	4606      	mov	r6, r0
 801262e:	4689      	mov	r9, r1
 8012630:	f89d 7070 	ldrb.w	r7, [sp, #112]	; 0x70
 8012634:	d006      	beq.n	8012644 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8012636:	4b7a      	ldr	r3, [pc, #488]	; (8012820 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x200>)
 8012638:	4a7a      	ldr	r2, [pc, #488]	; (8012824 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x204>)
 801263a:	487b      	ldr	r0, [pc, #492]	; (8012828 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x208>)
 801263c:	f44f 71a3 	mov.w	r1, #326	; 0x146
 8012640:	f009 f856 	bl	801b6f0 <__assert_func>
 8012644:	2f00      	cmp	r7, #0
 8012646:	d04b      	beq.n	80126e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8012648:	6820      	ldr	r0, [r4, #0]
 801264a:	6861      	ldr	r1, [r4, #4]
 801264c:	f8df a1e0 	ldr.w	sl, [pc, #480]	; 8012830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>
 8012650:	ad0e      	add	r5, sp, #56	; 0x38
 8012652:	c503      	stmia	r5!, {r0, r1}
 8012654:	6818      	ldr	r0, [r3, #0]
 8012656:	6859      	ldr	r1, [r3, #4]
 8012658:	ad10      	add	r5, sp, #64	; 0x40
 801265a:	c503      	stmia	r5!, {r0, r1}
 801265c:	a80e      	add	r0, sp, #56	; 0x38
 801265e:	f7fa faa1 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012662:	4621      	mov	r1, r4
 8012664:	a810      	add	r0, sp, #64	; 0x40
 8012666:	f7fa fa85 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801266a:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801266e:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012672:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8012676:	f8da 0000 	ldr.w	r0, [sl]
 801267a:	f9bd 5044 	ldrsh.w	r5, [sp, #68]	; 0x44
 801267e:	f9bd 8046 	ldrsh.w	r8, [sp, #70]	; 0x46
 8012682:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012686:	1874      	adds	r4, r6, r1
 8012688:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801268c:	4e67      	ldr	r6, [pc, #412]	; (801282c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x20c>)
 801268e:	440a      	add	r2, r1
 8012690:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8012694:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8012698:	4413      	add	r3, r2
 801269a:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801269e:	6803      	ldr	r3, [r0, #0]
 80126a0:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80126a4:	4798      	blx	r3
 80126a6:	2801      	cmp	r0, #1
 80126a8:	d11d      	bne.n	80126e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc6>
 80126aa:	2200      	movs	r2, #0
 80126ac:	210b      	movs	r1, #11
 80126ae:	e9cd 1207 	strd	r1, r2, [sp, #28]
 80126b2:	8831      	ldrh	r1, [r6, #0]
 80126b4:	9704      	str	r7, [sp, #16]
 80126b6:	e9cd 2105 	strd	r2, r1, [sp, #20]
 80126ba:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80126be:	9203      	str	r2, [sp, #12]
 80126c0:	fa1f f288 	uxth.w	r2, r8
 80126c4:	9202      	str	r2, [sp, #8]
 80126c6:	b2ad      	uxth	r5, r5
 80126c8:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80126cc:	9200      	str	r2, [sp, #0]
 80126ce:	9501      	str	r5, [sp, #4]
 80126d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80126d4:	f8da 0000 	ldr.w	r0, [sl]
 80126d8:	464a      	mov	r2, r9
 80126da:	4621      	mov	r1, r4
 80126dc:	f7f8 fb72 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80126e0:	b013      	add	sp, #76	; 0x4c
 80126e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126e6:	f8da 0000 	ldr.w	r0, [sl]
 80126ea:	6803      	ldr	r3, [r0, #0]
 80126ec:	6a1b      	ldr	r3, [r3, #32]
 80126ee:	4798      	blx	r3
 80126f0:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 80126f4:	8833      	ldrh	r3, [r6, #0]
 80126f6:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 80126fa:	fb01 2303 	mla	r3, r1, r3, r2
 80126fe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012702:	2fff      	cmp	r7, #255	; 0xff
 8012704:	f109 0304 	add.w	r3, r9, #4
 8012708:	930a      	str	r3, [sp, #40]	; 0x28
 801270a:	ea25 72e5 	bic.w	r2, r5, r5, asr #31
 801270e:	d111      	bne.n	8012734 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x114>
 8012710:	b212      	sxth	r2, r2
 8012712:	ea4f 0e42 	mov.w	lr, r2, lsl #1
 8012716:	2100      	movs	r1, #0
 8012718:	4541      	cmp	r1, r8
 801271a:	da7a      	bge.n	8012812 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 801271c:	2300      	movs	r3, #0
 801271e:	42ab      	cmp	r3, r5
 8012720:	da6b      	bge.n	80127fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1da>
 8012722:	f814 c003 	ldrb.w	ip, [r4, r3]
 8012726:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8012728:	f837 c01c 	ldrh.w	ip, [r7, ip, lsl #1]
 801272c:	f820 c013 	strh.w	ip, [r0, r3, lsl #1]
 8012730:	3301      	adds	r3, #1
 8012732:	e7f4      	b.n	801271e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xfe>
 8012734:	b213      	sxth	r3, r2
 8012736:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801273a:	930b      	str	r3, [sp, #44]	; 0x2c
 801273c:	005b      	lsls	r3, r3, #1
 801273e:	930c      	str	r3, [sp, #48]	; 0x30
 8012740:	f04f 0900 	mov.w	r9, #0
 8012744:	b2ba      	uxth	r2, r7
 8012746:	fa1f fc8c 	uxth.w	ip, ip
 801274a:	960d      	str	r6, [sp, #52]	; 0x34
 801274c:	45c1      	cmp	r9, r8
 801274e:	da60      	bge.n	8012812 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1f2>
 8012750:	46a3      	mov	fp, r4
 8012752:	4682      	mov	sl, r0
 8012754:	ebab 0304 	sub.w	r3, fp, r4
 8012758:	429d      	cmp	r5, r3
 801275a:	dd3e      	ble.n	80127da <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ba>
 801275c:	f81b 3b01 	ldrb.w	r3, [fp], #1
 8012760:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8012762:	f8ba 1000 	ldrh.w	r1, [sl]
 8012766:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801276a:	120e      	asrs	r6, r1, #8
 801276c:	121f      	asrs	r7, r3, #8
 801276e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012772:	fb16 f60c 	smulbb	r6, r6, ip
 8012776:	ea4f 0ee1 	mov.w	lr, r1, asr #3
 801277a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801277e:	00c9      	lsls	r1, r1, #3
 8012780:	fb07 6702 	mla	r7, r7, r2, r6
 8012784:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8012788:	10de      	asrs	r6, r3, #3
 801278a:	b2c9      	uxtb	r1, r1
 801278c:	00db      	lsls	r3, r3, #3
 801278e:	fb1e fe0c 	smulbb	lr, lr, ip
 8012792:	fb11 f10c 	smulbb	r1, r1, ip
 8012796:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801279a:	b2db      	uxtb	r3, r3
 801279c:	b2bf      	uxth	r7, r7
 801279e:	fb06 e602 	mla	r6, r6, r2, lr
 80127a2:	fb03 1302 	mla	r3, r3, r2, r1
 80127a6:	b2b6      	uxth	r6, r6
 80127a8:	b29b      	uxth	r3, r3
 80127aa:	1c79      	adds	r1, r7, #1
 80127ac:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 80127b0:	f106 0e01 	add.w	lr, r6, #1
 80127b4:	1c59      	adds	r1, r3, #1
 80127b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80127ba:	eb0e 2e16 	add.w	lr, lr, r6, lsr #8
 80127be:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80127c2:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80127c6:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80127ca:	430f      	orrs	r7, r1
 80127cc:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80127d0:	ea47 070e 	orr.w	r7, r7, lr
 80127d4:	f82a 7b02 	strh.w	r7, [sl], #2
 80127d8:	e7bc      	b.n	8012754 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x134>
 80127da:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80127dc:	990c      	ldr	r1, [sp, #48]	; 0x30
 80127de:	881b      	ldrh	r3, [r3, #0]
 80127e0:	1b5b      	subs	r3, r3, r5
 80127e2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80127e6:	4418      	add	r0, r3
 80127e8:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80127ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80127ee:	1b5b      	subs	r3, r3, r5
 80127f0:	440b      	add	r3, r1
 80127f2:	441c      	add	r4, r3
 80127f4:	f109 0901 	add.w	r9, r9, #1
 80127f8:	e7a8      	b.n	801274c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x12c>
 80127fa:	8833      	ldrh	r3, [r6, #0]
 80127fc:	1b5b      	subs	r3, r3, r5
 80127fe:	eb0e 0343 	add.w	r3, lr, r3, lsl #1
 8012802:	4418      	add	r0, r3
 8012804:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 8012808:	1b5b      	subs	r3, r3, r5
 801280a:	4413      	add	r3, r2
 801280c:	441c      	add	r4, r3
 801280e:	3101      	adds	r1, #1
 8012810:	e782      	b.n	8012718 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xf8>
 8012812:	4b07      	ldr	r3, [pc, #28]	; (8012830 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x210>)
 8012814:	6818      	ldr	r0, [r3, #0]
 8012816:	6803      	ldr	r3, [r0, #0]
 8012818:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801281a:	4798      	blx	r3
 801281c:	e760      	b.n	80126e0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 801281e:	bf00      	nop
 8012820:	0801f02d 	.word	0x0801f02d
 8012824:	0801f6c4 	.word	0x0801f6c4
 8012828:	0801f273 	.word	0x0801f273
 801282c:	20001436 	.word	0x20001436
 8012830:	2000143c 	.word	0x2000143c

08012834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8012834:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012838:	4616      	mov	r6, r2
 801283a:	880a      	ldrh	r2, [r1, #0]
 801283c:	b093      	sub	sp, #76	; 0x4c
 801283e:	2a01      	cmp	r2, #1
 8012840:	4681      	mov	r9, r0
 8012842:	4688      	mov	r8, r1
 8012844:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8012848:	d006      	beq.n	8012858 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x24>
 801284a:	4b6c      	ldr	r3, [pc, #432]	; (80129fc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801284c:	4a6c      	ldr	r2, [pc, #432]	; (8012a00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1cc>)
 801284e:	486d      	ldr	r0, [pc, #436]	; (8012a04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>)
 8012850:	f240 11a1 	movw	r1, #417	; 0x1a1
 8012854:	f008 ff4c 	bl	801b6f0 <__assert_func>
 8012858:	f1ba 0f00 	cmp.w	sl, #0
 801285c:	d04a      	beq.n	80128f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 801285e:	6830      	ldr	r0, [r6, #0]
 8012860:	6871      	ldr	r1, [r6, #4]
 8012862:	4d69      	ldr	r5, [pc, #420]	; (8012a08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 8012864:	ac0e      	add	r4, sp, #56	; 0x38
 8012866:	c403      	stmia	r4!, {r0, r1}
 8012868:	6818      	ldr	r0, [r3, #0]
 801286a:	6859      	ldr	r1, [r3, #4]
 801286c:	ac10      	add	r4, sp, #64	; 0x40
 801286e:	c403      	stmia	r4!, {r0, r1}
 8012870:	a80e      	add	r0, sp, #56	; 0x38
 8012872:	f7fa f997 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012876:	4631      	mov	r1, r6
 8012878:	a810      	add	r0, sp, #64	; 0x40
 801287a:	f7fa f97b 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801287e:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8012882:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8012886:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 801288a:	6828      	ldr	r0, [r5, #0]
 801288c:	f9bd 6044 	ldrsh.w	r6, [sp, #68]	; 0x44
 8012890:	4c5e      	ldr	r4, [pc, #376]	; (8012a0c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8012892:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012896:	4489      	add	r9, r1
 8012898:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801289c:	440a      	add	r2, r1
 801289e:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 80128a2:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80128a6:	4413      	add	r3, r2
 80128a8:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 80128ac:	f9bd 3046 	ldrsh.w	r3, [sp, #70]	; 0x46
 80128b0:	930a      	str	r3, [sp, #40]	; 0x28
 80128b2:	6803      	ldr	r3, [r0, #0]
 80128b4:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 80128b8:	4798      	blx	r3
 80128ba:	2801      	cmp	r0, #1
 80128bc:	d11d      	bne.n	80128fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc6>
 80128be:	220b      	movs	r2, #11
 80128c0:	2100      	movs	r1, #0
 80128c2:	e9cd 2107 	strd	r2, r1, [sp, #28]
 80128c6:	8822      	ldrh	r2, [r4, #0]
 80128c8:	f8cd a010 	str.w	sl, [sp, #16]
 80128cc:	e9cd 0205 	strd	r0, r2, [sp, #20]
 80128d0:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 80128d4:	9203      	str	r2, [sp, #12]
 80128d6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 80128da:	9202      	str	r2, [sp, #8]
 80128dc:	b2b6      	uxth	r6, r6
 80128de:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 80128e2:	9200      	str	r2, [sp, #0]
 80128e4:	9601      	str	r6, [sp, #4]
 80128e6:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 80128ea:	6828      	ldr	r0, [r5, #0]
 80128ec:	4642      	mov	r2, r8
 80128ee:	4649      	mov	r1, r9
 80128f0:	f7f8 fa68 	bl	800adc4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>
 80128f4:	b013      	add	sp, #76	; 0x4c
 80128f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80128fa:	6828      	ldr	r0, [r5, #0]
 80128fc:	6803      	ldr	r3, [r0, #0]
 80128fe:	6a1b      	ldr	r3, [r3, #32]
 8012900:	4798      	blx	r3
 8012902:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 8012906:	8823      	ldrh	r3, [r4, #0]
 8012908:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801290c:	940d      	str	r4, [sp, #52]	; 0x34
 801290e:	fb01 2303 	mla	r3, r1, r3, r2
 8012912:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8012916:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801291a:	930b      	str	r3, [sp, #44]	; 0x2c
 801291c:	ea6f 010a 	mvn.w	r1, sl
 8012920:	005b      	lsls	r3, r3, #1
 8012922:	930c      	str	r3, [sp, #48]	; 0x30
 8012924:	f04f 0e00 	mov.w	lr, #0
 8012928:	b2c9      	uxtb	r1, r1
 801292a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801292c:	459e      	cmp	lr, r3
 801292e:	da5f      	bge.n	80129f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8012930:	2700      	movs	r7, #0
 8012932:	fa1f fb8a 	uxth.w	fp, sl
 8012936:	42b7      	cmp	r7, r6
 8012938:	da4a      	bge.n	80129d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x19c>
 801293a:	f819 3007 	ldrb.w	r3, [r9, r7]
 801293e:	2203      	movs	r2, #3
 8012940:	2404      	movs	r4, #4
 8012942:	fb12 4303 	smlabb	r3, r2, r3, r4
 8012946:	eb08 0403 	add.w	r4, r8, r3
 801294a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801294e:	78a2      	ldrb	r2, [r4, #2]
 8012950:	7865      	ldrb	r5, [r4, #1]
 8012952:	f818 c003 	ldrb.w	ip, [r8, r3]
 8012956:	d10c      	bne.n	8012972 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x13e>
 8012958:	4b2d      	ldr	r3, [pc, #180]	; (8012a10 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 801295a:	00ed      	lsls	r5, r5, #3
 801295c:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8012960:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8012964:	432a      	orrs	r2, r5
 8012966:	ea42 02dc 	orr.w	r2, r2, ip, lsr #3
 801296a:	f820 2017 	strh.w	r2, [r0, r7, lsl #1]
 801296e:	3701      	adds	r7, #1
 8012970:	e7e1      	b.n	8012936 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x102>
 8012972:	f830 3017 	ldrh.w	r3, [r0, r7, lsl #1]
 8012976:	121c      	asrs	r4, r3, #8
 8012978:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801297c:	fb12 f20b 	smulbb	r2, r2, fp
 8012980:	fb04 2201 	mla	r2, r4, r1, r2
 8012984:	10dc      	asrs	r4, r3, #3
 8012986:	00db      	lsls	r3, r3, #3
 8012988:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801298c:	b2db      	uxtb	r3, r3
 801298e:	fb15 f50b 	smulbb	r5, r5, fp
 8012992:	fb1c fc0b 	smulbb	ip, ip, fp
 8012996:	b292      	uxth	r2, r2
 8012998:	fb04 5501 	mla	r5, r4, r1, r5
 801299c:	fb03 cc01 	mla	ip, r3, r1, ip
 80129a0:	b2ad      	uxth	r5, r5
 80129a2:	fa1f fc8c 	uxth.w	ip, ip
 80129a6:	1c53      	adds	r3, r2, #1
 80129a8:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 80129ac:	1c6c      	adds	r4, r5, #1
 80129ae:	f10c 0301 	add.w	r3, ip, #1
 80129b2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80129b6:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 80129ba:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80129be:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80129c2:	096d      	lsrs	r5, r5, #5
 80129c4:	ea42 020c 	orr.w	r2, r2, ip
 80129c8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80129cc:	432a      	orrs	r2, r5
 80129ce:	e7cc      	b.n	801296a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x136>
 80129d0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80129d2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80129d4:	881b      	ldrh	r3, [r3, #0]
 80129d6:	1b9b      	subs	r3, r3, r6
 80129d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80129dc:	4418      	add	r0, r3
 80129de:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	; 0x3c
 80129e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80129e4:	1b9b      	subs	r3, r3, r6
 80129e6:	4413      	add	r3, r2
 80129e8:	4499      	add	r9, r3
 80129ea:	f10e 0e01 	add.w	lr, lr, #1
 80129ee:	e79c      	b.n	801292a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf6>
 80129f0:	4b05      	ldr	r3, [pc, #20]	; (8012a08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d4>)
 80129f2:	6818      	ldr	r0, [r3, #0]
 80129f4:	6803      	ldr	r3, [r0, #0]
 80129f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80129f8:	4798      	blx	r3
 80129fa:	e77b      	b.n	80128f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xc0>
 80129fc:	0801f07b 	.word	0x0801f07b
 8012a00:	0801f74d 	.word	0x0801f74d
 8012a04:	0801f273 	.word	0x0801f273
 8012a08:	2000143c 	.word	0x2000143c
 8012a0c:	20001436 	.word	0x20001436
 8012a10:	fffff800 	.word	0xfffff800

08012a14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8012a14:	b430      	push	{r4, r5}
 8012a16:	780d      	ldrb	r5, [r1, #0]
 8012a18:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8012a1c:	2d01      	cmp	r5, #1
 8012a1e:	d00a      	beq.n	8012a36 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8012a20:	d305      	bcc.n	8012a2e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8012a22:	2d02      	cmp	r5, #2
 8012a24:	d10b      	bne.n	8012a3e <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8012a26:	9402      	str	r4, [sp, #8]
 8012a28:	bc30      	pop	{r4, r5}
 8012a2a:	f7ff bdf9 	b.w	8012620 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8012a2e:	9402      	str	r4, [sp, #8]
 8012a30:	bc30      	pop	{r4, r5}
 8012a32:	f7ff bcfd 	b.w	8012430 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8012a36:	9402      	str	r4, [sp, #8]
 8012a38:	bc30      	pop	{r4, r5}
 8012a3a:	f7ff befb 	b.w	8012834 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8012a3e:	bc30      	pop	{r4, r5}
 8012a40:	4770      	bx	lr
	...

08012a44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8012a44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012a48:	4605      	mov	r5, r0
 8012a4a:	b089      	sub	sp, #36	; 0x24
 8012a4c:	6810      	ldr	r0, [r2, #0]
 8012a4e:	f89d 9048 	ldrb.w	r9, [sp, #72]	; 0x48
 8012a52:	460c      	mov	r4, r1
 8012a54:	6851      	ldr	r1, [r2, #4]
 8012a56:	ae04      	add	r6, sp, #16
 8012a58:	c603      	stmia	r6!, {r0, r1}
 8012a5a:	6818      	ldr	r0, [r3, #0]
 8012a5c:	6859      	ldr	r1, [r3, #4]
 8012a5e:	ae06      	add	r6, sp, #24
 8012a60:	4617      	mov	r7, r2
 8012a62:	c603      	stmia	r6!, {r0, r1}
 8012a64:	a804      	add	r0, sp, #16
 8012a66:	f7fa f89d 	bl	800cba4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8012a6a:	4639      	mov	r1, r7
 8012a6c:	a806      	add	r0, sp, #24
 8012a6e:	f7fa f881 	bl	800cb74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8012a72:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 8012a76:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012a7a:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012a7e:	f9bd 801c 	ldrsh.w	r8, [sp, #28]
 8012a82:	fb11 2103 	smlabb	r1, r1, r3, r2
 8012a86:	eb05 0541 	add.w	r5, r5, r1, lsl #1
 8012a8a:	440c      	add	r4, r1
 8012a8c:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8012a90:	440a      	add	r2, r1
 8012a92:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012a96:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012a9a:	4413      	add	r3, r2
 8012a9c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012aa0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 8012aa4:	9300      	str	r3, [sp, #0]
 8012aa6:	4b80      	ldr	r3, [pc, #512]	; (8012ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012aa8:	6818      	ldr	r0, [r3, #0]
 8012aaa:	6803      	ldr	r3, [r0, #0]
 8012aac:	6a1b      	ldr	r3, [r3, #32]
 8012aae:	4798      	blx	r3
 8012ab0:	4b7e      	ldr	r3, [pc, #504]	; (8012cac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x268>)
 8012ab2:	f9bd 601a 	ldrsh.w	r6, [sp, #26]
 8012ab6:	881a      	ldrh	r2, [r3, #0]
 8012ab8:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 8012abc:	fb06 1202 	mla	r2, r6, r2, r1
 8012ac0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8012ac4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8012ac8:	ea28 72e8 	bic.w	r2, r8, r8, asr #31
 8012acc:	b212      	sxth	r2, r2
 8012ace:	d117      	bne.n	8012b00 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xbc>
 8012ad0:	9201      	str	r2, [sp, #4]
 8012ad2:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8012ad6:	f04f 0a00 	mov.w	sl, #0
 8012ada:	9302      	str	r3, [sp, #8]
 8012adc:	9b00      	ldr	r3, [sp, #0]
 8012ade:	459a      	cmp	sl, r3
 8012ae0:	f280 80d9 	bge.w	8012c96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8012ae4:	2100      	movs	r1, #0
 8012ae6:	4541      	cmp	r1, r8
 8012ae8:	f280 80c1 	bge.w	8012c6e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x22a>
 8012aec:	5c63      	ldrb	r3, [r4, r1]
 8012aee:	b12b      	cbz	r3, 8012afc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012af0:	2bff      	cmp	r3, #255	; 0xff
 8012af2:	f835 e011 	ldrh.w	lr, [r5, r1, lsl #1]
 8012af6:	d176      	bne.n	8012be6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x1a2>
 8012af8:	f820 e011 	strh.w	lr, [r0, r1, lsl #1]
 8012afc:	3101      	adds	r1, #1
 8012afe:	e7f2      	b.n	8012ae6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa2>
 8012b00:	9202      	str	r2, [sp, #8]
 8012b02:	0052      	lsls	r2, r2, #1
 8012b04:	9201      	str	r2, [sp, #4]
 8012b06:	f04f 0b00 	mov.w	fp, #0
 8012b0a:	9303      	str	r3, [sp, #12]
 8012b0c:	9b00      	ldr	r3, [sp, #0]
 8012b0e:	459b      	cmp	fp, r3
 8012b10:	f280 80c1 	bge.w	8012c96 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x252>
 8012b14:	f04f 0c00 	mov.w	ip, #0
 8012b18:	45c4      	cmp	ip, r8
 8012b1a:	da4f      	bge.n	8012bbc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x178>
 8012b1c:	f814 300c 	ldrb.w	r3, [r4, ip]
 8012b20:	2b00      	cmp	r3, #0
 8012b22:	d048      	beq.n	8012bb6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012b24:	fb09 f303 	mul.w	r3, r9, r3
 8012b28:	1c5a      	adds	r2, r3, #1
 8012b2a:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8012b2e:	121b      	asrs	r3, r3, #8
 8012b30:	d041      	beq.n	8012bb6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x172>
 8012b32:	f830 201c 	ldrh.w	r2, [r0, ip, lsl #1]
 8012b36:	f835 e01c 	ldrh.w	lr, [r5, ip, lsl #1]
 8012b3a:	b29e      	uxth	r6, r3
 8012b3c:	1211      	asrs	r1, r2, #8
 8012b3e:	43db      	mvns	r3, r3
 8012b40:	b2db      	uxtb	r3, r3
 8012b42:	ea4f 272e 	mov.w	r7, lr, asr #8
 8012b46:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012b4a:	fb11 f103 	smulbb	r1, r1, r3
 8012b4e:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8012b52:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8012b56:	00d2      	lsls	r2, r2, #3
 8012b58:	fb07 1706 	mla	r7, r7, r6, r1
 8012b5c:	b2d2      	uxtb	r2, r2
 8012b5e:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8012b62:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012b66:	fb12 f203 	smulbb	r2, r2, r3
 8012b6a:	fa5f fe8e 	uxtb.w	lr, lr
 8012b6e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8012b72:	fb0e 2206 	mla	r2, lr, r6, r2
 8012b76:	fb1a fa03 	smulbb	sl, sl, r3
 8012b7a:	b2bf      	uxth	r7, r7
 8012b7c:	b292      	uxth	r2, r2
 8012b7e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012b82:	fb01 a106 	mla	r1, r1, r6, sl
 8012b86:	1c7b      	adds	r3, r7, #1
 8012b88:	f102 0a01 	add.w	sl, r2, #1
 8012b8c:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8012b90:	eb0a 2a12 	add.w	sl, sl, r2, lsr #8
 8012b94:	b289      	uxth	r1, r1
 8012b96:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8012b9a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8012b9e:	ea47 070a 	orr.w	r7, r7, sl
 8012ba2:	f101 0a01 	add.w	sl, r1, #1
 8012ba6:	eb0a 2111 	add.w	r1, sl, r1, lsr #8
 8012baa:	0949      	lsrs	r1, r1, #5
 8012bac:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012bb0:	430f      	orrs	r7, r1
 8012bb2:	f820 701c 	strh.w	r7, [r0, ip, lsl #1]
 8012bb6:	f10c 0c01 	add.w	ip, ip, #1
 8012bba:	e7ad      	b.n	8012b18 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xd4>
 8012bbc:	9b03      	ldr	r3, [sp, #12]
 8012bbe:	9a01      	ldr	r2, [sp, #4]
 8012bc0:	881b      	ldrh	r3, [r3, #0]
 8012bc2:	eba3 0308 	sub.w	r3, r3, r8
 8012bc6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012bca:	4418      	add	r0, r3
 8012bcc:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012bd0:	eba3 0308 	sub.w	r3, r3, r8
 8012bd4:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 8012bd8:	4415      	add	r5, r2
 8012bda:	9a02      	ldr	r2, [sp, #8]
 8012bdc:	4413      	add	r3, r2
 8012bde:	441c      	add	r4, r3
 8012be0:	f10b 0b01 	add.w	fp, fp, #1
 8012be4:	e792      	b.n	8012b0c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xc8>
 8012be6:	f830 2011 	ldrh.w	r2, [r0, r1, lsl #1]
 8012bea:	b29f      	uxth	r7, r3
 8012bec:	1216      	asrs	r6, r2, #8
 8012bee:	43db      	mvns	r3, r3
 8012bf0:	b2db      	uxtb	r3, r3
 8012bf2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8012bf6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8012bfa:	fb16 f603 	smulbb	r6, r6, r3
 8012bfe:	ea4f 09e2 	mov.w	r9, r2, asr #3
 8012c02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8012c06:	00d2      	lsls	r2, r2, #3
 8012c08:	fb0c 6c07 	mla	ip, ip, r7, r6
 8012c0c:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8012c10:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8012c14:	b2d2      	uxtb	r2, r2
 8012c16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8012c1a:	fa1f fc8c 	uxth.w	ip, ip
 8012c1e:	fb19 f903 	smulbb	r9, r9, r3
 8012c22:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8012c26:	fa5f fe8e 	uxtb.w	lr, lr
 8012c2a:	fb12 f203 	smulbb	r2, r2, r3
 8012c2e:	fb06 9607 	mla	r6, r6, r7, r9
 8012c32:	fb0e 2207 	mla	r2, lr, r7, r2
 8012c36:	f10c 0901 	add.w	r9, ip, #1
 8012c3a:	b292      	uxth	r2, r2
 8012c3c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8012c40:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8012c44:	f102 0c01 	add.w	ip, r2, #1
 8012c48:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8012c4c:	b2b6      	uxth	r6, r6
 8012c4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8012c52:	ea49 0c02 	orr.w	ip, r9, r2
 8012c56:	f106 0901 	add.w	r9, r6, #1
 8012c5a:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012c5e:	0976      	lsrs	r6, r6, #5
 8012c60:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8012c64:	ea4c 0c06 	orr.w	ip, ip, r6
 8012c68:	f820 c011 	strh.w	ip, [r0, r1, lsl #1]
 8012c6c:	e746      	b.n	8012afc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xb8>
 8012c6e:	9b02      	ldr	r3, [sp, #8]
 8012c70:	881b      	ldrh	r3, [r3, #0]
 8012c72:	eba3 0308 	sub.w	r3, r3, r8
 8012c76:	eb0b 0343 	add.w	r3, fp, r3, lsl #1
 8012c7a:	4418      	add	r0, r3
 8012c7c:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8012c80:	eba3 0308 	sub.w	r3, r3, r8
 8012c84:	eb0b 0243 	add.w	r2, fp, r3, lsl #1
 8012c88:	4415      	add	r5, r2
 8012c8a:	9a01      	ldr	r2, [sp, #4]
 8012c8c:	4413      	add	r3, r2
 8012c8e:	441c      	add	r4, r3
 8012c90:	f10a 0a01 	add.w	sl, sl, #1
 8012c94:	e722      	b.n	8012adc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x98>
 8012c96:	4b04      	ldr	r3, [pc, #16]	; (8012ca8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x264>)
 8012c98:	6818      	ldr	r0, [r3, #0]
 8012c9a:	6803      	ldr	r3, [r0, #0]
 8012c9c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012c9e:	4798      	blx	r3
 8012ca0:	b009      	add	sp, #36	; 0x24
 8012ca2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012ca6:	bf00      	nop
 8012ca8:	2000143c 	.word	0x2000143c
 8012cac:	20001436 	.word	0x20001436

08012cb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8012cb0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012cb4:	b089      	sub	sp, #36	; 0x24
 8012cb6:	4682      	mov	sl, r0
 8012cb8:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8012cbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8012cbe:	460d      	mov	r5, r1
 8012cc0:	4691      	mov	r9, r2
 8012cc2:	4698      	mov	r8, r3
 8012cc4:	b3ae      	cbz	r6, 8012d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012cc6:	4608      	mov	r0, r1
 8012cc8:	f7fc fa8c 	bl	800f1e4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012ccc:	4607      	mov	r7, r0
 8012cce:	4628      	mov	r0, r5
 8012cd0:	f7fc fac2 	bl	800f258 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012cd4:	f8ad 000e 	strh.w	r0, [sp, #14]
 8012cd8:	4628      	mov	r0, r5
 8012cda:	f8ad 9008 	strh.w	r9, [sp, #8]
 8012cde:	f8ad 800a 	strh.w	r8, [sp, #10]
 8012ce2:	f8ad 700c 	strh.w	r7, [sp, #12]
 8012ce6:	f7fc fc09 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012cea:	b178      	cbz	r0, 8012d0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012cec:	4628      	mov	r0, r5
 8012cee:	f7fc fc05 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012cf2:	2802      	cmp	r0, #2
 8012cf4:	d00a      	beq.n	8012d0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012cf6:	4628      	mov	r0, r5
 8012cf8:	f7fc fc00 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012cfc:	280b      	cmp	r0, #11
 8012cfe:	d005      	beq.n	8012d0c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x5c>
 8012d00:	4b69      	ldr	r3, [pc, #420]	; (8012ea8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 8012d02:	4a6a      	ldr	r2, [pc, #424]	; (8012eac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1fc>)
 8012d04:	486a      	ldr	r0, [pc, #424]	; (8012eb0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x200>)
 8012d06:	214f      	movs	r1, #79	; 0x4f
 8012d08:	f008 fcf2 	bl	801b6f0 <__assert_func>
 8012d0c:	4628      	mov	r0, r5
 8012d0e:	f7fc fb71 	bl	800f3f4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8012d12:	4607      	mov	r7, r0
 8012d14:	4628      	mov	r0, r5
 8012d16:	f7fc fb9f 	bl	800f458 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8012d1a:	4681      	mov	r9, r0
 8012d1c:	4628      	mov	r0, r5
 8012d1e:	f7fc fbed 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d22:	2802      	cmp	r0, #2
 8012d24:	d108      	bne.n	8012d38 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 8012d26:	4633      	mov	r3, r6
 8012d28:	4622      	mov	r2, r4
 8012d2a:	a902      	add	r1, sp, #8
 8012d2c:	4638      	mov	r0, r7
 8012d2e:	f7ff fa6d 	bl	801220c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8012d32:	b009      	add	sp, #36	; 0x24
 8012d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012d38:	4628      	mov	r0, r5
 8012d3a:	f7fc fbdf 	bl	800f4fc <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d3e:	280b      	cmp	r0, #11
 8012d40:	d107      	bne.n	8012d52 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xa2>
 8012d42:	9600      	str	r6, [sp, #0]
 8012d44:	4623      	mov	r3, r4
 8012d46:	aa02      	add	r2, sp, #8
 8012d48:	4649      	mov	r1, r9
 8012d4a:	4638      	mov	r0, r7
 8012d4c:	f7ff fe62 	bl	8012a14 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8012d50:	e7ef      	b.n	8012d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012d52:	4628      	mov	r0, r5
 8012d54:	f7fc fb14 	bl	800f380 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012d58:	b950      	cbnz	r0, 8012d70 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8012d5a:	e9cd 6000 	strd	r6, r0, [sp]
 8012d5e:	f8da 3000 	ldr.w	r3, [sl]
 8012d62:	aa02      	add	r2, sp, #8
 8012d64:	691d      	ldr	r5, [r3, #16]
 8012d66:	4639      	mov	r1, r7
 8012d68:	4623      	mov	r3, r4
 8012d6a:	4650      	mov	r0, sl
 8012d6c:	47a8      	blx	r5
 8012d6e:	e7e0      	b.n	8012d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012d70:	f10d 0818 	add.w	r8, sp, #24
 8012d74:	4629      	mov	r1, r5
 8012d76:	4640      	mov	r0, r8
 8012d78:	f7fc faa8 	bl	800f2cc <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012d7c:	e898 0003 	ldmia.w	r8, {r0, r1}
 8012d80:	ad04      	add	r5, sp, #16
 8012d82:	e885 0003 	stmia.w	r5, {r0, r1}
 8012d86:	4628      	mov	r0, r5
 8012d88:	4621      	mov	r1, r4
 8012d8a:	f7f7 fbcd 	bl	800a528 <_ZN8touchgfx4RectaNERKS0_>
 8012d8e:	4628      	mov	r0, r5
 8012d90:	f7f7 fc0e 	bl	800a5b0 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012d94:	b138      	cbz	r0, 8012da6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf6>
 8012d96:	9600      	str	r6, [sp, #0]
 8012d98:	4623      	mov	r3, r4
 8012d9a:	aa02      	add	r2, sp, #8
 8012d9c:	4649      	mov	r1, r9
 8012d9e:	4638      	mov	r0, r7
 8012da0:	f7ff fe50 	bl	8012a44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012da4:	e7c5      	b.n	8012d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012da6:	e9cd 6000 	strd	r6, r0, [sp]
 8012daa:	f8da 3000 	ldr.w	r3, [sl]
 8012dae:	aa02      	add	r2, sp, #8
 8012db0:	f8d3 b010 	ldr.w	fp, [r3, #16]
 8012db4:	4639      	mov	r1, r7
 8012db6:	462b      	mov	r3, r5
 8012db8:	4650      	mov	r0, sl
 8012dba:	47d8      	blx	fp
 8012dbc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8012dc0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8012dc4:	4293      	cmp	r3, r2
 8012dc6:	dd13      	ble.n	8012df0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x140>
 8012dc8:	f9b4 0000 	ldrsh.w	r0, [r4]
 8012dcc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8012dd0:	f8ad 0018 	strh.w	r0, [sp, #24]
 8012dd4:	1a9b      	subs	r3, r3, r2
 8012dd6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8012dda:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012dde:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012de2:	9600      	str	r6, [sp, #0]
 8012de4:	4643      	mov	r3, r8
 8012de6:	aa02      	add	r2, sp, #8
 8012de8:	4649      	mov	r1, r9
 8012dea:	4638      	mov	r0, r7
 8012dec:	f7ff fe2a 	bl	8012a44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012df0:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8012df4:	f9b4 2000 	ldrsh.w	r2, [r4]
 8012df8:	4293      	cmp	r3, r2
 8012dfa:	dd13      	ble.n	8012e24 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x174>
 8012dfc:	1a9b      	subs	r3, r3, r2
 8012dfe:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8012e02:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8012e06:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012e0a:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012e0e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012e12:	f8ad 101e 	strh.w	r1, [sp, #30]
 8012e16:	9600      	str	r6, [sp, #0]
 8012e18:	4643      	mov	r3, r8
 8012e1a:	aa02      	add	r2, sp, #8
 8012e1c:	4649      	mov	r1, r9
 8012e1e:	4638      	mov	r0, r7
 8012e20:	f7ff fe10 	bl	8012a44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012e24:	88a2      	ldrh	r2, [r4, #4]
 8012e26:	8823      	ldrh	r3, [r4, #0]
 8012e28:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8012e2c:	4413      	add	r3, r2
 8012e2e:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8012e32:	440a      	add	r2, r1
 8012e34:	b29b      	uxth	r3, r3
 8012e36:	b292      	uxth	r2, r2
 8012e38:	b211      	sxth	r1, r2
 8012e3a:	b218      	sxth	r0, r3
 8012e3c:	4288      	cmp	r0, r1
 8012e3e:	dd13      	ble.n	8012e68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1b8>
 8012e40:	1a9b      	subs	r3, r3, r2
 8012e42:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8012e46:	f9bd 5012 	ldrsh.w	r5, [sp, #18]
 8012e4a:	f8ad 1018 	strh.w	r1, [sp, #24]
 8012e4e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012e52:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012e56:	9600      	str	r6, [sp, #0]
 8012e58:	4643      	mov	r3, r8
 8012e5a:	aa02      	add	r2, sp, #8
 8012e5c:	4649      	mov	r1, r9
 8012e5e:	4638      	mov	r0, r7
 8012e60:	f8ad 501a 	strh.w	r5, [sp, #26]
 8012e64:	f7ff fdee 	bl	8012a44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8012e68:	88e2      	ldrh	r2, [r4, #6]
 8012e6a:	8863      	ldrh	r3, [r4, #2]
 8012e6c:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8012e70:	4413      	add	r3, r2
 8012e72:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8012e76:	440a      	add	r2, r1
 8012e78:	b29b      	uxth	r3, r3
 8012e7a:	b292      	uxth	r2, r2
 8012e7c:	b211      	sxth	r1, r2
 8012e7e:	b218      	sxth	r0, r3
 8012e80:	4288      	cmp	r0, r1
 8012e82:	f77f af56 	ble.w	8012d32 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x82>
 8012e86:	f9b4 5000 	ldrsh.w	r5, [r4]
 8012e8a:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8012e8e:	f8ad 5018 	strh.w	r5, [sp, #24]
 8012e92:	1a9b      	subs	r3, r3, r2
 8012e94:	f8ad 301e 	strh.w	r3, [sp, #30]
 8012e98:	f8ad 101a 	strh.w	r1, [sp, #26]
 8012e9c:	f8ad 001c 	strh.w	r0, [sp, #28]
 8012ea0:	9600      	str	r6, [sp, #0]
 8012ea2:	4643      	mov	r3, r8
 8012ea4:	e779      	b.n	8012d9a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xea>
 8012ea6:	bf00      	nop
 8012ea8:	0801f0c9 	.word	0x0801f0c9
 8012eac:	0801f7d6 	.word	0x0801f7d6
 8012eb0:	0801f273 	.word	0x0801f273

08012eb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8012eb4:	b508      	push	{r3, lr}
 8012eb6:	b180      	cbz	r0, 8012eda <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8012eb8:	2902      	cmp	r1, #2
 8012eba:	d014      	beq.n	8012ee6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8012ebc:	2903      	cmp	r1, #3
 8012ebe:	d01d      	beq.n	8012efc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012ec0:	2901      	cmp	r1, #1
 8012ec2:	d101      	bne.n	8012ec8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012ec4:	2001      	movs	r0, #1
 8012ec6:	bd08      	pop	{r3, pc}
 8012ec8:	4b0e      	ldr	r3, [pc, #56]	; (8012f04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012eca:	8818      	ldrh	r0, [r3, #0]
 8012ecc:	b990      	cbnz	r0, 8012ef4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8012ece:	4b0e      	ldr	r3, [pc, #56]	; (8012f08 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 8012ed0:	4a0e      	ldr	r2, [pc, #56]	; (8012f0c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 8012ed2:	480f      	ldr	r0, [pc, #60]	; (8012f10 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8012ed4:	21d7      	movs	r1, #215	; 0xd7
 8012ed6:	f008 fc0b 	bl	801b6f0 <__assert_func>
 8012eda:	2902      	cmp	r1, #2
 8012edc:	d00e      	beq.n	8012efc <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 8012ede:	2903      	cmp	r1, #3
 8012ee0:	d0f2      	beq.n	8012ec8 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8012ee2:	2901      	cmp	r1, #1
 8012ee4:	d1ee      	bne.n	8012ec4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8012ee6:	4b07      	ldr	r3, [pc, #28]	; (8012f04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8012ee8:	8818      	ldrh	r0, [r3, #0]
 8012eea:	2800      	cmp	r0, #0
 8012eec:	d0ef      	beq.n	8012ece <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 8012eee:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012ef2:	e7e8      	b.n	8012ec6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012ef4:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012ef8:	4240      	negs	r0, r0
 8012efa:	e7e4      	b.n	8012ec6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012efc:	f04f 30ff 	mov.w	r0, #4294967295
 8012f00:	e7e1      	b.n	8012ec6 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8012f02:	bf00      	nop
 8012f04:	20001436 	.word	0x20001436
 8012f08:	0801f3cd 	.word	0x0801f3cd
 8012f0c:	0801f953 	.word	0x0801f953
 8012f10:	0801f40f 	.word	0x0801f40f

08012f14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8012f14:	b508      	push	{r3, lr}
 8012f16:	b180      	cbz	r0, 8012f3a <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 8012f18:	2902      	cmp	r1, #2
 8012f1a:	d014      	beq.n	8012f46 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 8012f1c:	2903      	cmp	r1, #3
 8012f1e:	d018      	beq.n	8012f52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012f20:	2901      	cmp	r1, #1
 8012f22:	d001      	beq.n	8012f28 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012f24:	2001      	movs	r0, #1
 8012f26:	e013      	b.n	8012f50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012f28:	4b0e      	ldr	r3, [pc, #56]	; (8012f64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012f2a:	8818      	ldrh	r0, [r3, #0]
 8012f2c:	b970      	cbnz	r0, 8012f4c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 8012f2e:	4b0e      	ldr	r3, [pc, #56]	; (8012f68 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 8012f30:	4a0e      	ldr	r2, [pc, #56]	; (8012f6c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 8012f32:	480f      	ldr	r0, [pc, #60]	; (8012f70 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 8012f34:	21d7      	movs	r1, #215	; 0xd7
 8012f36:	f008 fbdb 	bl	801b6f0 <__assert_func>
 8012f3a:	2902      	cmp	r1, #2
 8012f3c:	d009      	beq.n	8012f52 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 8012f3e:	2903      	cmp	r1, #3
 8012f40:	d0f0      	beq.n	8012f24 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 8012f42:	2901      	cmp	r1, #1
 8012f44:	d1f0      	bne.n	8012f28 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 8012f46:	f04f 30ff 	mov.w	r0, #4294967295
 8012f4a:	e001      	b.n	8012f50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012f4c:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012f50:	bd08      	pop	{r3, pc}
 8012f52:	4b04      	ldr	r3, [pc, #16]	; (8012f64 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8012f54:	8818      	ldrh	r0, [r3, #0]
 8012f56:	2800      	cmp	r0, #0
 8012f58:	d0e9      	beq.n	8012f2e <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 8012f5a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8012f5e:	4240      	negs	r0, r0
 8012f60:	e7f6      	b.n	8012f50 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 8012f62:	bf00      	nop
 8012f64:	20001436 	.word	0x20001436
 8012f68:	0801f3cd 	.word	0x0801f3cd
 8012f6c:	0801f953 	.word	0x0801f953
 8012f70:	0801f40f 	.word	0x0801f40f

08012f74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8012f74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f78:	b097      	sub	sp, #92	; 0x5c
 8012f7a:	9109      	str	r1, [sp, #36]	; 0x24
 8012f7c:	a912      	add	r1, sp, #72	; 0x48
 8012f7e:	e881 000c 	stmia.w	r1, {r2, r3}
 8012f82:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8012f86:	9306      	str	r3, [sp, #24]
 8012f88:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8012f8c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8012f90:	930e      	str	r3, [sp, #56]	; 0x38
 8012f92:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8012f96:	930a      	str	r3, [sp, #40]	; 0x28
 8012f98:	7b4b      	ldrb	r3, [r1, #13]
 8012f9a:	798f      	ldrb	r7, [r1, #6]
 8012f9c:	f9bd 4080 	ldrsh.w	r4, [sp, #128]	; 0x80
 8012fa0:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8012fa4:	f8bd 508c 	ldrh.w	r5, [sp, #140]	; 0x8c
 8012fa8:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 8012fac:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8012fb0:	0158      	lsls	r0, r3, #5
 8012fb2:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012fb6:	4338      	orrs	r0, r7
 8012fb8:	9008      	str	r0, [sp, #32]
 8012fba:	f000 8149 	beq.w	8013250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012fbe:	011b      	lsls	r3, r3, #4
 8012fc0:	79c8      	ldrb	r0, [r1, #7]
 8012fc2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012fc6:	4303      	orrs	r3, r0
 8012fc8:	9307      	str	r3, [sp, #28]
 8012fca:	f000 8141 	beq.w	8013250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8012fce:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8012fd2:	b29b      	uxth	r3, r3
 8012fd4:	2e00      	cmp	r6, #0
 8012fd6:	f000 80e5 	beq.w	80131a4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x230>
 8012fda:	1af6      	subs	r6, r6, r3
 8012fdc:	b2b6      	uxth	r6, r6
 8012fde:	0433      	lsls	r3, r6, #16
 8012fe0:	d502      	bpl.n	8012fe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 8012fe2:	1ba4      	subs	r4, r4, r6
 8012fe4:	b224      	sxth	r4, r4
 8012fe6:	2600      	movs	r6, #0
 8012fe8:	f9b2 1000 	ldrsh.w	r1, [r2]
 8012fec:	f8b2 a002 	ldrh.w	sl, [r2, #2]
 8012ff0:	f8bd 7020 	ldrh.w	r7, [sp, #32]
 8012ff4:	428c      	cmp	r4, r1
 8012ff6:	b28b      	uxth	r3, r1
 8012ff8:	bfbf      	itttt	lt
 8012ffa:	18f6      	addlt	r6, r6, r3
 8012ffc:	1b34      	sublt	r4, r6, r4
 8012ffe:	b2a6      	uxthlt	r6, r4
 8013000:	460c      	movlt	r4, r1
 8013002:	8891      	ldrh	r1, [r2, #4]
 8013004:	440b      	add	r3, r1
 8013006:	b21b      	sxth	r3, r3
 8013008:	930d      	str	r3, [sp, #52]	; 0x34
 801300a:	88d3      	ldrh	r3, [r2, #6]
 801300c:	9a06      	ldr	r2, [sp, #24]
 801300e:	449a      	add	sl, r3
 8013010:	fa0f f38a 	sxth.w	r3, sl
 8013014:	930c      	str	r3, [sp, #48]	; 0x30
 8013016:	4bb5      	ldr	r3, [pc, #724]	; (80132ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x378>)
 8013018:	f8bd a01c 	ldrh.w	sl, [sp, #28]
 801301c:	f893 9000 	ldrb.w	r9, [r3]
 8013020:	f109 3cff 	add.w	ip, r9, #4294967295
 8013024:	f1dc 0300 	rsbs	r3, ip, #0
 8013028:	eb43 030c 	adc.w	r3, r3, ip
 801302c:	930b      	str	r3, [sp, #44]	; 0x2c
 801302e:	4621      	mov	r1, r4
 8013030:	465b      	mov	r3, fp
 8013032:	a812      	add	r0, sp, #72	; 0x48
 8013034:	f7f9 fb01 	bl	800c63a <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8013038:	4621      	mov	r1, r4
 801303a:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 801303e:	465b      	mov	r3, fp
 8013040:	9a06      	ldr	r2, [sp, #24]
 8013042:	a812      	add	r0, sp, #72	; 0x48
 8013044:	f7f9 fb11 	bl	800c66a <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8013048:	a916      	add	r1, sp, #88	; 0x58
 801304a:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801304e:	a815      	add	r0, sp, #84	; 0x54
 8013050:	f7f9 fd5e 	bl	800cb10 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8013054:	f1bb 0f00 	cmp.w	fp, #0
 8013058:	f040 80a7 	bne.w	80131aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x236>
 801305c:	f1b9 0f01 	cmp.w	r9, #1
 8013060:	f040 80ab 	bne.w	80131ba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x246>
 8013064:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013066:	2b00      	cmp	r3, #0
 8013068:	f040 80f7 	bne.w	801325a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e6>
 801306c:	4ba0      	ldr	r3, [pc, #640]	; (80132f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>)
 801306e:	6818      	ldr	r0, [r3, #0]
 8013070:	6803      	ldr	r3, [r0, #0]
 8013072:	6a1b      	ldr	r3, [r3, #32]
 8013074:	4798      	blx	r3
 8013076:	4a9f      	ldr	r2, [pc, #636]	; (80132f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>)
 8013078:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801307c:	8811      	ldrh	r1, [r2, #0]
 801307e:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 8013082:	fb01 2303 	mla	r3, r1, r3, r2
 8013086:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801308a:	f04f 0901 	mov.w	r9, #1
 801308e:	9307      	str	r3, [sp, #28]
 8013090:	fa09 f308 	lsl.w	r3, r9, r8
 8013094:	3b01      	subs	r3, #1
 8013096:	b2db      	uxtb	r3, r3
 8013098:	45c8      	cmp	r8, r9
 801309a:	930f      	str	r3, [sp, #60]	; 0x3c
 801309c:	f000 80df 	beq.w	801325e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ea>
 80130a0:	f1b8 0f02 	cmp.w	r8, #2
 80130a4:	f000 8153 	beq.w	801334e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3da>
 80130a8:	f1b8 0f04 	cmp.w	r8, #4
 80130ac:	f000 8146 	beq.w	801333c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c8>
 80130b0:	b906      	cbnz	r6, 80130b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x140>
 80130b2:	b175      	cbz	r5, 80130d2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x15e>
 80130b4:	fb17 6305 	smlabb	r3, r7, r5, r6
 80130b8:	9a26      	ldr	r2, [sp, #152]	; 0x98
 80130ba:	fb13 f308 	smulbb	r3, r3, r8
 80130be:	b29b      	uxth	r3, r3
 80130c0:	ebaa 0a05 	sub.w	sl, sl, r5
 80130c4:	eb02 02d3 	add.w	r2, r2, r3, lsr #3
 80130c8:	9226      	str	r2, [sp, #152]	; 0x98
 80130ca:	fa1f fa8a 	uxth.w	sl, sl
 80130ce:	f003 0507 	and.w	r5, r3, #7
 80130d2:	4659      	mov	r1, fp
 80130d4:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80130d6:	f7ff feed 	bl	8012eb4 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80130da:	4659      	mov	r1, fp
 80130dc:	9010      	str	r0, [sp, #64]	; 0x40
 80130de:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80130e0:	f7ff ff18 	bl	8012f14 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80130e4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80130e6:	9a06      	ldr	r2, [sp, #24]
 80130e8:	1a9a      	subs	r2, r3, r2
 80130ea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80130ec:	1ba4      	subs	r4, r4, r6
 80130ee:	1b1c      	subs	r4, r3, r4
 80130f0:	9b08      	ldr	r3, [sp, #32]
 80130f2:	4592      	cmp	sl, r2
 80130f4:	bfa8      	it	ge
 80130f6:	4692      	movge	sl, r2
 80130f8:	429c      	cmp	r4, r3
 80130fa:	bfd4      	ite	le
 80130fc:	ebc6 0604 	rsble	r6, r6, r4
 8013100:	ebc6 0603 	rsbgt	r6, r6, r3
 8013104:	1bbf      	subs	r7, r7, r6
 8013106:	fb08 f307 	mul.w	r3, r8, r7
 801310a:	930b      	str	r3, [sp, #44]	; 0x2c
 801310c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801310e:	781a      	ldrb	r2, [r3, #0]
 8013110:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013112:	1219      	asrs	r1, r3, #8
 8013114:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 8013118:	930c      	str	r3, [sp, #48]	; 0x30
 801311a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801311c:	f3c3 01cc 	ubfx	r1, r3, #3, #13
 8013120:	f001 03fc 	and.w	r3, r1, #252	; 0xfc
 8013124:	930d      	str	r3, [sp, #52]	; 0x34
 8013126:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013128:	00d9      	lsls	r1, r3, #3
 801312a:	f001 03f8 	and.w	r3, r1, #248	; 0xf8
 801312e:	930e      	str	r3, [sp, #56]	; 0x38
 8013130:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013132:	0059      	lsls	r1, r3, #1
 8013134:	fb03 0016 	mls	r0, r3, r6, r0
 8013138:	ea26 73e6 	bic.w	r3, r6, r6, asr #31
 801313c:	434b      	muls	r3, r1
 801313e:	9106      	str	r1, [sp, #24]
 8013140:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8013142:	412a      	asrs	r2, r5
 8013144:	b289      	uxth	r1, r1
 8013146:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801314a:	b2d2      	uxtb	r2, r2
 801314c:	9110      	str	r1, [sp, #64]	; 0x40
 801314e:	9311      	str	r3, [sp, #68]	; 0x44
 8013150:	f1ba 0f00 	cmp.w	sl, #0
 8013154:	f340 80e4 	ble.w	8013320 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8013158:	f8dd c01c 	ldr.w	ip, [sp, #28]
 801315c:	46b6      	mov	lr, r6
 801315e:	f1be 0f00 	cmp.w	lr, #0
 8013162:	f340 80c9 	ble.w	80132f8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x384>
 8013166:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8013168:	4013      	ands	r3, r2
 801316a:	d009      	beq.n	8013180 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x20c>
 801316c:	fb13 f309 	smulbb	r3, r3, r9
 8013170:	2bfe      	cmp	r3, #254	; 0xfe
 8013172:	dd77      	ble.n	8013264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 8013174:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013176:	29ff      	cmp	r1, #255	; 0xff
 8013178:	d174      	bne.n	8013264 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>
 801317a:	9810      	ldr	r0, [sp, #64]	; 0x40
 801317c:	f8ac 0000 	strh.w	r0, [ip]
 8013180:	4445      	add	r5, r8
 8013182:	b2ad      	uxth	r5, r5
 8013184:	2d07      	cmp	r5, #7
 8013186:	bf81      	itttt	hi
 8013188:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 801318a:	785a      	ldrbhi	r2, [r3, #1]
 801318c:	3301      	addhi	r3, #1
 801318e:	9326      	strhi	r3, [sp, #152]	; 0x98
 8013190:	9b06      	ldr	r3, [sp, #24]
 8013192:	bf9a      	itte	ls
 8013194:	fa42 f208 	asrls.w	r2, r2, r8
 8013198:	b2d2      	uxtbls	r2, r2
 801319a:	2500      	movhi	r5, #0
 801319c:	449c      	add	ip, r3
 801319e:	f10e 3eff 	add.w	lr, lr, #4294967295
 80131a2:	e7dc      	b.n	801315e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ea>
 80131a4:	441c      	add	r4, r3
 80131a6:	b224      	sxth	r4, r4
 80131a8:	e71e      	b.n	8012fe8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x74>
 80131aa:	f1bb 0f01 	cmp.w	fp, #1
 80131ae:	f47f af59 	bne.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80131b2:	f1b9 0f01 	cmp.w	r9, #1
 80131b6:	f47f af55 	bne.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80131ba:	f8df 9134 	ldr.w	r9, [pc, #308]	; 80132f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80131be:	f8d9 0000 	ldr.w	r0, [r9]
 80131c2:	6803      	ldr	r3, [r0, #0]
 80131c4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80131c6:	4798      	blx	r3
 80131c8:	f010 0380 	ands.w	r3, r0, #128	; 0x80
 80131cc:	464a      	mov	r2, r9
 80131ce:	d006      	beq.n	80131de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 80131d0:	f1b8 0f04 	cmp.w	r8, #4
 80131d4:	d13f      	bne.n	8013256 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e2>
 80131d6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80131d8:	3300      	adds	r3, #0
 80131da:	bf18      	it	ne
 80131dc:	2301      	movne	r3, #1
 80131de:	05c0      	lsls	r0, r0, #23
 80131e0:	f140 80a7 	bpl.w	8013332 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 80131e4:	f1b8 0f08 	cmp.w	r8, #8
 80131e8:	f040 80a3 	bne.w	8013332 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 80131ec:	2b00      	cmp	r3, #0
 80131ee:	bf0c      	ite	eq
 80131f0:	f44f 7180 	moveq.w	r1, #256	; 0x100
 80131f4:	2180      	movne	r1, #128	; 0x80
 80131f6:	2e00      	cmp	r6, #0
 80131f8:	f47f af34 	bne.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80131fc:	2d00      	cmp	r5, #0
 80131fe:	f47f af31 	bne.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013202:	9b08      	ldr	r3, [sp, #32]
 8013204:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013206:	18e3      	adds	r3, r4, r3
 8013208:	4283      	cmp	r3, r0
 801320a:	f73f af2b 	bgt.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801320e:	e9dd 0306 	ldrd	r0, r3, [sp, #24]
 8013212:	4403      	add	r3, r0
 8013214:	980c      	ldr	r0, [sp, #48]	; 0x30
 8013216:	4283      	cmp	r3, r0
 8013218:	f73f af24 	bgt.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 801321c:	6810      	ldr	r0, [r2, #0]
 801321e:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8013222:	6804      	ldr	r4, [r0, #0]
 8013224:	9105      	str	r1, [sp, #20]
 8013226:	f1b8 0f08 	cmp.w	r8, #8
 801322a:	bf18      	it	ne
 801322c:	3701      	addne	r7, #1
 801322e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013230:	9104      	str	r1, [sp, #16]
 8013232:	bf18      	it	ne
 8013234:	f027 0701 	bicne.w	r7, r7, #1
 8013238:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801323a:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 801323e:	bf18      	it	ne
 8013240:	b2bf      	uxthne	r7, r7
 8013242:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8013246:	e9cd 7a00 	strd	r7, sl, [sp]
 801324a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801324c:	6c24      	ldr	r4, [r4, #64]	; 0x40
 801324e:	47a0      	blx	r4
 8013250:	b017      	add	sp, #92	; 0x5c
 8013252:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013256:	2300      	movs	r3, #0
 8013258:	e7c1      	b.n	80131de <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x26a>
 801325a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801325c:	e70b      	b.n	8013076 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x102>
 801325e:	f04f 09ff 	mov.w	r9, #255	; 0xff
 8013262:	e725      	b.n	80130b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013264:	990a      	ldr	r1, [sp, #40]	; 0x28
 8013266:	f8bc 4000 	ldrh.w	r4, [ip]
 801326a:	fb11 f303 	smulbb	r3, r1, r3
 801326e:	b29b      	uxth	r3, r3
 8013270:	1c59      	adds	r1, r3, #1
 8013272:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8013276:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801327a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801327c:	b29f      	uxth	r7, r3
 801327e:	1220      	asrs	r0, r4, #8
 8013280:	43db      	mvns	r3, r3
 8013282:	b2db      	uxtb	r3, r3
 8013284:	fb11 f107 	smulbb	r1, r1, r7
 8013288:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801328c:	fb00 1003 	mla	r0, r0, r3, r1
 8013290:	b281      	uxth	r1, r0
 8013292:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013294:	9108      	str	r1, [sp, #32]
 8013296:	fb17 fb00 	smulbb	fp, r7, r0
 801329a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801329c:	10e1      	asrs	r1, r4, #3
 801329e:	00e4      	lsls	r4, r4, #3
 80132a0:	fb17 f700 	smulbb	r7, r7, r0
 80132a4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80132a8:	b2e4      	uxtb	r4, r4
 80132aa:	fb01 b103 	mla	r1, r1, r3, fp
 80132ae:	fb04 7703 	mla	r7, r4, r3, r7
 80132b2:	9b08      	ldr	r3, [sp, #32]
 80132b4:	9808      	ldr	r0, [sp, #32]
 80132b6:	b2bf      	uxth	r7, r7
 80132b8:	3301      	adds	r3, #1
 80132ba:	f107 0b01 	add.w	fp, r7, #1
 80132be:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80132c2:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80132c6:	b289      	uxth	r1, r1
 80132c8:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80132cc:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80132d0:	ea40 000b 	orr.w	r0, r0, fp
 80132d4:	f101 0b01 	add.w	fp, r1, #1
 80132d8:	eb0b 2b11 	add.w	fp, fp, r1, lsr #8
 80132dc:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80132e0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80132e4:	ea40 000b 	orr.w	r0, r0, fp
 80132e8:	e748      	b.n	801317c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x208>
 80132ea:	bf00      	nop
 80132ec:	20001434 	.word	0x20001434
 80132f0:	2000143c 	.word	0x2000143c
 80132f4:	20001436 	.word	0x20001436
 80132f8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80132fa:	b153      	cbz	r3, 8013312 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39e>
 80132fc:	441d      	add	r5, r3
 80132fe:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013300:	b2ad      	uxth	r5, r5
 8013302:	eb03 03d5 	add.w	r3, r3, r5, lsr #3
 8013306:	f005 0507 	and.w	r5, r5, #7
 801330a:	781a      	ldrb	r2, [r3, #0]
 801330c:	9326      	str	r3, [sp, #152]	; 0x98
 801330e:	412a      	asrs	r2, r5
 8013310:	b2d2      	uxtb	r2, r2
 8013312:	9b07      	ldr	r3, [sp, #28]
 8013314:	9911      	ldr	r1, [sp, #68]	; 0x44
 8013316:	440b      	add	r3, r1
 8013318:	9307      	str	r3, [sp, #28]
 801331a:	f10a 3aff 	add.w	sl, sl, #4294967295
 801331e:	e717      	b.n	8013150 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1dc>
 8013320:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013322:	2b00      	cmp	r3, #0
 8013324:	d194      	bne.n	8013250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013326:	4b0b      	ldr	r3, [pc, #44]	; (8013354 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>)
 8013328:	6818      	ldr	r0, [r3, #0]
 801332a:	6803      	ldr	r3, [r0, #0]
 801332c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801332e:	4798      	blx	r3
 8013330:	e78e      	b.n	8013250 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 8013332:	2b00      	cmp	r3, #0
 8013334:	f43f ae96 	beq.w	8013064 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8013338:	2180      	movs	r1, #128	; 0x80
 801333a:	e75c      	b.n	80131f6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x282>
 801333c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801333e:	b11b      	cbz	r3, 8013348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013340:	07fb      	lsls	r3, r7, #31
 8013342:	d501      	bpl.n	8013348 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d4>
 8013344:	3701      	adds	r7, #1
 8013346:	b2bf      	uxth	r7, r7
 8013348:	f04f 0911 	mov.w	r9, #17
 801334c:	e6b0      	b.n	80130b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 801334e:	f04f 0955 	mov.w	r9, #85	; 0x55
 8013352:	e6ad      	b.n	80130b0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x13c>
 8013354:	2000143c 	.word	0x2000143c

08013358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8013358:	b538      	push	{r3, r4, r5, lr}
 801335a:	4c15      	ldr	r4, [pc, #84]	; (80133b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801335c:	7823      	ldrb	r3, [r4, #0]
 801335e:	f3bf 8f5b 	dmb	ish
 8013362:	07da      	lsls	r2, r3, #31
 8013364:	4605      	mov	r5, r0
 8013366:	d40b      	bmi.n	8013380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013368:	4620      	mov	r0, r4
 801336a:	f007 fbc9 	bl	801ab00 <__cxa_guard_acquire>
 801336e:	b138      	cbz	r0, 8013380 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8013370:	4620      	mov	r0, r4
 8013372:	f007 fbd1 	bl	801ab18 <__cxa_guard_release>
 8013376:	4a0f      	ldr	r2, [pc, #60]	; (80133b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8013378:	490f      	ldr	r1, [pc, #60]	; (80133b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801337a:	4810      	ldr	r0, [pc, #64]	; (80133bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801337c:	f007 fbb6 	bl	801aaec <__aeabi_atexit>
 8013380:	4c0f      	ldr	r4, [pc, #60]	; (80133c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8013382:	7823      	ldrb	r3, [r4, #0]
 8013384:	f3bf 8f5b 	dmb	ish
 8013388:	07db      	lsls	r3, r3, #31
 801338a:	d40b      	bmi.n	80133a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801338c:	4620      	mov	r0, r4
 801338e:	f007 fbb7 	bl	801ab00 <__cxa_guard_acquire>
 8013392:	b138      	cbz	r0, 80133a4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8013394:	4620      	mov	r0, r4
 8013396:	f007 fbbf 	bl	801ab18 <__cxa_guard_release>
 801339a:	4a06      	ldr	r2, [pc, #24]	; (80133b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801339c:	4909      	ldr	r1, [pc, #36]	; (80133c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801339e:	480a      	ldr	r0, [pc, #40]	; (80133c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80133a0:	f007 fba4 	bl	801aaec <__aeabi_atexit>
 80133a4:	4b05      	ldr	r3, [pc, #20]	; (80133bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80133a6:	612b      	str	r3, [r5, #16]
 80133a8:	4b07      	ldr	r3, [pc, #28]	; (80133c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80133aa:	616b      	str	r3, [r5, #20]
 80133ac:	bd38      	pop	{r3, r4, r5, pc}
 80133ae:	bf00      	nop
 80133b0:	20001528 	.word	0x20001528
 80133b4:	20000000 	.word	0x20000000
 80133b8:	08011a13 	.word	0x08011a13
 80133bc:	20000060 	.word	0x20000060
 80133c0:	2000152c 	.word	0x2000152c
 80133c4:	08011a11 	.word	0x08011a11
 80133c8:	20000064 	.word	0x20000064

080133cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 80133cc:	b538      	push	{r3, r4, r5, lr}
 80133ce:	4c15      	ldr	r4, [pc, #84]	; (8013424 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 80133d0:	7823      	ldrb	r3, [r4, #0]
 80133d2:	f3bf 8f5b 	dmb	ish
 80133d6:	07da      	lsls	r2, r3, #31
 80133d8:	4605      	mov	r5, r0
 80133da:	d40b      	bmi.n	80133f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80133dc:	4620      	mov	r0, r4
 80133de:	f007 fb8f 	bl	801ab00 <__cxa_guard_acquire>
 80133e2:	b138      	cbz	r0, 80133f4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 80133e4:	4620      	mov	r0, r4
 80133e6:	f007 fb97 	bl	801ab18 <__cxa_guard_release>
 80133ea:	4a0f      	ldr	r2, [pc, #60]	; (8013428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 80133ec:	490f      	ldr	r1, [pc, #60]	; (801342c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 80133ee:	4810      	ldr	r0, [pc, #64]	; (8013430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 80133f0:	f007 fb7c 	bl	801aaec <__aeabi_atexit>
 80133f4:	4c0f      	ldr	r4, [pc, #60]	; (8013434 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 80133f6:	7823      	ldrb	r3, [r4, #0]
 80133f8:	f3bf 8f5b 	dmb	ish
 80133fc:	07db      	lsls	r3, r3, #31
 80133fe:	d40b      	bmi.n	8013418 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013400:	4620      	mov	r0, r4
 8013402:	f007 fb7d 	bl	801ab00 <__cxa_guard_acquire>
 8013406:	b138      	cbz	r0, 8013418 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8013408:	4620      	mov	r0, r4
 801340a:	f007 fb85 	bl	801ab18 <__cxa_guard_release>
 801340e:	4a06      	ldr	r2, [pc, #24]	; (8013428 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8013410:	4909      	ldr	r1, [pc, #36]	; (8013438 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8013412:	480a      	ldr	r0, [pc, #40]	; (801343c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8013414:	f007 fb6a 	bl	801aaec <__aeabi_atexit>
 8013418:	4b05      	ldr	r3, [pc, #20]	; (8013430 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801341a:	60ab      	str	r3, [r5, #8]
 801341c:	4b07      	ldr	r3, [pc, #28]	; (801343c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801341e:	60eb      	str	r3, [r5, #12]
 8013420:	bd38      	pop	{r3, r4, r5, pc}
 8013422:	bf00      	nop
 8013424:	20001500 	.word	0x20001500
 8013428:	20000000 	.word	0x20000000
 801342c:	08011a17 	.word	0x08011a17
 8013430:	20000038 	.word	0x20000038
 8013434:	20001504 	.word	0x20001504
 8013438:	08011a15 	.word	0x08011a15
 801343c:	2000003c 	.word	0x2000003c

08013440 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8013440:	b510      	push	{r4, lr}
 8013442:	4604      	mov	r4, r0
 8013444:	f7ff ff88 	bl	8013358 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8013448:	4620      	mov	r0, r4
 801344a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801344e:	f7ff bfbd 	b.w	80133cc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08013454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8013454:	b538      	push	{r3, r4, r5, lr}
 8013456:	4c15      	ldr	r4, [pc, #84]	; (80134ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8013458:	7823      	ldrb	r3, [r4, #0]
 801345a:	f3bf 8f5b 	dmb	ish
 801345e:	07da      	lsls	r2, r3, #31
 8013460:	4605      	mov	r5, r0
 8013462:	d40b      	bmi.n	801347c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8013464:	4620      	mov	r0, r4
 8013466:	f007 fb4b 	bl	801ab00 <__cxa_guard_acquire>
 801346a:	b138      	cbz	r0, 801347c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801346c:	4620      	mov	r0, r4
 801346e:	f007 fb53 	bl	801ab18 <__cxa_guard_release>
 8013472:	4a0f      	ldr	r2, [pc, #60]	; (80134b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013474:	490f      	ldr	r1, [pc, #60]	; (80134b4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8013476:	4810      	ldr	r0, [pc, #64]	; (80134b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8013478:	f007 fb38 	bl	801aaec <__aeabi_atexit>
 801347c:	4c0f      	ldr	r4, [pc, #60]	; (80134bc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801347e:	7823      	ldrb	r3, [r4, #0]
 8013480:	f3bf 8f5b 	dmb	ish
 8013484:	07db      	lsls	r3, r3, #31
 8013486:	d40b      	bmi.n	80134a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013488:	4620      	mov	r0, r4
 801348a:	f007 fb39 	bl	801ab00 <__cxa_guard_acquire>
 801348e:	b138      	cbz	r0, 80134a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8013490:	4620      	mov	r0, r4
 8013492:	f007 fb41 	bl	801ab18 <__cxa_guard_release>
 8013496:	4a06      	ldr	r2, [pc, #24]	; (80134b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8013498:	4909      	ldr	r1, [pc, #36]	; (80134c0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801349a:	480a      	ldr	r0, [pc, #40]	; (80134c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801349c:	f007 fb26 	bl	801aaec <__aeabi_atexit>
 80134a0:	4b05      	ldr	r3, [pc, #20]	; (80134b8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80134a2:	622b      	str	r3, [r5, #32]
 80134a4:	4b07      	ldr	r3, [pc, #28]	; (80134c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80134a6:	626b      	str	r3, [r5, #36]	; 0x24
 80134a8:	bd38      	pop	{r3, r4, r5, pc}
 80134aa:	bf00      	nop
 80134ac:	20001530 	.word	0x20001530
 80134b0:	20000000 	.word	0x20000000
 80134b4:	08011a0b 	.word	0x08011a0b
 80134b8:	20000068 	.word	0x20000068
 80134bc:	20001534 	.word	0x20001534
 80134c0:	08011a09 	.word	0x08011a09
 80134c4:	2000006c 	.word	0x2000006c

080134c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 80134c8:	b538      	push	{r3, r4, r5, lr}
 80134ca:	4c15      	ldr	r4, [pc, #84]	; (8013520 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 80134cc:	7823      	ldrb	r3, [r4, #0]
 80134ce:	f3bf 8f5b 	dmb	ish
 80134d2:	07da      	lsls	r2, r3, #31
 80134d4:	4605      	mov	r5, r0
 80134d6:	d40b      	bmi.n	80134f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80134d8:	4620      	mov	r0, r4
 80134da:	f007 fb11 	bl	801ab00 <__cxa_guard_acquire>
 80134de:	b138      	cbz	r0, 80134f0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 80134e0:	4620      	mov	r0, r4
 80134e2:	f007 fb19 	bl	801ab18 <__cxa_guard_release>
 80134e6:	4a0f      	ldr	r2, [pc, #60]	; (8013524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 80134e8:	490f      	ldr	r1, [pc, #60]	; (8013528 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 80134ea:	4810      	ldr	r0, [pc, #64]	; (801352c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 80134ec:	f007 fafe 	bl	801aaec <__aeabi_atexit>
 80134f0:	4c0f      	ldr	r4, [pc, #60]	; (8013530 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 80134f2:	7823      	ldrb	r3, [r4, #0]
 80134f4:	f3bf 8f5b 	dmb	ish
 80134f8:	07db      	lsls	r3, r3, #31
 80134fa:	d40b      	bmi.n	8013514 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 80134fc:	4620      	mov	r0, r4
 80134fe:	f007 faff 	bl	801ab00 <__cxa_guard_acquire>
 8013502:	b138      	cbz	r0, 8013514 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8013504:	4620      	mov	r0, r4
 8013506:	f007 fb07 	bl	801ab18 <__cxa_guard_release>
 801350a:	4a06      	ldr	r2, [pc, #24]	; (8013524 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801350c:	4909      	ldr	r1, [pc, #36]	; (8013534 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801350e:	480a      	ldr	r0, [pc, #40]	; (8013538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8013510:	f007 faec 	bl	801aaec <__aeabi_atexit>
 8013514:	4b05      	ldr	r3, [pc, #20]	; (801352c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8013516:	61ab      	str	r3, [r5, #24]
 8013518:	4b07      	ldr	r3, [pc, #28]	; (8013538 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801351a:	61eb      	str	r3, [r5, #28]
 801351c:	bd38      	pop	{r3, r4, r5, pc}
 801351e:	bf00      	nop
 8013520:	20001508 	.word	0x20001508
 8013524:	20000000 	.word	0x20000000
 8013528:	08011a0f 	.word	0x08011a0f
 801352c:	20000040 	.word	0x20000040
 8013530:	2000150c 	.word	0x2000150c
 8013534:	08011a0d 	.word	0x08011a0d
 8013538:	20000044 	.word	0x20000044

0801353c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801353c:	b510      	push	{r4, lr}
 801353e:	4604      	mov	r4, r0
 8013540:	f7ff ff88 	bl	8013454 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8013544:	4620      	mov	r0, r4
 8013546:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801354a:	f7ff bfbd 	b.w	80134c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08013550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8013550:	b538      	push	{r3, r4, r5, lr}
 8013552:	4c15      	ldr	r4, [pc, #84]	; (80135a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8013554:	7823      	ldrb	r3, [r4, #0]
 8013556:	f3bf 8f5b 	dmb	ish
 801355a:	07da      	lsls	r2, r3, #31
 801355c:	4605      	mov	r5, r0
 801355e:	d40b      	bmi.n	8013578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013560:	4620      	mov	r0, r4
 8013562:	f007 facd 	bl	801ab00 <__cxa_guard_acquire>
 8013566:	b138      	cbz	r0, 8013578 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8013568:	4620      	mov	r0, r4
 801356a:	f007 fad5 	bl	801ab18 <__cxa_guard_release>
 801356e:	4a0f      	ldr	r2, [pc, #60]	; (80135ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013570:	490f      	ldr	r1, [pc, #60]	; (80135b0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8013572:	4810      	ldr	r0, [pc, #64]	; (80135b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8013574:	f007 faba 	bl	801aaec <__aeabi_atexit>
 8013578:	4c0f      	ldr	r4, [pc, #60]	; (80135b8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801357a:	7823      	ldrb	r3, [r4, #0]
 801357c:	f3bf 8f5b 	dmb	ish
 8013580:	07db      	lsls	r3, r3, #31
 8013582:	d40b      	bmi.n	801359c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8013584:	4620      	mov	r0, r4
 8013586:	f007 fabb 	bl	801ab00 <__cxa_guard_acquire>
 801358a:	b138      	cbz	r0, 801359c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801358c:	4620      	mov	r0, r4
 801358e:	f007 fac3 	bl	801ab18 <__cxa_guard_release>
 8013592:	4a06      	ldr	r2, [pc, #24]	; (80135ac <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8013594:	4909      	ldr	r1, [pc, #36]	; (80135bc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8013596:	480a      	ldr	r0, [pc, #40]	; (80135c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8013598:	f007 faa8 	bl	801aaec <__aeabi_atexit>
 801359c:	4b05      	ldr	r3, [pc, #20]	; (80135b4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801359e:	632b      	str	r3, [r5, #48]	; 0x30
 80135a0:	4b07      	ldr	r3, [pc, #28]	; (80135c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80135a2:	636b      	str	r3, [r5, #52]	; 0x34
 80135a4:	bd38      	pop	{r3, r4, r5, pc}
 80135a6:	bf00      	nop
 80135a8:	20001540 	.word	0x20001540
 80135ac:	20000000 	.word	0x20000000
 80135b0:	08011a03 	.word	0x08011a03
 80135b4:	20000078 	.word	0x20000078
 80135b8:	20001544 	.word	0x20001544
 80135bc:	08011a01 	.word	0x08011a01
 80135c0:	2000007c 	.word	0x2000007c

080135c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 80135c4:	b538      	push	{r3, r4, r5, lr}
 80135c6:	4c15      	ldr	r4, [pc, #84]	; (801361c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 80135c8:	7823      	ldrb	r3, [r4, #0]
 80135ca:	f3bf 8f5b 	dmb	ish
 80135ce:	07da      	lsls	r2, r3, #31
 80135d0:	4605      	mov	r5, r0
 80135d2:	d40b      	bmi.n	80135ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80135d4:	4620      	mov	r0, r4
 80135d6:	f007 fa93 	bl	801ab00 <__cxa_guard_acquire>
 80135da:	b138      	cbz	r0, 80135ec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 80135dc:	4620      	mov	r0, r4
 80135de:	f007 fa9b 	bl	801ab18 <__cxa_guard_release>
 80135e2:	4a0f      	ldr	r2, [pc, #60]	; (8013620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 80135e4:	490f      	ldr	r1, [pc, #60]	; (8013624 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 80135e6:	4810      	ldr	r0, [pc, #64]	; (8013628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 80135e8:	f007 fa80 	bl	801aaec <__aeabi_atexit>
 80135ec:	4c0f      	ldr	r4, [pc, #60]	; (801362c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 80135ee:	7823      	ldrb	r3, [r4, #0]
 80135f0:	f3bf 8f5b 	dmb	ish
 80135f4:	07db      	lsls	r3, r3, #31
 80135f6:	d40b      	bmi.n	8013610 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 80135f8:	4620      	mov	r0, r4
 80135fa:	f007 fa81 	bl	801ab00 <__cxa_guard_acquire>
 80135fe:	b138      	cbz	r0, 8013610 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8013600:	4620      	mov	r0, r4
 8013602:	f007 fa89 	bl	801ab18 <__cxa_guard_release>
 8013606:	4a06      	ldr	r2, [pc, #24]	; (8013620 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8013608:	4909      	ldr	r1, [pc, #36]	; (8013630 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801360a:	480a      	ldr	r0, [pc, #40]	; (8013634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801360c:	f007 fa6e 	bl	801aaec <__aeabi_atexit>
 8013610:	4b05      	ldr	r3, [pc, #20]	; (8013628 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8013612:	62ab      	str	r3, [r5, #40]	; 0x28
 8013614:	4b07      	ldr	r3, [pc, #28]	; (8013634 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8013616:	62eb      	str	r3, [r5, #44]	; 0x2c
 8013618:	bd38      	pop	{r3, r4, r5, pc}
 801361a:	bf00      	nop
 801361c:	20001510 	.word	0x20001510
 8013620:	20000000 	.word	0x20000000
 8013624:	08011a07 	.word	0x08011a07
 8013628:	20000048 	.word	0x20000048
 801362c:	20001514 	.word	0x20001514
 8013630:	08011a05 	.word	0x08011a05
 8013634:	2000004c 	.word	0x2000004c

08013638 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8013638:	b510      	push	{r4, lr}
 801363a:	4604      	mov	r4, r0
 801363c:	f7ff ff88 	bl	8013550 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8013640:	4620      	mov	r0, r4
 8013642:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013646:	f7ff bfbd 	b.w	80135c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801364c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801364c:	b538      	push	{r3, r4, r5, lr}
 801364e:	4c15      	ldr	r4, [pc, #84]	; (80136a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8013650:	7823      	ldrb	r3, [r4, #0]
 8013652:	f3bf 8f5b 	dmb	ish
 8013656:	07da      	lsls	r2, r3, #31
 8013658:	4605      	mov	r5, r0
 801365a:	d40b      	bmi.n	8013674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801365c:	4620      	mov	r0, r4
 801365e:	f007 fa4f 	bl	801ab00 <__cxa_guard_acquire>
 8013662:	b138      	cbz	r0, 8013674 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8013664:	4620      	mov	r0, r4
 8013666:	f007 fa57 	bl	801ab18 <__cxa_guard_release>
 801366a:	4a0f      	ldr	r2, [pc, #60]	; (80136a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801366c:	490f      	ldr	r1, [pc, #60]	; (80136ac <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801366e:	4810      	ldr	r0, [pc, #64]	; (80136b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8013670:	f007 fa3c 	bl	801aaec <__aeabi_atexit>
 8013674:	4c0f      	ldr	r4, [pc, #60]	; (80136b4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8013676:	7823      	ldrb	r3, [r4, #0]
 8013678:	f3bf 8f5b 	dmb	ish
 801367c:	07db      	lsls	r3, r3, #31
 801367e:	d40b      	bmi.n	8013698 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013680:	4620      	mov	r0, r4
 8013682:	f007 fa3d 	bl	801ab00 <__cxa_guard_acquire>
 8013686:	b138      	cbz	r0, 8013698 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8013688:	4620      	mov	r0, r4
 801368a:	f007 fa45 	bl	801ab18 <__cxa_guard_release>
 801368e:	4a06      	ldr	r2, [pc, #24]	; (80136a8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8013690:	4909      	ldr	r1, [pc, #36]	; (80136b8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8013692:	480a      	ldr	r0, [pc, #40]	; (80136bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8013694:	f007 fa2a 	bl	801aaec <__aeabi_atexit>
 8013698:	4b05      	ldr	r3, [pc, #20]	; (80136b0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801369a:	652b      	str	r3, [r5, #80]	; 0x50
 801369c:	4b07      	ldr	r3, [pc, #28]	; (80136bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801369e:	656b      	str	r3, [r5, #84]	; 0x54
 80136a0:	bd38      	pop	{r3, r4, r5, pc}
 80136a2:	bf00      	nop
 80136a4:	20001548 	.word	0x20001548
 80136a8:	20000000 	.word	0x20000000
 80136ac:	080119f3 	.word	0x080119f3
 80136b0:	20000080 	.word	0x20000080
 80136b4:	2000154c 	.word	0x2000154c
 80136b8:	080119f1 	.word	0x080119f1
 80136bc:	20000084 	.word	0x20000084

080136c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 80136c0:	b538      	push	{r3, r4, r5, lr}
 80136c2:	4c15      	ldr	r4, [pc, #84]	; (8013718 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 80136c4:	7823      	ldrb	r3, [r4, #0]
 80136c6:	f3bf 8f5b 	dmb	ish
 80136ca:	07da      	lsls	r2, r3, #31
 80136cc:	4605      	mov	r5, r0
 80136ce:	d40b      	bmi.n	80136e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80136d0:	4620      	mov	r0, r4
 80136d2:	f007 fa15 	bl	801ab00 <__cxa_guard_acquire>
 80136d6:	b138      	cbz	r0, 80136e8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 80136d8:	4620      	mov	r0, r4
 80136da:	f007 fa1d 	bl	801ab18 <__cxa_guard_release>
 80136de:	4a0f      	ldr	r2, [pc, #60]	; (801371c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 80136e0:	490f      	ldr	r1, [pc, #60]	; (8013720 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 80136e2:	4810      	ldr	r0, [pc, #64]	; (8013724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 80136e4:	f007 fa02 	bl	801aaec <__aeabi_atexit>
 80136e8:	4c0f      	ldr	r4, [pc, #60]	; (8013728 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 80136ea:	7823      	ldrb	r3, [r4, #0]
 80136ec:	f3bf 8f5b 	dmb	ish
 80136f0:	07db      	lsls	r3, r3, #31
 80136f2:	d40b      	bmi.n	801370c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80136f4:	4620      	mov	r0, r4
 80136f6:	f007 fa03 	bl	801ab00 <__cxa_guard_acquire>
 80136fa:	b138      	cbz	r0, 801370c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 80136fc:	4620      	mov	r0, r4
 80136fe:	f007 fa0b 	bl	801ab18 <__cxa_guard_release>
 8013702:	4a06      	ldr	r2, [pc, #24]	; (801371c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8013704:	4909      	ldr	r1, [pc, #36]	; (801372c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8013706:	480a      	ldr	r0, [pc, #40]	; (8013730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013708:	f007 f9f0 	bl	801aaec <__aeabi_atexit>
 801370c:	4b05      	ldr	r3, [pc, #20]	; (8013724 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801370e:	64ab      	str	r3, [r5, #72]	; 0x48
 8013710:	4b07      	ldr	r3, [pc, #28]	; (8013730 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8013712:	64eb      	str	r3, [r5, #76]	; 0x4c
 8013714:	bd38      	pop	{r3, r4, r5, pc}
 8013716:	bf00      	nop
 8013718:	20001550 	.word	0x20001550
 801371c:	20000000 	.word	0x20000000
 8013720:	080119f7 	.word	0x080119f7
 8013724:	20000088 	.word	0x20000088
 8013728:	20001554 	.word	0x20001554
 801372c:	080119f5 	.word	0x080119f5
 8013730:	2000008c 	.word	0x2000008c

08013734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8013734:	b538      	push	{r3, r4, r5, lr}
 8013736:	4c15      	ldr	r4, [pc, #84]	; (801378c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8013738:	7823      	ldrb	r3, [r4, #0]
 801373a:	f3bf 8f5b 	dmb	ish
 801373e:	07da      	lsls	r2, r3, #31
 8013740:	4605      	mov	r5, r0
 8013742:	d40b      	bmi.n	801375c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8013744:	4620      	mov	r0, r4
 8013746:	f007 f9db 	bl	801ab00 <__cxa_guard_acquire>
 801374a:	b138      	cbz	r0, 801375c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801374c:	4620      	mov	r0, r4
 801374e:	f007 f9e3 	bl	801ab18 <__cxa_guard_release>
 8013752:	4a0f      	ldr	r2, [pc, #60]	; (8013790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013754:	490f      	ldr	r1, [pc, #60]	; (8013794 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8013756:	4810      	ldr	r0, [pc, #64]	; (8013798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013758:	f007 f9c8 	bl	801aaec <__aeabi_atexit>
 801375c:	4c0f      	ldr	r4, [pc, #60]	; (801379c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801375e:	7823      	ldrb	r3, [r4, #0]
 8013760:	f3bf 8f5b 	dmb	ish
 8013764:	07db      	lsls	r3, r3, #31
 8013766:	d40b      	bmi.n	8013780 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013768:	4620      	mov	r0, r4
 801376a:	f007 f9c9 	bl	801ab00 <__cxa_guard_acquire>
 801376e:	b138      	cbz	r0, 8013780 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8013770:	4620      	mov	r0, r4
 8013772:	f007 f9d1 	bl	801ab18 <__cxa_guard_release>
 8013776:	4a06      	ldr	r2, [pc, #24]	; (8013790 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8013778:	4909      	ldr	r1, [pc, #36]	; (80137a0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801377a:	480a      	ldr	r0, [pc, #40]	; (80137a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801377c:	f007 f9b6 	bl	801aaec <__aeabi_atexit>
 8013780:	4b05      	ldr	r3, [pc, #20]	; (8013798 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8013782:	642b      	str	r3, [r5, #64]	; 0x40
 8013784:	4b07      	ldr	r3, [pc, #28]	; (80137a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8013786:	646b      	str	r3, [r5, #68]	; 0x44
 8013788:	bd38      	pop	{r3, r4, r5, pc}
 801378a:	bf00      	nop
 801378c:	20001518 	.word	0x20001518
 8013790:	20000000 	.word	0x20000000
 8013794:	080119fb 	.word	0x080119fb
 8013798:	20000050 	.word	0x20000050
 801379c:	2000151c 	.word	0x2000151c
 80137a0:	080119f9 	.word	0x080119f9
 80137a4:	20000054 	.word	0x20000054

080137a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80137a8:	b538      	push	{r3, r4, r5, lr}
 80137aa:	4c15      	ldr	r4, [pc, #84]	; (8013800 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80137ac:	7823      	ldrb	r3, [r4, #0]
 80137ae:	f3bf 8f5b 	dmb	ish
 80137b2:	07da      	lsls	r2, r3, #31
 80137b4:	4605      	mov	r5, r0
 80137b6:	d40b      	bmi.n	80137d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80137b8:	4620      	mov	r0, r4
 80137ba:	f007 f9a1 	bl	801ab00 <__cxa_guard_acquire>
 80137be:	b138      	cbz	r0, 80137d0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 80137c0:	4620      	mov	r0, r4
 80137c2:	f007 f9a9 	bl	801ab18 <__cxa_guard_release>
 80137c6:	4a0f      	ldr	r2, [pc, #60]	; (8013804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80137c8:	490f      	ldr	r1, [pc, #60]	; (8013808 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 80137ca:	4810      	ldr	r0, [pc, #64]	; (801380c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80137cc:	f007 f98e 	bl	801aaec <__aeabi_atexit>
 80137d0:	4c0f      	ldr	r4, [pc, #60]	; (8013810 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 80137d2:	7823      	ldrb	r3, [r4, #0]
 80137d4:	f3bf 8f5b 	dmb	ish
 80137d8:	07db      	lsls	r3, r3, #31
 80137da:	d40b      	bmi.n	80137f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80137dc:	4620      	mov	r0, r4
 80137de:	f007 f98f 	bl	801ab00 <__cxa_guard_acquire>
 80137e2:	b138      	cbz	r0, 80137f4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 80137e4:	4620      	mov	r0, r4
 80137e6:	f007 f997 	bl	801ab18 <__cxa_guard_release>
 80137ea:	4a06      	ldr	r2, [pc, #24]	; (8013804 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 80137ec:	4909      	ldr	r1, [pc, #36]	; (8013814 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 80137ee:	480a      	ldr	r0, [pc, #40]	; (8013818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80137f0:	f007 f97c 	bl	801aaec <__aeabi_atexit>
 80137f4:	4b05      	ldr	r3, [pc, #20]	; (801380c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 80137f6:	63ab      	str	r3, [r5, #56]	; 0x38
 80137f8:	4b07      	ldr	r3, [pc, #28]	; (8013818 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 80137fa:	63eb      	str	r3, [r5, #60]	; 0x3c
 80137fc:	bd38      	pop	{r3, r4, r5, pc}
 80137fe:	bf00      	nop
 8013800:	20001538 	.word	0x20001538
 8013804:	20000000 	.word	0x20000000
 8013808:	080119ff 	.word	0x080119ff
 801380c:	20000070 	.word	0x20000070
 8013810:	2000153c 	.word	0x2000153c
 8013814:	080119fd 	.word	0x080119fd
 8013818:	20000074 	.word	0x20000074

0801381c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801381c:	b510      	push	{r4, lr}
 801381e:	4604      	mov	r4, r0
 8013820:	f7ff ff14 	bl	801364c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8013824:	4620      	mov	r0, r4
 8013826:	f7ff ff85 	bl	8013734 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801382a:	4620      	mov	r0, r4
 801382c:	f7ff ff48 	bl	80136c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8013830:	4620      	mov	r0, r4
 8013832:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013836:	f7ff bfb7 	b.w	80137a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801383c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801383c:	b538      	push	{r3, r4, r5, lr}
 801383e:	4c15      	ldr	r4, [pc, #84]	; (8013894 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8013840:	7823      	ldrb	r3, [r4, #0]
 8013842:	f3bf 8f5b 	dmb	ish
 8013846:	07da      	lsls	r2, r3, #31
 8013848:	4605      	mov	r5, r0
 801384a:	d40b      	bmi.n	8013864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801384c:	4620      	mov	r0, r4
 801384e:	f007 f957 	bl	801ab00 <__cxa_guard_acquire>
 8013852:	b138      	cbz	r0, 8013864 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8013854:	4620      	mov	r0, r4
 8013856:	f007 f95f 	bl	801ab18 <__cxa_guard_release>
 801385a:	4a0f      	ldr	r2, [pc, #60]	; (8013898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801385c:	490f      	ldr	r1, [pc, #60]	; (801389c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801385e:	4810      	ldr	r0, [pc, #64]	; (80138a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8013860:	f007 f944 	bl	801aaec <__aeabi_atexit>
 8013864:	4c0f      	ldr	r4, [pc, #60]	; (80138a4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8013866:	7823      	ldrb	r3, [r4, #0]
 8013868:	f3bf 8f5b 	dmb	ish
 801386c:	07db      	lsls	r3, r3, #31
 801386e:	d40b      	bmi.n	8013888 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013870:	4620      	mov	r0, r4
 8013872:	f007 f945 	bl	801ab00 <__cxa_guard_acquire>
 8013876:	b138      	cbz	r0, 8013888 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8013878:	4620      	mov	r0, r4
 801387a:	f007 f94d 	bl	801ab18 <__cxa_guard_release>
 801387e:	4a06      	ldr	r2, [pc, #24]	; (8013898 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8013880:	4909      	ldr	r1, [pc, #36]	; (80138a8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8013882:	480a      	ldr	r0, [pc, #40]	; (80138ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8013884:	f007 f932 	bl	801aaec <__aeabi_atexit>
 8013888:	4b05      	ldr	r3, [pc, #20]	; (80138a0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801388a:	662b      	str	r3, [r5, #96]	; 0x60
 801388c:	4b07      	ldr	r3, [pc, #28]	; (80138ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801388e:	666b      	str	r3, [r5, #100]	; 0x64
 8013890:	bd38      	pop	{r3, r4, r5, pc}
 8013892:	bf00      	nop
 8013894:	20001520 	.word	0x20001520
 8013898:	20000000 	.word	0x20000000
 801389c:	080119eb 	.word	0x080119eb
 80138a0:	20000058 	.word	0x20000058
 80138a4:	20001524 	.word	0x20001524
 80138a8:	080119e9 	.word	0x080119e9
 80138ac:	2000005c 	.word	0x2000005c

080138b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80138b0:	b538      	push	{r3, r4, r5, lr}
 80138b2:	4c15      	ldr	r4, [pc, #84]	; (8013908 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80138b4:	7823      	ldrb	r3, [r4, #0]
 80138b6:	f3bf 8f5b 	dmb	ish
 80138ba:	07da      	lsls	r2, r3, #31
 80138bc:	4605      	mov	r5, r0
 80138be:	d40b      	bmi.n	80138d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80138c0:	4620      	mov	r0, r4
 80138c2:	f007 f91d 	bl	801ab00 <__cxa_guard_acquire>
 80138c6:	b138      	cbz	r0, 80138d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 80138c8:	4620      	mov	r0, r4
 80138ca:	f007 f925 	bl	801ab18 <__cxa_guard_release>
 80138ce:	4a0f      	ldr	r2, [pc, #60]	; (801390c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80138d0:	490f      	ldr	r1, [pc, #60]	; (8013910 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 80138d2:	4810      	ldr	r0, [pc, #64]	; (8013914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80138d4:	f007 f90a 	bl	801aaec <__aeabi_atexit>
 80138d8:	4c0f      	ldr	r4, [pc, #60]	; (8013918 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 80138da:	7823      	ldrb	r3, [r4, #0]
 80138dc:	f3bf 8f5b 	dmb	ish
 80138e0:	07db      	lsls	r3, r3, #31
 80138e2:	d40b      	bmi.n	80138fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80138e4:	4620      	mov	r0, r4
 80138e6:	f007 f90b 	bl	801ab00 <__cxa_guard_acquire>
 80138ea:	b138      	cbz	r0, 80138fc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80138ec:	4620      	mov	r0, r4
 80138ee:	f007 f913 	bl	801ab18 <__cxa_guard_release>
 80138f2:	4a06      	ldr	r2, [pc, #24]	; (801390c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80138f4:	4909      	ldr	r1, [pc, #36]	; (801391c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80138f6:	480a      	ldr	r0, [pc, #40]	; (8013920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80138f8:	f007 f8f8 	bl	801aaec <__aeabi_atexit>
 80138fc:	4b05      	ldr	r3, [pc, #20]	; (8013914 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80138fe:	65ab      	str	r3, [r5, #88]	; 0x58
 8013900:	4b07      	ldr	r3, [pc, #28]	; (8013920 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8013902:	65eb      	str	r3, [r5, #92]	; 0x5c
 8013904:	bd38      	pop	{r3, r4, r5, pc}
 8013906:	bf00      	nop
 8013908:	200014f8 	.word	0x200014f8
 801390c:	20000000 	.word	0x20000000
 8013910:	080119ef 	.word	0x080119ef
 8013914:	20000030 	.word	0x20000030
 8013918:	200014fc 	.word	0x200014fc
 801391c:	080119ed 	.word	0x080119ed
 8013920:	20000034 	.word	0x20000034

08013924 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8013924:	b510      	push	{r4, lr}
 8013926:	4604      	mov	r4, r0
 8013928:	f7ff ff88 	bl	801383c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801392c:	4620      	mov	r0, r4
 801392e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013932:	f7ff bfbd 	b.w	80138b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08013938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8013938:	b538      	push	{r3, r4, r5, lr}
 801393a:	4c15      	ldr	r4, [pc, #84]	; (8013990 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801393c:	7823      	ldrb	r3, [r4, #0]
 801393e:	f3bf 8f5b 	dmb	ish
 8013942:	07da      	lsls	r2, r3, #31
 8013944:	4605      	mov	r5, r0
 8013946:	d40b      	bmi.n	8013960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013948:	4620      	mov	r0, r4
 801394a:	f007 f8d9 	bl	801ab00 <__cxa_guard_acquire>
 801394e:	b138      	cbz	r0, 8013960 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8013950:	4620      	mov	r0, r4
 8013952:	f007 f8e1 	bl	801ab18 <__cxa_guard_release>
 8013956:	4a0f      	ldr	r2, [pc, #60]	; (8013994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8013958:	490f      	ldr	r1, [pc, #60]	; (8013998 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801395a:	4810      	ldr	r0, [pc, #64]	; (801399c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801395c:	f007 f8c6 	bl	801aaec <__aeabi_atexit>
 8013960:	4c0f      	ldr	r4, [pc, #60]	; (80139a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8013962:	7823      	ldrb	r3, [r4, #0]
 8013964:	f3bf 8f5b 	dmb	ish
 8013968:	07db      	lsls	r3, r3, #31
 801396a:	d40b      	bmi.n	8013984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801396c:	4620      	mov	r0, r4
 801396e:	f007 f8c7 	bl	801ab00 <__cxa_guard_acquire>
 8013972:	b138      	cbz	r0, 8013984 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8013974:	4620      	mov	r0, r4
 8013976:	f007 f8cf 	bl	801ab18 <__cxa_guard_release>
 801397a:	4a06      	ldr	r2, [pc, #24]	; (8013994 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801397c:	4909      	ldr	r1, [pc, #36]	; (80139a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801397e:	480a      	ldr	r0, [pc, #40]	; (80139a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8013980:	f007 f8b4 	bl	801aaec <__aeabi_atexit>
 8013984:	4b05      	ldr	r3, [pc, #20]	; (801399c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8013986:	672b      	str	r3, [r5, #112]	; 0x70
 8013988:	4b07      	ldr	r3, [pc, #28]	; (80139a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801398a:	676b      	str	r3, [r5, #116]	; 0x74
 801398c:	bd38      	pop	{r3, r4, r5, pc}
 801398e:	bf00      	nop
 8013990:	200014f0 	.word	0x200014f0
 8013994:	20000000 	.word	0x20000000
 8013998:	080119e3 	.word	0x080119e3
 801399c:	20000028 	.word	0x20000028
 80139a0:	200014f4 	.word	0x200014f4
 80139a4:	080119e1 	.word	0x080119e1
 80139a8:	2000002c 	.word	0x2000002c

080139ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80139ac:	b538      	push	{r3, r4, r5, lr}
 80139ae:	4c15      	ldr	r4, [pc, #84]	; (8013a04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80139b0:	7823      	ldrb	r3, [r4, #0]
 80139b2:	f3bf 8f5b 	dmb	ish
 80139b6:	07da      	lsls	r2, r3, #31
 80139b8:	4605      	mov	r5, r0
 80139ba:	d40b      	bmi.n	80139d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80139bc:	4620      	mov	r0, r4
 80139be:	f007 f89f 	bl	801ab00 <__cxa_guard_acquire>
 80139c2:	b138      	cbz	r0, 80139d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 80139c4:	4620      	mov	r0, r4
 80139c6:	f007 f8a7 	bl	801ab18 <__cxa_guard_release>
 80139ca:	4a0f      	ldr	r2, [pc, #60]	; (8013a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80139cc:	490f      	ldr	r1, [pc, #60]	; (8013a0c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 80139ce:	4810      	ldr	r0, [pc, #64]	; (8013a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80139d0:	f007 f88c 	bl	801aaec <__aeabi_atexit>
 80139d4:	4c0f      	ldr	r4, [pc, #60]	; (8013a14 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 80139d6:	7823      	ldrb	r3, [r4, #0]
 80139d8:	f3bf 8f5b 	dmb	ish
 80139dc:	07db      	lsls	r3, r3, #31
 80139de:	d40b      	bmi.n	80139f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80139e0:	4620      	mov	r0, r4
 80139e2:	f007 f88d 	bl	801ab00 <__cxa_guard_acquire>
 80139e6:	b138      	cbz	r0, 80139f8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80139e8:	4620      	mov	r0, r4
 80139ea:	f007 f895 	bl	801ab18 <__cxa_guard_release>
 80139ee:	4a06      	ldr	r2, [pc, #24]	; (8013a08 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80139f0:	4909      	ldr	r1, [pc, #36]	; (8013a18 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80139f2:	480a      	ldr	r0, [pc, #40]	; (8013a1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80139f4:	f007 f87a 	bl	801aaec <__aeabi_atexit>
 80139f8:	4b05      	ldr	r3, [pc, #20]	; (8013a10 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80139fa:	66ab      	str	r3, [r5, #104]	; 0x68
 80139fc:	4b07      	ldr	r3, [pc, #28]	; (8013a1c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80139fe:	66eb      	str	r3, [r5, #108]	; 0x6c
 8013a00:	bd38      	pop	{r3, r4, r5, pc}
 8013a02:	bf00      	nop
 8013a04:	200014e8 	.word	0x200014e8
 8013a08:	20000000 	.word	0x20000000
 8013a0c:	080119e7 	.word	0x080119e7
 8013a10:	20000020 	.word	0x20000020
 8013a14:	200014ec 	.word	0x200014ec
 8013a18:	080119e5 	.word	0x080119e5
 8013a1c:	20000024 	.word	0x20000024

08013a20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8013a20:	b510      	push	{r4, lr}
 8013a22:	4604      	mov	r4, r0
 8013a24:	f7ff ff88 	bl	8013938 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8013a28:	4620      	mov	r0, r4
 8013a2a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a2e:	f7ff bfbd 	b.w	80139ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08013a32 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8013a32:	b510      	push	{r4, lr}
 8013a34:	4604      	mov	r4, r0
 8013a36:	f7ff fff3 	bl	8013a20 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8013a3a:	4620      	mov	r0, r4
 8013a3c:	f7ff ff72 	bl	8013924 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8013a40:	4620      	mov	r0, r4
 8013a42:	f7ff fdf9 	bl	8013638 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8013a46:	4620      	mov	r0, r4
 8013a48:	f7ff fcfa 	bl	8013440 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8013a4c:	4620      	mov	r0, r4
 8013a4e:	f7ff fd75 	bl	801353c <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8013a52:	4620      	mov	r0, r4
 8013a54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8013a58:	f7ff bee0 	b.w	801381c <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08013a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8013a5c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a60:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 8013a64:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8013a68:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8013a6c:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8013a70:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 8013a74:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8013a78:	8808      	ldrh	r0, [r1, #0]
 8013a7a:	fb0e 4708 	mla	r7, lr, r8, r4
 8013a7e:	f1be 0f00 	cmp.w	lr, #0
 8013a82:	eb02 0a07 	add.w	sl, r2, r7
 8013a86:	db37      	blt.n	8013af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013a88:	45f3      	cmp	fp, lr
 8013a8a:	dd35      	ble.n	8013af8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8013a8c:	2c00      	cmp	r4, #0
 8013a8e:	db31      	blt.n	8013af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013a90:	45a0      	cmp	r8, r4
 8013a92:	dd2f      	ble.n	8013af4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8013a94:	5dd2      	ldrb	r2, [r2, r7]
 8013a96:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8013a9a:	1c62      	adds	r2, r4, #1
 8013a9c:	d42f      	bmi.n	8013afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013a9e:	4590      	cmp	r8, r2
 8013aa0:	dd2d      	ble.n	8013afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013aa2:	b366      	cbz	r6, 8013afe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8013aa4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8013aa8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8013aac:	f11e 0e01 	adds.w	lr, lr, #1
 8013ab0:	d429      	bmi.n	8013b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013ab2:	45f3      	cmp	fp, lr
 8013ab4:	dd27      	ble.n	8013b06 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 8013ab6:	f1bc 0f00 	cmp.w	ip, #0
 8013aba:	f000 80a0 	beq.w	8013bfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a2>
 8013abe:	2c00      	cmp	r4, #0
 8013ac0:	db1f      	blt.n	8013b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013ac2:	45a0      	cmp	r8, r4
 8013ac4:	dd1d      	ble.n	8013b02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8013ac6:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8013aca:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8013ace:	3401      	adds	r4, #1
 8013ad0:	d41c      	bmi.n	8013b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013ad2:	45a0      	cmp	r8, r4
 8013ad4:	dd1a      	ble.n	8013b0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 8013ad6:	b1de      	cbz	r6, 8013b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8013ad8:	44d0      	add	r8, sl
 8013ada:	f898 2001 	ldrb.w	r2, [r8, #1]
 8013ade:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8013ae2:	2e0f      	cmp	r6, #15
 8013ae4:	d915      	bls.n	8013b12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 8013ae6:	4b49      	ldr	r3, [pc, #292]	; (8013c0c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 8013ae8:	4a49      	ldr	r2, [pc, #292]	; (8013c10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 8013aea:	484a      	ldr	r0, [pc, #296]	; (8013c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 8013aec:	f240 3155 	movw	r1, #853	; 0x355
 8013af0:	f007 fdfe 	bl	801b6f0 <__assert_func>
 8013af4:	4681      	mov	r9, r0
 8013af6:	e7d0      	b.n	8013a9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 8013af8:	4607      	mov	r7, r0
 8013afa:	4681      	mov	r9, r0
 8013afc:	e7d6      	b.n	8013aac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013afe:	4607      	mov	r7, r0
 8013b00:	e7d4      	b.n	8013aac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 8013b02:	4686      	mov	lr, r0
 8013b04:	e7e3      	b.n	8013ace <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 8013b06:	4603      	mov	r3, r0
 8013b08:	4686      	mov	lr, r0
 8013b0a:	e7ea      	b.n	8013ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013b0c:	4603      	mov	r3, r0
 8013b0e:	e7e8      	b.n	8013ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 8013b10:	4603      	mov	r3, r0
 8013b12:	f1bc 0f0f 	cmp.w	ip, #15
 8013b16:	d8e6      	bhi.n	8013ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013b18:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8013b1c:	fb16 f80c 	smulbb	r8, r6, ip
 8013b20:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8013b24:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8013b28:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8013b2c:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8013b30:	ea44 0909 	orr.w	r9, r4, r9
 8013b34:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8013b38:	f1cc 0410 	rsb	r4, ip, #16
 8013b3c:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8013b40:	1ba4      	subs	r4, r4, r6
 8013b42:	041a      	lsls	r2, r3, #16
 8013b44:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8013b48:	ea4a 0707 	orr.w	r7, sl, r7
 8013b4c:	4377      	muls	r7, r6
 8013b4e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013b52:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8013b56:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013b5a:	fb04 7409 	mla	r4, r4, r9, r7
 8013b5e:	4313      	orrs	r3, r2
 8013b60:	ea4f 420e 	mov.w	r2, lr, lsl #16
 8013b64:	fb08 4303 	mla	r3, r8, r3, r4
 8013b68:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8013b6c:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8013b70:	4322      	orrs	r2, r4
 8013b72:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8013b76:	fb0c 3202 	mla	r2, ip, r2, r3
 8013b7a:	0d53      	lsrs	r3, r2, #21
 8013b7c:	0952      	lsrs	r2, r2, #5
 8013b7e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013b82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013b86:	431a      	orrs	r2, r3
 8013b88:	b293      	uxth	r3, r2
 8013b8a:	b2af      	uxth	r7, r5
 8013b8c:	1202      	asrs	r2, r0, #8
 8013b8e:	43ed      	mvns	r5, r5
 8013b90:	b2ed      	uxtb	r5, r5
 8013b92:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8013b96:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8013b9a:	fb12 f205 	smulbb	r2, r2, r5
 8013b9e:	10c6      	asrs	r6, r0, #3
 8013ba0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8013ba4:	fb0c 2c07 	mla	ip, ip, r7, r2
 8013ba8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8013bac:	10da      	asrs	r2, r3, #3
 8013bae:	fb16 f605 	smulbb	r6, r6, r5
 8013bb2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8013bb6:	fb02 6207 	mla	r2, r2, r7, r6
 8013bba:	b296      	uxth	r6, r2
 8013bbc:	00c2      	lsls	r2, r0, #3
 8013bbe:	00dc      	lsls	r4, r3, #3
 8013bc0:	b2d2      	uxtb	r2, r2
 8013bc2:	b2e4      	uxtb	r4, r4
 8013bc4:	fb12 f205 	smulbb	r2, r2, r5
 8013bc8:	fb04 2207 	mla	r2, r4, r7, r2
 8013bcc:	fa1f fc8c 	uxth.w	ip, ip
 8013bd0:	b292      	uxth	r2, r2
 8013bd2:	f10c 0301 	add.w	r3, ip, #1
 8013bd6:	1c50      	adds	r0, r2, #1
 8013bd8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8013bdc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8013be0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013be4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013be8:	4313      	orrs	r3, r2
 8013bea:	1c72      	adds	r2, r6, #1
 8013bec:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8013bf0:	0952      	lsrs	r2, r2, #5
 8013bf2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013bf6:	4313      	orrs	r3, r2
 8013bf8:	800b      	strh	r3, [r1, #0]
 8013bfa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bfe:	2e0f      	cmp	r6, #15
 8013c00:	f63f af71 	bhi.w	8013ae6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 8013c04:	4603      	mov	r3, r0
 8013c06:	4686      	mov	lr, r0
 8013c08:	e786      	b.n	8013b18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 8013c0a:	bf00      	nop
 8013c0c:	0801f387 	.word	0x0801f387
 8013c10:	0801f98e 	.word	0x0801f98e
 8013c14:	0801f40f 	.word	0x0801f40f

08013c18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8013c18:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013c1c:	ed2d 8b08 	vpush	{d8-d11}
 8013c20:	b09b      	sub	sp, #108	; 0x6c
 8013c22:	e9dd 982d 	ldrd	r9, r8, [sp, #180]	; 0xb4
 8013c26:	9309      	str	r3, [sp, #36]	; 0x24
 8013c28:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 8013c2c:	9e31      	ldr	r6, [sp, #196]	; 0xc4
 8013c2e:	930a      	str	r3, [sp, #40]	; 0x28
 8013c30:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8013c34:	930e      	str	r3, [sp, #56]	; 0x38
 8013c36:	910d      	str	r1, [sp, #52]	; 0x34
 8013c38:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8013c3c:	9018      	str	r0, [sp, #96]	; 0x60
 8013c3e:	6870      	ldr	r0, [r6, #4]
 8013c40:	9217      	str	r2, [sp, #92]	; 0x5c
 8013c42:	fb00 1303 	mla	r3, r0, r3, r1
 8013c46:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8013c48:	6831      	ldr	r1, [r6, #0]
 8013c4a:	6856      	ldr	r6, [r2, #4]
 8013c4c:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 8013c50:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8013c54:	6813      	ldr	r3, [r2, #0]
 8013c56:	930c      	str	r3, [sp, #48]	; 0x30
 8013c58:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013c5a:	43db      	mvns	r3, r3
 8013c5c:	b2db      	uxtb	r3, r3
 8013c5e:	eeb0 aa40 	vmov.f32	s20, s0
 8013c62:	eef0 9a60 	vmov.f32	s19, s1
 8013c66:	eeb0 9a41 	vmov.f32	s18, s2
 8013c6a:	eeb0 8a62 	vmov.f32	s16, s5
 8013c6e:	eef0 8a43 	vmov.f32	s17, s6
 8013c72:	eef0 ba44 	vmov.f32	s23, s8
 8013c76:	eeb0 ba64 	vmov.f32	s22, s9
 8013c7a:	eef0 aa45 	vmov.f32	s21, s10
 8013c7e:	3604      	adds	r6, #4
 8013c80:	930b      	str	r3, [sp, #44]	; 0x2c
 8013c82:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013c84:	2b00      	cmp	r3, #0
 8013c86:	dc03      	bgt.n	8013c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013c88:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8013c8a:	2b00      	cmp	r3, #0
 8013c8c:	f340 8215 	ble.w	80140ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013c92:	2b00      	cmp	r3, #0
 8013c94:	f340 8102 	ble.w	8013e9c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 8013c98:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013c9c:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013ca0:	d42c      	bmi.n	8013cfc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8013ca2:	1c51      	adds	r1, r2, #1
 8013ca4:	428c      	cmp	r4, r1
 8013ca6:	dd2c      	ble.n	8013d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013ca8:	2b00      	cmp	r3, #0
 8013caa:	db2a      	blt.n	8013d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013cac:	980a      	ldr	r0, [sp, #40]	; 0x28
 8013cae:	1c59      	adds	r1, r3, #1
 8013cb0:	4288      	cmp	r0, r1
 8013cb2:	dd26      	ble.n	8013d02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8013cb4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013cb6:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8013cb8:	3b01      	subs	r3, #1
 8013cba:	fb02 9203 	mla	r2, r2, r3, r9
 8013cbe:	1412      	asrs	r2, r2, #16
 8013cc0:	d429      	bmi.n	8013d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013cc2:	3201      	adds	r2, #1
 8013cc4:	4294      	cmp	r4, r2
 8013cc6:	dd26      	ble.n	8013d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013cc8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8013cca:	fb02 8303 	mla	r3, r2, r3, r8
 8013cce:	141b      	asrs	r3, r3, #16
 8013cd0:	d421      	bmi.n	8013d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013cd2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013cd4:	3301      	adds	r3, #1
 8013cd6:	429a      	cmp	r2, r3
 8013cd8:	dd1d      	ble.n	8013d16 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8013cda:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013cde:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8013ce2:	f8cd a03c 	str.w	sl, [sp, #60]	; 0x3c
 8013ce6:	9312      	str	r3, [sp, #72]	; 0x48
 8013ce8:	f1be 0f00 	cmp.w	lr, #0
 8013cec:	f300 8138 	bgt.w	8013f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x348>
 8013cf0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013cf2:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8013cf6:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8013cfa:	e0d1      	b.n	8013ea0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x288>
 8013cfc:	1c51      	adds	r1, r2, #1
 8013cfe:	f040 80c3 	bne.w	8013e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013d02:	42a2      	cmp	r2, r4
 8013d04:	f280 80c0 	bge.w	8013e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013d08:	1c5f      	adds	r7, r3, #1
 8013d0a:	f2c0 80bd 	blt.w	8013e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013d0e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013d10:	4293      	cmp	r3, r2
 8013d12:	f280 80b9 	bge.w	8013e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x270>
 8013d16:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8013d1a:	4657      	mov	r7, sl
 8013d1c:	f1bb 0f00 	cmp.w	fp, #0
 8013d20:	dde6      	ble.n	8013cf0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8013d22:	ea5f 4229 	movs.w	r2, r9, asr #16
 8013d26:	ea4f 4328 	mov.w	r3, r8, asr #16
 8013d2a:	f3c9 3003 	ubfx	r0, r9, #12, #4
 8013d2e:	f3c8 3103 	ubfx	r1, r8, #12, #4
 8013d32:	f100 80fc 	bmi.w	8013f2e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x316>
 8013d36:	f102 0c01 	add.w	ip, r2, #1
 8013d3a:	4564      	cmp	r4, ip
 8013d3c:	f340 80f9 	ble.w	8013f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013d40:	2b00      	cmp	r3, #0
 8013d42:	f2c0 80f6 	blt.w	8013f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013d46:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013d48:	f103 0c01 	add.w	ip, r3, #1
 8013d4c:	4565      	cmp	r5, ip
 8013d4e:	f340 80f0 	ble.w	8013f32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x31a>
 8013d52:	fb03 2304 	mla	r3, r3, r4, r2
 8013d56:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8013d58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013d5a:	441a      	add	r2, r3
 8013d5c:	5ceb      	ldrb	r3, [r5, r3]
 8013d5e:	f836 e013 	ldrh.w	lr, [r6, r3, lsl #1]
 8013d62:	2800      	cmp	r0, #0
 8013d64:	f000 80db 	beq.w	8013f1e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x306>
 8013d68:	7853      	ldrb	r3, [r2, #1]
 8013d6a:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013d6e:	9313      	str	r3, [sp, #76]	; 0x4c
 8013d70:	b141      	cbz	r1, 8013d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013d72:	1913      	adds	r3, r2, r4
 8013d74:	5d12      	ldrb	r2, [r2, r4]
 8013d76:	785b      	ldrb	r3, [r3, #1]
 8013d78:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013d7c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013d80:	9210      	str	r2, [sp, #64]	; 0x40
 8013d82:	9314      	str	r3, [sp, #80]	; 0x50
 8013d84:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8013d86:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8013d88:	fb10 f201 	smulbb	r2, r0, r1
 8013d8c:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8013d90:	10d2      	asrs	r2, r2, #3
 8013d92:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013d96:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013d9a:	ea4c 0c03 	orr.w	ip, ip, r3
 8013d9e:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8013da2:	930f      	str	r3, [sp, #60]	; 0x3c
 8013da4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8013da6:	041b      	lsls	r3, r3, #16
 8013da8:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8013dac:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013db0:	432b      	orrs	r3, r5
 8013db2:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8013db4:	4353      	muls	r3, r2
 8013db6:	fb05 330c 	mla	r3, r5, ip, r3
 8013dba:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8013dbe:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8013dc2:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8013dc6:	ea4c 0e0e 	orr.w	lr, ip, lr
 8013dca:	f1c1 0c10 	rsb	ip, r1, #16
 8013dce:	ebac 0c00 	sub.w	ip, ip, r0
 8013dd2:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013dd6:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8013dda:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8013ddc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013dde:	0418      	lsls	r0, r3, #16
 8013de0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8013de4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013de8:	4318      	orrs	r0, r3
 8013dea:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8013dee:	fb02 c200 	mla	r2, r2, r0, ip
 8013df2:	0d53      	lsrs	r3, r2, #21
 8013df4:	0952      	lsrs	r2, r2, #5
 8013df6:	f8b7 c000 	ldrh.w	ip, [r7]
 8013dfa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8013dfe:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8013e02:	431a      	orrs	r2, r3
 8013e04:	b292      	uxth	r2, r2
 8013e06:	ea4f 212c 	mov.w	r1, ip, asr #8
 8013e0a:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8013e0e:	1210      	asrs	r0, r2, #8
 8013e10:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8013e14:	fb11 f105 	smulbb	r1, r1, r5
 8013e18:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8013e1c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8013e20:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8013e24:	fb00 1003 	mla	r0, r0, r3, r1
 8013e28:	fa5f fc8c 	uxtb.w	ip, ip
 8013e2c:	10d1      	asrs	r1, r2, #3
 8013e2e:	00d2      	lsls	r2, r2, #3
 8013e30:	fb1c fc05 	smulbb	ip, ip, r5
 8013e34:	b2d2      	uxtb	r2, r2
 8013e36:	fb02 c203 	mla	r2, r2, r3, ip
 8013e3a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8013e3e:	b280      	uxth	r0, r0
 8013e40:	b292      	uxth	r2, r2
 8013e42:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8013e46:	fb1e fe05 	smulbb	lr, lr, r5
 8013e4a:	fb01 e103 	mla	r1, r1, r3, lr
 8013e4e:	f102 0c01 	add.w	ip, r2, #1
 8013e52:	1c43      	adds	r3, r0, #1
 8013e54:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013e58:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8013e5c:	b289      	uxth	r1, r1
 8013e5e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013e62:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8013e66:	4313      	orrs	r3, r2
 8013e68:	1c4a      	adds	r2, r1, #1
 8013e6a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8013e6e:	0949      	lsrs	r1, r1, #5
 8013e70:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8013e74:	430b      	orrs	r3, r1
 8013e76:	803b      	strh	r3, [r7, #0]
 8013e78:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013e7a:	4499      	add	r9, r3
 8013e7c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013e7e:	3702      	adds	r7, #2
 8013e80:	4498      	add	r8, r3
 8013e82:	f10b 3bff 	add.w	fp, fp, #4294967295
 8013e86:	e749      	b.n	8013d1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8013e88:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8013e8a:	4499      	add	r9, r3
 8013e8c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8013e8e:	4498      	add	r8, r3
 8013e90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013e92:	3b01      	subs	r3, #1
 8013e94:	9309      	str	r3, [sp, #36]	; 0x24
 8013e96:	f10a 0a02 	add.w	sl, sl, #2
 8013e9a:	e6f9      	b.n	8013c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8013e9c:	f47f af0a 	bne.w	8013cb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9c>
 8013ea0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013ea2:	2b00      	cmp	r3, #0
 8013ea4:	f340 8109 	ble.w	80140ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8013ea8:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013eac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013eb0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013eb4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013eb6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013eba:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013ebe:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013ec2:	eef0 6a48 	vmov.f32	s13, s16
 8013ec6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013eca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013ece:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013ed2:	ee16 9a90 	vmov	r9, s13
 8013ed6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013eda:	eef0 6a68 	vmov.f32	s13, s17
 8013ede:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013ee2:	ee18 2a10 	vmov	r2, s16
 8013ee6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013eea:	fb92 f3f3 	sdiv	r3, r2, r3
 8013eee:	ee18 2a90 	vmov	r2, s17
 8013ef2:	932f      	str	r3, [sp, #188]	; 0xbc
 8013ef4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013ef6:	fb92 f3f3 	sdiv	r3, r2, r3
 8013efa:	9330      	str	r3, [sp, #192]	; 0xc0
 8013efc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8013efe:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8013f00:	3b01      	subs	r3, #1
 8013f02:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013f06:	930d      	str	r3, [sp, #52]	; 0x34
 8013f08:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8013f0a:	bf08      	it	eq
 8013f0c:	4613      	moveq	r3, r2
 8013f0e:	ee16 8a90 	vmov	r8, s13
 8013f12:	9309      	str	r3, [sp, #36]	; 0x24
 8013f14:	eef0 8a67 	vmov.f32	s17, s15
 8013f18:	eeb0 8a47 	vmov.f32	s16, s14
 8013f1c:	e6b1      	b.n	8013c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8013f1e:	2900      	cmp	r1, #0
 8013f20:	f43f af30 	beq.w	8013d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013f24:	5d13      	ldrb	r3, [r2, r4]
 8013f26:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f2a:	9310      	str	r3, [sp, #64]	; 0x40
 8013f2c:	e72a      	b.n	8013d84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 8013f2e:	1c55      	adds	r5, r2, #1
 8013f30:	d1a2      	bne.n	8013e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013f32:	4294      	cmp	r4, r2
 8013f34:	dda0      	ble.n	8013e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013f36:	1c5d      	adds	r5, r3, #1
 8013f38:	db9e      	blt.n	8013e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013f3a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8013f3c:	429d      	cmp	r5, r3
 8013f3e:	dd9b      	ble.n	8013e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013f40:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8013f44:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8013f46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013f48:	9202      	str	r2, [sp, #8]
 8013f4a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8013f4e:	e9cd 4300 	strd	r4, r3, [sp]
 8013f52:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013f54:	9818      	ldr	r0, [sp, #96]	; 0x60
 8013f56:	4633      	mov	r3, r6
 8013f58:	4639      	mov	r1, r7
 8013f5a:	f7ff fd7f 	bl	8013a5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8013f5e:	e78b      	b.n	8013e78 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8013f60:	ea4f 4329 	mov.w	r3, r9, asr #16
 8013f64:	ea4f 4228 	mov.w	r2, r8, asr #16
 8013f68:	fb04 3202 	mla	r2, r4, r2, r3
 8013f6c:	990c      	ldr	r1, [sp, #48]	; 0x30
 8013f6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013f70:	4413      	add	r3, r2
 8013f72:	5c8a      	ldrb	r2, [r1, r2]
 8013f74:	f3c9 3c03 	ubfx	ip, r9, #12, #4
 8013f78:	f3c8 3003 	ubfx	r0, r8, #12, #4
 8013f7c:	f836 1012 	ldrh.w	r1, [r6, r2, lsl #1]
 8013f80:	f1bc 0f00 	cmp.w	ip, #0
 8013f84:	f000 8091 	beq.w	80140aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x492>
 8013f88:	785a      	ldrb	r2, [r3, #1]
 8013f8a:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8013f8e:	9215      	str	r2, [sp, #84]	; 0x54
 8013f90:	b140      	cbz	r0, 8013fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 8013f92:	191a      	adds	r2, r3, r4
 8013f94:	5d1b      	ldrb	r3, [r3, r4]
 8013f96:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013f9a:	9311      	str	r3, [sp, #68]	; 0x44
 8013f9c:	7853      	ldrb	r3, [r2, #1]
 8013f9e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8013fa2:	9316      	str	r3, [sp, #88]	; 0x58
 8013fa4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8013fa6:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8013fa8:	fb1c f200 	smulbb	r2, ip, r0
 8013fac:	041f      	lsls	r7, r3, #16
 8013fae:	10d2      	asrs	r2, r2, #3
 8013fb0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8013fb4:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8013fb8:	431f      	orrs	r7, r3
 8013fba:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8013fbe:	9319      	str	r3, [sp, #100]	; 0x64
 8013fc0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8013fc2:	041b      	lsls	r3, r3, #16
 8013fc4:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8013fc8:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8013fcc:	ea43 030b 	orr.w	r3, r3, fp
 8013fd0:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8013fd2:	4353      	muls	r3, r2
 8013fd4:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8013fd8:	fb05 3707 	mla	r7, r5, r7, r3
 8013fdc:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8013fe0:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8013fe4:	ea43 0b01 	orr.w	fp, r3, r1
 8013fe8:	f1c0 0110 	rsb	r1, r0, #16
 8013fec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013fee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8013ff0:	eba1 0c0c 	sub.w	ip, r1, ip
 8013ff4:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8013ff8:	fb0c 770b 	mla	r7, ip, fp, r7
 8013ffc:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014000:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8014004:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014008:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801400c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8014010:	fb02 770c 	mla	r7, r2, ip, r7
 8014014:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014016:	0d79      	lsrs	r1, r7, #21
 8014018:	8812      	ldrh	r2, [r2, #0]
 801401a:	097f      	lsrs	r7, r7, #5
 801401c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014020:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014024:	430f      	orrs	r7, r1
 8014026:	1211      	asrs	r1, r2, #8
 8014028:	b2bb      	uxth	r3, r7
 801402a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801402e:	fb11 f105 	smulbb	r1, r1, r5
 8014032:	1218      	asrs	r0, r3, #8
 8014034:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014036:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801403a:	fb00 1005 	mla	r0, r0, r5, r1
 801403e:	10d7      	asrs	r7, r2, #3
 8014040:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8014042:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8014046:	fb17 f705 	smulbb	r7, r7, r5
 801404a:	10d9      	asrs	r1, r3, #3
 801404c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801404e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014052:	fb01 7105 	mla	r1, r1, r5, r7
 8014056:	00d2      	lsls	r2, r2, #3
 8014058:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801405a:	b2d2      	uxtb	r2, r2
 801405c:	fb12 f205 	smulbb	r2, r2, r5
 8014060:	00db      	lsls	r3, r3, #3
 8014062:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8014064:	b2db      	uxtb	r3, r3
 8014066:	b280      	uxth	r0, r0
 8014068:	fb03 2305 	mla	r3, r3, r5, r2
 801406c:	b29b      	uxth	r3, r3
 801406e:	b289      	uxth	r1, r1
 8014070:	1c42      	adds	r2, r0, #1
 8014072:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014076:	1c4f      	adds	r7, r1, #1
 8014078:	1c5a      	adds	r2, r3, #1
 801407a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801407e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8014082:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8014086:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801408a:	0949      	lsrs	r1, r1, #5
 801408c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801408e:	4310      	orrs	r0, r2
 8014090:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014094:	4308      	orrs	r0, r1
 8014096:	f823 0b02 	strh.w	r0, [r3], #2
 801409a:	930f      	str	r3, [sp, #60]	; 0x3c
 801409c:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 801409e:	4499      	add	r9, r3
 80140a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80140a2:	f10e 3eff 	add.w	lr, lr, #4294967295
 80140a6:	4498      	add	r8, r3
 80140a8:	e61e      	b.n	8013ce8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80140aa:	2800      	cmp	r0, #0
 80140ac:	f43f af7a 	beq.w	8013fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80140b0:	5d1b      	ldrb	r3, [r3, r4]
 80140b2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80140b6:	9311      	str	r3, [sp, #68]	; 0x44
 80140b8:	e774      	b.n	8013fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38c>
 80140ba:	b01b      	add	sp, #108	; 0x6c
 80140bc:	ecbd 8b08 	vpop	{d8-d11}
 80140c0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080140c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80140c4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80140c8:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 80140cc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80140d0:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80140d4:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80140d8:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80140dc:	8808      	ldrh	r0, [r1, #0]
 80140de:	fb06 570e 	mla	r7, r6, lr, r5
 80140e2:	2e00      	cmp	r6, #0
 80140e4:	eb02 0807 	add.w	r8, r2, r7
 80140e8:	db38      	blt.n	801415c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80140ea:	45b1      	cmp	r9, r6
 80140ec:	dd36      	ble.n	801415c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80140ee:	2d00      	cmp	r5, #0
 80140f0:	db32      	blt.n	8014158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80140f2:	45ae      	cmp	lr, r5
 80140f4:	dd30      	ble.n	8014158 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80140f6:	5dd2      	ldrb	r2, [r2, r7]
 80140f8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80140fc:	1c6a      	adds	r2, r5, #1
 80140fe:	d430      	bmi.n	8014162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014100:	4596      	cmp	lr, r2
 8014102:	dd2e      	ble.n	8014162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014104:	b36c      	cbz	r4, 8014162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 8014106:	f898 2001 	ldrb.w	r2, [r8, #1]
 801410a:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801410e:	3601      	adds	r6, #1
 8014110:	d42b      	bmi.n	801416a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014112:	45b1      	cmp	r9, r6
 8014114:	dd29      	ble.n	801416a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 8014116:	f1bc 0f00 	cmp.w	ip, #0
 801411a:	d028      	beq.n	801416e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 801411c:	2d00      	cmp	r5, #0
 801411e:	db22      	blt.n	8014166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014120:	45ae      	cmp	lr, r5
 8014122:	dd20      	ble.n	8014166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 8014124:	f818 600e 	ldrb.w	r6, [r8, lr]
 8014128:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 801412c:	3501      	adds	r5, #1
 801412e:	d407      	bmi.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014130:	45ae      	cmp	lr, r5
 8014132:	dd05      	ble.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8014134:	b134      	cbz	r4, 8014144 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8014136:	44c6      	add	lr, r8
 8014138:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801413c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8014140:	2c0f      	cmp	r4, #15
 8014142:	d802      	bhi.n	801414a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014144:	f1bc 0f0f 	cmp.w	ip, #15
 8014148:	d914      	bls.n	8014174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801414a:	4b26      	ldr	r3, [pc, #152]	; (80141e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801414c:	4a26      	ldr	r2, [pc, #152]	; (80141e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801414e:	4827      	ldr	r0, [pc, #156]	; (80141ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8014150:	f240 3155 	movw	r1, #853	; 0x355
 8014154:	f007 facc 	bl	801b6f0 <__assert_func>
 8014158:	4607      	mov	r7, r0
 801415a:	e7cf      	b.n	80140fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801415c:	4602      	mov	r2, r0
 801415e:	4607      	mov	r7, r0
 8014160:	e7d5      	b.n	801410e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014162:	4602      	mov	r2, r0
 8014164:	e7d3      	b.n	801410e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8014166:	4606      	mov	r6, r0
 8014168:	e7e0      	b.n	801412c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801416a:	4606      	mov	r6, r0
 801416c:	e7e8      	b.n	8014140 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801416e:	2c0f      	cmp	r4, #15
 8014170:	d8eb      	bhi.n	801414a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8014172:	4606      	mov	r6, r0
 8014174:	043d      	lsls	r5, r7, #16
 8014176:	fb14 f30c 	smulbb	r3, r4, ip
 801417a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801417e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8014182:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8014186:	10db      	asrs	r3, r3, #3
 8014188:	432f      	orrs	r7, r5
 801418a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801418e:	f1cc 0510 	rsb	r5, ip, #16
 8014192:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8014196:	1b2d      	subs	r5, r5, r4
 8014198:	ea4e 0202 	orr.w	r2, lr, r2
 801419c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 80141a0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 80141a4:	4354      	muls	r4, r2
 80141a6:	fb05 4507 	mla	r5, r5, r7, r4
 80141aa:	0404      	lsls	r4, r0, #16
 80141ac:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80141b0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80141b4:	4320      	orrs	r0, r4
 80141b6:	fb03 5400 	mla	r4, r3, r0, r5
 80141ba:	0430      	lsls	r0, r6, #16
 80141bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80141c0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 80141c4:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 80141c8:	4330      	orrs	r0, r6
 80141ca:	fb03 4000 	mla	r0, r3, r0, r4
 80141ce:	0d43      	lsrs	r3, r0, #21
 80141d0:	0940      	lsrs	r0, r0, #5
 80141d2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80141d6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80141da:	4318      	orrs	r0, r3
 80141dc:	8008      	strh	r0, [r1, #0]
 80141de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80141e2:	bf00      	nop
 80141e4:	0801f387 	.word	0x0801f387
 80141e8:	0801f98e 	.word	0x0801f98e
 80141ec:	0801f40f 	.word	0x0801f40f

080141f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80141f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80141f4:	ed2d 8b0a 	vpush	{d8-d12}
 80141f8:	b095      	sub	sp, #84	; 0x54
 80141fa:	e9dd 9629 	ldrd	r9, r6, [sp, #164]	; 0xa4
 80141fe:	9f2d      	ldr	r7, [sp, #180]	; 0xb4
 8014200:	9306      	str	r3, [sp, #24]
 8014202:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014206:	9109      	str	r1, [sp, #36]	; 0x24
 8014208:	9307      	str	r3, [sp, #28]
 801420a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801420e:	9012      	str	r0, [sp, #72]	; 0x48
 8014210:	6878      	ldr	r0, [r7, #4]
 8014212:	9211      	str	r2, [sp, #68]	; 0x44
 8014214:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8014216:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 801421a:	fb00 1303 	mla	r3, r0, r3, r1
 801421e:	6839      	ldr	r1, [r7, #0]
 8014220:	6857      	ldr	r7, [r2, #4]
 8014222:	eb01 0a43 	add.w	sl, r1, r3, lsl #1
 8014226:	6813      	ldr	r3, [r2, #0]
 8014228:	9308      	str	r3, [sp, #32]
 801422a:	eeb0 aa40 	vmov.f32	s20, s0
 801422e:	eef0 9a60 	vmov.f32	s19, s1
 8014232:	eeb0 9a41 	vmov.f32	s18, s2
 8014236:	eeb0 8a62 	vmov.f32	s16, s5
 801423a:	eef0 8a43 	vmov.f32	s17, s6
 801423e:	eeb0 ca44 	vmov.f32	s24, s8
 8014242:	eef0 ba64 	vmov.f32	s23, s9
 8014246:	eeb0 ba45 	vmov.f32	s22, s10
 801424a:	3704      	adds	r7, #4
 801424c:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014250:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014252:	2b00      	cmp	r3, #0
 8014254:	dc03      	bgt.n	801425e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8014256:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014258:	2b00      	cmp	r3, #0
 801425a:	f340 819a 	ble.w	8014592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 801425e:	9b06      	ldr	r3, [sp, #24]
 8014260:	2b00      	cmp	r3, #0
 8014262:	f340 80c4 	ble.w	80143ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8014266:	ea5f 4229 	movs.w	r2, r9, asr #16
 801426a:	ea4f 4326 	mov.w	r3, r6, asr #16
 801426e:	d429      	bmi.n	80142c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8014270:	1c51      	adds	r1, r2, #1
 8014272:	428c      	cmp	r4, r1
 8014274:	dd29      	ble.n	80142ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014276:	2b00      	cmp	r3, #0
 8014278:	db27      	blt.n	80142ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 801427a:	9807      	ldr	r0, [sp, #28]
 801427c:	1c59      	adds	r1, r3, #1
 801427e:	4288      	cmp	r0, r1
 8014280:	dd23      	ble.n	80142ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xda>
 8014282:	9b06      	ldr	r3, [sp, #24]
 8014284:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014286:	3b01      	subs	r3, #1
 8014288:	fb02 9203 	mla	r2, r2, r3, r9
 801428c:	1412      	asrs	r2, r2, #16
 801428e:	d425      	bmi.n	80142dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014290:	3201      	adds	r2, #1
 8014292:	4294      	cmp	r4, r2
 8014294:	dd22      	ble.n	80142dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 8014296:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014298:	fb02 6303 	mla	r3, r2, r3, r6
 801429c:	141b      	asrs	r3, r3, #16
 801429e:	d41d      	bmi.n	80142dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80142a0:	9a07      	ldr	r2, [sp, #28]
 80142a2:	3301      	adds	r3, #1
 80142a4:	429a      	cmp	r2, r3
 80142a6:	dd19      	ble.n	80142dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80142a8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 80142ac:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80142b0:	f1b8 0f00 	cmp.w	r8, #0
 80142b4:	f300 80f8 	bgt.w	80144a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b8>
 80142b8:	9b06      	ldr	r3, [sp, #24]
 80142ba:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80142be:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 80142c2:	e096      	b.n	80143f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x202>
 80142c4:	1c51      	adds	r1, r2, #1
 80142c6:	f040 8088 	bne.w	80143da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80142ca:	42a2      	cmp	r2, r4
 80142cc:	f280 8085 	bge.w	80143da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80142d0:	1c5a      	adds	r2, r3, #1
 80142d2:	f2c0 8082 	blt.w	80143da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80142d6:	9a07      	ldr	r2, [sp, #28]
 80142d8:	4293      	cmp	r3, r2
 80142da:	da7e      	bge.n	80143da <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 80142dc:	f8dd b018 	ldr.w	fp, [sp, #24]
 80142e0:	46d0      	mov	r8, sl
 80142e2:	f1bb 0f00 	cmp.w	fp, #0
 80142e6:	dde7      	ble.n	80142b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 80142e8:	ea5f 4229 	movs.w	r2, r9, asr #16
 80142ec:	ea4f 4326 	mov.w	r3, r6, asr #16
 80142f0:	f3c9 3003 	ubfx	r0, r9, #12, #4
 80142f4:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80142f8:	f100 80c0 	bmi.w	801447c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 80142fc:	f102 0c01 	add.w	ip, r2, #1
 8014300:	4564      	cmp	r4, ip
 8014302:	f340 80bd 	ble.w	8014480 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014306:	2b00      	cmp	r3, #0
 8014308:	f2c0 80ba 	blt.w	8014480 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 801430c:	9d07      	ldr	r5, [sp, #28]
 801430e:	f103 0c01 	add.w	ip, r3, #1
 8014312:	4565      	cmp	r5, ip
 8014314:	f340 80b4 	ble.w	8014480 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x290>
 8014318:	fb03 2304 	mla	r3, r3, r4, r2
 801431c:	9d08      	ldr	r5, [sp, #32]
 801431e:	9a08      	ldr	r2, [sp, #32]
 8014320:	441a      	add	r2, r3
 8014322:	5ceb      	ldrb	r3, [r5, r3]
 8014324:	f837 e013 	ldrh.w	lr, [r7, r3, lsl #1]
 8014328:	2800      	cmp	r0, #0
 801432a:	f000 809f 	beq.w	801446c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x27c>
 801432e:	7853      	ldrb	r3, [r2, #1]
 8014330:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014334:	930d      	str	r3, [sp, #52]	; 0x34
 8014336:	b141      	cbz	r1, 801434a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014338:	1913      	adds	r3, r2, r4
 801433a:	5d12      	ldrb	r2, [r2, r4]
 801433c:	785b      	ldrb	r3, [r3, #1]
 801433e:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8014342:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014346:	920a      	str	r2, [sp, #40]	; 0x28
 8014348:	930e      	str	r3, [sp, #56]	; 0x38
 801434a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801434c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801434e:	fb10 f201 	smulbb	r2, r0, r1
 8014352:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8014356:	10d2      	asrs	r2, r2, #3
 8014358:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801435c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014360:	ea4c 0c03 	orr.w	ip, ip, r3
 8014364:	ebc2 0340 	rsb	r3, r2, r0, lsl #1
 8014368:	930c      	str	r3, [sp, #48]	; 0x30
 801436a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801436c:	041b      	lsls	r3, r3, #16
 801436e:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8014372:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014376:	432b      	orrs	r3, r5
 8014378:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801437a:	4353      	muls	r3, r2
 801437c:	fb05 330c 	mla	r3, r5, ip, r3
 8014380:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8014384:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8014388:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801438c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8014390:	f1c1 0c10 	rsb	ip, r1, #16
 8014394:	ebac 0c00 	sub.w	ip, ip, r0
 8014398:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801439c:	fb0c 3c0e 	mla	ip, ip, lr, r3
 80143a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80143a2:	0418      	lsls	r0, r3, #16
 80143a4:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80143a8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80143ac:	4318      	orrs	r0, r3
 80143ae:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 80143b2:	fb02 c200 	mla	r2, r2, r0, ip
 80143b6:	0d53      	lsrs	r3, r2, #21
 80143b8:	0952      	lsrs	r2, r2, #5
 80143ba:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80143be:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80143c2:	431a      	orrs	r2, r3
 80143c4:	f8a8 2000 	strh.w	r2, [r8]
 80143c8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80143ca:	4499      	add	r9, r3
 80143cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80143ce:	f108 0802 	add.w	r8, r8, #2
 80143d2:	441e      	add	r6, r3
 80143d4:	f10b 3bff 	add.w	fp, fp, #4294967295
 80143d8:	e783      	b.n	80142e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80143da:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80143dc:	4499      	add	r9, r3
 80143de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80143e0:	441e      	add	r6, r3
 80143e2:	9b06      	ldr	r3, [sp, #24]
 80143e4:	3b01      	subs	r3, #1
 80143e6:	9306      	str	r3, [sp, #24]
 80143e8:	f10a 0a02 	add.w	sl, sl, #2
 80143ec:	e737      	b.n	801425e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80143ee:	f47f af48 	bne.w	8014282 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 80143f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80143f4:	2b00      	cmp	r3, #0
 80143f6:	f340 80cc 	ble.w	8014592 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a2>
 80143fa:	ee3a aa0c 	vadd.f32	s20, s20, s24
 80143fe:	ee79 9aab 	vadd.f32	s19, s19, s23
 8014402:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8014406:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014408:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801440c:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014410:	eef0 6a48 	vmov.f32	s13, s16
 8014414:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014418:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801441c:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014420:	ee16 9a90 	vmov	r9, s13
 8014424:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014428:	eef0 6a68 	vmov.f32	s13, s17
 801442c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014430:	ee18 2a10 	vmov	r2, s16
 8014434:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014438:	fb92 f3f3 	sdiv	r3, r2, r3
 801443c:	ee18 2a90 	vmov	r2, s17
 8014440:	932b      	str	r3, [sp, #172]	; 0xac
 8014442:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014444:	fb92 f3f3 	sdiv	r3, r2, r3
 8014448:	932c      	str	r3, [sp, #176]	; 0xb0
 801444a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801444c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801444e:	3b01      	subs	r3, #1
 8014450:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014454:	9309      	str	r3, [sp, #36]	; 0x24
 8014456:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014458:	bf08      	it	eq
 801445a:	4613      	moveq	r3, r2
 801445c:	ee16 6a90 	vmov	r6, s13
 8014460:	9306      	str	r3, [sp, #24]
 8014462:	eef0 8a67 	vmov.f32	s17, s15
 8014466:	eeb0 8a47 	vmov.f32	s16, s14
 801446a:	e6f1      	b.n	8014250 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 801446c:	2900      	cmp	r1, #0
 801446e:	f43f af6c 	beq.w	801434a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 8014472:	5d13      	ldrb	r3, [r2, r4]
 8014474:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8014478:	930a      	str	r3, [sp, #40]	; 0x28
 801447a:	e766      	b.n	801434a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x15a>
 801447c:	1c55      	adds	r5, r2, #1
 801447e:	d1a3      	bne.n	80143c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014480:	4294      	cmp	r4, r2
 8014482:	dda1      	ble.n	80143c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014484:	1c5d      	adds	r5, r3, #1
 8014486:	db9f      	blt.n	80143c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 8014488:	9d07      	ldr	r5, [sp, #28]
 801448a:	429d      	cmp	r5, r3
 801448c:	dd9c      	ble.n	80143c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 801448e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8014492:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8014496:	e9cd 4500 	strd	r4, r5, [sp]
 801449a:	463b      	mov	r3, r7
 801449c:	9a08      	ldr	r2, [sp, #32]
 801449e:	9812      	ldr	r0, [sp, #72]	; 0x48
 80144a0:	4641      	mov	r1, r8
 80144a2:	f7ff fe0f 	bl	80140c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80144a6:	e78f      	b.n	80143c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d8>
 80144a8:	ea4f 4329 	mov.w	r3, r9, asr #16
 80144ac:	1432      	asrs	r2, r6, #16
 80144ae:	fb04 3202 	mla	r2, r4, r2, r3
 80144b2:	9908      	ldr	r1, [sp, #32]
 80144b4:	9b08      	ldr	r3, [sp, #32]
 80144b6:	4413      	add	r3, r2
 80144b8:	5c8a      	ldrb	r2, [r1, r2]
 80144ba:	f3c9 3e03 	ubfx	lr, r9, #12, #4
 80144be:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80144c2:	f837 1012 	ldrh.w	r1, [r7, r2, lsl #1]
 80144c6:	f1be 0f00 	cmp.w	lr, #0
 80144ca:	d05b      	beq.n	8014584 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x394>
 80144cc:	785a      	ldrb	r2, [r3, #1]
 80144ce:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 80144d2:	920f      	str	r2, [sp, #60]	; 0x3c
 80144d4:	b140      	cbz	r0, 80144e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 80144d6:	191a      	adds	r2, r3, r4
 80144d8:	5d1b      	ldrb	r3, [r3, r4]
 80144da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80144de:	930b      	str	r3, [sp, #44]	; 0x2c
 80144e0:	7853      	ldrb	r3, [r2, #1]
 80144e2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 80144e6:	9310      	str	r3, [sp, #64]	; 0x40
 80144e8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80144ea:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80144ec:	fb1e f200 	smulbb	r2, lr, r0
 80144f0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80144f4:	10d2      	asrs	r2, r2, #3
 80144f6:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80144fa:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80144fe:	ea4c 0c03 	orr.w	ip, ip, r3
 8014502:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8014506:	9313      	str	r3, [sp, #76]	; 0x4c
 8014508:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801450a:	041b      	lsls	r3, r3, #16
 801450c:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8014510:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8014514:	ea43 030b 	orr.w	r3, r3, fp
 8014518:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801451a:	4353      	muls	r3, r2
 801451c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8014520:	fb05 3c0c 	mla	ip, r5, ip, r3
 8014524:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8014528:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801452c:	ea43 0b01 	orr.w	fp, r3, r1
 8014530:	f1c0 0110 	rsb	r1, r0, #16
 8014534:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014536:	eba1 0e0e 	sub.w	lr, r1, lr
 801453a:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801453e:	fb0e cc0b 	mla	ip, lr, fp, ip
 8014542:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8014546:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801454a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801454e:	ea4b 0e0e 	orr.w	lr, fp, lr
 8014552:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8014556:	fb02 cc0e 	mla	ip, r2, lr, ip
 801455a:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801455e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8014562:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014566:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801456a:	ea43 0c0c 	orr.w	ip, r3, ip
 801456e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014570:	f823 cb02 	strh.w	ip, [r3], #2
 8014574:	930c      	str	r3, [sp, #48]	; 0x30
 8014576:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8014578:	4499      	add	r9, r3
 801457a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801457c:	f108 38ff 	add.w	r8, r8, #4294967295
 8014580:	441e      	add	r6, r3
 8014582:	e695      	b.n	80142b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 8014584:	2800      	cmp	r0, #0
 8014586:	d0af      	beq.n	80144e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014588:	5d1b      	ldrb	r3, [r3, r4]
 801458a:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801458e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014590:	e7aa      	b.n	80144e8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014592:	b015      	add	sp, #84	; 0x54
 8014594:	ecbd 8b0a 	vpop	{d8-d12}
 8014598:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801459c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801459c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80145a0:	468b      	mov	fp, r1
 80145a2:	8809      	ldrh	r1, [r1, #0]
 80145a4:	b089      	sub	sp, #36	; 0x24
 80145a6:	10cd      	asrs	r5, r1, #3
 80145a8:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 80145ac:	ea4f 2921 	mov.w	r9, r1, asr #8
 80145b0:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80145b4:	00c9      	lsls	r1, r1, #3
 80145b6:	9500      	str	r5, [sp, #0]
 80145b8:	b2c9      	uxtb	r1, r1
 80145ba:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 80145be:	9101      	str	r1, [sp, #4]
 80145c0:	9900      	ldr	r1, [sp, #0]
 80145c2:	9202      	str	r2, [sp, #8]
 80145c4:	fb04 650e 	mla	r5, r4, lr, r6
 80145c8:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 80145cc:	eb02 0805 	add.w	r8, r2, r5
 80145d0:	0209      	lsls	r1, r1, #8
 80145d2:	9a01      	ldr	r2, [sp, #4]
 80145d4:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 80145d8:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 80145dc:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80145e0:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 80145e4:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 80145e8:	4311      	orrs	r1, r2
 80145ea:	2c00      	cmp	r4, #0
 80145ec:	9107      	str	r1, [sp, #28]
 80145ee:	db43      	blt.n	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80145f0:	45a2      	cmp	sl, r4
 80145f2:	dd41      	ble.n	8014678 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 80145f4:	2e00      	cmp	r6, #0
 80145f6:	db3d      	blt.n	8014674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80145f8:	45b6      	cmp	lr, r6
 80145fa:	dd3b      	ble.n	8014674 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 80145fc:	9a02      	ldr	r2, [sp, #8]
 80145fe:	5d55      	ldrb	r5, [r2, r5]
 8014600:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014604:	441d      	add	r5, r3
 8014606:	1c72      	adds	r2, r6, #1
 8014608:	d439      	bmi.n	801467e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801460a:	4596      	cmp	lr, r2
 801460c:	dd37      	ble.n	801467e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 801460e:	2f00      	cmp	r7, #0
 8014610:	d035      	beq.n	801467e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8014612:	f898 1001 	ldrb.w	r1, [r8, #1]
 8014616:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801461a:	4419      	add	r1, r3
 801461c:	3401      	adds	r4, #1
 801461e:	d432      	bmi.n	8014686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014620:	45a2      	cmp	sl, r4
 8014622:	dd30      	ble.n	8014686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014624:	b378      	cbz	r0, 8014686 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8014626:	2e00      	cmp	r6, #0
 8014628:	db2b      	blt.n	8014682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801462a:	45b6      	cmp	lr, r6
 801462c:	dd29      	ble.n	8014682 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 801462e:	f818 400e 	ldrb.w	r4, [r8, lr]
 8014632:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8014636:	441c      	add	r4, r3
 8014638:	3601      	adds	r6, #1
 801463a:	d427      	bmi.n	801468c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 801463c:	45b6      	cmp	lr, r6
 801463e:	dd25      	ble.n	801468c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014640:	b327      	cbz	r7, 801468c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8014642:	44c6      	add	lr, r8
 8014644:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8014648:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801464c:	4413      	add	r3, r2
 801464e:	782a      	ldrb	r2, [r5, #0]
 8014650:	9202      	str	r2, [sp, #8]
 8014652:	780a      	ldrb	r2, [r1, #0]
 8014654:	9203      	str	r2, [sp, #12]
 8014656:	7822      	ldrb	r2, [r4, #0]
 8014658:	9204      	str	r2, [sp, #16]
 801465a:	2f0f      	cmp	r7, #15
 801465c:	781a      	ldrb	r2, [r3, #0]
 801465e:	9205      	str	r2, [sp, #20]
 8014660:	d801      	bhi.n	8014666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8014662:	280f      	cmp	r0, #15
 8014664:	d914      	bls.n	8014690 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8014666:	4b3f      	ldr	r3, [pc, #252]	; (8014764 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8014668:	4a3f      	ldr	r2, [pc, #252]	; (8014768 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 801466a:	4840      	ldr	r0, [pc, #256]	; (801476c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 801466c:	f240 3173 	movw	r1, #883	; 0x373
 8014670:	f007 f83e 	bl	801b6f0 <__assert_func>
 8014674:	ad07      	add	r5, sp, #28
 8014676:	e7c6      	b.n	8014606 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8014678:	a907      	add	r1, sp, #28
 801467a:	460d      	mov	r5, r1
 801467c:	e7ce      	b.n	801461c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 801467e:	a907      	add	r1, sp, #28
 8014680:	e7cc      	b.n	801461c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8014682:	ac07      	add	r4, sp, #28
 8014684:	e7d8      	b.n	8014638 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8014686:	ab07      	add	r3, sp, #28
 8014688:	461c      	mov	r4, r3
 801468a:	e7e0      	b.n	801464e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 801468c:	ab07      	add	r3, sp, #28
 801468e:	e7de      	b.n	801464e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8014690:	b2ba      	uxth	r2, r7
 8014692:	b280      	uxth	r0, r0
 8014694:	fb02 fa00 	mul.w	sl, r2, r0
 8014698:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 801469c:	0112      	lsls	r2, r2, #4
 801469e:	b280      	uxth	r0, r0
 80146a0:	f891 8002 	ldrb.w	r8, [r1, #2]
 80146a4:	7849      	ldrb	r1, [r1, #1]
 80146a6:	78ae      	ldrb	r6, [r5, #2]
 80146a8:	786d      	ldrb	r5, [r5, #1]
 80146aa:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 80146ae:	eba2 020a 	sub.w	r2, r2, sl
 80146b2:	b292      	uxth	r2, r2
 80146b4:	ebae 0e00 	sub.w	lr, lr, r0
 80146b8:	fa1f fe8e 	uxth.w	lr, lr
 80146bc:	4351      	muls	r1, r2
 80146be:	fb02 f808 	mul.w	r8, r2, r8
 80146c2:	fb0e 8806 	mla	r8, lr, r6, r8
 80146c6:	fb0e 1505 	mla	r5, lr, r5, r1
 80146ca:	78a6      	ldrb	r6, [r4, #2]
 80146cc:	7861      	ldrb	r1, [r4, #1]
 80146ce:	fa1f f78c 	uxth.w	r7, ip
 80146d2:	fb00 8806 	mla	r8, r0, r6, r8
 80146d6:	fb00 5501 	mla	r5, r0, r1, r5
 80146da:	789e      	ldrb	r6, [r3, #2]
 80146dc:	7859      	ldrb	r1, [r3, #1]
 80146de:	9b00      	ldr	r3, [sp, #0]
 80146e0:	ea6f 0c0c 	mvn.w	ip, ip
 80146e4:	fa5f fc8c 	uxtb.w	ip, ip
 80146e8:	fb0a 5101 	mla	r1, sl, r1, r5
 80146ec:	fb13 f50c 	smulbb	r5, r3, ip
 80146f0:	9b03      	ldr	r3, [sp, #12]
 80146f2:	435a      	muls	r2, r3
 80146f4:	9b02      	ldr	r3, [sp, #8]
 80146f6:	fb0e 2203 	mla	r2, lr, r3, r2
 80146fa:	9b04      	ldr	r3, [sp, #16]
 80146fc:	fb00 2003 	mla	r0, r0, r3, r2
 8014700:	9b05      	ldr	r3, [sp, #20]
 8014702:	fb0a 8606 	mla	r6, sl, r6, r8
 8014706:	fb0a 0a03 	mla	sl, sl, r3, r0
 801470a:	9b01      	ldr	r3, [sp, #4]
 801470c:	fb19 f90c 	smulbb	r9, r9, ip
 8014710:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8014714:	fb13 fc0c 	smulbb	ip, r3, ip
 8014718:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801471c:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014720:	fb06 9607 	mla	r6, r6, r7, r9
 8014724:	fb01 5107 	mla	r1, r1, r7, r5
 8014728:	fb0a c707 	mla	r7, sl, r7, ip
 801472c:	b2b6      	uxth	r6, r6
 801472e:	b289      	uxth	r1, r1
 8014730:	b2bf      	uxth	r7, r7
 8014732:	f106 0901 	add.w	r9, r6, #1
 8014736:	f107 0c01 	add.w	ip, r7, #1
 801473a:	1c4d      	adds	r5, r1, #1
 801473c:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8014740:	eb0c 2717 	add.w	r7, ip, r7, lsr #8
 8014744:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8014748:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801474c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8014750:	0949      	lsrs	r1, r1, #5
 8014752:	433e      	orrs	r6, r7
 8014754:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014758:	430e      	orrs	r6, r1
 801475a:	f8ab 6000 	strh.w	r6, [fp]
 801475e:	b009      	add	sp, #36	; 0x24
 8014760:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014764:	0801f387 	.word	0x0801f387
 8014768:	0801f8e5 	.word	0x0801f8e5
 801476c:	0801f40f 	.word	0x0801f40f

08014770 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014774:	ed2d 8b08 	vpush	{d8-d11}
 8014778:	b097      	sub	sp, #92	; 0x5c
 801477a:	eeb0 aa40 	vmov.f32	s20, s0
 801477e:	9309      	str	r3, [sp, #36]	; 0x24
 8014780:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8014784:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014786:	930b      	str	r3, [sp, #44]	; 0x2c
 8014788:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 801478c:	9310      	str	r3, [sp, #64]	; 0x40
 801478e:	910f      	str	r1, [sp, #60]	; 0x3c
 8014790:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8014794:	9015      	str	r0, [sp, #84]	; 0x54
 8014796:	6860      	ldr	r0, [r4, #4]
 8014798:	9213      	str	r2, [sp, #76]	; 0x4c
 801479a:	fb00 1303 	mla	r3, r0, r3, r1
 801479e:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 80147a0:	6821      	ldr	r1, [r4, #0]
 80147a2:	6854      	ldr	r4, [r2, #4]
 80147a4:	f9bd 50c0 	ldrsh.w	r5, [sp, #192]	; 0xc0
 80147a8:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80147ac:	930a      	str	r3, [sp, #40]	; 0x28
 80147ae:	6813      	ldr	r3, [r2, #0]
 80147b0:	930e      	str	r3, [sp, #56]	; 0x38
 80147b2:	1d23      	adds	r3, r4, #4
 80147b4:	9308      	str	r3, [sp, #32]
 80147b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80147b8:	43db      	mvns	r3, r3
 80147ba:	b2db      	uxtb	r3, r3
 80147bc:	eef0 9a60 	vmov.f32	s19, s1
 80147c0:	eeb0 9a41 	vmov.f32	s18, s2
 80147c4:	eeb0 8a62 	vmov.f32	s16, s5
 80147c8:	eef0 8a43 	vmov.f32	s17, s6
 80147cc:	eef0 ba44 	vmov.f32	s23, s8
 80147d0:	eeb0 ba64 	vmov.f32	s22, s9
 80147d4:	eef0 aa45 	vmov.f32	s21, s10
 80147d8:	930c      	str	r3, [sp, #48]	; 0x30
 80147da:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80147dc:	2b00      	cmp	r3, #0
 80147de:	dc03      	bgt.n	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80147e0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80147e2:	2b00      	cmp	r3, #0
 80147e4:	f340 825c 	ble.w	8014ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 80147e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80147ea:	2b00      	cmp	r3, #0
 80147ec:	f340 8127 	ble.w	8014a3e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2ce>
 80147f0:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80147f2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80147f4:	1412      	asrs	r2, r2, #16
 80147f6:	ea4f 4323 	mov.w	r3, r3, asr #16
 80147fa:	d430      	bmi.n	801485e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 80147fc:	1c51      	adds	r1, r2, #1
 80147fe:	428d      	cmp	r5, r1
 8014800:	dd30      	ble.n	8014864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014802:	2b00      	cmp	r3, #0
 8014804:	db2e      	blt.n	8014864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 8014806:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8014808:	1c59      	adds	r1, r3, #1
 801480a:	4288      	cmp	r0, r1
 801480c:	dd2a      	ble.n	8014864 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf4>
 801480e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014810:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014812:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8014814:	3b01      	subs	r3, #1
 8014816:	fb02 1203 	mla	r2, r2, r3, r1
 801481a:	1412      	asrs	r2, r2, #16
 801481c:	d42c      	bmi.n	8014878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 801481e:	3201      	adds	r2, #1
 8014820:	4295      	cmp	r5, r2
 8014822:	dd29      	ble.n	8014878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014824:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014826:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8014828:	fb02 1303 	mla	r3, r2, r3, r1
 801482c:	141b      	asrs	r3, r3, #16
 801482e:	d423      	bmi.n	8014878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014830:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014832:	3301      	adds	r3, #1
 8014834:	429a      	cmp	r2, r3
 8014836:	dd1f      	ble.n	8014878 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x108>
 8014838:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801483a:	9311      	str	r3, [sp, #68]	; 0x44
 801483c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801483e:	930d      	str	r3, [sp, #52]	; 0x34
 8014840:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8014844:	9312      	str	r3, [sp, #72]	; 0x48
 8014846:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014848:	2b00      	cmp	r3, #0
 801484a:	f300 8161 	bgt.w	8014b10 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a0>
 801484e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014850:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014852:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014856:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801485a:	930a      	str	r3, [sp, #40]	; 0x28
 801485c:	e0f1      	b.n	8014a42 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d2>
 801485e:	1c51      	adds	r1, r2, #1
 8014860:	f040 80de 	bne.w	8014a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014864:	42aa      	cmp	r2, r5
 8014866:	f280 80db 	bge.w	8014a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801486a:	1c5f      	adds	r7, r3, #1
 801486c:	f2c0 80d8 	blt.w	8014a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014870:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8014872:	4293      	cmp	r3, r2
 8014874:	f280 80d4 	bge.w	8014a20 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801487a:	9311      	str	r3, [sp, #68]	; 0x44
 801487c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801487e:	930d      	str	r3, [sp, #52]	; 0x34
 8014880:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014882:	2b00      	cmp	r3, #0
 8014884:	dde3      	ble.n	801484e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8014886:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014888:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801488a:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801488c:	141a      	asrs	r2, r3, #16
 801488e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014890:	1400      	asrs	r0, r0, #16
 8014892:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014896:	f3c1 3103 	ubfx	r1, r1, #12, #4
 801489a:	f100 8120 	bmi.w	8014ade <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36e>
 801489e:	1c46      	adds	r6, r0, #1
 80148a0:	42b5      	cmp	r5, r6
 80148a2:	f340 811e 	ble.w	8014ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80148a6:	2a00      	cmp	r2, #0
 80148a8:	f2c0 811b 	blt.w	8014ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80148ac:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80148ae:	1c56      	adds	r6, r2, #1
 80148b0:	42b7      	cmp	r7, r6
 80148b2:	f340 8116 	ble.w	8014ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x372>
 80148b6:	fb02 0005 	mla	r0, r2, r5, r0
 80148ba:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80148bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80148be:	9c08      	ldr	r4, [sp, #32]
 80148c0:	4402      	add	r2, r0
 80148c2:	5c30      	ldrb	r0, [r6, r0]
 80148c4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80148c8:	9014      	str	r0, [sp, #80]	; 0x50
 80148ca:	1826      	adds	r6, r4, r0
 80148cc:	2b00      	cmp	r3, #0
 80148ce:	f000 80f7 	beq.w	8014ac0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x350>
 80148d2:	f892 e001 	ldrb.w	lr, [r2, #1]
 80148d6:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80148da:	44a6      	add	lr, r4
 80148dc:	2900      	cmp	r1, #0
 80148de:	f000 80f8 	beq.w	8014ad2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x362>
 80148e2:	1950      	adds	r0, r2, r5
 80148e4:	5d52      	ldrb	r2, [r2, r5]
 80148e6:	7840      	ldrb	r0, [r0, #1]
 80148e8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80148ec:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80148f0:	4422      	add	r2, r4
 80148f2:	4420      	add	r0, r4
 80148f4:	b29b      	uxth	r3, r3
 80148f6:	b289      	uxth	r1, r1
 80148f8:	fb03 fa01 	mul.w	sl, r3, r1
 80148fc:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 8014900:	011b      	lsls	r3, r3, #4
 8014902:	b289      	uxth	r1, r1
 8014904:	f89e c002 	ldrb.w	ip, [lr, #2]
 8014908:	f896 b002 	ldrb.w	fp, [r6, #2]
 801490c:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 801490e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014910:	f8b7 8000 	ldrh.w	r8, [r7]
 8014914:	f8bd 7040 	ldrh.w	r7, [sp, #64]	; 0x40
 8014918:	f5c3 7980 	rsb	r9, r3, #256	; 0x100
 801491c:	eba3 030a 	sub.w	r3, r3, sl
 8014920:	b29b      	uxth	r3, r3
 8014922:	eba9 0901 	sub.w	r9, r9, r1
 8014926:	fa1f f989 	uxth.w	r9, r9
 801492a:	fb03 fc0c 	mul.w	ip, r3, ip
 801492e:	fb09 cc0b 	mla	ip, r9, fp, ip
 8014932:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014936:	fb01 cc0b 	mla	ip, r1, fp, ip
 801493a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801493e:	fb0a cc0b 	mla	ip, sl, fp, ip
 8014942:	ea4f 2b28 	mov.w	fp, r8, asr #8
 8014946:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801494a:	fb1b fb04 	smulbb	fp, fp, r4
 801494e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014952:	fb0c bc07 	mla	ip, ip, r7, fp
 8014956:	f896 b001 	ldrb.w	fp, [r6, #1]
 801495a:	f89e 6001 	ldrb.w	r6, [lr, #1]
 801495e:	f89e e000 	ldrb.w	lr, [lr]
 8014962:	435e      	muls	r6, r3
 8014964:	fb09 660b 	mla	r6, r9, fp, r6
 8014968:	f892 b001 	ldrb.w	fp, [r2, #1]
 801496c:	fb01 660b 	mla	r6, r1, fp, r6
 8014970:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014974:	fb0a 660b 	mla	r6, sl, fp, r6
 8014978:	ea4f 0be8 	mov.w	fp, r8, asr #3
 801497c:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014980:	fb1b fb04 	smulbb	fp, fp, r4
 8014984:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014988:	fb06 b607 	mla	r6, r6, r7, fp
 801498c:	b2b4      	uxth	r4, r6
 801498e:	9412      	str	r4, [sp, #72]	; 0x48
 8014990:	9e08      	ldr	r6, [sp, #32]
 8014992:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014994:	f816 b004 	ldrb.w	fp, [r6, r4]
 8014998:	fb03 f30e 	mul.w	r3, r3, lr
 801499c:	f892 e000 	ldrb.w	lr, [r2]
 80149a0:	fb09 330b 	mla	r3, r9, fp, r3
 80149a4:	fb01 330e 	mla	r3, r1, lr, r3
 80149a8:	f890 e000 	ldrb.w	lr, [r0]
 80149ac:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80149b0:	fb0a 3e0e 	mla	lr, sl, lr, r3
 80149b4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80149b6:	fa5f f888 	uxtb.w	r8, r8
 80149ba:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 80149be:	fb18 f803 	smulbb	r8, r8, r3
 80149c2:	fb0e 8807 	mla	r8, lr, r7, r8
 80149c6:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80149c8:	fa1f fc8c 	uxth.w	ip, ip
 80149cc:	fa1f f888 	uxth.w	r8, r8
 80149d0:	f103 0b01 	add.w	fp, r3, #1
 80149d4:	f10c 0201 	add.w	r2, ip, #1
 80149d8:	f108 0e01 	add.w	lr, r8, #1
 80149dc:	eb0b 2613 	add.w	r6, fp, r3, lsr #8
 80149e0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80149e4:	eb0e 2818 	add.w	r8, lr, r8, lsr #8
 80149e8:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80149ec:	f3c8 28c4 	ubfx	r8, r8, #11, #5
 80149f0:	0976      	lsrs	r6, r6, #5
 80149f2:	ea4c 0c08 	orr.w	ip, ip, r8
 80149f6:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80149fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80149fc:	ea4c 0606 	orr.w	r6, ip, r6
 8014a00:	801e      	strh	r6, [r3, #0]
 8014a02:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014a04:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014a06:	3302      	adds	r3, #2
 8014a08:	930d      	str	r3, [sp, #52]	; 0x34
 8014a0a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014a0c:	4413      	add	r3, r2
 8014a0e:	9329      	str	r3, [sp, #164]	; 0xa4
 8014a10:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014a12:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014a14:	4413      	add	r3, r2
 8014a16:	932a      	str	r3, [sp, #168]	; 0xa8
 8014a18:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014a1a:	3b01      	subs	r3, #1
 8014a1c:	9311      	str	r3, [sp, #68]	; 0x44
 8014a1e:	e72f      	b.n	8014880 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8014a20:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014a22:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014a24:	4413      	add	r3, r2
 8014a26:	9329      	str	r3, [sp, #164]	; 0xa4
 8014a28:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014a2a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014a2c:	4413      	add	r3, r2
 8014a2e:	932a      	str	r3, [sp, #168]	; 0xa8
 8014a30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a32:	3b01      	subs	r3, #1
 8014a34:	9309      	str	r3, [sp, #36]	; 0x24
 8014a36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014a38:	3302      	adds	r3, #2
 8014a3a:	930a      	str	r3, [sp, #40]	; 0x28
 8014a3c:	e6d4      	b.n	80147e8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8014a3e:	f47f aee6 	bne.w	801480e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8014a42:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014a44:	2b00      	cmp	r3, #0
 8014a46:	f340 812b 	ble.w	8014ca0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 8014a4a:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014a4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014a52:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014a56:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a58:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014a5c:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014a60:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014a64:	eef0 6a48 	vmov.f32	s13, s16
 8014a68:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014a6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014a70:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014a74:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8014a78:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014a7c:	eef0 6a68 	vmov.f32	s13, s17
 8014a80:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014a84:	ee18 2a10 	vmov	r2, s16
 8014a88:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014a8c:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a90:	ee18 2a90 	vmov	r2, s17
 8014a94:	932b      	str	r3, [sp, #172]	; 0xac
 8014a96:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014a98:	fb92 f3f3 	sdiv	r3, r2, r3
 8014a9c:	932c      	str	r3, [sp, #176]	; 0xb0
 8014a9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014aa0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8014aa2:	3b01      	subs	r3, #1
 8014aa4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014aa8:	930f      	str	r3, [sp, #60]	; 0x3c
 8014aaa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8014aac:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8014ab0:	bf08      	it	eq
 8014ab2:	4613      	moveq	r3, r2
 8014ab4:	9309      	str	r3, [sp, #36]	; 0x24
 8014ab6:	eef0 8a67 	vmov.f32	s17, s15
 8014aba:	eeb0 8a47 	vmov.f32	s16, s14
 8014abe:	e68c      	b.n	80147da <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8014ac0:	b151      	cbz	r1, 8014ad8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 8014ac2:	5d52      	ldrb	r2, [r2, r5]
 8014ac4:	9808      	ldr	r0, [sp, #32]
 8014ac6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014aca:	4402      	add	r2, r0
 8014acc:	4630      	mov	r0, r6
 8014ace:	46b6      	mov	lr, r6
 8014ad0:	e710      	b.n	80148f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8014ad2:	4630      	mov	r0, r6
 8014ad4:	4632      	mov	r2, r6
 8014ad6:	e70d      	b.n	80148f4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x184>
 8014ad8:	4630      	mov	r0, r6
 8014ada:	4632      	mov	r2, r6
 8014adc:	e7f7      	b.n	8014ace <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x35e>
 8014ade:	1c46      	adds	r6, r0, #1
 8014ae0:	d18f      	bne.n	8014a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014ae2:	4285      	cmp	r5, r0
 8014ae4:	dd8d      	ble.n	8014a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014ae6:	1c54      	adds	r4, r2, #1
 8014ae8:	db8b      	blt.n	8014a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014aea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014aec:	4294      	cmp	r4, r2
 8014aee:	dd88      	ble.n	8014a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014af0:	e9cd 2303 	strd	r2, r3, [sp, #12]
 8014af4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014af6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014af8:	9002      	str	r0, [sp, #8]
 8014afa:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8014afe:	e9cd 5300 	strd	r5, r3, [sp]
 8014b02:	e9dd 120d 	ldrd	r1, r2, [sp, #52]	; 0x34
 8014b06:	9b08      	ldr	r3, [sp, #32]
 8014b08:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014b0a:	f7ff fd47 	bl	801459c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8014b0e:	e778      	b.n	8014a02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x292>
 8014b10:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8014b12:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014b14:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014b16:	1410      	asrs	r0, r2, #16
 8014b18:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8014b1c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8014b1e:	1412      	asrs	r2, r2, #16
 8014b20:	fb05 2000 	mla	r0, r5, r0, r2
 8014b24:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8014b26:	f814 a000 	ldrb.w	sl, [r4, r0]
 8014b2a:	4402      	add	r2, r0
 8014b2c:	9808      	ldr	r0, [sp, #32]
 8014b2e:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8014b32:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014b36:	eb00 060a 	add.w	r6, r0, sl
 8014b3a:	2b00      	cmp	r3, #0
 8014b3c:	f000 80a1 	beq.w	8014c82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x512>
 8014b40:	f892 c001 	ldrb.w	ip, [r2, #1]
 8014b44:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8014b48:	4484      	add	ip, r0
 8014b4a:	2900      	cmp	r1, #0
 8014b4c:	f000 80a2 	beq.w	8014c94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 8014b50:	1950      	adds	r0, r2, r5
 8014b52:	5d52      	ldrb	r2, [r2, r5]
 8014b54:	7840      	ldrb	r0, [r0, #1]
 8014b56:	9c08      	ldr	r4, [sp, #32]
 8014b58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014b5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014b60:	4422      	add	r2, r4
 8014b62:	4420      	add	r0, r4
 8014b64:	b29b      	uxth	r3, r3
 8014b66:	b289      	uxth	r1, r1
 8014b68:	fb03 f901 	mul.w	r9, r3, r1
 8014b6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014b70:	011b      	lsls	r3, r3, #4
 8014b72:	b289      	uxth	r1, r1
 8014b74:	f89c 7002 	ldrb.w	r7, [ip, #2]
 8014b78:	f896 b002 	ldrb.w	fp, [r6, #2]
 8014b7c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014b7e:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 8014b82:	eba3 0309 	sub.w	r3, r3, r9
 8014b86:	b29b      	uxth	r3, r3
 8014b88:	eba8 0801 	sub.w	r8, r8, r1
 8014b8c:	fa1f f888 	uxth.w	r8, r8
 8014b90:	435f      	muls	r7, r3
 8014b92:	fb08 770b 	mla	r7, r8, fp, r7
 8014b96:	f892 b002 	ldrb.w	fp, [r2, #2]
 8014b9a:	f8b4 e000 	ldrh.w	lr, [r4]
 8014b9e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014ba0:	fb01 770b 	mla	r7, r1, fp, r7
 8014ba4:	f890 b002 	ldrb.w	fp, [r0, #2]
 8014ba8:	fb09 770b 	mla	r7, r9, fp, r7
 8014bac:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 8014bb0:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 8014bb4:	fb1b fb04 	smulbb	fp, fp, r4
 8014bb8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014bba:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8014bbe:	fb07 b704 	mla	r7, r7, r4, fp
 8014bc2:	f896 b001 	ldrb.w	fp, [r6, #1]
 8014bc6:	f89c 6001 	ldrb.w	r6, [ip, #1]
 8014bca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014bcc:	f89c c000 	ldrb.w	ip, [ip]
 8014bd0:	435e      	muls	r6, r3
 8014bd2:	fb08 660b 	mla	r6, r8, fp, r6
 8014bd6:	f892 b001 	ldrb.w	fp, [r2, #1]
 8014bda:	fb01 660b 	mla	r6, r1, fp, r6
 8014bde:	f890 b001 	ldrb.w	fp, [r0, #1]
 8014be2:	fb09 660b 	mla	r6, r9, fp, r6
 8014be6:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8014bea:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8014bee:	fb1b fb04 	smulbb	fp, fp, r4
 8014bf2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014bf4:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8014bf8:	fb06 b604 	mla	r6, r6, r4, fp
 8014bfc:	9c08      	ldr	r4, [sp, #32]
 8014bfe:	f814 a00a 	ldrb.w	sl, [r4, sl]
 8014c02:	fb03 f30c 	mul.w	r3, r3, ip
 8014c06:	f892 c000 	ldrb.w	ip, [r2]
 8014c0a:	fb08 330a 	mla	r3, r8, sl, r3
 8014c0e:	fb01 330c 	mla	r3, r1, ip, r3
 8014c12:	f890 c000 	ldrb.w	ip, [r0]
 8014c16:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8014c1a:	fb09 3c0c 	mla	ip, r9, ip, r3
 8014c1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c20:	fa5f fe8e 	uxtb.w	lr, lr
 8014c24:	fb1e fe03 	smulbb	lr, lr, r3
 8014c28:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8014c2a:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 8014c2e:	fb0c ec03 	mla	ip, ip, r3, lr
 8014c32:	b2bf      	uxth	r7, r7
 8014c34:	b2b6      	uxth	r6, r6
 8014c36:	fa1f fc8c 	uxth.w	ip, ip
 8014c3a:	1c7b      	adds	r3, r7, #1
 8014c3c:	f10c 0201 	add.w	r2, ip, #1
 8014c40:	f106 0b01 	add.w	fp, r6, #1
 8014c44:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 8014c48:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8014c4c:	eb0b 2616 	add.w	r6, fp, r6, lsr #8
 8014c50:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8014c54:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014c58:	0976      	lsrs	r6, r6, #5
 8014c5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c5c:	4317      	orrs	r7, r2
 8014c5e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8014c62:	4337      	orrs	r7, r6
 8014c64:	f823 7b02 	strh.w	r7, [r3], #2
 8014c68:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8014c6a:	930d      	str	r3, [sp, #52]	; 0x34
 8014c6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8014c6e:	4413      	add	r3, r2
 8014c70:	9329      	str	r3, [sp, #164]	; 0xa4
 8014c72:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8014c74:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8014c76:	4413      	add	r3, r2
 8014c78:	932a      	str	r3, [sp, #168]	; 0xa8
 8014c7a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8014c7c:	3b01      	subs	r3, #1
 8014c7e:	9311      	str	r3, [sp, #68]	; 0x44
 8014c80:	e5e1      	b.n	8014846 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8014c82:	b151      	cbz	r1, 8014c9a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x52a>
 8014c84:	5d52      	ldrb	r2, [r2, r5]
 8014c86:	9808      	ldr	r0, [sp, #32]
 8014c88:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014c8c:	4402      	add	r2, r0
 8014c8e:	4630      	mov	r0, r6
 8014c90:	46b4      	mov	ip, r6
 8014c92:	e767      	b.n	8014b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014c94:	4630      	mov	r0, r6
 8014c96:	4632      	mov	r2, r6
 8014c98:	e764      	b.n	8014b64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f4>
 8014c9a:	4630      	mov	r0, r6
 8014c9c:	4632      	mov	r2, r6
 8014c9e:	e7f7      	b.n	8014c90 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>
 8014ca0:	b017      	add	sp, #92	; 0x5c
 8014ca2:	ecbd 8b08 	vpop	{d8-d11}
 8014ca6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08014cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 8014cac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014cb0:	880e      	ldrh	r6, [r1, #0]
 8014cb2:	b085      	sub	sp, #20
 8014cb4:	0230      	lsls	r0, r6, #8
 8014cb6:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014cba:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 8014cbe:	0170      	lsls	r0, r6, #5
 8014cc0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8014cc4:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014cc8:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 8014ccc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8014cd0:	00f6      	lsls	r6, r6, #3
 8014cd2:	ea4b 0000 	orr.w	r0, fp, r0
 8014cd6:	b2f6      	uxtb	r6, r6
 8014cd8:	4691      	mov	r9, r2
 8014cda:	fb05 7a0c 	mla	sl, r5, ip, r7
 8014cde:	4306      	orrs	r6, r0
 8014ce0:	2d00      	cmp	r5, #0
 8014ce2:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 8014ce6:	9603      	str	r6, [sp, #12]
 8014ce8:	eb09 0e0a 	add.w	lr, r9, sl
 8014cec:	db42      	blt.n	8014d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014cee:	45a8      	cmp	r8, r5
 8014cf0:	dd40      	ble.n	8014d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc8>
 8014cf2:	2f00      	cmp	r7, #0
 8014cf4:	db3c      	blt.n	8014d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014cf6:	45bc      	cmp	ip, r7
 8014cf8:	dd3a      	ble.n	8014d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc4>
 8014cfa:	f819 600a 	ldrb.w	r6, [r9, sl]
 8014cfe:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014d02:	441e      	add	r6, r3
 8014d04:	1c78      	adds	r0, r7, #1
 8014d06:	d438      	bmi.n	8014d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014d08:	4584      	cmp	ip, r0
 8014d0a:	dd36      	ble.n	8014d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014d0c:	b3aa      	cbz	r2, 8014d7a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xce>
 8014d0e:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8014d12:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014d16:	4418      	add	r0, r3
 8014d18:	3501      	adds	r5, #1
 8014d1a:	d432      	bmi.n	8014d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014d1c:	45a8      	cmp	r8, r5
 8014d1e:	dd30      	ble.n	8014d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014d20:	b37c      	cbz	r4, 8014d82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd6>
 8014d22:	2f00      	cmp	r7, #0
 8014d24:	db2b      	blt.n	8014d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014d26:	45bc      	cmp	ip, r7
 8014d28:	dd29      	ble.n	8014d7e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd2>
 8014d2a:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8014d2e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8014d32:	441d      	add	r5, r3
 8014d34:	3701      	adds	r7, #1
 8014d36:	d427      	bmi.n	8014d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014d38:	45bc      	cmp	ip, r7
 8014d3a:	dd25      	ble.n	8014d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014d3c:	b322      	cbz	r2, 8014d88 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xdc>
 8014d3e:	44f4      	add	ip, lr
 8014d40:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8014d44:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 8014d48:	443b      	add	r3, r7
 8014d4a:	781f      	ldrb	r7, [r3, #0]
 8014d4c:	f896 a000 	ldrb.w	sl, [r6]
 8014d50:	f890 b000 	ldrb.w	fp, [r0]
 8014d54:	f895 9000 	ldrb.w	r9, [r5]
 8014d58:	9700      	str	r7, [sp, #0]
 8014d5a:	2a0f      	cmp	r2, #15
 8014d5c:	d801      	bhi.n	8014d62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb6>
 8014d5e:	2c0f      	cmp	r4, #15
 8014d60:	d914      	bls.n	8014d8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe0>
 8014d62:	4b2c      	ldr	r3, [pc, #176]	; (8014e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x168>)
 8014d64:	4a2c      	ldr	r2, [pc, #176]	; (8014e18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8014d66:	482d      	ldr	r0, [pc, #180]	; (8014e1c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8014d68:	f240 3173 	movw	r1, #883	; 0x373
 8014d6c:	f006 fcc0 	bl	801b6f0 <__assert_func>
 8014d70:	ae03      	add	r6, sp, #12
 8014d72:	e7c7      	b.n	8014d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x58>
 8014d74:	a803      	add	r0, sp, #12
 8014d76:	4606      	mov	r6, r0
 8014d78:	e7ce      	b.n	8014d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014d7a:	a803      	add	r0, sp, #12
 8014d7c:	e7cc      	b.n	8014d18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6c>
 8014d7e:	ad03      	add	r5, sp, #12
 8014d80:	e7d8      	b.n	8014d34 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x88>
 8014d82:	ab03      	add	r3, sp, #12
 8014d84:	461d      	mov	r5, r3
 8014d86:	e7e0      	b.n	8014d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014d88:	ab03      	add	r3, sp, #12
 8014d8a:	e7de      	b.n	8014d4a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x9e>
 8014d8c:	b292      	uxth	r2, r2
 8014d8e:	b2a4      	uxth	r4, r4
 8014d90:	fb02 f804 	mul.w	r8, r2, r4
 8014d94:	ebc8 1404 	rsb	r4, r8, r4, lsl #4
 8014d98:	0112      	lsls	r2, r2, #4
 8014d9a:	b2a4      	uxth	r4, r4
 8014d9c:	f890 e002 	ldrb.w	lr, [r0, #2]
 8014da0:	78b7      	ldrb	r7, [r6, #2]
 8014da2:	7840      	ldrb	r0, [r0, #1]
 8014da4:	7876      	ldrb	r6, [r6, #1]
 8014da6:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8014daa:	eba2 0208 	sub.w	r2, r2, r8
 8014dae:	b292      	uxth	r2, r2
 8014db0:	ebac 0c04 	sub.w	ip, ip, r4
 8014db4:	fa1f fc8c 	uxth.w	ip, ip
 8014db8:	fb02 fe0e 	mul.w	lr, r2, lr
 8014dbc:	fb0c ee07 	mla	lr, ip, r7, lr
 8014dc0:	78af      	ldrb	r7, [r5, #2]
 8014dc2:	fb04 ee07 	mla	lr, r4, r7, lr
 8014dc6:	789f      	ldrb	r7, [r3, #2]
 8014dc8:	785b      	ldrb	r3, [r3, #1]
 8014dca:	fb08 e707 	mla	r7, r8, r7, lr
 8014dce:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8014dd2:	fb02 fe0b 	mul.w	lr, r2, fp
 8014dd6:	4342      	muls	r2, r0
 8014dd8:	7868      	ldrb	r0, [r5, #1]
 8014dda:	9701      	str	r7, [sp, #4]
 8014ddc:	fb0c ee0a 	mla	lr, ip, sl, lr
 8014de0:	9f00      	ldr	r7, [sp, #0]
 8014de2:	fb0c 2206 	mla	r2, ip, r6, r2
 8014de6:	fb04 ee09 	mla	lr, r4, r9, lr
 8014dea:	fb04 2400 	mla	r4, r4, r0, r2
 8014dee:	fb08 ee07 	mla	lr, r8, r7, lr
 8014df2:	9f01      	ldr	r7, [sp, #4]
 8014df4:	fb08 4803 	mla	r8, r8, r3, r4
 8014df8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8014dfc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8014e00:	ea47 070e 	orr.w	r7, r7, lr
 8014e04:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8014e08:	ea47 0708 	orr.w	r7, r7, r8
 8014e0c:	800f      	strh	r7, [r1, #0]
 8014e0e:	b005      	add	sp, #20
 8014e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e14:	0801f387 	.word	0x0801f387
 8014e18:	0801f8e5 	.word	0x0801f8e5
 8014e1c:	0801f40f 	.word	0x0801f40f

08014e20 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8014e20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e24:	ed2d 8b0a 	vpush	{d8-d12}
 8014e28:	b091      	sub	sp, #68	; 0x44
 8014e2a:	eeb0 aa40 	vmov.f32	s20, s0
 8014e2e:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 8014e30:	9307      	str	r3, [sp, #28]
 8014e32:	f9bd 30b4 	ldrsh.w	r3, [sp, #180]	; 0xb4
 8014e36:	910c      	str	r1, [sp, #48]	; 0x30
 8014e38:	9309      	str	r3, [sp, #36]	; 0x24
 8014e3a:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8014e3e:	900f      	str	r0, [sp, #60]	; 0x3c
 8014e40:	6860      	ldr	r0, [r4, #4]
 8014e42:	920e      	str	r2, [sp, #56]	; 0x38
 8014e44:	fb00 1303 	mla	r3, r0, r3, r1
 8014e48:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8014e4a:	6821      	ldr	r1, [r4, #0]
 8014e4c:	6854      	ldr	r4, [r2, #4]
 8014e4e:	f8dd b098 	ldr.w	fp, [sp, #152]	; 0x98
 8014e52:	f9bd 50b0 	ldrsh.w	r5, [sp, #176]	; 0xb0
 8014e56:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8014e5a:	9308      	str	r3, [sp, #32]
 8014e5c:	6813      	ldr	r3, [r2, #0]
 8014e5e:	930a      	str	r3, [sp, #40]	; 0x28
 8014e60:	eef0 9a60 	vmov.f32	s19, s1
 8014e64:	eeb0 9a41 	vmov.f32	s18, s2
 8014e68:	eeb0 8a62 	vmov.f32	s16, s5
 8014e6c:	eef0 8a43 	vmov.f32	s17, s6
 8014e70:	eeb0 ca44 	vmov.f32	s24, s8
 8014e74:	eef0 ba64 	vmov.f32	s23, s9
 8014e78:	eeb0 ba45 	vmov.f32	s22, s10
 8014e7c:	3404      	adds	r4, #4
 8014e7e:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8014e82:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014e84:	2b00      	cmp	r3, #0
 8014e86:	dc03      	bgt.n	8014e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8014e88:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014e8a:	2b00      	cmp	r3, #0
 8014e8c:	f340 81cb 	ble.w	8015226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 8014e90:	9b07      	ldr	r3, [sp, #28]
 8014e92:	2b00      	cmp	r3, #0
 8014e94:	f340 80dd 	ble.w	8015052 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x232>
 8014e98:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8014e9a:	1412      	asrs	r2, r2, #16
 8014e9c:	ea4f 432b 	mov.w	r3, fp, asr #16
 8014ea0:	d42c      	bmi.n	8014efc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8014ea2:	1c51      	adds	r1, r2, #1
 8014ea4:	428d      	cmp	r5, r1
 8014ea6:	dd2c      	ble.n	8014f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014ea8:	2b00      	cmp	r3, #0
 8014eaa:	db2a      	blt.n	8014f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014eac:	9809      	ldr	r0, [sp, #36]	; 0x24
 8014eae:	1c59      	adds	r1, r3, #1
 8014eb0:	4288      	cmp	r0, r1
 8014eb2:	dd26      	ble.n	8014f02 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8014eb4:	9b07      	ldr	r3, [sp, #28]
 8014eb6:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8014eb8:	9925      	ldr	r1, [sp, #148]	; 0x94
 8014eba:	3b01      	subs	r3, #1
 8014ebc:	fb02 1203 	mla	r2, r2, r3, r1
 8014ec0:	1412      	asrs	r2, r2, #16
 8014ec2:	d428      	bmi.n	8014f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014ec4:	3201      	adds	r2, #1
 8014ec6:	4295      	cmp	r5, r2
 8014ec8:	dd25      	ble.n	8014f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014eca:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8014ecc:	fb02 b303 	mla	r3, r2, r3, fp
 8014ed0:	141b      	asrs	r3, r3, #16
 8014ed2:	d420      	bmi.n	8014f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014ed4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014ed6:	3301      	adds	r3, #1
 8014ed8:	429a      	cmp	r2, r3
 8014eda:	dd1c      	ble.n	8014f16 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf6>
 8014edc:	9b07      	ldr	r3, [sp, #28]
 8014ede:	930b      	str	r3, [sp, #44]	; 0x2c
 8014ee0:	9b08      	ldr	r3, [sp, #32]
 8014ee2:	930d      	str	r3, [sp, #52]	; 0x34
 8014ee4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014ee6:	2b00      	cmp	r3, #0
 8014ee8:	f300 8116 	bgt.w	8015118 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f8>
 8014eec:	9b07      	ldr	r3, [sp, #28]
 8014eee:	9a08      	ldr	r2, [sp, #32]
 8014ef0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014ef4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014ef8:	9308      	str	r3, [sp, #32]
 8014efa:	e0ac      	b.n	8015056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x236>
 8014efc:	1c51      	adds	r1, r2, #1
 8014efe:	f040 809b 	bne.w	8015038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014f02:	42aa      	cmp	r2, r5
 8014f04:	f280 8098 	bge.w	8015038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014f08:	1c5a      	adds	r2, r3, #1
 8014f0a:	f2c0 8095 	blt.w	8015038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014f0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014f10:	4293      	cmp	r3, r2
 8014f12:	f280 8091 	bge.w	8015038 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x218>
 8014f16:	9b07      	ldr	r3, [sp, #28]
 8014f18:	930d      	str	r3, [sp, #52]	; 0x34
 8014f1a:	9b08      	ldr	r3, [sp, #32]
 8014f1c:	930b      	str	r3, [sp, #44]	; 0x2c
 8014f1e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014f20:	2b00      	cmp	r3, #0
 8014f22:	dde3      	ble.n	8014eec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8014f24:	9825      	ldr	r0, [sp, #148]	; 0x94
 8014f26:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8014f28:	1400      	asrs	r0, r0, #16
 8014f2a:	ea4f 422b 	mov.w	r2, fp, asr #16
 8014f2e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8014f32:	f3cb 3103 	ubfx	r1, fp, #12, #4
 8014f36:	f100 80d9 	bmi.w	80150ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2cc>
 8014f3a:	1c46      	adds	r6, r0, #1
 8014f3c:	42b5      	cmp	r5, r6
 8014f3e:	f340 80d7 	ble.w	80150f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014f42:	2a00      	cmp	r2, #0
 8014f44:	f2c0 80d4 	blt.w	80150f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014f48:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8014f4a:	1c56      	adds	r6, r2, #1
 8014f4c:	42b7      	cmp	r7, r6
 8014f4e:	f340 80cf 	ble.w	80150f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2d0>
 8014f52:	fb02 0005 	mla	r0, r2, r5, r0
 8014f56:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8014f58:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8014f5a:	4402      	add	r2, r0
 8014f5c:	5c30      	ldrb	r0, [r6, r0]
 8014f5e:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8014f62:	eb04 0c08 	add.w	ip, r4, r8
 8014f66:	2b00      	cmp	r3, #0
 8014f68:	f000 80b2 	beq.w	80150d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 8014f6c:	7856      	ldrb	r6, [r2, #1]
 8014f6e:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8014f72:	4426      	add	r6, r4
 8014f74:	2900      	cmp	r1, #0
 8014f76:	f000 80b3 	beq.w	80150e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8014f7a:	1950      	adds	r0, r2, r5
 8014f7c:	5d52      	ldrb	r2, [r2, r5]
 8014f7e:	7840      	ldrb	r0, [r0, #1]
 8014f80:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8014f84:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8014f88:	4422      	add	r2, r4
 8014f8a:	4420      	add	r0, r4
 8014f8c:	b29b      	uxth	r3, r3
 8014f8e:	b289      	uxth	r1, r1
 8014f90:	fb03 f901 	mul.w	r9, r3, r1
 8014f94:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8014f98:	011b      	lsls	r3, r3, #4
 8014f9a:	b289      	uxth	r1, r1
 8014f9c:	78b7      	ldrb	r7, [r6, #2]
 8014f9e:	f89c a002 	ldrb.w	sl, [ip, #2]
 8014fa2:	f89c c001 	ldrb.w	ip, [ip, #1]
 8014fa6:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8014faa:	eba3 0309 	sub.w	r3, r3, r9
 8014fae:	b29b      	uxth	r3, r3
 8014fb0:	ebae 0e01 	sub.w	lr, lr, r1
 8014fb4:	fa1f fe8e 	uxth.w	lr, lr
 8014fb8:	435f      	muls	r7, r3
 8014fba:	fb0e 770a 	mla	r7, lr, sl, r7
 8014fbe:	f892 a002 	ldrb.w	sl, [r2, #2]
 8014fc2:	fb01 770a 	mla	r7, r1, sl, r7
 8014fc6:	f890 a002 	ldrb.w	sl, [r0, #2]
 8014fca:	fb09 7a0a 	mla	sl, r9, sl, r7
 8014fce:	f814 7008 	ldrb.w	r7, [r4, r8]
 8014fd2:	f896 8000 	ldrb.w	r8, [r6]
 8014fd6:	7876      	ldrb	r6, [r6, #1]
 8014fd8:	fb03 f808 	mul.w	r8, r3, r8
 8014fdc:	fb0e 8807 	mla	r8, lr, r7, r8
 8014fe0:	7817      	ldrb	r7, [r2, #0]
 8014fe2:	fb01 8807 	mla	r8, r1, r7, r8
 8014fe6:	7807      	ldrb	r7, [r0, #0]
 8014fe8:	fb09 8707 	mla	r7, r9, r7, r8
 8014fec:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8014ff0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8014ff4:	ea4a 0707 	orr.w	r7, sl, r7
 8014ff8:	4373      	muls	r3, r6
 8014ffa:	f892 a001 	ldrb.w	sl, [r2, #1]
 8014ffe:	fb0e 330c 	mla	r3, lr, ip, r3
 8015002:	fb01 310a 	mla	r1, r1, sl, r3
 8015006:	f890 a001 	ldrb.w	sl, [r0, #1]
 801500a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801500c:	fb09 1a0a 	mla	sl, r9, sl, r1
 8015010:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015014:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015018:	ea47 070a 	orr.w	r7, r7, sl
 801501c:	801f      	strh	r7, [r3, #0]
 801501e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015020:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8015022:	3302      	adds	r3, #2
 8015024:	930b      	str	r3, [sp, #44]	; 0x2c
 8015026:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015028:	4413      	add	r3, r2
 801502a:	9325      	str	r3, [sp, #148]	; 0x94
 801502c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801502e:	449b      	add	fp, r3
 8015030:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8015032:	3b01      	subs	r3, #1
 8015034:	930d      	str	r3, [sp, #52]	; 0x34
 8015036:	e772      	b.n	8014f1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8015038:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801503a:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801503c:	4413      	add	r3, r2
 801503e:	9325      	str	r3, [sp, #148]	; 0x94
 8015040:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015042:	449b      	add	fp, r3
 8015044:	9b07      	ldr	r3, [sp, #28]
 8015046:	3b01      	subs	r3, #1
 8015048:	9307      	str	r3, [sp, #28]
 801504a:	9b08      	ldr	r3, [sp, #32]
 801504c:	3302      	adds	r3, #2
 801504e:	9308      	str	r3, [sp, #32]
 8015050:	e71e      	b.n	8014e90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015052:	f47f af2f 	bne.w	8014eb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8015056:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015058:	2b00      	cmp	r3, #0
 801505a:	f340 80e4 	ble.w	8015226 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x406>
 801505e:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8015062:	ee79 9aab 	vadd.f32	s19, s19, s23
 8015066:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 801506a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801506c:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8015070:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8015074:	eef0 6a48 	vmov.f32	s13, s16
 8015078:	ee69 7a27 	vmul.f32	s15, s18, s15
 801507c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015080:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015084:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 8015088:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801508c:	eef0 6a68 	vmov.f32	s13, s17
 8015090:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015094:	ee18 2a10 	vmov	r2, s16
 8015098:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801509c:	fb92 f3f3 	sdiv	r3, r2, r3
 80150a0:	ee18 2a90 	vmov	r2, s17
 80150a4:	9327      	str	r3, [sp, #156]	; 0x9c
 80150a6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80150a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80150ac:	9328      	str	r3, [sp, #160]	; 0xa0
 80150ae:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80150b0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80150b2:	3b01      	subs	r3, #1
 80150b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80150b8:	930c      	str	r3, [sp, #48]	; 0x30
 80150ba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80150bc:	bf08      	it	eq
 80150be:	4613      	moveq	r3, r2
 80150c0:	ee16 ba90 	vmov	fp, s13
 80150c4:	9307      	str	r3, [sp, #28]
 80150c6:	eef0 8a67 	vmov.f32	s17, s15
 80150ca:	eeb0 8a47 	vmov.f32	s16, s14
 80150ce:	e6d8      	b.n	8014e82 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 80150d0:	b149      	cbz	r1, 80150e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c6>
 80150d2:	5d52      	ldrb	r2, [r2, r5]
 80150d4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80150d8:	4422      	add	r2, r4
 80150da:	4660      	mov	r0, ip
 80150dc:	4666      	mov	r6, ip
 80150de:	e755      	b.n	8014f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80150e0:	4660      	mov	r0, ip
 80150e2:	4662      	mov	r2, ip
 80150e4:	e752      	b.n	8014f8c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x16c>
 80150e6:	4660      	mov	r0, ip
 80150e8:	4662      	mov	r2, ip
 80150ea:	e7f7      	b.n	80150dc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 80150ec:	1c47      	adds	r7, r0, #1
 80150ee:	d196      	bne.n	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80150f0:	4285      	cmp	r5, r0
 80150f2:	dd94      	ble.n	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80150f4:	1c56      	adds	r6, r2, #1
 80150f6:	db92      	blt.n	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80150f8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80150fa:	4296      	cmp	r6, r2
 80150fc:	dd8f      	ble.n	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 80150fe:	e9cd 3104 	strd	r3, r1, [sp, #16]
 8015102:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8015106:	e9cd 5600 	strd	r5, r6, [sp]
 801510a:	4623      	mov	r3, r4
 801510c:	e9dd 210a 	ldrd	r2, r1, [sp, #40]	; 0x28
 8015110:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015112:	f7ff fdcb 	bl	8014cac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8015116:	e782      	b.n	801501e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fe>
 8015118:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801511a:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 801511c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801511e:	1412      	asrs	r2, r2, #16
 8015120:	ea4f 402b 	mov.w	r0, fp, asr #16
 8015124:	fb05 2000 	mla	r0, r5, r0, r2
 8015128:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801512a:	f816 8000 	ldrb.w	r8, [r6, r0]
 801512e:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8015132:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015136:	f3cb 3103 	ubfx	r1, fp, #12, #4
 801513a:	4402      	add	r2, r0
 801513c:	eb04 0c08 	add.w	ip, r4, r8
 8015140:	2b00      	cmp	r3, #0
 8015142:	d062      	beq.n	801520a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ea>
 8015144:	7856      	ldrb	r6, [r2, #1]
 8015146:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801514a:	4426      	add	r6, r4
 801514c:	2900      	cmp	r1, #0
 801514e:	d064      	beq.n	801521a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3fa>
 8015150:	1950      	adds	r0, r2, r5
 8015152:	5d52      	ldrb	r2, [r2, r5]
 8015154:	7840      	ldrb	r0, [r0, #1]
 8015156:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801515a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801515e:	4422      	add	r2, r4
 8015160:	4420      	add	r0, r4
 8015162:	b29b      	uxth	r3, r3
 8015164:	b289      	uxth	r1, r1
 8015166:	fb03 f901 	mul.w	r9, r3, r1
 801516a:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801516e:	011b      	lsls	r3, r3, #4
 8015170:	b289      	uxth	r1, r1
 8015172:	78b7      	ldrb	r7, [r6, #2]
 8015174:	f89c a002 	ldrb.w	sl, [ip, #2]
 8015178:	f89c c001 	ldrb.w	ip, [ip, #1]
 801517c:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8015180:	eba3 0309 	sub.w	r3, r3, r9
 8015184:	b29b      	uxth	r3, r3
 8015186:	ebae 0e01 	sub.w	lr, lr, r1
 801518a:	fa1f fe8e 	uxth.w	lr, lr
 801518e:	435f      	muls	r7, r3
 8015190:	fb0e 770a 	mla	r7, lr, sl, r7
 8015194:	f892 a002 	ldrb.w	sl, [r2, #2]
 8015198:	fb01 770a 	mla	r7, r1, sl, r7
 801519c:	f890 a002 	ldrb.w	sl, [r0, #2]
 80151a0:	fb09 7a0a 	mla	sl, r9, sl, r7
 80151a4:	f814 7008 	ldrb.w	r7, [r4, r8]
 80151a8:	f896 8000 	ldrb.w	r8, [r6]
 80151ac:	7876      	ldrb	r6, [r6, #1]
 80151ae:	fb03 f808 	mul.w	r8, r3, r8
 80151b2:	fb0e 8807 	mla	r8, lr, r7, r8
 80151b6:	7817      	ldrb	r7, [r2, #0]
 80151b8:	fb01 8807 	mla	r8, r1, r7, r8
 80151bc:	7807      	ldrb	r7, [r0, #0]
 80151be:	fb09 8707 	mla	r7, r9, r7, r8
 80151c2:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80151c6:	4373      	muls	r3, r6
 80151c8:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80151cc:	7856      	ldrb	r6, [r2, #1]
 80151ce:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 80151d0:	ea4a 0707 	orr.w	r7, sl, r7
 80151d4:	fb0e 330c 	mla	r3, lr, ip, r3
 80151d8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80151dc:	fb01 3306 	mla	r3, r1, r6, r3
 80151e0:	fb09 3a0a 	mla	sl, r9, sl, r3
 80151e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80151e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80151ea:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80151ee:	ea47 070a 	orr.w	r7, r7, sl
 80151f2:	f823 7b02 	strh.w	r7, [r3], #2
 80151f6:	930d      	str	r3, [sp, #52]	; 0x34
 80151f8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80151fa:	4413      	add	r3, r2
 80151fc:	9325      	str	r3, [sp, #148]	; 0x94
 80151fe:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015200:	449b      	add	fp, r3
 8015202:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8015204:	3b01      	subs	r3, #1
 8015206:	930b      	str	r3, [sp, #44]	; 0x2c
 8015208:	e66c      	b.n	8014ee4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 801520a:	b149      	cbz	r1, 8015220 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x400>
 801520c:	5d52      	ldrb	r2, [r2, r5]
 801520e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8015212:	4422      	add	r2, r4
 8015214:	4660      	mov	r0, ip
 8015216:	4666      	mov	r6, ip
 8015218:	e7a3      	b.n	8015162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 801521a:	4660      	mov	r0, ip
 801521c:	4662      	mov	r2, ip
 801521e:	e7a0      	b.n	8015162 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x342>
 8015220:	4660      	mov	r0, ip
 8015222:	4662      	mov	r2, ip
 8015224:	e7f7      	b.n	8015216 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f6>
 8015226:	b011      	add	sp, #68	; 0x44
 8015228:	ecbd 8b0a 	vpop	{d8-d12}
 801522c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8015230:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015234:	8808      	ldrh	r0, [r1, #0]
 8015236:	b085      	sub	sp, #20
 8015238:	1206      	asrs	r6, r0, #8
 801523a:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 801523e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015242:	9600      	str	r6, [sp, #0]
 8015244:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015248:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 801524c:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015250:	10c6      	asrs	r6, r0, #3
 8015252:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015256:	9601      	str	r6, [sp, #4]
 8015258:	00c0      	lsls	r0, r0, #3
 801525a:	fb04 560c 	mla	r6, r4, ip, r5
 801525e:	b2c0      	uxtb	r0, r0
 8015260:	4692      	mov	sl, r2
 8015262:	eb02 0e06 	add.w	lr, r2, r6
 8015266:	9a00      	ldr	r2, [sp, #0]
 8015268:	9002      	str	r0, [sp, #8]
 801526a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801526e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015272:	9a01      	ldr	r2, [sp, #4]
 8015274:	2c00      	cmp	r4, #0
 8015276:	4698      	mov	r8, r3
 8015278:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 801527c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015280:	db3e      	blt.n	8015300 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015282:	45a1      	cmp	r9, r4
 8015284:	dd3c      	ble.n	8015300 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8015286:	2d00      	cmp	r5, #0
 8015288:	db38      	blt.n	80152fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801528a:	45ac      	cmp	ip, r5
 801528c:	dd36      	ble.n	80152fc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 801528e:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8015292:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015296:	1c6e      	adds	r6, r5, #1
 8015298:	d435      	bmi.n	8015306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801529a:	45b4      	cmp	ip, r6
 801529c:	dd33      	ble.n	8015306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 801529e:	b393      	cbz	r3, 8015306 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd6>
 80152a0:	f89e 6001 	ldrb.w	r6, [lr, #1]
 80152a4:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 80152a8:	3401      	adds	r4, #1
 80152aa:	d430      	bmi.n	801530e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80152ac:	45a1      	cmp	r9, r4
 80152ae:	dd2e      	ble.n	801530e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80152b0:	b36f      	cbz	r7, 801530e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xde>
 80152b2:	2d00      	cmp	r5, #0
 80152b4:	db29      	blt.n	801530a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80152b6:	45ac      	cmp	ip, r5
 80152b8:	dd27      	ble.n	801530a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 80152ba:	f81e 400c 	ldrb.w	r4, [lr, ip]
 80152be:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 80152c2:	3501      	adds	r5, #1
 80152c4:	d407      	bmi.n	80152d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80152c6:	45ac      	cmp	ip, r5
 80152c8:	dd05      	ble.n	80152d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80152ca:	b123      	cbz	r3, 80152d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 80152cc:	44f4      	add	ip, lr
 80152ce:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80152d2:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 80152d6:	2b0f      	cmp	r3, #15
 80152d8:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 80152dc:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 80152e0:	ea4f 6914 	mov.w	r9, r4, lsr #24
 80152e4:	ea4f 6810 	mov.w	r8, r0, lsr #24
 80152e8:	d801      	bhi.n	80152ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 80152ea:	2f0f      	cmp	r7, #15
 80152ec:	d911      	bls.n	8015312 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe2>
 80152ee:	4b7f      	ldr	r3, [pc, #508]	; (80154ec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2bc>)
 80152f0:	4a7f      	ldr	r2, [pc, #508]	; (80154f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c0>)
 80152f2:	4880      	ldr	r0, [pc, #512]	; (80154f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 80152f4:	f240 3173 	movw	r1, #883	; 0x373
 80152f8:	f006 f9fa 	bl	801b6f0 <__assert_func>
 80152fc:	4602      	mov	r2, r0
 80152fe:	e7ca      	b.n	8015296 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x66>
 8015300:	4606      	mov	r6, r0
 8015302:	4602      	mov	r2, r0
 8015304:	e7d0      	b.n	80152a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 8015306:	4606      	mov	r6, r0
 8015308:	e7ce      	b.n	80152a8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x78>
 801530a:	4604      	mov	r4, r0
 801530c:	e7d9      	b.n	80152c2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x92>
 801530e:	4604      	mov	r4, r0
 8015310:	e7e1      	b.n	80152d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xa6>
 8015312:	b29b      	uxth	r3, r3
 8015314:	b2bf      	uxth	r7, r7
 8015316:	fb03 fe07 	mul.w	lr, r3, r7
 801531a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801531e:	011b      	lsls	r3, r3, #4
 8015320:	eba3 0c0e 	sub.w	ip, r3, lr
 8015324:	b2bf      	uxth	r7, r7
 8015326:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 801532a:	fa1f fc8c 	uxth.w	ip, ip
 801532e:	1bed      	subs	r5, r5, r7
 8015330:	b2ad      	uxth	r5, r5
 8015332:	fb0c f30a 	mul.w	r3, ip, sl
 8015336:	fb05 330b 	mla	r3, r5, fp, r3
 801533a:	fb07 3309 	mla	r3, r7, r9, r3
 801533e:	fb0e 3308 	mla	r3, lr, r8, r3
 8015342:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015346:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801534a:	9303      	str	r3, [sp, #12]
 801534c:	d018      	beq.n	8015380 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x150>
 801534e:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015352:	fb0b f303 	mul.w	r3, fp, r3
 8015356:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801535a:	fb0b fb02 	mul.w	fp, fp, r2
 801535e:	0a1a      	lsrs	r2, r3, #8
 8015360:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015364:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015368:	441a      	add	r2, r3
 801536a:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801536e:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015372:	0a12      	lsrs	r2, r2, #8
 8015374:	0a1b      	lsrs	r3, r3, #8
 8015376:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801537a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801537e:	431a      	orrs	r2, r3
 8015380:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015384:	d019      	beq.n	80153ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x18a>
 8015386:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 801538a:	fb0a fb0b 	mul.w	fp, sl, fp
 801538e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015392:	fb0a fa06 	mul.w	sl, sl, r6
 8015396:	ea4f 261b 	mov.w	r6, fp, lsr #8
 801539a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801539e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80153a2:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 80153a6:	445e      	add	r6, fp
 80153a8:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 80153ac:	0a36      	lsrs	r6, r6, #8
 80153ae:	0a1b      	lsrs	r3, r3, #8
 80153b0:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80153b4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80153b8:	431e      	orrs	r6, r3
 80153ba:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80153be:	d019      	beq.n	80153f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1c4>
 80153c0:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 80153c4:	fb09 fa0a 	mul.w	sl, r9, sl
 80153c8:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80153cc:	fb09 f904 	mul.w	r9, r9, r4
 80153d0:	ea4f 241a 	mov.w	r4, sl, lsr #8
 80153d4:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80153d8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80153dc:	f509 7380 	add.w	r3, r9, #256	; 0x100
 80153e0:	4454      	add	r4, sl
 80153e2:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 80153e6:	0a24      	lsrs	r4, r4, #8
 80153e8:	0a1b      	lsrs	r3, r3, #8
 80153ea:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 80153ee:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80153f2:	431c      	orrs	r4, r3
 80153f4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80153f8:	d019      	beq.n	801542e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1fe>
 80153fa:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 80153fe:	fb08 f909 	mul.w	r9, r8, r9
 8015402:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015406:	fb08 f800 	mul.w	r8, r8, r0
 801540a:	ea4f 2019 	mov.w	r0, r9, lsr #8
 801540e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015412:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015416:	f508 7380 	add.w	r3, r8, #256	; 0x100
 801541a:	4448      	add	r0, r9
 801541c:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015420:	0a00      	lsrs	r0, r0, #8
 8015422:	0a1b      	lsrs	r3, r3, #8
 8015424:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015428:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801542c:	4318      	orrs	r0, r3
 801542e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015432:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015436:	fb0c f808 	mul.w	r8, ip, r8
 801543a:	fb05 8803 	mla	r8, r5, r3, r8
 801543e:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015442:	fb07 8803 	mla	r8, r7, r3, r8
 8015446:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 801544a:	fb0e 8303 	mla	r3, lr, r3, r8
 801544e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015452:	fb0c f606 	mul.w	r6, ip, r6
 8015456:	0a1b      	lsrs	r3, r3, #8
 8015458:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801545c:	fb05 6202 	mla	r2, r5, r2, r6
 8015460:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015464:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015468:	fb07 2703 	mla	r7, r7, r3, r2
 801546c:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 8015470:	b295      	uxth	r5, r2
 8015472:	9a03      	ldr	r2, [sp, #12]
 8015474:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015478:	436a      	muls	r2, r5
 801547a:	fb0e 7303 	mla	r3, lr, r3, r7
 801547e:	1c50      	adds	r0, r2, #1
 8015480:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8015484:	0a1b      	lsrs	r3, r3, #8
 8015486:	9a00      	ldr	r2, [sp, #0]
 8015488:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801548c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015490:	ea48 0303 	orr.w	r3, r8, r3
 8015494:	b2c0      	uxtb	r0, r0
 8015496:	fb12 f200 	smulbb	r2, r2, r0
 801549a:	0c1e      	lsrs	r6, r3, #16
 801549c:	fb06 2605 	mla	r6, r6, r5, r2
 80154a0:	9a01      	ldr	r2, [sp, #4]
 80154a2:	f3c3 2407 	ubfx	r4, r3, #8, #8
 80154a6:	fb12 f200 	smulbb	r2, r2, r0
 80154aa:	fb04 2205 	mla	r2, r4, r5, r2
 80154ae:	b294      	uxth	r4, r2
 80154b0:	9a02      	ldr	r2, [sp, #8]
 80154b2:	b2db      	uxtb	r3, r3
 80154b4:	fb12 f200 	smulbb	r2, r2, r0
 80154b8:	fb03 2205 	mla	r2, r3, r5, r2
 80154bc:	b2b6      	uxth	r6, r6
 80154be:	b292      	uxth	r2, r2
 80154c0:	1c73      	adds	r3, r6, #1
 80154c2:	1c50      	adds	r0, r2, #1
 80154c4:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80154c8:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80154cc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80154d0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 80154d4:	4313      	orrs	r3, r2
 80154d6:	1c62      	adds	r2, r4, #1
 80154d8:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80154dc:	0952      	lsrs	r2, r2, #5
 80154de:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80154e2:	4313      	orrs	r3, r2
 80154e4:	800b      	strh	r3, [r1, #0]
 80154e6:	b005      	add	sp, #20
 80154e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80154ec:	0801f387 	.word	0x0801f387
 80154f0:	0801f8e5 	.word	0x0801f8e5
 80154f4:	0801f40f 	.word	0x0801f40f

080154f8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80154f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80154fc:	ed2d 8b08 	vpush	{d8-d11}
 8015500:	b09b      	sub	sp, #108	; 0x6c
 8015502:	eeb0 aa40 	vmov.f32	s20, s0
 8015506:	9309      	str	r3, [sp, #36]	; 0x24
 8015508:	f9bd 30d4 	ldrsh.w	r3, [sp, #212]	; 0xd4
 801550c:	9d31      	ldr	r5, [sp, #196]	; 0xc4
 801550e:	9311      	str	r3, [sp, #68]	; 0x44
 8015510:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 8015514:	9114      	str	r1, [sp, #80]	; 0x50
 8015516:	9317      	str	r3, [sp, #92]	; 0x5c
 8015518:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 801551c:	9019      	str	r0, [sp, #100]	; 0x64
 801551e:	6868      	ldr	r0, [r5, #4]
 8015520:	9218      	str	r2, [sp, #96]	; 0x60
 8015522:	fb00 1303 	mla	r3, r0, r3, r1
 8015526:	6829      	ldr	r1, [r5, #0]
 8015528:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 801552a:	f9bd 40d0 	ldrsh.w	r4, [sp, #208]	; 0xd0
 801552e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015532:	930c      	str	r3, [sp, #48]	; 0x30
 8015534:	6813      	ldr	r3, [r2, #0]
 8015536:	9313      	str	r3, [sp, #76]	; 0x4c
 8015538:	6853      	ldr	r3, [r2, #4]
 801553a:	3304      	adds	r3, #4
 801553c:	eef0 9a60 	vmov.f32	s19, s1
 8015540:	eeb0 9a41 	vmov.f32	s18, s2
 8015544:	eeb0 8a62 	vmov.f32	s16, s5
 8015548:	eef0 8a43 	vmov.f32	s17, s6
 801554c:	eef0 ba44 	vmov.f32	s23, s8
 8015550:	eeb0 ba64 	vmov.f32	s22, s9
 8015554:	eef0 aa45 	vmov.f32	s21, s10
 8015558:	9308      	str	r3, [sp, #32]
 801555a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801555c:	2b00      	cmp	r3, #0
 801555e:	dc03      	bgt.n	8015568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 8015560:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8015562:	2b00      	cmp	r3, #0
 8015564:	f340 8363 	ble.w	8015c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 8015568:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801556a:	2b00      	cmp	r3, #0
 801556c:	f340 81ad 	ble.w	80158ca <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d2>
 8015570:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8015572:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015574:	1412      	asrs	r2, r2, #16
 8015576:	ea4f 4323 	mov.w	r3, r3, asr #16
 801557a:	d42f      	bmi.n	80155dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801557c:	1c51      	adds	r1, r2, #1
 801557e:	428c      	cmp	r4, r1
 8015580:	dd2f      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015582:	2b00      	cmp	r3, #0
 8015584:	db2d      	blt.n	80155e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 8015586:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015588:	1c59      	adds	r1, r3, #1
 801558a:	4288      	cmp	r0, r1
 801558c:	dd29      	ble.n	80155e2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801558e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015590:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015592:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8015594:	3b01      	subs	r3, #1
 8015596:	fb02 1203 	mla	r2, r2, r3, r1
 801559a:	1412      	asrs	r2, r2, #16
 801559c:	d42b      	bmi.n	80155f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 801559e:	3201      	adds	r2, #1
 80155a0:	4294      	cmp	r4, r2
 80155a2:	dd28      	ble.n	80155f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80155a4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80155a6:	992e      	ldr	r1, [sp, #184]	; 0xb8
 80155a8:	fb02 1303 	mla	r3, r2, r3, r1
 80155ac:	141b      	asrs	r3, r3, #16
 80155ae:	d422      	bmi.n	80155f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80155b0:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155b2:	3301      	adds	r3, #1
 80155b4:	429a      	cmp	r2, r3
 80155b6:	dd1e      	ble.n	80155f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 80155b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155ba:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80155be:	f8bd b05c 	ldrh.w	fp, [sp, #92]	; 0x5c
 80155c2:	9312      	str	r3, [sp, #72]	; 0x48
 80155c4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80155c6:	2b00      	cmp	r3, #0
 80155c8:	f300 81ea 	bgt.w	80159a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a8>
 80155cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155ce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80155d0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155d4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80155d8:	930c      	str	r3, [sp, #48]	; 0x30
 80155da:	e178      	b.n	80158ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d6>
 80155dc:	1c51      	adds	r1, r2, #1
 80155de:	f040 8165 	bne.w	80158ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80155e2:	42a2      	cmp	r2, r4
 80155e4:	f280 8162 	bge.w	80158ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80155e8:	1c5f      	adds	r7, r3, #1
 80155ea:	f2c0 815f 	blt.w	80158ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80155ee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80155f0:	4293      	cmp	r3, r2
 80155f2:	f280 815b 	bge.w	80158ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 80155f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155f8:	9316      	str	r3, [sp, #88]	; 0x58
 80155fa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80155fc:	9312      	str	r3, [sp, #72]	; 0x48
 80155fe:	f8bd 305c 	ldrh.w	r3, [sp, #92]	; 0x5c
 8015602:	9315      	str	r3, [sp, #84]	; 0x54
 8015604:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8015606:	2b00      	cmp	r3, #0
 8015608:	dde0      	ble.n	80155cc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801560a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801560c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801560e:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015612:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8015614:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015618:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801561a:	1412      	asrs	r2, r2, #16
 801561c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015620:	f100 81a5 	bmi.w	801596e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x476>
 8015624:	1c55      	adds	r5, r2, #1
 8015626:	42ac      	cmp	r4, r5
 8015628:	f340 81a3 	ble.w	8015972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801562c:	2b00      	cmp	r3, #0
 801562e:	f2c0 81a0 	blt.w	8015972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 8015632:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8015634:	1c5d      	adds	r5, r3, #1
 8015636:	42af      	cmp	r7, r5
 8015638:	f340 819b 	ble.w	8015972 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47a>
 801563c:	fb03 2304 	mla	r3, r3, r4, r2
 8015640:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015642:	18d5      	adds	r5, r2, r3
 8015644:	5cd3      	ldrb	r3, [r2, r3]
 8015646:	9a08      	ldr	r2, [sp, #32]
 8015648:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801564c:	0e1f      	lsrs	r7, r3, #24
 801564e:	2800      	cmp	r0, #0
 8015650:	f000 817c 	beq.w	801594c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x454>
 8015654:	786a      	ldrb	r2, [r5, #1]
 8015656:	9e08      	ldr	r6, [sp, #32]
 8015658:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 801565c:	920d      	str	r2, [sp, #52]	; 0x34
 801565e:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8015662:	2900      	cmp	r1, #0
 8015664:	f000 817d 	beq.w	8015962 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46a>
 8015668:	192a      	adds	r2, r5, r4
 801566a:	5d2d      	ldrb	r5, [r5, r4]
 801566c:	7852      	ldrb	r2, [r2, #1]
 801566e:	f856 5025 	ldr.w	r5, [r6, r5, lsl #2]
 8015672:	f856 2022 	ldr.w	r2, [r6, r2, lsl #2]
 8015676:	950a      	str	r5, [sp, #40]	; 0x28
 8015678:	ea4f 6915 	mov.w	r9, r5, lsr #24
 801567c:	920e      	str	r2, [sp, #56]	; 0x38
 801567e:	0e15      	lsrs	r5, r2, #24
 8015680:	b280      	uxth	r0, r0
 8015682:	b289      	uxth	r1, r1
 8015684:	fb00 fa01 	mul.w	sl, r0, r1
 8015688:	ebca 1101 	rsb	r1, sl, r1, lsl #4
 801568c:	0100      	lsls	r0, r0, #4
 801568e:	eba0 080a 	sub.w	r8, r0, sl
 8015692:	b289      	uxth	r1, r1
 8015694:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8015698:	fa1f f888 	uxth.w	r8, r8
 801569c:	1a52      	subs	r2, r2, r1
 801569e:	b292      	uxth	r2, r2
 80156a0:	fb08 f00e 	mul.w	r0, r8, lr
 80156a4:	fb02 0007 	mla	r0, r2, r7, r0
 80156a8:	fb01 0009 	mla	r0, r1, r9, r0
 80156ac:	fb0a 0005 	mla	r0, sl, r5, r0
 80156b0:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80156b4:	2800      	cmp	r0, #0
 80156b6:	f000 80ea 	beq.w	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80156ba:	2fff      	cmp	r7, #255	; 0xff
 80156bc:	d01a      	beq.n	80156f4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1fc>
 80156be:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80156c2:	fb07 fc0c 	mul.w	ip, r7, ip
 80156c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80156ca:	435f      	muls	r7, r3
 80156cc:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80156d0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80156d4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80156d8:	f507 7b80 	add.w	fp, r7, #256	; 0x100
 80156dc:	4463      	add	r3, ip
 80156de:	eb0b 2b17 	add.w	fp, fp, r7, lsr #8
 80156e2:	0a1b      	lsrs	r3, r3, #8
 80156e4:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80156e8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80156ec:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 80156f0:	ea43 030b 	orr.w	r3, r3, fp
 80156f4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80156f8:	d01e      	beq.n	8015738 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x240>
 80156fa:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80156fc:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015700:	fb0e fb0b 	mul.w	fp, lr, fp
 8015704:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 8015708:	fb0e fe07 	mul.w	lr, lr, r7
 801570c:	ea4f 2c1b 	mov.w	ip, fp, lsr #8
 8015710:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015714:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015718:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801571c:	44dc      	add	ip, fp
 801571e:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8015722:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015726:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801572a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801572e:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8015732:	ea4c 060e 	orr.w	r6, ip, lr
 8015736:	960d      	str	r6, [sp, #52]	; 0x34
 8015738:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801573c:	d01e      	beq.n	801577c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x284>
 801573e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8015740:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015744:	fb09 fe0e 	mul.w	lr, r9, lr
 8015748:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801574c:	fb09 f907 	mul.w	r9, r9, r7
 8015750:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015754:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015758:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801575c:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8015760:	44f4      	add	ip, lr
 8015762:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 8015766:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801576a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801576e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015772:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8015776:	ea4c 0609 	orr.w	r6, ip, r9
 801577a:	960a      	str	r6, [sp, #40]	; 0x28
 801577c:	2dff      	cmp	r5, #255	; 0xff
 801577e:	d01c      	beq.n	80157ba <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c2>
 8015780:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8015782:	f006 1eff 	and.w	lr, r6, #16711935	; 0xff00ff
 8015786:	fb05 fe0e 	mul.w	lr, r5, lr
 801578a:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 801578e:	437d      	muls	r5, r7
 8015790:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8015794:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8015798:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801579c:	f505 7780 	add.w	r7, r5, #256	; 0x100
 80157a0:	44f4      	add	ip, lr
 80157a2:	eb07 2515 	add.w	r5, r7, r5, lsr #8
 80157a6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80157aa:	0a2d      	lsrs	r5, r5, #8
 80157ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80157b0:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 80157b4:	ea4c 0505 	orr.w	r5, ip, r5
 80157b8:	950e      	str	r5, [sp, #56]	; 0x38
 80157ba:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80157bc:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80157be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 80157c2:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 80157c6:	fb08 f505 	mul.w	r5, r8, r5
 80157ca:	fb02 5507 	mla	r5, r2, r7, r5
 80157ce:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80157d2:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80157d4:	fb01 5507 	mla	r5, r1, r7, r5
 80157d8:	f006 17ff 	and.w	r7, r6, #16711935	; 0xff00ff
 80157dc:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 80157de:	fb0a 5507 	mla	r5, sl, r7, r5
 80157e2:	f406 477f 	and.w	r7, r6, #65280	; 0xff00
 80157e6:	fb08 f807 	mul.w	r8, r8, r7
 80157ea:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80157ee:	fb02 8303 	mla	r3, r2, r3, r8
 80157f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80157f4:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80157f6:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80157fa:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80157fc:	fb01 330c 	mla	r3, r1, ip, r3
 8015800:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8015804:	fb0a 3a01 	mla	sl, sl, r1, r3
 8015808:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801580a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801580c:	881f      	ldrh	r7, [r3, #0]
 801580e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8015810:	0a2d      	lsrs	r5, r5, #8
 8015812:	4343      	muls	r3, r0
 8015814:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015818:	1c58      	adds	r0, r3, #1
 801581a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801581e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8015822:	ea45 050a 	orr.w	r5, r5, sl
 8015826:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801582a:	0c29      	lsrs	r1, r5, #16
 801582c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8015830:	123b      	asrs	r3, r7, #8
 8015832:	b2c0      	uxtb	r0, r0
 8015834:	fb11 f102 	smulbb	r1, r1, r2
 8015838:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801583c:	fb03 1300 	mla	r3, r3, r0, r1
 8015840:	b299      	uxth	r1, r3
 8015842:	10fa      	asrs	r2, r7, #3
 8015844:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8015848:	fb13 f306 	smulbb	r3, r3, r6
 801584c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8015850:	fb02 3200 	mla	r2, r2, r0, r3
 8015854:	b2ed      	uxtb	r5, r5
 8015856:	00fb      	lsls	r3, r7, #3
 8015858:	b2db      	uxtb	r3, r3
 801585a:	fb15 f506 	smulbb	r5, r5, r6
 801585e:	fb03 5500 	mla	r5, r3, r0, r5
 8015862:	b292      	uxth	r2, r2
 8015864:	b2ad      	uxth	r5, r5
 8015866:	1c4b      	adds	r3, r1, #1
 8015868:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801586c:	1c68      	adds	r0, r5, #1
 801586e:	1c51      	adds	r1, r2, #1
 8015870:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8015874:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015878:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801587c:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8015880:	0952      	lsrs	r2, r2, #5
 8015882:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015886:	432b      	orrs	r3, r5
 8015888:	4313      	orrs	r3, r2
 801588a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801588c:	8013      	strh	r3, [r2, #0]
 801588e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015890:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015892:	3302      	adds	r3, #2
 8015894:	9312      	str	r3, [sp, #72]	; 0x48
 8015896:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015898:	4413      	add	r3, r2
 801589a:	932d      	str	r3, [sp, #180]	; 0xb4
 801589c:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 801589e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80158a0:	4413      	add	r3, r2
 80158a2:	932e      	str	r3, [sp, #184]	; 0xb8
 80158a4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80158a6:	3b01      	subs	r3, #1
 80158a8:	9316      	str	r3, [sp, #88]	; 0x58
 80158aa:	e6ab      	b.n	8015604 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10c>
 80158ac:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80158ae:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80158b0:	4413      	add	r3, r2
 80158b2:	932d      	str	r3, [sp, #180]	; 0xb4
 80158b4:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80158b6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80158b8:	4413      	add	r3, r2
 80158ba:	932e      	str	r3, [sp, #184]	; 0xb8
 80158bc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80158be:	3b01      	subs	r3, #1
 80158c0:	9309      	str	r3, [sp, #36]	; 0x24
 80158c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80158c4:	3302      	adds	r3, #2
 80158c6:	930c      	str	r3, [sp, #48]	; 0x30
 80158c8:	e64e      	b.n	8015568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 80158ca:	f47f ae60 	bne.w	801558e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x96>
 80158ce:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80158d0:	2b00      	cmp	r3, #0
 80158d2:	f340 81ac 	ble.w	8015c2e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x736>
 80158d6:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80158da:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80158de:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80158e2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80158e4:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80158e8:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80158ec:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80158f0:	eef0 6a48 	vmov.f32	s13, s16
 80158f4:	ee69 7a27 	vmul.f32	s15, s18, s15
 80158f8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80158fc:	ee37 8a48 	vsub.f32	s16, s14, s16
 8015900:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8015904:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015908:	eef0 6a68 	vmov.f32	s13, s17
 801590c:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8015910:	ee18 2a10 	vmov	r2, s16
 8015914:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015918:	fb92 f3f3 	sdiv	r3, r2, r3
 801591c:	ee18 2a90 	vmov	r2, s17
 8015920:	932f      	str	r3, [sp, #188]	; 0xbc
 8015922:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015924:	fb92 f3f3 	sdiv	r3, r2, r3
 8015928:	9330      	str	r3, [sp, #192]	; 0xc0
 801592a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801592c:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801592e:	3b01      	subs	r3, #1
 8015930:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015934:	9314      	str	r3, [sp, #80]	; 0x50
 8015936:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015938:	edcd 6a2e 	vstr	s13, [sp, #184]	; 0xb8
 801593c:	bf08      	it	eq
 801593e:	4613      	moveq	r3, r2
 8015940:	9309      	str	r3, [sp, #36]	; 0x24
 8015942:	eef0 8a67 	vmov.f32	s17, s15
 8015946:	eeb0 8a47 	vmov.f32	s16, s14
 801594a:	e606      	b.n	801555a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801594c:	b161      	cbz	r1, 8015968 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 801594e:	5d2a      	ldrb	r2, [r5, r4]
 8015950:	9d08      	ldr	r5, [sp, #32]
 8015952:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015956:	920a      	str	r2, [sp, #40]	; 0x28
 8015958:	ea4f 6912 	mov.w	r9, r2, lsr #24
 801595c:	25ff      	movs	r5, #255	; 0xff
 801595e:	46ae      	mov	lr, r5
 8015960:	e68e      	b.n	8015680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015962:	25ff      	movs	r5, #255	; 0xff
 8015964:	46a9      	mov	r9, r5
 8015966:	e68b      	b.n	8015680 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x188>
 8015968:	25ff      	movs	r5, #255	; 0xff
 801596a:	46a9      	mov	r9, r5
 801596c:	e7f7      	b.n	801595e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801596e:	1c56      	adds	r6, r2, #1
 8015970:	d18d      	bne.n	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015972:	4294      	cmp	r4, r2
 8015974:	dd8b      	ble.n	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015976:	1c5d      	adds	r5, r3, #1
 8015978:	db89      	blt.n	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 801597a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801597c:	429d      	cmp	r5, r3
 801597e:	dd86      	ble.n	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 8015980:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8015984:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8015986:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015988:	9202      	str	r2, [sp, #8]
 801598a:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801598e:	e9cd 4300 	strd	r4, r3, [sp]
 8015992:	e9dd 1212 	ldrd	r1, r2, [sp, #72]	; 0x48
 8015996:	9b08      	ldr	r3, [sp, #32]
 8015998:	9819      	ldr	r0, [sp, #100]	; 0x64
 801599a:	f7ff fc49 	bl	8015230 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801599e:	e776      	b.n	801588e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x396>
 80159a0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80159a2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80159a4:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80159a8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80159aa:	1412      	asrs	r2, r2, #16
 80159ac:	f3c3 3003 	ubfx	r0, r3, #12, #4
 80159b0:	141b      	asrs	r3, r3, #16
 80159b2:	fb04 2303 	mla	r3, r4, r3, r2
 80159b6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80159b8:	18d5      	adds	r5, r2, r3
 80159ba:	5cd3      	ldrb	r3, [r2, r3]
 80159bc:	9a08      	ldr	r2, [sp, #32]
 80159be:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80159c2:	0e1e      	lsrs	r6, r3, #24
 80159c4:	2900      	cmp	r1, #0
 80159c6:	f000 8121 	beq.w	8015c0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80159ca:	786a      	ldrb	r2, [r5, #1]
 80159cc:	9f08      	ldr	r7, [sp, #32]
 80159ce:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80159d2:	920f      	str	r2, [sp, #60]	; 0x3c
 80159d4:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 80159d8:	2800      	cmp	r0, #0
 80159da:	f000 8122 	beq.w	8015c22 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72a>
 80159de:	192a      	adds	r2, r5, r4
 80159e0:	5d2d      	ldrb	r5, [r5, r4]
 80159e2:	7852      	ldrb	r2, [r2, #1]
 80159e4:	f857 5025 	ldr.w	r5, [r7, r5, lsl #2]
 80159e8:	f857 2022 	ldr.w	r2, [r7, r2, lsl #2]
 80159ec:	950b      	str	r5, [sp, #44]	; 0x2c
 80159ee:	ea4f 6815 	mov.w	r8, r5, lsr #24
 80159f2:	9210      	str	r2, [sp, #64]	; 0x40
 80159f4:	0e15      	lsrs	r5, r2, #24
 80159f6:	b289      	uxth	r1, r1
 80159f8:	b280      	uxth	r0, r0
 80159fa:	fb01 f900 	mul.w	r9, r1, r0
 80159fe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8015a02:	0109      	lsls	r1, r1, #4
 8015a04:	eba1 0e09 	sub.w	lr, r1, r9
 8015a08:	b280      	uxth	r0, r0
 8015a0a:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8015a0e:	fa1f fe8e 	uxth.w	lr, lr
 8015a12:	1a12      	subs	r2, r2, r0
 8015a14:	b292      	uxth	r2, r2
 8015a16:	fb0e f10c 	mul.w	r1, lr, ip
 8015a1a:	fb02 1106 	mla	r1, r2, r6, r1
 8015a1e:	fb00 1108 	mla	r1, r0, r8, r1
 8015a22:	fb09 1105 	mla	r1, r9, r5, r1
 8015a26:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8015a2a:	2900      	cmp	r1, #0
 8015a2c:	f000 80e0 	beq.w	8015bf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f8>
 8015a30:	2eff      	cmp	r6, #255	; 0xff
 8015a32:	d016      	beq.n	8015a62 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x56a>
 8015a34:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8015a38:	4377      	muls	r7, r6
 8015a3a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015a3e:	435e      	muls	r6, r3
 8015a40:	0a3b      	lsrs	r3, r7, #8
 8015a42:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015a46:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8015a4a:	443b      	add	r3, r7
 8015a4c:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8015a50:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8015a54:	0a1b      	lsrs	r3, r3, #8
 8015a56:	0a3f      	lsrs	r7, r7, #8
 8015a58:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8015a5c:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015a60:	433b      	orrs	r3, r7
 8015a62:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a66:	d01d      	beq.n	8015aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ac>
 8015a68:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015a6a:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8015a6c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015a70:	fb0c f606 	mul.w	r6, ip, r6
 8015a74:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8015a78:	fb0c fc07 	mul.w	ip, ip, r7
 8015a7c:	0a37      	lsrs	r7, r6, #8
 8015a7e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015a82:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8015a86:	4437      	add	r7, r6
 8015a88:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8015a8c:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8015a90:	0a3f      	lsrs	r7, r7, #8
 8015a92:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015a96:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015a9a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015a9e:	ea47 060c 	orr.w	r6, r7, ip
 8015aa2:	960f      	str	r6, [sp, #60]	; 0x3c
 8015aa4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015aa8:	d01d      	beq.n	8015ae6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ee>
 8015aaa:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015aac:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015ab0:	fb08 fc0c 	mul.w	ip, r8, ip
 8015ab4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015ab8:	fb08 f806 	mul.w	r8, r8, r6
 8015abc:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015ac0:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8015ac4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015ac8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015acc:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8015ad0:	4467      	add	r7, ip
 8015ad2:	0a3f      	lsrs	r7, r7, #8
 8015ad4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8015ad8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015adc:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8015ae0:	ea47 0608 	orr.w	r6, r7, r8
 8015ae4:	960b      	str	r6, [sp, #44]	; 0x2c
 8015ae6:	2dff      	cmp	r5, #255	; 0xff
 8015ae8:	d01a      	beq.n	8015b20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x628>
 8015aea:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015aec:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8015af0:	fb05 fc0c 	mul.w	ip, r5, ip
 8015af4:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015af8:	4375      	muls	r5, r6
 8015afa:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8015afe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015b02:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8015b06:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8015b0a:	4467      	add	r7, ip
 8015b0c:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8015b10:	0a3f      	lsrs	r7, r7, #8
 8015b12:	0a2d      	lsrs	r5, r5, #8
 8015b14:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8015b18:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8015b1c:	433d      	orrs	r5, r7
 8015b1e:	9510      	str	r5, [sp, #64]	; 0x40
 8015b20:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8015b22:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015b26:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8015b2a:	fb0e f505 	mul.w	r5, lr, r5
 8015b2e:	fb02 5506 	mla	r5, r2, r6, r5
 8015b32:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8015b34:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015b38:	fb00 5506 	mla	r5, r0, r6, r5
 8015b3c:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8015b3e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015b42:	fb09 5506 	mla	r5, r9, r6, r5
 8015b46:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8015b48:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015b4c:	fb0e fe06 	mul.w	lr, lr, r6
 8015b50:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015b54:	fb02 e303 	mla	r3, r2, r3, lr
 8015b58:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8015b5a:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8015b5e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b60:	fb00 3307 	mla	r3, r0, r7, r3
 8015b64:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8015b68:	fb09 3c0c 	mla	ip, r9, ip, r3
 8015b6c:	fb01 f10b 	mul.w	r1, r1, fp
 8015b70:	0a2d      	lsrs	r5, r5, #8
 8015b72:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015b76:	f8ba 0000 	ldrh.w	r0, [sl]
 8015b7a:	1c4b      	adds	r3, r1, #1
 8015b7c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8015b80:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8015b84:	ea45 050c 	orr.w	r5, r5, ip
 8015b88:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8015b8c:	1202      	asrs	r2, r0, #8
 8015b8e:	0c2b      	lsrs	r3, r5, #16
 8015b90:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8015b94:	b2c9      	uxtb	r1, r1
 8015b96:	fb13 f30b 	smulbb	r3, r3, fp
 8015b9a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015b9e:	fb02 3201 	mla	r2, r2, r1, r3
 8015ba2:	f3c5 2607 	ubfx	r6, r5, #8, #8
 8015ba6:	10c3      	asrs	r3, r0, #3
 8015ba8:	b2ed      	uxtb	r5, r5
 8015baa:	00c0      	lsls	r0, r0, #3
 8015bac:	b2c0      	uxtb	r0, r0
 8015bae:	fb15 f50b 	smulbb	r5, r5, fp
 8015bb2:	fb00 5001 	mla	r0, r0, r1, r5
 8015bb6:	b292      	uxth	r2, r2
 8015bb8:	fb16 f60b 	smulbb	r6, r6, fp
 8015bbc:	b280      	uxth	r0, r0
 8015bbe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015bc2:	fb03 6301 	mla	r3, r3, r1, r6
 8015bc6:	1c51      	adds	r1, r2, #1
 8015bc8:	1c46      	adds	r6, r0, #1
 8015bca:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8015bce:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8015bd2:	b29b      	uxth	r3, r3
 8015bd4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8015bd8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015bdc:	4332      	orrs	r2, r6
 8015bde:	1c5e      	adds	r6, r3, #1
 8015be0:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 8015be4:	095b      	lsrs	r3, r3, #5
 8015be6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015bea:	431a      	orrs	r2, r3
 8015bec:	f8aa 2000 	strh.w	r2, [sl]
 8015bf0:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8015bf2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8015bf4:	4413      	add	r3, r2
 8015bf6:	932d      	str	r3, [sp, #180]	; 0xb4
 8015bf8:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 8015bfa:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8015bfc:	4413      	add	r3, r2
 8015bfe:	932e      	str	r3, [sp, #184]	; 0xb8
 8015c00:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015c02:	3b01      	subs	r3, #1
 8015c04:	f10a 0a02 	add.w	sl, sl, #2
 8015c08:	9312      	str	r3, [sp, #72]	; 0x48
 8015c0a:	e4db      	b.n	80155c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8015c0c:	b160      	cbz	r0, 8015c28 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8015c0e:	5d2a      	ldrb	r2, [r5, r4]
 8015c10:	9d08      	ldr	r5, [sp, #32]
 8015c12:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8015c16:	920b      	str	r2, [sp, #44]	; 0x2c
 8015c18:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8015c1c:	25ff      	movs	r5, #255	; 0xff
 8015c1e:	46ac      	mov	ip, r5
 8015c20:	e6e9      	b.n	80159f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015c22:	25ff      	movs	r5, #255	; 0xff
 8015c24:	46a8      	mov	r8, r5
 8015c26:	e6e6      	b.n	80159f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fe>
 8015c28:	25ff      	movs	r5, #255	; 0xff
 8015c2a:	46a8      	mov	r8, r5
 8015c2c:	e7f7      	b.n	8015c1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x726>
 8015c2e:	b01b      	add	sp, #108	; 0x6c
 8015c30:	ecbd 8b08 	vpop	{d8-d11}
 8015c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8015c38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015c3c:	8808      	ldrh	r0, [r1, #0]
 8015c3e:	b085      	sub	sp, #20
 8015c40:	1206      	asrs	r6, r0, #8
 8015c42:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8015c46:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015c4a:	9600      	str	r6, [sp, #0]
 8015c4c:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8015c50:	f9bd 903c 	ldrsh.w	r9, [sp, #60]	; 0x3c
 8015c54:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8015c58:	10c6      	asrs	r6, r0, #3
 8015c5a:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015c5e:	9601      	str	r6, [sp, #4]
 8015c60:	00c0      	lsls	r0, r0, #3
 8015c62:	fb04 560c 	mla	r6, r4, ip, r5
 8015c66:	b2c0      	uxtb	r0, r0
 8015c68:	4692      	mov	sl, r2
 8015c6a:	eb02 0e06 	add.w	lr, r2, r6
 8015c6e:	9a00      	ldr	r2, [sp, #0]
 8015c70:	9002      	str	r0, [sp, #8]
 8015c72:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 8015c76:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8015c7a:	9a01      	ldr	r2, [sp, #4]
 8015c7c:	2c00      	cmp	r4, #0
 8015c7e:	4698      	mov	r8, r3
 8015c80:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8015c84:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8015c88:	db3e      	blt.n	8015d08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015c8a:	45a1      	cmp	r9, r4
 8015c8c:	dd3c      	ble.n	8015d08 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd0>
 8015c8e:	2d00      	cmp	r5, #0
 8015c90:	db38      	blt.n	8015d04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015c92:	45ac      	cmp	ip, r5
 8015c94:	dd36      	ble.n	8015d04 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xcc>
 8015c96:	f81a 2006 	ldrb.w	r2, [sl, r6]
 8015c9a:	f858 2022 	ldr.w	r2, [r8, r2, lsl #2]
 8015c9e:	1c6e      	adds	r6, r5, #1
 8015ca0:	d435      	bmi.n	8015d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015ca2:	45b4      	cmp	ip, r6
 8015ca4:	dd33      	ble.n	8015d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015ca6:	b393      	cbz	r3, 8015d0e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 8015ca8:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8015cac:	f858 6026 	ldr.w	r6, [r8, r6, lsl #2]
 8015cb0:	3401      	adds	r4, #1
 8015cb2:	d430      	bmi.n	8015d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015cb4:	45a1      	cmp	r9, r4
 8015cb6:	dd2e      	ble.n	8015d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015cb8:	b36f      	cbz	r7, 8015d16 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xde>
 8015cba:	2d00      	cmp	r5, #0
 8015cbc:	db29      	blt.n	8015d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015cbe:	45ac      	cmp	ip, r5
 8015cc0:	dd27      	ble.n	8015d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xda>
 8015cc2:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8015cc6:	f858 4024 	ldr.w	r4, [r8, r4, lsl #2]
 8015cca:	3501      	adds	r5, #1
 8015ccc:	d407      	bmi.n	8015cde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015cce:	45ac      	cmp	ip, r5
 8015cd0:	dd05      	ble.n	8015cde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015cd2:	b123      	cbz	r3, 8015cde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015cd4:	44f4      	add	ip, lr
 8015cd6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8015cda:	f858 0020 	ldr.w	r0, [r8, r0, lsl #2]
 8015cde:	2b0f      	cmp	r3, #15
 8015ce0:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8015ce4:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8015ce8:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8015cec:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8015cf0:	d801      	bhi.n	8015cf6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xbe>
 8015cf2:	2f0f      	cmp	r7, #15
 8015cf4:	d911      	bls.n	8015d1a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8015cf6:	4b79      	ldr	r3, [pc, #484]	; (8015edc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a4>)
 8015cf8:	4a79      	ldr	r2, [pc, #484]	; (8015ee0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 8015cfa:	487a      	ldr	r0, [pc, #488]	; (8015ee4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 8015cfc:	f240 3173 	movw	r1, #883	; 0x373
 8015d00:	f005 fcf6 	bl	801b6f0 <__assert_func>
 8015d04:	4602      	mov	r2, r0
 8015d06:	e7ca      	b.n	8015c9e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x66>
 8015d08:	4606      	mov	r6, r0
 8015d0a:	4602      	mov	r2, r0
 8015d0c:	e7d0      	b.n	8015cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015d0e:	4606      	mov	r6, r0
 8015d10:	e7ce      	b.n	8015cb0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x78>
 8015d12:	4604      	mov	r4, r0
 8015d14:	e7d9      	b.n	8015cca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x92>
 8015d16:	4604      	mov	r4, r0
 8015d18:	e7e1      	b.n	8015cde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa6>
 8015d1a:	b29b      	uxth	r3, r3
 8015d1c:	b2bf      	uxth	r7, r7
 8015d1e:	fb03 fe07 	mul.w	lr, r3, r7
 8015d22:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8015d26:	011b      	lsls	r3, r3, #4
 8015d28:	eba3 0c0e 	sub.w	ip, r3, lr
 8015d2c:	b2bf      	uxth	r7, r7
 8015d2e:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 8015d32:	fa1f fc8c 	uxth.w	ip, ip
 8015d36:	1bed      	subs	r5, r5, r7
 8015d38:	b2ad      	uxth	r5, r5
 8015d3a:	fb0c f30a 	mul.w	r3, ip, sl
 8015d3e:	fb05 330b 	mla	r3, r5, fp, r3
 8015d42:	fb07 3309 	mla	r3, r7, r9, r3
 8015d46:	fb0e 3308 	mla	r3, lr, r8, r3
 8015d4a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015d4e:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8015d52:	9303      	str	r3, [sp, #12]
 8015d54:	d018      	beq.n	8015d88 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x150>
 8015d56:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015d5a:	fb0b f303 	mul.w	r3, fp, r3
 8015d5e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015d62:	fb0b fb02 	mul.w	fp, fp, r2
 8015d66:	0a1a      	lsrs	r2, r3, #8
 8015d68:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015d6c:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8015d70:	441a      	add	r2, r3
 8015d72:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 8015d76:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8015d7a:	0a12      	lsrs	r2, r2, #8
 8015d7c:	0a1b      	lsrs	r3, r3, #8
 8015d7e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8015d82:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015d86:	431a      	orrs	r2, r3
 8015d88:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8015d8c:	d019      	beq.n	8015dc2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x18a>
 8015d8e:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8015d92:	fb0a fb0b 	mul.w	fp, sl, fp
 8015d96:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015d9a:	fb0a fa06 	mul.w	sl, sl, r6
 8015d9e:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8015da2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015da6:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8015daa:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8015dae:	445e      	add	r6, fp
 8015db0:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015db4:	0a36      	lsrs	r6, r6, #8
 8015db6:	0a1b      	lsrs	r3, r3, #8
 8015db8:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8015dbc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015dc0:	431e      	orrs	r6, r3
 8015dc2:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015dc6:	d019      	beq.n	8015dfc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1c4>
 8015dc8:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8015dcc:	fb09 fa0a 	mul.w	sl, r9, sl
 8015dd0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8015dd4:	fb09 f904 	mul.w	r9, r9, r4
 8015dd8:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8015ddc:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015de0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8015de4:	f509 7380 	add.w	r3, r9, #256	; 0x100
 8015de8:	4454      	add	r4, sl
 8015dea:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8015dee:	0a24      	lsrs	r4, r4, #8
 8015df0:	0a1b      	lsrs	r3, r3, #8
 8015df2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8015df6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015dfa:	431c      	orrs	r4, r3
 8015dfc:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015e00:	d019      	beq.n	8015e36 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1fe>
 8015e02:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8015e06:	fb08 f909 	mul.w	r9, r8, r9
 8015e0a:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8015e0e:	fb08 f800 	mul.w	r8, r8, r0
 8015e12:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8015e16:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015e1a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8015e1e:	f508 7380 	add.w	r3, r8, #256	; 0x100
 8015e22:	4448      	add	r0, r9
 8015e24:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 8015e28:	0a00      	lsrs	r0, r0, #8
 8015e2a:	0a1b      	lsrs	r3, r3, #8
 8015e2c:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 8015e30:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e34:	4318      	orrs	r0, r3
 8015e36:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8015e3a:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 8015e3e:	fb0c f808 	mul.w	r8, ip, r8
 8015e42:	fb05 8803 	mla	r8, r5, r3, r8
 8015e46:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 8015e4a:	fb07 8803 	mla	r8, r7, r3, r8
 8015e4e:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8015e52:	fb0e 8303 	mla	r3, lr, r3, r8
 8015e56:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8015e5a:	0a1b      	lsrs	r3, r3, #8
 8015e5c:	fb0c f606 	mul.w	r6, ip, r6
 8015e60:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8015e64:	fb05 6202 	mla	r2, r5, r2, r6
 8015e68:	f003 18ff 	and.w	r8, r3, #16711935	; 0xff00ff
 8015e6c:	f404 437f 	and.w	r3, r4, #65280	; 0xff00
 8015e70:	fb07 2703 	mla	r7, r7, r3, r2
 8015e74:	9a03      	ldr	r2, [sp, #12]
 8015e76:	9c02      	ldr	r4, [sp, #8]
 8015e78:	9d01      	ldr	r5, [sp, #4]
 8015e7a:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 8015e7e:	fb0e 7303 	mla	r3, lr, r3, r7
 8015e82:	43d0      	mvns	r0, r2
 8015e84:	9a00      	ldr	r2, [sp, #0]
 8015e86:	b2c0      	uxtb	r0, r0
 8015e88:	0a1b      	lsrs	r3, r3, #8
 8015e8a:	4342      	muls	r2, r0
 8015e8c:	4344      	muls	r4, r0
 8015e8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8015e92:	ea48 0303 	orr.w	r3, r8, r3
 8015e96:	4345      	muls	r5, r0
 8015e98:	4620      	mov	r0, r4
 8015e9a:	1c54      	adds	r4, r2, #1
 8015e9c:	eb04 2412 	add.w	r4, r4, r2, lsr #8
 8015ea0:	0c1a      	lsrs	r2, r3, #16
 8015ea2:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8015ea6:	4a10      	ldr	r2, [pc, #64]	; (8015ee8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8015ea8:	ea02 2204 	and.w	r2, r2, r4, lsl #8
 8015eac:	1c44      	adds	r4, r0, #1
 8015eae:	eb04 2410 	add.w	r4, r4, r0, lsr #8
 8015eb2:	b2d8      	uxtb	r0, r3
 8015eb4:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8015eb8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 8015ebc:	1c68      	adds	r0, r5, #1
 8015ebe:	eb00 2015 	add.w	r0, r0, r5, lsr #8
 8015ec2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015ec6:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8015eca:	00db      	lsls	r3, r3, #3
 8015ecc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015ed0:	4313      	orrs	r3, r2
 8015ed2:	800b      	strh	r3, [r1, #0]
 8015ed4:	b005      	add	sp, #20
 8015ed6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015eda:	bf00      	nop
 8015edc:	0801f387 	.word	0x0801f387
 8015ee0:	0801f8e5 	.word	0x0801f8e5
 8015ee4:	0801f40f 	.word	0x0801f40f
 8015ee8:	fffff800 	.word	0xfffff800

08015eec <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8015eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015ef0:	ed2d 8b08 	vpush	{d8-d11}
 8015ef4:	b097      	sub	sp, #92	; 0x5c
 8015ef6:	eeb0 aa40 	vmov.f32	s20, s0
 8015efa:	9d2d      	ldr	r5, [sp, #180]	; 0xb4
 8015efc:	9307      	str	r3, [sp, #28]
 8015efe:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8015f02:	9112      	str	r1, [sp, #72]	; 0x48
 8015f04:	930f      	str	r3, [sp, #60]	; 0x3c
 8015f06:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 8015f0a:	9015      	str	r0, [sp, #84]	; 0x54
 8015f0c:	6868      	ldr	r0, [r5, #4]
 8015f0e:	9214      	str	r2, [sp, #80]	; 0x50
 8015f10:	fb00 1303 	mla	r3, r0, r3, r1
 8015f14:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8015f16:	6829      	ldr	r1, [r5, #0]
 8015f18:	6855      	ldr	r5, [r2, #4]
 8015f1a:	f9bd 40c0 	ldrsh.w	r4, [sp, #192]	; 0xc0
 8015f1e:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8015f22:	930a      	str	r3, [sp, #40]	; 0x28
 8015f24:	6813      	ldr	r3, [r2, #0]
 8015f26:	9311      	str	r3, [sp, #68]	; 0x44
 8015f28:	eef0 9a60 	vmov.f32	s19, s1
 8015f2c:	eeb0 9a41 	vmov.f32	s18, s2
 8015f30:	eeb0 8a62 	vmov.f32	s16, s5
 8015f34:	eef0 8a43 	vmov.f32	s17, s6
 8015f38:	eef0 ba44 	vmov.f32	s23, s8
 8015f3c:	eeb0 ba64 	vmov.f32	s22, s9
 8015f40:	eef0 aa45 	vmov.f32	s21, s10
 8015f44:	3504      	adds	r5, #4
 8015f46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8015f48:	2b00      	cmp	r3, #0
 8015f4a:	dc03      	bgt.n	8015f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8015f4c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015f4e:	2b00      	cmp	r3, #0
 8015f50:	f340 834d 	ble.w	80165ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 8015f54:	9b07      	ldr	r3, [sp, #28]
 8015f56:	2b00      	cmp	r3, #0
 8015f58:	f340 819c 	ble.w	8016294 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3a8>
 8015f5c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015f5e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015f60:	1412      	asrs	r2, r2, #16
 8015f62:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015f66:	d42d      	bmi.n	8015fc4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8015f68:	1c51      	adds	r1, r2, #1
 8015f6a:	428c      	cmp	r4, r1
 8015f6c:	dd2d      	ble.n	8015fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015f6e:	2b00      	cmp	r3, #0
 8015f70:	db2b      	blt.n	8015fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015f72:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015f74:	1c59      	adds	r1, r3, #1
 8015f76:	4288      	cmp	r0, r1
 8015f78:	dd27      	ble.n	8015fca <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 8015f7a:	9b07      	ldr	r3, [sp, #28]
 8015f7c:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015f7e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8015f80:	3b01      	subs	r3, #1
 8015f82:	fb02 1203 	mla	r2, r2, r3, r1
 8015f86:	1412      	asrs	r2, r2, #16
 8015f88:	d429      	bmi.n	8015fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015f8a:	3201      	adds	r2, #1
 8015f8c:	4294      	cmp	r4, r2
 8015f8e:	dd26      	ble.n	8015fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015f90:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8015f92:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8015f94:	fb02 1303 	mla	r3, r2, r3, r1
 8015f98:	141b      	asrs	r3, r3, #16
 8015f9a:	d420      	bmi.n	8015fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015f9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015f9e:	3301      	adds	r3, #1
 8015fa0:	429a      	cmp	r2, r3
 8015fa2:	dd1c      	ble.n	8015fde <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 8015fa4:	9b07      	ldr	r3, [sp, #28]
 8015fa6:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
 8015faa:	9310      	str	r3, [sp, #64]	; 0x40
 8015fac:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015fae:	2b00      	cmp	r3, #0
 8015fb0:	f300 81da 	bgt.w	8016368 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 8015fb4:	9b07      	ldr	r3, [sp, #28]
 8015fb6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8015fb8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015fbc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015fc0:	930a      	str	r3, [sp, #40]	; 0x28
 8015fc2:	e169      	b.n	8016298 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 8015fc4:	1c51      	adds	r1, r2, #1
 8015fc6:	f040 8156 	bne.w	8016276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015fca:	42a2      	cmp	r2, r4
 8015fcc:	f280 8153 	bge.w	8016276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015fd0:	1c5a      	adds	r2, r3, #1
 8015fd2:	f2c0 8150 	blt.w	8016276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015fd6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015fd8:	4293      	cmp	r3, r2
 8015fda:	f280 814c 	bge.w	8016276 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x38a>
 8015fde:	9b07      	ldr	r3, [sp, #28]
 8015fe0:	9313      	str	r3, [sp, #76]	; 0x4c
 8015fe2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8015fe4:	9310      	str	r3, [sp, #64]	; 0x40
 8015fe6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015fe8:	2b00      	cmp	r3, #0
 8015fea:	dde3      	ble.n	8015fb4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8015fec:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015fee:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015ff0:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8015ff4:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8015ff6:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8015ffa:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015ffc:	1412      	asrs	r2, r2, #16
 8015ffe:	ea4f 4323 	mov.w	r3, r3, asr #16
 8016002:	f100 8198 	bmi.w	8016336 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44a>
 8016006:	1c56      	adds	r6, r2, #1
 8016008:	42b4      	cmp	r4, r6
 801600a:	f340 8196 	ble.w	801633a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801600e:	2b00      	cmp	r3, #0
 8016010:	f2c0 8193 	blt.w	801633a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8016014:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 8016016:	1c5e      	adds	r6, r3, #1
 8016018:	42b7      	cmp	r7, r6
 801601a:	f340 818e 	ble.w	801633a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 801601e:	fb03 2304 	mla	r3, r3, r4, r2
 8016022:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016024:	18d6      	adds	r6, r2, r3
 8016026:	5cd3      	ldrb	r3, [r2, r3]
 8016028:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801602c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8016030:	2900      	cmp	r1, #0
 8016032:	f000 8170 	beq.w	8016316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42a>
 8016036:	7872      	ldrb	r2, [r6, #1]
 8016038:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801603c:	920b      	str	r2, [sp, #44]	; 0x2c
 801603e:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8016042:	2800      	cmp	r0, #0
 8016044:	f000 8171 	beq.w	801632a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43e>
 8016048:	1932      	adds	r2, r6, r4
 801604a:	5d36      	ldrb	r6, [r6, r4]
 801604c:	7852      	ldrb	r2, [r2, #1]
 801604e:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 8016052:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8016056:	9608      	str	r6, [sp, #32]
 8016058:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801605c:	920c      	str	r2, [sp, #48]	; 0x30
 801605e:	0e16      	lsrs	r6, r2, #24
 8016060:	b289      	uxth	r1, r1
 8016062:	b280      	uxth	r0, r0
 8016064:	fb01 fb00 	mul.w	fp, r1, r0
 8016068:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 801606c:	0109      	lsls	r1, r1, #4
 801606e:	eba1 090b 	sub.w	r9, r1, fp
 8016072:	b280      	uxth	r0, r0
 8016074:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8016078:	fa1f f989 	uxth.w	r9, r9
 801607c:	1a12      	subs	r2, r2, r0
 801607e:	b292      	uxth	r2, r2
 8016080:	fb09 f108 	mul.w	r1, r9, r8
 8016084:	fb02 110c 	mla	r1, r2, ip, r1
 8016088:	fb00 110a 	mla	r1, r0, sl, r1
 801608c:	fb0b 1106 	mla	r1, fp, r6, r1
 8016090:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8016094:	2900      	cmp	r1, #0
 8016096:	f000 80df 	beq.w	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801609a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801609e:	d01b      	beq.n	80160d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ec>
 80160a0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80160a4:	fb0c fe0e 	mul.w	lr, ip, lr
 80160a8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80160ac:	fb0c fc03 	mul.w	ip, ip, r3
 80160b0:	ea4f 231e 	mov.w	r3, lr, lsr #8
 80160b4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80160b8:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80160bc:	4473      	add	r3, lr
 80160be:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 80160c2:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 80160c6:	0a1b      	lsrs	r3, r3, #8
 80160c8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80160cc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80160d0:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80160d4:	ea43 030e 	orr.w	r3, r3, lr
 80160d8:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80160dc:	d01e      	beq.n	801611c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 80160de:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80160e0:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80160e4:	fb08 fc0c 	mul.w	ip, r8, ip
 80160e8:	f407 4e7f 	and.w	lr, r7, #65280	; 0xff00
 80160ec:	fb08 f80e 	mul.w	r8, r8, lr
 80160f0:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 80160f4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80160f8:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80160fc:	44e6      	add	lr, ip
 80160fe:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8016102:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8016106:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801610a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801610e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016112:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8016116:	ea4e 0708 	orr.w	r7, lr, r8
 801611a:	970b      	str	r7, [sp, #44]	; 0x2c
 801611c:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8016120:	d01e      	beq.n	8016160 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8016122:	9f08      	ldr	r7, [sp, #32]
 8016124:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 8016128:	fb0a f808 	mul.w	r8, sl, r8
 801612c:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016130:	fb0a fa0c 	mul.w	sl, sl, ip
 8016134:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8016138:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801613c:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016140:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8016144:	44c6      	add	lr, r8
 8016146:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801614a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801614e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8016152:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016156:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801615a:	ea4e 070a 	orr.w	r7, lr, sl
 801615e:	9708      	str	r7, [sp, #32]
 8016160:	2eff      	cmp	r6, #255	; 0xff
 8016162:	d01d      	beq.n	80161a0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 8016164:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8016166:	f007 18ff 	and.w	r8, r7, #16711935	; 0xff00ff
 801616a:	fb06 f808 	mul.w	r8, r6, r8
 801616e:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 8016172:	fb06 f60c 	mul.w	r6, r6, ip
 8016176:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 801617a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801617e:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8016182:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8016186:	44c6      	add	lr, r8
 8016188:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 801618c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016190:	0a36      	lsrs	r6, r6, #8
 8016192:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8016196:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801619a:	ea4e 0606 	orr.w	r6, lr, r6
 801619e:	960c      	str	r6, [sp, #48]	; 0x30
 80161a0:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 80161a2:	9f08      	ldr	r7, [sp, #32]
 80161a4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80161a8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80161ac:	fb09 f606 	mul.w	r6, r9, r6
 80161b0:	fb02 660c 	mla	r6, r2, ip, r6
 80161b4:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80161b8:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 80161ba:	fb00 660c 	mla	r6, r0, ip, r6
 80161be:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 80161c2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 80161c4:	fb0b 660c 	mla	r6, fp, ip, r6
 80161c8:	f407 4c7f 	and.w	ip, r7, #65280	; 0xff00
 80161cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80161d0:	fb09 f90c 	mul.w	r9, r9, ip
 80161d4:	fb02 9303 	mla	r3, r2, r3, r9
 80161d8:	9a08      	ldr	r2, [sp, #32]
 80161da:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 80161de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80161e0:	fb00 330e 	mla	r3, r0, lr, r3
 80161e4:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 80161e8:	fb0b 3b00 	mla	fp, fp, r0, r3
 80161ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80161ee:	881b      	ldrh	r3, [r3, #0]
 80161f0:	43c9      	mvns	r1, r1
 80161f2:	1218      	asrs	r0, r3, #8
 80161f4:	b2c9      	uxtb	r1, r1
 80161f6:	10da      	asrs	r2, r3, #3
 80161f8:	0a36      	lsrs	r6, r6, #8
 80161fa:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80161fe:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016202:	00db      	lsls	r3, r3, #3
 8016204:	4348      	muls	r0, r1
 8016206:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801620a:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 801620e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016212:	b2db      	uxtb	r3, r3
 8016214:	434b      	muls	r3, r1
 8016216:	ea46 060b 	orr.w	r6, r6, fp
 801621a:	434a      	muls	r2, r1
 801621c:	1c41      	adds	r1, r0, #1
 801621e:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016222:	0c30      	lsrs	r0, r6, #16
 8016224:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 8016228:	494e      	ldr	r1, [pc, #312]	; (8016364 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>)
 801622a:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801622e:	1c59      	adds	r1, r3, #1
 8016230:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8016234:	b2f3      	uxtb	r3, r6
 8016236:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801623a:	1c51      	adds	r1, r2, #1
 801623c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8016240:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8016244:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8016248:	00f6      	lsls	r6, r6, #3
 801624a:	ea40 03d3 	orr.w	r3, r0, r3, lsr #3
 801624e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016252:	431e      	orrs	r6, r3
 8016254:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016256:	801e      	strh	r6, [r3, #0]
 8016258:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801625a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801625c:	3302      	adds	r3, #2
 801625e:	9310      	str	r3, [sp, #64]	; 0x40
 8016260:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016262:	4413      	add	r3, r2
 8016264:	9329      	str	r3, [sp, #164]	; 0xa4
 8016266:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016268:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801626a:	4413      	add	r3, r2
 801626c:	932a      	str	r3, [sp, #168]	; 0xa8
 801626e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016270:	3b01      	subs	r3, #1
 8016272:	9313      	str	r3, [sp, #76]	; 0x4c
 8016274:	e6b7      	b.n	8015fe6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8016276:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8016278:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801627a:	4413      	add	r3, r2
 801627c:	9329      	str	r3, [sp, #164]	; 0xa4
 801627e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016280:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016282:	4413      	add	r3, r2
 8016284:	932a      	str	r3, [sp, #168]	; 0xa8
 8016286:	9b07      	ldr	r3, [sp, #28]
 8016288:	3b01      	subs	r3, #1
 801628a:	9307      	str	r3, [sp, #28]
 801628c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801628e:	3302      	adds	r3, #2
 8016290:	930a      	str	r3, [sp, #40]	; 0x28
 8016292:	e65f      	b.n	8015f54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8016294:	f47f ae71 	bne.w	8015f7a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x8e>
 8016298:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801629a:	2b00      	cmp	r3, #0
 801629c:	f340 81a7 	ble.w	80165ee <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x702>
 80162a0:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80162a4:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80162a8:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80162ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80162ae:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80162b2:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80162b6:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80162ba:	eef0 6a48 	vmov.f32	s13, s16
 80162be:	ee69 7a27 	vmul.f32	s15, s18, s15
 80162c2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162c6:	ee37 8a48 	vsub.f32	s16, s14, s16
 80162ca:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 80162ce:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80162d2:	eef0 6a68 	vmov.f32	s13, s17
 80162d6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80162da:	ee18 2a10 	vmov	r2, s16
 80162de:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80162e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80162e6:	ee18 2a90 	vmov	r2, s17
 80162ea:	932b      	str	r3, [sp, #172]	; 0xac
 80162ec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80162ee:	fb92 f3f3 	sdiv	r3, r2, r3
 80162f2:	932c      	str	r3, [sp, #176]	; 0xb0
 80162f4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80162f6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80162f8:	3b01      	subs	r3, #1
 80162fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80162fe:	9312      	str	r3, [sp, #72]	; 0x48
 8016300:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016302:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 8016306:	bf08      	it	eq
 8016308:	4613      	moveq	r3, r2
 801630a:	9307      	str	r3, [sp, #28]
 801630c:	eef0 8a67 	vmov.f32	s17, s15
 8016310:	eeb0 8a47 	vmov.f32	s16, s14
 8016314:	e617      	b.n	8015f46 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5a>
 8016316:	b158      	cbz	r0, 8016330 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x444>
 8016318:	5d32      	ldrb	r2, [r6, r4]
 801631a:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801631e:	9208      	str	r2, [sp, #32]
 8016320:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8016324:	26ff      	movs	r6, #255	; 0xff
 8016326:	46b0      	mov	r8, r6
 8016328:	e69a      	b.n	8016060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 801632a:	26ff      	movs	r6, #255	; 0xff
 801632c:	46b2      	mov	sl, r6
 801632e:	e697      	b.n	8016060 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x174>
 8016330:	26ff      	movs	r6, #255	; 0xff
 8016332:	46b2      	mov	sl, r6
 8016334:	e7f7      	b.n	8016326 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43a>
 8016336:	1c57      	adds	r7, r2, #1
 8016338:	d18e      	bne.n	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801633a:	4294      	cmp	r4, r2
 801633c:	dd8c      	ble.n	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801633e:	1c5e      	adds	r6, r3, #1
 8016340:	db8a      	blt.n	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016342:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8016344:	429e      	cmp	r6, r3
 8016346:	dd87      	ble.n	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016348:	e9cd 1004 	strd	r1, r0, [sp, #16]
 801634c:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8016350:	e9cd 4600 	strd	r4, r6, [sp]
 8016354:	462b      	mov	r3, r5
 8016356:	e9dd 1210 	ldrd	r1, r2, [sp, #64]	; 0x40
 801635a:	9815      	ldr	r0, [sp, #84]	; 0x54
 801635c:	f7ff fc6c 	bl	8015c38 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8016360:	e77a      	b.n	8016258 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 8016362:	bf00      	nop
 8016364:	fffff800 	.word	0xfffff800
 8016368:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801636a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 801636c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016370:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016372:	1409      	asrs	r1, r1, #16
 8016374:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016378:	141b      	asrs	r3, r3, #16
 801637a:	fb04 1303 	mla	r3, r4, r3, r1
 801637e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8016380:	18ce      	adds	r6, r1, r3
 8016382:	5ccb      	ldrb	r3, [r1, r3]
 8016384:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8016388:	0e1f      	lsrs	r7, r3, #24
 801638a:	2a00      	cmp	r2, #0
 801638c:	f000 811f 	beq.w	80165ce <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8016390:	7871      	ldrb	r1, [r6, #1]
 8016392:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 8016396:	910d      	str	r1, [sp, #52]	; 0x34
 8016398:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801639c:	2800      	cmp	r0, #0
 801639e:	f000 8120 	beq.w	80165e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 80163a2:	1931      	adds	r1, r6, r4
 80163a4:	5d36      	ldrb	r6, [r6, r4]
 80163a6:	7849      	ldrb	r1, [r1, #1]
 80163a8:	f855 6026 	ldr.w	r6, [r5, r6, lsl #2]
 80163ac:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80163b0:	9609      	str	r6, [sp, #36]	; 0x24
 80163b2:	ea4f 6916 	mov.w	r9, r6, lsr #24
 80163b6:	910e      	str	r1, [sp, #56]	; 0x38
 80163b8:	0e0e      	lsrs	r6, r1, #24
 80163ba:	b292      	uxth	r2, r2
 80163bc:	b280      	uxth	r0, r0
 80163be:	fb02 fa00 	mul.w	sl, r2, r0
 80163c2:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 80163c6:	0112      	lsls	r2, r2, #4
 80163c8:	eba2 080a 	sub.w	r8, r2, sl
 80163cc:	b280      	uxth	r0, r0
 80163ce:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 80163d2:	fa1f f888 	uxth.w	r8, r8
 80163d6:	1a09      	subs	r1, r1, r0
 80163d8:	b289      	uxth	r1, r1
 80163da:	fb08 f20e 	mul.w	r2, r8, lr
 80163de:	fb01 2207 	mla	r2, r1, r7, r2
 80163e2:	fb00 2209 	mla	r2, r0, r9, r2
 80163e6:	fb0a 2206 	mla	r2, sl, r6, r2
 80163ea:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80163ee:	9213      	str	r2, [sp, #76]	; 0x4c
 80163f0:	2a00      	cmp	r2, #0
 80163f2:	f000 80de 	beq.w	80165b2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c6>
 80163f6:	2fff      	cmp	r7, #255	; 0xff
 80163f8:	d01a      	beq.n	8016430 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x544>
 80163fa:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80163fe:	fb07 fc0c 	mul.w	ip, r7, ip
 8016402:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016406:	435f      	muls	r7, r3
 8016408:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801640c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016410:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8016414:	4463      	add	r3, ip
 8016416:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 801641a:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 801641e:	0a1b      	lsrs	r3, r3, #8
 8016420:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016424:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8016428:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801642c:	ea43 030c 	orr.w	r3, r3, ip
 8016430:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8016434:	d01f      	beq.n	8016476 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x58a>
 8016436:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8016438:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801643a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801643e:	fb0e f707 	mul.w	r7, lr, r7
 8016442:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8016446:	fb0e fe0c 	mul.w	lr, lr, ip
 801644a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801644e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016452:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8016456:	44bc      	add	ip, r7
 8016458:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 801645c:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 8016460:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8016464:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016468:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801646c:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016470:	ea4c 020e 	orr.w	r2, ip, lr
 8016474:	920d      	str	r2, [sp, #52]	; 0x34
 8016476:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801647a:	d01e      	beq.n	80164ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5ce>
 801647c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801647e:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8016482:	fb09 fe0e 	mul.w	lr, r9, lr
 8016486:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 801648a:	fb09 f907 	mul.w	r9, r9, r7
 801648e:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 8016492:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8016496:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 801649a:	f509 7780 	add.w	r7, r9, #256	; 0x100
 801649e:	44f4      	add	ip, lr
 80164a0:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 80164a4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80164a8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80164ac:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164b0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 80164b4:	ea4c 0209 	orr.w	r2, ip, r9
 80164b8:	9209      	str	r2, [sp, #36]	; 0x24
 80164ba:	2eff      	cmp	r6, #255	; 0xff
 80164bc:	d01c      	beq.n	80164f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60c>
 80164be:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80164c0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80164c4:	fb06 fe0e 	mul.w	lr, r6, lr
 80164c8:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 80164cc:	437e      	muls	r6, r7
 80164ce:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 80164d2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164d6:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 80164da:	f506 7780 	add.w	r7, r6, #256	; 0x100
 80164de:	44f4      	add	ip, lr
 80164e0:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 80164e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80164e8:	0a36      	lsrs	r6, r6, #8
 80164ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80164ee:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80164f2:	ea4c 0206 	orr.w	r2, ip, r6
 80164f6:	920e      	str	r2, [sp, #56]	; 0x38
 80164f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80164fa:	f002 16ff 	and.w	r6, r2, #16711935	; 0xff00ff
 80164fe:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016500:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8016504:	fb08 f606 	mul.w	r6, r8, r6
 8016508:	fb01 6607 	mla	r6, r1, r7, r6
 801650c:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 8016510:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016512:	fb00 6607 	mla	r6, r0, r7, r6
 8016516:	f002 17ff 	and.w	r7, r2, #16711935	; 0xff00ff
 801651a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801651c:	fb0a 6607 	mla	r6, sl, r7, r6
 8016520:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8016524:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016526:	fb08 f807 	mul.w	r8, r8, r7
 801652a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801652e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8016532:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016534:	fb01 8303 	mla	r3, r1, r3, r8
 8016538:	fb00 330c 	mla	r3, r0, ip, r3
 801653c:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8016540:	fb0a 3e0e 	mla	lr, sl, lr, r3
 8016544:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016546:	f8bb 3000 	ldrh.w	r3, [fp]
 801654a:	43d2      	mvns	r2, r2
 801654c:	1218      	asrs	r0, r3, #8
 801654e:	b2d2      	uxtb	r2, r2
 8016550:	0a36      	lsrs	r6, r6, #8
 8016552:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8016556:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801655a:	4350      	muls	r0, r2
 801655c:	10d9      	asrs	r1, r3, #3
 801655e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8016562:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8016566:	00db      	lsls	r3, r3, #3
 8016568:	ea46 060e 	orr.w	r6, r6, lr
 801656c:	1c47      	adds	r7, r0, #1
 801656e:	b2db      	uxtb	r3, r3
 8016570:	4353      	muls	r3, r2
 8016572:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016576:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801657a:	0c37      	lsrs	r7, r6, #16
 801657c:	4351      	muls	r1, r2
 801657e:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8016582:	4a1d      	ldr	r2, [pc, #116]	; (80165f8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>)
 8016584:	1c5f      	adds	r7, r3, #1
 8016586:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 801658a:	b2f7      	uxtb	r7, r6
 801658c:	eb07 2313 	add.w	r3, r7, r3, lsr #8
 8016590:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8016594:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8016598:	1c4b      	adds	r3, r1, #1
 801659a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801659e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80165a2:	eb06 2611 	add.w	r6, r6, r1, lsr #8
 80165a6:	00f6      	lsls	r6, r6, #3
 80165a8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80165ac:	4330      	orrs	r0, r6
 80165ae:	f8ab 0000 	strh.w	r0, [fp]
 80165b2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80165b4:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80165b6:	4413      	add	r3, r2
 80165b8:	9329      	str	r3, [sp, #164]	; 0xa4
 80165ba:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80165bc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80165be:	4413      	add	r3, r2
 80165c0:	932a      	str	r3, [sp, #168]	; 0xa8
 80165c2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80165c4:	3b01      	subs	r3, #1
 80165c6:	f10b 0b02 	add.w	fp, fp, #2
 80165ca:	9310      	str	r3, [sp, #64]	; 0x40
 80165cc:	e4ee      	b.n	8015fac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc0>
 80165ce:	b158      	cbz	r0, 80165e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fc>
 80165d0:	5d31      	ldrb	r1, [r6, r4]
 80165d2:	f855 1021 	ldr.w	r1, [r5, r1, lsl #2]
 80165d6:	9109      	str	r1, [sp, #36]	; 0x24
 80165d8:	ea4f 6911 	mov.w	r9, r1, lsr #24
 80165dc:	26ff      	movs	r6, #255	; 0xff
 80165de:	46b6      	mov	lr, r6
 80165e0:	e6eb      	b.n	80163ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80165e2:	26ff      	movs	r6, #255	; 0xff
 80165e4:	46b1      	mov	r9, r6
 80165e6:	e6e8      	b.n	80163ba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ce>
 80165e8:	26ff      	movs	r6, #255	; 0xff
 80165ea:	46b1      	mov	r9, r6
 80165ec:	e7f7      	b.n	80165de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f2>
 80165ee:	b017      	add	sp, #92	; 0x5c
 80165f0:	ecbd 8b08 	vpop	{d8-d11}
 80165f4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80165f8:	fffff800 	.word	0xfffff800

080165fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80165fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016600:	b087      	sub	sp, #28
 8016602:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8016606:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801660a:	9105      	str	r1, [sp, #20]
 801660c:	fb00 e604 	mla	r6, r0, r4, lr
 8016610:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8016614:	9102      	str	r1, [sp, #8]
 8016616:	eb02 0146 	add.w	r1, r2, r6, lsl #1
 801661a:	9103      	str	r1, [sp, #12]
 801661c:	9905      	ldr	r1, [sp, #20]
 801661e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8016622:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8016626:	8809      	ldrh	r1, [r1, #0]
 8016628:	2800      	cmp	r0, #0
 801662a:	eb03 0a06 	add.w	sl, r3, r6
 801662e:	f2c0 80ca 	blt.w	80167c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016632:	4287      	cmp	r7, r0
 8016634:	f340 80c7 	ble.w	80167c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ca>
 8016638:	f1be 0f00 	cmp.w	lr, #0
 801663c:	f2c0 80bf 	blt.w	80167be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016640:	4574      	cmp	r4, lr
 8016642:	f340 80bc 	ble.w	80167be <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c2>
 8016646:	f813 c006 	ldrb.w	ip, [r3, r6]
 801664a:	f832 9016 	ldrh.w	r9, [r2, r6, lsl #1]
 801664e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8016652:	d01c      	beq.n	801668e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x92>
 8016654:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 8016658:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801665c:	4372      	muls	r2, r6
 801665e:	f64f 081f 	movw	r8, #63519	; 0xf81f
 8016662:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 8016666:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801666a:	f602 0201 	addw	r2, r2, #2049	; 0x801
 801666e:	fb0c f609 	mul.w	r6, ip, r9
 8016672:	eb03 0902 	add.w	r9, r3, r2
 8016676:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 801667a:	f106 0820 	add.w	r8, r6, #32
 801667e:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 8016682:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016686:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801668a:	ea49 0908 	orr.w	r9, r9, r8
 801668e:	fa1f f989 	uxth.w	r9, r9
 8016692:	f11e 0301 	adds.w	r3, lr, #1
 8016696:	f100 809b 	bmi.w	80167d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 801669a:	429c      	cmp	r4, r3
 801669c:	f340 8098 	ble.w	80167d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80166a0:	2d00      	cmp	r5, #0
 80166a2:	f000 8095 	beq.w	80167d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d4>
 80166a6:	f89a 6001 	ldrb.w	r6, [sl, #1]
 80166aa:	9b03      	ldr	r3, [sp, #12]
 80166ac:	2eff      	cmp	r6, #255	; 0xff
 80166ae:	885b      	ldrh	r3, [r3, #2]
 80166b0:	d01b      	beq.n	80166ea <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xee>
 80166b2:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 80166b6:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80166ba:	fb08 f202 	mul.w	r2, r8, r2
 80166be:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80166c2:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 80166c6:	fb06 f803 	mul.w	r8, r6, r3
 80166ca:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 80166ce:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80166d2:	441a      	add	r2, r3
 80166d4:	f108 0320 	add.w	r3, r8, #32
 80166d8:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80166dc:	0a1b      	lsrs	r3, r3, #8
 80166de:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 80166e2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80166e6:	ea4b 0303 	orr.w	r3, fp, r3
 80166ea:	b29b      	uxth	r3, r3
 80166ec:	9301      	str	r3, [sp, #4]
 80166ee:	3001      	adds	r0, #1
 80166f0:	d474      	bmi.n	80167dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80166f2:	4287      	cmp	r7, r0
 80166f4:	dd72      	ble.n	80167dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 80166f6:	9a02      	ldr	r2, [sp, #8]
 80166f8:	2a00      	cmp	r2, #0
 80166fa:	f000 8121 	beq.w	8016940 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>
 80166fe:	f1be 0f00 	cmp.w	lr, #0
 8016702:	db68      	blt.n	80167d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016704:	4574      	cmp	r4, lr
 8016706:	dd66      	ble.n	80167d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1da>
 8016708:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801670c:	9a03      	ldr	r2, [sp, #12]
 801670e:	2fff      	cmp	r7, #255	; 0xff
 8016710:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8016714:	d01c      	beq.n	8016750 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x154>
 8016716:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801671a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801671e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016722:	fb07 fb00 	mul.w	fp, r7, r0
 8016726:	fb08 f802 	mul.w	r8, r8, r2
 801672a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801672e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8016732:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8016736:	4490      	add	r8, r2
 8016738:	f10b 0220 	add.w	r2, fp, #32
 801673c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 8016740:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8016744:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 8016748:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801674c:	ea40 000b 	orr.w	r0, r0, fp
 8016750:	b280      	uxth	r0, r0
 8016752:	f11e 0e01 	adds.w	lr, lr, #1
 8016756:	d446      	bmi.n	80167e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 8016758:	4574      	cmp	r4, lr
 801675a:	dd44      	ble.n	80167e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ea>
 801675c:	2d00      	cmp	r5, #0
 801675e:	d045      	beq.n	80167ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f0>
 8016760:	1c62      	adds	r2, r4, #1
 8016762:	9b03      	ldr	r3, [sp, #12]
 8016764:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8016768:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801676c:	2cff      	cmp	r4, #255	; 0xff
 801676e:	d01c      	beq.n	80167aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ae>
 8016770:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 8016774:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016778:	fb08 fe0e 	mul.w	lr, r8, lr
 801677c:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 8016780:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016784:	fb04 f802 	mul.w	r8, r4, r2
 8016788:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 801678c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016790:	4472      	add	r2, lr
 8016792:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 8016796:	f108 0a20 	add.w	sl, r8, #32
 801679a:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 801679e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80167a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80167a6:	ea42 020a 	orr.w	r2, r2, sl
 80167aa:	b292      	uxth	r2, r2
 80167ac:	2d0f      	cmp	r5, #15
 80167ae:	d91f      	bls.n	80167f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1f4>
 80167b0:	4b67      	ldr	r3, [pc, #412]	; (8016950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x354>)
 80167b2:	4a68      	ldr	r2, [pc, #416]	; (8016954 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x358>)
 80167b4:	4868      	ldr	r0, [pc, #416]	; (8016958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x35c>)
 80167b6:	f240 3173 	movw	r1, #883	; 0x373
 80167ba:	f004 ff99 	bl	801b6f0 <__assert_func>
 80167be:	4689      	mov	r9, r1
 80167c0:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80167c4:	e765      	b.n	8016692 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x96>
 80167c6:	26ff      	movs	r6, #255	; 0xff
 80167c8:	9101      	str	r1, [sp, #4]
 80167ca:	4689      	mov	r9, r1
 80167cc:	46b4      	mov	ip, r6
 80167ce:	e78e      	b.n	80166ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80167d0:	9101      	str	r1, [sp, #4]
 80167d2:	26ff      	movs	r6, #255	; 0xff
 80167d4:	e78b      	b.n	80166ee <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xf2>
 80167d6:	4608      	mov	r0, r1
 80167d8:	27ff      	movs	r7, #255	; 0xff
 80167da:	e7ba      	b.n	8016752 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x156>
 80167dc:	24ff      	movs	r4, #255	; 0xff
 80167de:	460a      	mov	r2, r1
 80167e0:	4608      	mov	r0, r1
 80167e2:	4627      	mov	r7, r4
 80167e4:	e7e2      	b.n	80167ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80167e6:	460a      	mov	r2, r1
 80167e8:	24ff      	movs	r4, #255	; 0xff
 80167ea:	e7df      	b.n	80167ac <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 80167ec:	460a      	mov	r2, r1
 80167ee:	24ff      	movs	r4, #255	; 0xff
 80167f0:	9b02      	ldr	r3, [sp, #8]
 80167f2:	2b0f      	cmp	r3, #15
 80167f4:	d8dc      	bhi.n	80167b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 80167f6:	f8bd e008 	ldrh.w	lr, [sp, #8]
 80167fa:	fa1f f885 	uxth.w	r8, r5
 80167fe:	fb08 fa0e 	mul.w	sl, r8, lr
 8016802:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8016806:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801680a:	9303      	str	r3, [sp, #12]
 801680c:	fa1f f38e 	uxth.w	r3, lr
 8016810:	9304      	str	r3, [sp, #16]
 8016812:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8016816:	9b02      	ldr	r3, [sp, #8]
 8016818:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801681c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8016820:	fb15 fe03 	smulbb	lr, r5, r3
 8016824:	ea48 0809 	orr.w	r8, r8, r9
 8016828:	f1c3 0910 	rsb	r9, r3, #16
 801682c:	9b01      	ldr	r3, [sp, #4]
 801682e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8016832:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8016836:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801683a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801683e:	eba9 0905 	sub.w	r9, r9, r5
 8016842:	ea4b 0303 	orr.w	r3, fp, r3
 8016846:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 801684a:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801684e:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 8016852:	436b      	muls	r3, r5
 8016854:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016858:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801685c:	ea4b 0202 	orr.w	r2, fp, r2
 8016860:	fb09 3308 	mla	r3, r9, r8, r3
 8016864:	fb0e 3302 	mla	r3, lr, r2, r3
 8016868:	0402      	lsls	r2, r0, #16
 801686a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801686e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016872:	4310      	orrs	r0, r2
 8016874:	9a02      	ldr	r2, [sp, #8]
 8016876:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 801687a:	fb0e 3e00 	mla	lr, lr, r0, r3
 801687e:	9803      	ldr	r0, [sp, #12]
 8016880:	f89d 2058 	ldrb.w	r2, [sp, #88]	; 0x58
 8016884:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8016888:	9804      	ldr	r0, [sp, #16]
 801688a:	1a2d      	subs	r5, r5, r0
 801688c:	9803      	ldr	r0, [sp, #12]
 801688e:	eba0 000a 	sub.w	r0, r0, sl
 8016892:	b280      	uxth	r0, r0
 8016894:	b2ad      	uxth	r5, r5
 8016896:	4346      	muls	r6, r0
 8016898:	9804      	ldr	r0, [sp, #16]
 801689a:	fb0c 6605 	mla	r6, ip, r5, r6
 801689e:	fb00 6707 	mla	r7, r0, r7, r6
 80168a2:	fb0a 7404 	mla	r4, sl, r4, r7
 80168a6:	b292      	uxth	r2, r2
 80168a8:	f3c4 2407 	ubfx	r4, r4, #8, #8
 80168ac:	4354      	muls	r4, r2
 80168ae:	ea4f 535e 	mov.w	r3, lr, lsr #21
 80168b2:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80168b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80168ba:	f104 0a01 	add.w	sl, r4, #1
 80168be:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80168c2:	ea43 0e0e 	orr.w	lr, r3, lr
 80168c6:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80168ca:	fa1f f38e 	uxth.w	r3, lr
 80168ce:	1208      	asrs	r0, r1, #8
 80168d0:	ea6f 2414 	mvn.w	r4, r4, lsr #8
 80168d4:	b2e4      	uxtb	r4, r4
 80168d6:	121d      	asrs	r5, r3, #8
 80168d8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80168dc:	fb10 f004 	smulbb	r0, r0, r4
 80168e0:	10ce      	asrs	r6, r1, #3
 80168e2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80168e6:	00c9      	lsls	r1, r1, #3
 80168e8:	fb05 0502 	mla	r5, r5, r2, r0
 80168ec:	b2c9      	uxtb	r1, r1
 80168ee:	10d8      	asrs	r0, r3, #3
 80168f0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80168f4:	00db      	lsls	r3, r3, #3
 80168f6:	fb16 f604 	smulbb	r6, r6, r4
 80168fa:	b2db      	uxtb	r3, r3
 80168fc:	fb11 f404 	smulbb	r4, r1, r4
 8016900:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8016904:	fb00 6002 	mla	r0, r0, r2, r6
 8016908:	fb03 4202 	mla	r2, r3, r2, r4
 801690c:	b2ad      	uxth	r5, r5
 801690e:	b292      	uxth	r2, r2
 8016910:	1c6b      	adds	r3, r5, #1
 8016912:	1c51      	adds	r1, r2, #1
 8016914:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8016918:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801691c:	b280      	uxth	r0, r0
 801691e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016922:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016926:	4313      	orrs	r3, r2
 8016928:	1c42      	adds	r2, r0, #1
 801692a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801692e:	0940      	lsrs	r0, r0, #5
 8016930:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016934:	9a05      	ldr	r2, [sp, #20]
 8016936:	4303      	orrs	r3, r0
 8016938:	8013      	strh	r3, [r2, #0]
 801693a:	b007      	add	sp, #28
 801693c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016940:	2d0f      	cmp	r5, #15
 8016942:	f63f af35 	bhi.w	80167b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b4>
 8016946:	24ff      	movs	r4, #255	; 0xff
 8016948:	460a      	mov	r2, r1
 801694a:	4608      	mov	r0, r1
 801694c:	4627      	mov	r7, r4
 801694e:	e752      	b.n	80167f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1fa>
 8016950:	0801f387 	.word	0x0801f387
 8016954:	0801f8e5 	.word	0x0801f8e5
 8016958:	0801f40f 	.word	0x0801f40f

0801695c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801695c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016960:	ed2d 8b08 	vpush	{d8-d11}
 8016964:	b099      	sub	sp, #100	; 0x64
 8016966:	eeb0 aa40 	vmov.f32	s20, s0
 801696a:	9308      	str	r3, [sp, #32]
 801696c:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8016970:	9e2f      	ldr	r6, [sp, #188]	; 0xbc
 8016972:	930b      	str	r3, [sp, #44]	; 0x2c
 8016974:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8016978:	9314      	str	r3, [sp, #80]	; 0x50
 801697a:	9113      	str	r1, [sp, #76]	; 0x4c
 801697c:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8016980:	9017      	str	r0, [sp, #92]	; 0x5c
 8016982:	6870      	ldr	r0, [r6, #4]
 8016984:	9216      	str	r2, [sp, #88]	; 0x58
 8016986:	fb00 1303 	mla	r3, r0, r3, r1
 801698a:	6831      	ldr	r1, [r6, #0]
 801698c:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 801698e:	f9bd 50c8 	ldrsh.w	r5, [sp, #200]	; 0xc8
 8016992:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 8016996:	9309      	str	r3, [sp, #36]	; 0x24
 8016998:	6813      	ldr	r3, [r2, #0]
 801699a:	930c      	str	r3, [sp, #48]	; 0x30
 801699c:	6853      	ldr	r3, [r2, #4]
 801699e:	930d      	str	r3, [sp, #52]	; 0x34
 80169a0:	006b      	lsls	r3, r5, #1
 80169a2:	9312      	str	r3, [sp, #72]	; 0x48
 80169a4:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80169a8:	930a      	str	r3, [sp, #40]	; 0x28
 80169aa:	eef0 9a60 	vmov.f32	s19, s1
 80169ae:	eeb0 9a41 	vmov.f32	s18, s2
 80169b2:	eeb0 8a62 	vmov.f32	s16, s5
 80169b6:	eef0 8a43 	vmov.f32	s17, s6
 80169ba:	eef0 ba44 	vmov.f32	s23, s8
 80169be:	eeb0 ba64 	vmov.f32	s22, s9
 80169c2:	eef0 aa45 	vmov.f32	s21, s10
 80169c6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80169c8:	2b00      	cmp	r3, #0
 80169ca:	dc03      	bgt.n	80169d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 80169cc:	9b16      	ldr	r3, [sp, #88]	; 0x58
 80169ce:	2b00      	cmp	r3, #0
 80169d0:	f340 83bf 	ble.w	8017152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 80169d4:	9b08      	ldr	r3, [sp, #32]
 80169d6:	2b00      	cmp	r3, #0
 80169d8:	f340 81cb 	ble.w	8016d72 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x416>
 80169dc:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80169de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80169e0:	1412      	asrs	r2, r2, #16
 80169e2:	ea4f 4323 	mov.w	r3, r3, asr #16
 80169e6:	d42f      	bmi.n	8016a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xec>
 80169e8:	1c51      	adds	r1, r2, #1
 80169ea:	428d      	cmp	r5, r1
 80169ec:	dd2f      	ble.n	8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80169ee:	2b00      	cmp	r3, #0
 80169f0:	db2d      	blt.n	8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80169f2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80169f4:	1c59      	adds	r1, r3, #1
 80169f6:	4288      	cmp	r0, r1
 80169f8:	dd29      	ble.n	8016a4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf2>
 80169fa:	9b08      	ldr	r3, [sp, #32]
 80169fc:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80169fe:	992b      	ldr	r1, [sp, #172]	; 0xac
 8016a00:	3b01      	subs	r3, #1
 8016a02:	fb02 1203 	mla	r2, r2, r3, r1
 8016a06:	1412      	asrs	r2, r2, #16
 8016a08:	d42b      	bmi.n	8016a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016a0a:	3201      	adds	r2, #1
 8016a0c:	4295      	cmp	r5, r2
 8016a0e:	dd28      	ble.n	8016a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016a10:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8016a12:	992c      	ldr	r1, [sp, #176]	; 0xb0
 8016a14:	fb02 1303 	mla	r3, r2, r3, r1
 8016a18:	141b      	asrs	r3, r3, #16
 8016a1a:	d422      	bmi.n	8016a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016a1c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a1e:	3301      	adds	r3, #1
 8016a20:	429a      	cmp	r2, r3
 8016a22:	dd1e      	ble.n	8016a62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x106>
 8016a24:	9b08      	ldr	r3, [sp, #32]
 8016a26:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8016a2a:	9315      	str	r3, [sp, #84]	; 0x54
 8016a2c:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016a30:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016a32:	2b00      	cmp	r3, #0
 8016a34:	f300 8217 	bgt.w	8016e66 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x50a>
 8016a38:	9b08      	ldr	r3, [sp, #32]
 8016a3a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8016a3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016a40:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016a44:	9309      	str	r3, [sp, #36]	; 0x24
 8016a46:	e196      	b.n	8016d76 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 8016a48:	1c57      	adds	r7, r2, #1
 8016a4a:	f040 8183 	bne.w	8016d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016a4e:	42aa      	cmp	r2, r5
 8016a50:	f280 8180 	bge.w	8016d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016a54:	1c5e      	adds	r6, r3, #1
 8016a56:	f2c0 817d 	blt.w	8016d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016a5a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016a5c:	4293      	cmp	r3, r2
 8016a5e:	f280 8179 	bge.w	8016d54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f8>
 8016a62:	9b08      	ldr	r3, [sp, #32]
 8016a64:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8016a66:	9315      	str	r3, [sp, #84]	; 0x54
 8016a68:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8016a6c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016a6e:	2b00      	cmp	r3, #0
 8016a70:	dde2      	ble.n	8016a38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 8016a72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016a74:	1419      	asrs	r1, r3, #16
 8016a76:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016a78:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016a7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016a7e:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8016a82:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016a84:	141b      	asrs	r3, r3, #16
 8016a86:	f100 81d3 	bmi.w	8016e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d4>
 8016a8a:	1c58      	adds	r0, r3, #1
 8016a8c:	4285      	cmp	r5, r0
 8016a8e:	f340 81d1 	ble.w	8016e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016a92:	2900      	cmp	r1, #0
 8016a94:	f2c0 81ce 	blt.w	8016e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016a98:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8016a9a:	1c48      	adds	r0, r1, #1
 8016a9c:	4284      	cmp	r4, r0
 8016a9e:	f340 81c9 	ble.w	8016e34 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d8>
 8016aa2:	fb01 3105 	mla	r1, r1, r5, r3
 8016aa6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016aa8:	fa1f fe82 	uxth.w	lr, r2
 8016aac:	eb03 0a01 	add.w	sl, r3, r1
 8016ab0:	ea4f 100e 	mov.w	r0, lr, lsl #4
 8016ab4:	f813 9001 	ldrb.w	r9, [r3, r1]
 8016ab8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016abc:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016ac0:	b29b      	uxth	r3, r3
 8016ac2:	f1bc 0f00 	cmp.w	ip, #0
 8016ac6:	f000 8195 	beq.w	8016df4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x498>
 8016aca:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016ace:	940e      	str	r4, [sp, #56]	; 0x38
 8016ad0:	eb0a 0b05 	add.w	fp, sl, r5
 8016ad4:	fa1f fa8c 	uxth.w	sl, ip
 8016ad8:	fb0a fe0e 	mul.w	lr, sl, lr
 8016adc:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8016ae0:	fa1f fa8a 	uxth.w	sl, sl
 8016ae4:	eba0 000e 	sub.w	r0, r0, lr
 8016ae8:	eba3 030a 	sub.w	r3, r3, sl
 8016aec:	b280      	uxth	r0, r0
 8016aee:	fb08 f000 	mul.w	r0, r8, r0
 8016af2:	b29b      	uxth	r3, r3
 8016af4:	fb09 0303 	mla	r3, r9, r3, r0
 8016af8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016afa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016afe:	940f      	str	r4, [sp, #60]	; 0x3c
 8016b00:	fb0a 3300 	mla	r3, sl, r0, r3
 8016b04:	fb0e 3304 	mla	r3, lr, r4, r3
 8016b08:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016b0c:	2b00      	cmp	r3, #0
 8016b0e:	f000 8114 	beq.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016b12:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016b14:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016b16:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016b1a:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8016b1e:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 8016b22:	f000 816c 	beq.w	8016dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a2>
 8016b26:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016b2a:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016b2e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b32:	fb09 f101 	mul.w	r1, r9, r1
 8016b36:	fb0a fe0e 	mul.w	lr, sl, lr
 8016b3a:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8016b3e:	f101 0b20 	add.w	fp, r1, #32
 8016b42:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016b46:	44ce      	add	lr, r9
 8016b48:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8016b4c:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016b50:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8016b54:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016b58:	ea4e 0909 	orr.w	r9, lr, r9
 8016b5c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016b60:	8841      	ldrh	r1, [r0, #2]
 8016b62:	d019      	beq.n	8016b98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8016b64:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016b68:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016b6c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b70:	fb0a fe0e 	mul.w	lr, sl, lr
 8016b74:	fb08 f801 	mul.w	r8, r8, r1
 8016b78:	f108 0b20 	add.w	fp, r8, #32
 8016b7c:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 8016b80:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8016b84:	448e      	add	lr, r1
 8016b86:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 8016b8a:	0a09      	lsrs	r1, r1, #8
 8016b8c:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 8016b90:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016b94:	ea4a 0101 	orr.w	r1, sl, r1
 8016b98:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8016b9c:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016ba0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016ba4:	ea4e 0909 	orr.w	r9, lr, r9
 8016ba8:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 8016bac:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016bb0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016bb4:	ea4e 0e01 	orr.w	lr, lr, r1
 8016bb8:	f1bc 0f00 	cmp.w	ip, #0
 8016bbc:	f000 8121 	beq.w	8016e02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 8016bc0:	9912      	ldr	r1, [sp, #72]	; 0x48
 8016bc2:	eb00 0801 	add.w	r8, r0, r1
 8016bc6:	5a41      	ldrh	r1, [r0, r1]
 8016bc8:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016bca:	28ff      	cmp	r0, #255	; 0xff
 8016bcc:	d019      	beq.n	8016c02 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a6>
 8016bce:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8016bd0:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8016bd4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016bd8:	fb04 fb01 	mul.w	fp, r4, r1
 8016bdc:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016be0:	fb0a fa00 	mul.w	sl, sl, r0
 8016be4:	f10b 0020 	add.w	r0, fp, #32
 8016be8:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016bec:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8016bf0:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016bf4:	4451      	add	r1, sl
 8016bf6:	0a00      	lsrs	r0, r0, #8
 8016bf8:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016bfc:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016c00:	4301      	orrs	r1, r0
 8016c02:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8016c04:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8016c08:	2cff      	cmp	r4, #255	; 0xff
 8016c0a:	d01a      	beq.n	8016c42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2e6>
 8016c0c:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8016c10:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016c14:	fb04 fb00 	mul.w	fp, r4, r0
 8016c18:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016c1c:	fb0a fa08 	mul.w	sl, sl, r8
 8016c20:	f10b 0820 	add.w	r8, fp, #32
 8016c24:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8016c28:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8016c2c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016c30:	4450      	add	r0, sl
 8016c32:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8016c36:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8016c3a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016c3e:	ea40 0008 	orr.w	r0, r0, r8
 8016c42:	fb1c f802 	smulbb	r8, ip, r2
 8016c46:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8016c4a:	f1cc 0a10 	rsb	sl, ip, #16
 8016c4e:	ebaa 0a02 	sub.w	sl, sl, r2
 8016c52:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016c56:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8016c5a:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8016c5e:	fb0e f202 	mul.w	r2, lr, r2
 8016c62:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016c66:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 8016c6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016c6e:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 8016c72:	fb09 220a 	mla	r2, r9, sl, r2
 8016c76:	ea4b 0101 	orr.w	r1, fp, r1
 8016c7a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016c7e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016c82:	fb0c 2201 	mla	r2, ip, r1, r2
 8016c86:	ea4e 0000 	orr.w	r0, lr, r0
 8016c8a:	fb08 2800 	mla	r8, r8, r0, r2
 8016c8e:	ea4f 5258 	mov.w	r2, r8, lsr #21
 8016c92:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016c96:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016c9a:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8016c9e:	ea42 0808 	orr.w	r8, r2, r8
 8016ca2:	fa1f f288 	uxth.w	r2, r8
 8016ca6:	2bff      	cmp	r3, #255	; 0xff
 8016ca8:	d103      	bne.n	8016cb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x356>
 8016caa:	9914      	ldr	r1, [sp, #80]	; 0x50
 8016cac:	29ff      	cmp	r1, #255	; 0xff
 8016cae:	f000 80bd 	beq.w	8016e2c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4d0>
 8016cb2:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016cb4:	f8b7 c000 	ldrh.w	ip, [r7]
 8016cb8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8016cba:	434b      	muls	r3, r1
 8016cbc:	f103 0e01 	add.w	lr, r3, #1
 8016cc0:	eb0e 2323 	add.w	r3, lr, r3, asr #8
 8016cc4:	ea6f 2e23 	mvn.w	lr, r3, asr #8
 8016cc8:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016ccc:	fa5f fe8e 	uxtb.w	lr, lr
 8016cd0:	1213      	asrs	r3, r2, #8
 8016cd2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016cd6:	fb10 f00e 	smulbb	r0, r0, lr
 8016cda:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8016cde:	fb03 0301 	mla	r3, r3, r1, r0
 8016ce2:	b298      	uxth	r0, r3
 8016ce4:	ea4f 03ec 	mov.w	r3, ip, asr #3
 8016ce8:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016cec:	10d1      	asrs	r1, r2, #3
 8016cee:	fa5f fc8c 	uxtb.w	ip, ip
 8016cf2:	00d2      	lsls	r2, r2, #3
 8016cf4:	fb1c fc0e 	smulbb	ip, ip, lr
 8016cf8:	b2d2      	uxtb	r2, r2
 8016cfa:	fb02 c204 	mla	r2, r2, r4, ip
 8016cfe:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8016d02:	fb13 f30e 	smulbb	r3, r3, lr
 8016d06:	b292      	uxth	r2, r2
 8016d08:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016d0c:	fb01 3104 	mla	r1, r1, r4, r3
 8016d10:	f102 0c01 	add.w	ip, r2, #1
 8016d14:	1c43      	adds	r3, r0, #1
 8016d16:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016d1a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8016d1e:	b289      	uxth	r1, r1
 8016d20:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016d24:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8016d28:	4313      	orrs	r3, r2
 8016d2a:	1c4a      	adds	r2, r1, #1
 8016d2c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016d30:	0949      	lsrs	r1, r1, #5
 8016d32:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016d36:	430b      	orrs	r3, r1
 8016d38:	803b      	strh	r3, [r7, #0]
 8016d3a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d3c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016d3e:	4413      	add	r3, r2
 8016d40:	932b      	str	r3, [sp, #172]	; 0xac
 8016d42:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016d44:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d46:	441a      	add	r2, r3
 8016d48:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8016d4a:	922c      	str	r2, [sp, #176]	; 0xb0
 8016d4c:	3b01      	subs	r3, #1
 8016d4e:	3702      	adds	r7, #2
 8016d50:	9315      	str	r3, [sp, #84]	; 0x54
 8016d52:	e68b      	b.n	8016a6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8016d54:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016d56:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8016d58:	4413      	add	r3, r2
 8016d5a:	932b      	str	r3, [sp, #172]	; 0xac
 8016d5c:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8016d5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8016d60:	441a      	add	r2, r3
 8016d62:	9b08      	ldr	r3, [sp, #32]
 8016d64:	922c      	str	r2, [sp, #176]	; 0xb0
 8016d66:	3b01      	subs	r3, #1
 8016d68:	9308      	str	r3, [sp, #32]
 8016d6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8016d6c:	3302      	adds	r3, #2
 8016d6e:	9309      	str	r3, [sp, #36]	; 0x24
 8016d70:	e630      	b.n	80169d4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8016d72:	f47f ae42 	bne.w	80169fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9e>
 8016d76:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016d78:	2b00      	cmp	r3, #0
 8016d7a:	f340 81ea 	ble.w	8017152 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f6>
 8016d7e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016d82:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016d86:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016d8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016d8c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016d90:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016d94:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016d98:	eef0 6a48 	vmov.f32	s13, s16
 8016d9c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016da0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016da4:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016da8:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8016dac:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016db0:	eef0 6a68 	vmov.f32	s13, s17
 8016db4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016db8:	ee18 2a10 	vmov	r2, s16
 8016dbc:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016dc0:	fb92 f3f3 	sdiv	r3, r2, r3
 8016dc4:	ee18 2a90 	vmov	r2, s17
 8016dc8:	932d      	str	r3, [sp, #180]	; 0xb4
 8016dca:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016dcc:	fb92 f3f3 	sdiv	r3, r2, r3
 8016dd0:	932e      	str	r3, [sp, #184]	; 0xb8
 8016dd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8016dd4:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8016dd6:	3b01      	subs	r3, #1
 8016dd8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016ddc:	9313      	str	r3, [sp, #76]	; 0x4c
 8016dde:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8016de0:	edcd 6a2c 	vstr	s13, [sp, #176]	; 0xb0
 8016de4:	bf08      	it	eq
 8016de6:	4613      	moveq	r3, r2
 8016de8:	9308      	str	r3, [sp, #32]
 8016dea:	eef0 8a67 	vmov.f32	s17, s15
 8016dee:	eeb0 8a47 	vmov.f32	s16, s14
 8016df2:	e5e8      	b.n	80169c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 8016df4:	fb08 f000 	mul.w	r0, r8, r0
 8016df8:	fb09 0303 	mla	r3, r9, r3, r0
 8016dfc:	e684      	b.n	8016b08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ac>
 8016dfe:	4689      	mov	r9, r1
 8016e00:	e6ac      	b.n	8016b5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x200>
 8016e02:	f1c2 0010 	rsb	r0, r2, #16
 8016e06:	fb0e f202 	mul.w	r2, lr, r2
 8016e0a:	fb09 2900 	mla	r9, r9, r0, r2
 8016e0e:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8016e12:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8016e16:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016e1a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016e1e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016e22:	ea42 0909 	orr.w	r9, r2, r9
 8016e26:	fa1f f289 	uxth.w	r2, r9
 8016e2a:	e73c      	b.n	8016ca6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8016e2c:	803a      	strh	r2, [r7, #0]
 8016e2e:	e784      	b.n	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e30:	1c5c      	adds	r4, r3, #1
 8016e32:	d182      	bne.n	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e34:	429d      	cmp	r5, r3
 8016e36:	dd80      	ble.n	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e38:	1c48      	adds	r0, r1, #1
 8016e3a:	f6ff af7e 	blt.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e3e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8016e40:	4288      	cmp	r0, r1
 8016e42:	f77f af7a 	ble.w	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e46:	9814      	ldr	r0, [sp, #80]	; 0x50
 8016e48:	9302      	str	r3, [sp, #8]
 8016e4a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8016e4c:	e9cd 1203 	strd	r1, r2, [sp, #12]
 8016e50:	e9cd c005 	strd	ip, r0, [sp, #20]
 8016e54:	e9cd 5300 	strd	r5, r3, [sp]
 8016e58:	4639      	mov	r1, r7
 8016e5a:	e9dd 230c 	ldrd	r2, r3, [sp, #48]	; 0x30
 8016e5e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8016e60:	f7ff fbcc 	bl	80165fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 8016e64:	e769      	b.n	8016d3a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3de>
 8016e66:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016e68:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016e6c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016e6e:	141f      	asrs	r7, r3, #16
 8016e70:	f3c3 3003 	ubfx	r0, r3, #12, #4
 8016e74:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8016e76:	141b      	asrs	r3, r3, #16
 8016e78:	fb05 3707 	mla	r7, r5, r7, r3
 8016e7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8016e7e:	fa1f fc82 	uxth.w	ip, r2
 8016e82:	eb03 0a07 	add.w	sl, r3, r7
 8016e86:	ea4f 110c 	mov.w	r1, ip, lsl #4
 8016e8a:	f813 9007 	ldrb.w	r9, [r3, r7]
 8016e8e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016e92:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 8016e96:	b29b      	uxth	r3, r3
 8016e98:	2800      	cmp	r0, #0
 8016e9a:	f000 813f 	beq.w	801711c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7c0>
 8016e9e:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8016ea2:	9410      	str	r4, [sp, #64]	; 0x40
 8016ea4:	eb0a 0b05 	add.w	fp, sl, r5
 8016ea8:	fa1f fa80 	uxth.w	sl, r0
 8016eac:	fb0a fc0c 	mul.w	ip, sl, ip
 8016eb0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016eb4:	fa1f fa8a 	uxth.w	sl, sl
 8016eb8:	eba1 010c 	sub.w	r1, r1, ip
 8016ebc:	eba3 030a 	sub.w	r3, r3, sl
 8016ec0:	b289      	uxth	r1, r1
 8016ec2:	fb08 f101 	mul.w	r1, r8, r1
 8016ec6:	b29b      	uxth	r3, r3
 8016ec8:	fb09 1303 	mla	r3, r9, r3, r1
 8016ecc:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016ece:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016ed2:	9411      	str	r4, [sp, #68]	; 0x44
 8016ed4:	fb0a 3301 	mla	r3, sl, r1, r3
 8016ed8:	fb0c 3304 	mla	r3, ip, r4, r3
 8016edc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8016ee0:	2b00      	cmp	r3, #0
 8016ee2:	f000 810d 	beq.w	8017100 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8016ee6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8016ee8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016eea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8016eee:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8016ef2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016ef6:	f000 8116 	beq.w	8017126 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ca>
 8016efa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016efe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8016f02:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f06:	fb09 f707 	mul.w	r7, r9, r7
 8016f0a:	fb0a fc0c 	mul.w	ip, sl, ip
 8016f0e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8016f12:	f107 0b20 	add.w	fp, r7, #32
 8016f16:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016f1a:	44cc      	add	ip, r9
 8016f1c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8016f20:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8016f24:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016f28:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016f2c:	ea4c 0909 	orr.w	r9, ip, r9
 8016f30:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8016f34:	884f      	ldrh	r7, [r1, #2]
 8016f36:	d019      	beq.n	8016f6c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x610>
 8016f38:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8016f3c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8016f40:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f44:	fb08 f807 	mul.w	r8, r8, r7
 8016f48:	fb0a fc0c 	mul.w	ip, sl, ip
 8016f4c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8016f50:	f108 0b20 	add.w	fp, r8, #32
 8016f54:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8016f58:	44bc      	add	ip, r7
 8016f5a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8016f5e:	0a3f      	lsrs	r7, r7, #8
 8016f60:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016f64:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016f68:	ea4c 0707 	orr.w	r7, ip, r7
 8016f6c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8016f70:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016f74:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016f78:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8016f7c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8016f80:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016f84:	ea4c 0909 	orr.w	r9, ip, r9
 8016f88:	ea4a 0707 	orr.w	r7, sl, r7
 8016f8c:	2800      	cmp	r0, #0
 8016f8e:	f000 80cc 	beq.w	801712a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ce>
 8016f92:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016f94:	eb01 0c04 	add.w	ip, r1, r4
 8016f98:	f831 8004 	ldrh.w	r8, [r1, r4]
 8016f9c:	9910      	ldr	r1, [sp, #64]	; 0x40
 8016f9e:	29ff      	cmp	r1, #255	; 0xff
 8016fa0:	d01a      	beq.n	8016fd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x67c>
 8016fa2:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8016fa4:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8016fa8:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016fac:	fb04 fb08 	mul.w	fp, r4, r8
 8016fb0:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016fb4:	fb0a fa01 	mul.w	sl, sl, r1
 8016fb8:	f10b 0120 	add.w	r1, fp, #32
 8016fbc:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8016fc0:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8016fc4:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8016fc8:	44d0      	add	r8, sl
 8016fca:	0a09      	lsrs	r1, r1, #8
 8016fcc:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8016fd0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016fd4:	ea48 0801 	orr.w	r8, r8, r1
 8016fd8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8016fda:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8016fde:	2cff      	cmp	r4, #255	; 0xff
 8016fe0:	d01a      	beq.n	8017018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6bc>
 8016fe2:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8016fe6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016fea:	fb04 fb01 	mul.w	fp, r4, r1
 8016fee:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8016ff2:	fb0a fa0c 	mul.w	sl, sl, ip
 8016ff6:	f10b 0c20 	add.w	ip, fp, #32
 8016ffa:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8016ffe:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017002:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017006:	4451      	add	r1, sl
 8017008:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801700c:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017010:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017014:	ea41 010c 	orr.w	r1, r1, ip
 8017018:	fb10 fc02 	smulbb	ip, r0, r2
 801701c:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017020:	f1c0 0a10 	rsb	sl, r0, #16
 8017024:	ebaa 0a02 	sub.w	sl, sl, r2
 8017028:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 801702c:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017030:	437a      	muls	r2, r7
 8017032:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017036:	040f      	lsls	r7, r1, #16
 8017038:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801703c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017040:	fb09 220a 	mla	r2, r9, sl, r2
 8017044:	ea4b 0808 	orr.w	r8, fp, r8
 8017048:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 801704c:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8017050:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017054:	fb00 2208 	mla	r2, r0, r8, r2
 8017058:	4339      	orrs	r1, r7
 801705a:	fb0c 2201 	mla	r2, ip, r1, r2
 801705e:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017062:	0952      	lsrs	r2, r2, #5
 8017064:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017068:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801706c:	ea49 0202 	orr.w	r2, r9, r2
 8017070:	2bff      	cmp	r3, #255	; 0xff
 8017072:	b292      	uxth	r2, r2
 8017074:	d102      	bne.n	801707c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x720>
 8017076:	9914      	ldr	r1, [sp, #80]	; 0x50
 8017078:	29ff      	cmp	r1, #255	; 0xff
 801707a:	d067      	beq.n	801714c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7f0>
 801707c:	990a      	ldr	r1, [sp, #40]	; 0x28
 801707e:	f8be 0000 	ldrh.w	r0, [lr]
 8017082:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8017084:	434b      	muls	r3, r1
 8017086:	1c59      	adds	r1, r3, #1
 8017088:	eb01 2323 	add.w	r3, r1, r3, asr #8
 801708c:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8017090:	1201      	asrs	r1, r0, #8
 8017092:	b2db      	uxtb	r3, r3
 8017094:	1217      	asrs	r7, r2, #8
 8017096:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801709a:	fb11 f103 	smulbb	r1, r1, r3
 801709e:	ea4f 0ce0 	mov.w	ip, r0, asr #3
 80170a2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80170a6:	00c0      	lsls	r0, r0, #3
 80170a8:	fb07 1704 	mla	r7, r7, r4, r1
 80170ac:	b2c0      	uxtb	r0, r0
 80170ae:	10d1      	asrs	r1, r2, #3
 80170b0:	00d2      	lsls	r2, r2, #3
 80170b2:	fb10 f003 	smulbb	r0, r0, r3
 80170b6:	b2d2      	uxtb	r2, r2
 80170b8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 80170bc:	fb02 0204 	mla	r2, r2, r4, r0
 80170c0:	fb1c fc03 	smulbb	ip, ip, r3
 80170c4:	b2bf      	uxth	r7, r7
 80170c6:	b292      	uxth	r2, r2
 80170c8:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80170cc:	fb01 c104 	mla	r1, r1, r4, ip
 80170d0:	1c7b      	adds	r3, r7, #1
 80170d2:	f102 0c01 	add.w	ip, r2, #1
 80170d6:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 80170da:	eb0c 2c12 	add.w	ip, ip, r2, lsr #8
 80170de:	b289      	uxth	r1, r1
 80170e0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80170e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80170e8:	ea47 070c 	orr.w	r7, r7, ip
 80170ec:	f101 0c01 	add.w	ip, r1, #1
 80170f0:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 80170f4:	0949      	lsrs	r1, r1, #5
 80170f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80170fa:	430f      	orrs	r7, r1
 80170fc:	f8ae 7000 	strh.w	r7, [lr]
 8017100:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8017102:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8017104:	4413      	add	r3, r2
 8017106:	932b      	str	r3, [sp, #172]	; 0xac
 8017108:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801710a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801710c:	441a      	add	r2, r3
 801710e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8017110:	922c      	str	r2, [sp, #176]	; 0xb0
 8017112:	3b01      	subs	r3, #1
 8017114:	f10e 0e02 	add.w	lr, lr, #2
 8017118:	9315      	str	r3, [sp, #84]	; 0x54
 801711a:	e489      	b.n	8016a30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 801711c:	fb08 f101 	mul.w	r1, r8, r1
 8017120:	fb09 1303 	mla	r3, r9, r3, r1
 8017124:	e6da      	b.n	8016edc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x580>
 8017126:	46b9      	mov	r9, r7
 8017128:	e702      	b.n	8016f30 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d4>
 801712a:	f1c2 0110 	rsb	r1, r2, #16
 801712e:	437a      	muls	r2, r7
 8017130:	fb09 2901 	mla	r9, r9, r1, r2
 8017134:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017138:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801713c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017140:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017144:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017148:	4302      	orrs	r2, r0
 801714a:	e791      	b.n	8017070 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 801714c:	f8ae 2000 	strh.w	r2, [lr]
 8017150:	e7d6      	b.n	8017100 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7a4>
 8017152:	b019      	add	sp, #100	; 0x64
 8017154:	ecbd 8b08 	vpop	{d8-d11}
 8017158:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801715c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801715c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017160:	b087      	sub	sp, #28
 8017162:	e9dd e012 	ldrd	lr, r0, [sp, #72]	; 0x48
 8017166:	f9bd 4040 	ldrsh.w	r4, [sp, #64]	; 0x40
 801716a:	9105      	str	r1, [sp, #20]
 801716c:	fb00 e604 	mla	r6, r0, r4, lr
 8017170:	f89d 1054 	ldrb.w	r1, [sp, #84]	; 0x54
 8017174:	9102      	str	r1, [sp, #8]
 8017176:	eb03 0146 	add.w	r1, r3, r6, lsl #1
 801717a:	9103      	str	r1, [sp, #12]
 801717c:	9905      	ldr	r1, [sp, #20]
 801717e:	f9bd 7044 	ldrsh.w	r7, [sp, #68]	; 0x44
 8017182:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8017186:	8809      	ldrh	r1, [r1, #0]
 8017188:	2800      	cmp	r0, #0
 801718a:	eb02 0a06 	add.w	sl, r2, r6
 801718e:	f2c0 80ca 	blt.w	8017326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017192:	4287      	cmp	r7, r0
 8017194:	f340 80c7 	ble.w	8017326 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ca>
 8017198:	f1be 0f00 	cmp.w	lr, #0
 801719c:	f2c0 80bf 	blt.w	801731e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80171a0:	4574      	cmp	r4, lr
 80171a2:	f340 80bc 	ble.w	801731e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c2>
 80171a6:	f812 c006 	ldrb.w	ip, [r2, r6]
 80171aa:	f833 9016 	ldrh.w	r9, [r3, r6, lsl #1]
 80171ae:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 80171b2:	d01c      	beq.n	80171ee <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x92>
 80171b4:	f429 66fc 	bic.w	r6, r9, #2016	; 0x7e0
 80171b8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 80171bc:	4372      	muls	r2, r6
 80171be:	f64f 081f 	movw	r8, #63519	; 0xf81f
 80171c2:	ea08 1352 	and.w	r3, r8, r2, lsr #5
 80171c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80171ca:	f602 0201 	addw	r2, r2, #2049	; 0x801
 80171ce:	fb0c f609 	mul.w	r6, ip, r9
 80171d2:	eb03 0902 	add.w	r9, r3, r2
 80171d6:	ea08 1959 	and.w	r9, r8, r9, lsr #5
 80171da:	f106 0820 	add.w	r8, r6, #32
 80171de:	eb08 2816 	add.w	r8, r8, r6, lsr #8
 80171e2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 80171e6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80171ea:	ea49 0908 	orr.w	r9, r9, r8
 80171ee:	fa1f f989 	uxth.w	r9, r9
 80171f2:	f11e 0301 	adds.w	r3, lr, #1
 80171f6:	f100 809b 	bmi.w	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 80171fa:	429c      	cmp	r4, r3
 80171fc:	f340 8098 	ble.w	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017200:	2d00      	cmp	r5, #0
 8017202:	f000 8095 	beq.w	8017330 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d4>
 8017206:	f89a 6001 	ldrb.w	r6, [sl, #1]
 801720a:	9b03      	ldr	r3, [sp, #12]
 801720c:	2eff      	cmp	r6, #255	; 0xff
 801720e:	885b      	ldrh	r3, [r3, #2]
 8017210:	d01b      	beq.n	801724a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xee>
 8017212:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8017216:	ea4f 08e6 	mov.w	r8, r6, asr #3
 801721a:	fb08 f202 	mul.w	r2, r8, r2
 801721e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017222:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8017226:	fb06 f803 	mul.w	r8, r6, r3
 801722a:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 801722e:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8017232:	441a      	add	r2, r3
 8017234:	f108 0320 	add.w	r3, r8, #32
 8017238:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 801723c:	0a1b      	lsrs	r3, r3, #8
 801723e:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8017242:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017246:	ea4b 0303 	orr.w	r3, fp, r3
 801724a:	b29b      	uxth	r3, r3
 801724c:	9301      	str	r3, [sp, #4]
 801724e:	3001      	adds	r0, #1
 8017250:	d474      	bmi.n	801733c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017252:	4287      	cmp	r7, r0
 8017254:	dd72      	ble.n	801733c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8017256:	9a02      	ldr	r2, [sp, #8]
 8017258:	2a00      	cmp	r2, #0
 801725a:	f000 8111 	beq.w	8017480 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>
 801725e:	f1be 0f00 	cmp.w	lr, #0
 8017262:	db68      	blt.n	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8017264:	4574      	cmp	r4, lr
 8017266:	dd66      	ble.n	8017336 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1da>
 8017268:	f81a 7004 	ldrb.w	r7, [sl, r4]
 801726c:	9a03      	ldr	r2, [sp, #12]
 801726e:	2fff      	cmp	r7, #255	; 0xff
 8017270:	f832 0014 	ldrh.w	r0, [r2, r4, lsl #1]
 8017274:	d01c      	beq.n	80172b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x154>
 8017276:	f420 62fc 	bic.w	r2, r0, #2016	; 0x7e0
 801727a:	ea4f 08e7 	mov.w	r8, r7, asr #3
 801727e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017282:	fb07 fb00 	mul.w	fp, r7, r0
 8017286:	fb08 f802 	mul.w	r8, r8, r2
 801728a:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801728e:	ea00 1258 	and.w	r2, r0, r8, lsr #5
 8017292:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8017296:	4490      	add	r8, r2
 8017298:	f10b 0220 	add.w	r2, fp, #32
 801729c:	eb02 2b1b 	add.w	fp, r2, fp, lsr #8
 80172a0:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 80172a4:	ea00 1058 	and.w	r0, r0, r8, lsr #5
 80172a8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80172ac:	ea40 000b 	orr.w	r0, r0, fp
 80172b0:	b280      	uxth	r0, r0
 80172b2:	f11e 0e01 	adds.w	lr, lr, #1
 80172b6:	d446      	bmi.n	8017346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80172b8:	4574      	cmp	r4, lr
 80172ba:	dd44      	ble.n	8017346 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ea>
 80172bc:	2d00      	cmp	r5, #0
 80172be:	d045      	beq.n	801734c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f0>
 80172c0:	1c62      	adds	r2, r4, #1
 80172c2:	9b03      	ldr	r3, [sp, #12]
 80172c4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80172c8:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80172cc:	2cff      	cmp	r4, #255	; 0xff
 80172ce:	d01c      	beq.n	801730a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ae>
 80172d0:	f422 6efc 	bic.w	lr, r2, #2016	; 0x7e0
 80172d4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80172d8:	fb08 fe0e 	mul.w	lr, r8, lr
 80172dc:	f64f 0a1f 	movw	sl, #63519	; 0xf81f
 80172e0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172e4:	fb04 f802 	mul.w	r8, r4, r2
 80172e8:	ea0a 125e 	and.w	r2, sl, lr, lsr #5
 80172ec:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80172f0:	4472      	add	r2, lr
 80172f2:	ea0a 1252 	and.w	r2, sl, r2, lsr #5
 80172f6:	f108 0a20 	add.w	sl, r8, #32
 80172fa:	eb0a 2a18 	add.w	sl, sl, r8, lsr #8
 80172fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017302:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017306:	ea42 020a 	orr.w	r2, r2, sl
 801730a:	b292      	uxth	r2, r2
 801730c:	2d0f      	cmp	r5, #15
 801730e:	d91f      	bls.n	8017350 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1f4>
 8017310:	4b5f      	ldr	r3, [pc, #380]	; (8017490 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x334>)
 8017312:	4a60      	ldr	r2, [pc, #384]	; (8017494 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x338>)
 8017314:	4860      	ldr	r0, [pc, #384]	; (8017498 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x33c>)
 8017316:	f240 3173 	movw	r1, #883	; 0x373
 801731a:	f004 f9e9 	bl	801b6f0 <__assert_func>
 801731e:	4689      	mov	r9, r1
 8017320:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8017324:	e765      	b.n	80171f2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x96>
 8017326:	26ff      	movs	r6, #255	; 0xff
 8017328:	9101      	str	r1, [sp, #4]
 801732a:	4689      	mov	r9, r1
 801732c:	46b4      	mov	ip, r6
 801732e:	e78e      	b.n	801724e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017330:	9101      	str	r1, [sp, #4]
 8017332:	26ff      	movs	r6, #255	; 0xff
 8017334:	e78b      	b.n	801724e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf2>
 8017336:	4608      	mov	r0, r1
 8017338:	27ff      	movs	r7, #255	; 0xff
 801733a:	e7ba      	b.n	80172b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x156>
 801733c:	24ff      	movs	r4, #255	; 0xff
 801733e:	460a      	mov	r2, r1
 8017340:	4608      	mov	r0, r1
 8017342:	4627      	mov	r7, r4
 8017344:	e7e2      	b.n	801730c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8017346:	460a      	mov	r2, r1
 8017348:	24ff      	movs	r4, #255	; 0xff
 801734a:	e7df      	b.n	801730c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 801734c:	460a      	mov	r2, r1
 801734e:	24ff      	movs	r4, #255	; 0xff
 8017350:	9b02      	ldr	r3, [sp, #8]
 8017352:	2b0f      	cmp	r3, #15
 8017354:	d8dc      	bhi.n	8017310 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017356:	f8bd e008 	ldrh.w	lr, [sp, #8]
 801735a:	fa1f f885 	uxth.w	r8, r5
 801735e:	fb08 fa0e 	mul.w	sl, r8, lr
 8017362:	ea4f 1308 	mov.w	r3, r8, lsl #4
 8017366:	ebca 1e0e 	rsb	lr, sl, lr, lsl #4
 801736a:	9303      	str	r3, [sp, #12]
 801736c:	fa1f f38e 	uxth.w	r3, lr
 8017370:	9304      	str	r3, [sp, #16]
 8017372:	ea4f 4809 	mov.w	r8, r9, lsl #16
 8017376:	9b02      	ldr	r3, [sp, #8]
 8017378:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801737c:	f008 68fc 	and.w	r8, r8, #132120576	; 0x7e00000
 8017380:	fb15 fe03 	smulbb	lr, r5, r3
 8017384:	ea48 0809 	orr.w	r8, r8, r9
 8017388:	f1c3 0910 	rsb	r9, r3, #16
 801738c:	9b01      	ldr	r3, [sp, #4]
 801738e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8017392:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8017396:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801739a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801739e:	eba9 0905 	sub.w	r9, r9, r5
 80173a2:	ea4b 0303 	orr.w	r3, fp, r3
 80173a6:	ebce 0545 	rsb	r5, lr, r5, lsl #1
 80173aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 80173ae:	eb0e 0949 	add.w	r9, lr, r9, lsl #1
 80173b2:	436b      	muls	r3, r5
 80173b4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80173b8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80173bc:	ea4b 0202 	orr.w	r2, fp, r2
 80173c0:	fb09 3308 	mla	r3, r9, r8, r3
 80173c4:	fb0e 3302 	mla	r3, lr, r2, r3
 80173c8:	0402      	lsls	r2, r0, #16
 80173ca:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80173ce:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80173d2:	4310      	orrs	r0, r2
 80173d4:	9a02      	ldr	r2, [sp, #8]
 80173d6:	ebce 0e42 	rsb	lr, lr, r2, lsl #1
 80173da:	9a03      	ldr	r2, [sp, #12]
 80173dc:	fb0e 3e00 	mla	lr, lr, r0, r3
 80173e0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80173e4:	9a04      	ldr	r2, [sp, #16]
 80173e6:	1a80      	subs	r0, r0, r2
 80173e8:	9a03      	ldr	r2, [sp, #12]
 80173ea:	eba2 020a 	sub.w	r2, r2, sl
 80173ee:	b292      	uxth	r2, r2
 80173f0:	b280      	uxth	r0, r0
 80173f2:	4356      	muls	r6, r2
 80173f4:	9a04      	ldr	r2, [sp, #16]
 80173f6:	fb0c 6600 	mla	r6, ip, r0, r6
 80173fa:	fb02 6707 	mla	r7, r2, r7, r6
 80173fe:	fb0a 7404 	mla	r4, sl, r4, r7
 8017402:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8017406:	1208      	asrs	r0, r1, #8
 8017408:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801740c:	ea6f 2424 	mvn.w	r4, r4, asr #8
 8017410:	b2e4      	uxtb	r4, r4
 8017412:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017416:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801741a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801741e:	4360      	muls	r0, r4
 8017420:	ea43 0e0e 	orr.w	lr, r3, lr
 8017424:	fa1f f38e 	uxth.w	r3, lr
 8017428:	1c42      	adds	r2, r0, #1
 801742a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801742e:	1218      	asrs	r0, r3, #8
 8017430:	10cd      	asrs	r5, r1, #3
 8017432:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017436:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801743a:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801743e:	4a17      	ldr	r2, [pc, #92]	; (801749c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x340>)
 8017440:	4365      	muls	r5, r4
 8017442:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8017446:	1c6a      	adds	r2, r5, #1
 8017448:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801744c:	00c9      	lsls	r1, r1, #3
 801744e:	10da      	asrs	r2, r3, #3
 8017450:	b2c9      	uxtb	r1, r1
 8017452:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017456:	434c      	muls	r4, r1
 8017458:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801745c:	1c61      	adds	r1, r4, #1
 801745e:	00d2      	lsls	r2, r2, #3
 8017460:	00db      	lsls	r3, r3, #3
 8017462:	eb01 2414 	add.w	r4, r1, r4, lsr #8
 8017466:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801746a:	b2db      	uxtb	r3, r3
 801746c:	4302      	orrs	r2, r0
 801746e:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8017472:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 8017476:	9a05      	ldr	r2, [sp, #20]
 8017478:	8013      	strh	r3, [r2, #0]
 801747a:	b007      	add	sp, #28
 801747c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017480:	2d0f      	cmp	r5, #15
 8017482:	f63f af45 	bhi.w	8017310 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b4>
 8017486:	24ff      	movs	r4, #255	; 0xff
 8017488:	460a      	mov	r2, r1
 801748a:	4608      	mov	r0, r1
 801748c:	4627      	mov	r7, r4
 801748e:	e762      	b.n	8017356 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1fa>
 8017490:	0801f387 	.word	0x0801f387
 8017494:	0801f8e5 	.word	0x0801f8e5
 8017498:	0801f40f 	.word	0x0801f40f
 801749c:	fffff800 	.word	0xfffff800

080174a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80174a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80174a4:	ed2d 8b08 	vpush	{d8-d11}
 80174a8:	b095      	sub	sp, #84	; 0x54
 80174aa:	eeb0 aa40 	vmov.f32	s20, s0
 80174ae:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 80174b0:	9306      	str	r3, [sp, #24]
 80174b2:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 80174b6:	9110      	str	r1, [sp, #64]	; 0x40
 80174b8:	9308      	str	r3, [sp, #32]
 80174ba:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80174be:	9013      	str	r0, [sp, #76]	; 0x4c
 80174c0:	6870      	ldr	r0, [r6, #4]
 80174c2:	9212      	str	r2, [sp, #72]	; 0x48
 80174c4:	fb00 1303 	mla	r3, r0, r3, r1
 80174c8:	6831      	ldr	r1, [r6, #0]
 80174ca:	9a30      	ldr	r2, [sp, #192]	; 0xc0
 80174cc:	f9bd 50b8 	ldrsh.w	r5, [sp, #184]	; 0xb8
 80174d0:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80174d4:	9307      	str	r3, [sp, #28]
 80174d6:	6813      	ldr	r3, [r2, #0]
 80174d8:	9309      	str	r3, [sp, #36]	; 0x24
 80174da:	6853      	ldr	r3, [r2, #4]
 80174dc:	930a      	str	r3, [sp, #40]	; 0x28
 80174de:	006b      	lsls	r3, r5, #1
 80174e0:	eef0 9a60 	vmov.f32	s19, s1
 80174e4:	eeb0 9a41 	vmov.f32	s18, s2
 80174e8:	eeb0 8a62 	vmov.f32	s16, s5
 80174ec:	eef0 8a43 	vmov.f32	s17, s6
 80174f0:	eef0 ba44 	vmov.f32	s23, s8
 80174f4:	eeb0 ba64 	vmov.f32	s22, s9
 80174f8:	eef0 aa45 	vmov.f32	s21, s10
 80174fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80174fe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017500:	2b00      	cmp	r3, #0
 8017502:	dc03      	bgt.n	801750c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 8017504:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017506:	2b00      	cmp	r3, #0
 8017508:	f340 83a3 	ble.w	8017c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 801750c:	9b06      	ldr	r3, [sp, #24]
 801750e:	2b00      	cmp	r3, #0
 8017510:	f340 81bc 	ble.w	801788c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ec>
 8017514:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8017516:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017518:	1412      	asrs	r2, r2, #16
 801751a:	ea4f 4323 	mov.w	r3, r3, asr #16
 801751e:	d42f      	bmi.n	8017580 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017520:	1c51      	adds	r1, r2, #1
 8017522:	428d      	cmp	r5, r1
 8017524:	dd2f      	ble.n	8017586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017526:	2b00      	cmp	r3, #0
 8017528:	db2d      	blt.n	8017586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 801752a:	9808      	ldr	r0, [sp, #32]
 801752c:	1c59      	adds	r1, r3, #1
 801752e:	4288      	cmp	r0, r1
 8017530:	dd29      	ble.n	8017586 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017532:	9b06      	ldr	r3, [sp, #24]
 8017534:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017536:	9927      	ldr	r1, [sp, #156]	; 0x9c
 8017538:	3b01      	subs	r3, #1
 801753a:	fb02 1203 	mla	r2, r2, r3, r1
 801753e:	1412      	asrs	r2, r2, #16
 8017540:	d42b      	bmi.n	801759a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017542:	3201      	adds	r2, #1
 8017544:	4295      	cmp	r5, r2
 8017546:	dd28      	ble.n	801759a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017548:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801754a:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801754c:	fb02 1303 	mla	r3, r2, r3, r1
 8017550:	141b      	asrs	r3, r3, #16
 8017552:	d422      	bmi.n	801759a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017554:	9a08      	ldr	r2, [sp, #32]
 8017556:	3301      	adds	r3, #1
 8017558:	429a      	cmp	r2, r3
 801755a:	dd1e      	ble.n	801759a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801755c:	9b06      	ldr	r3, [sp, #24]
 801755e:	f8dd e01c 	ldr.w	lr, [sp, #28]
 8017562:	9311      	str	r3, [sp, #68]	; 0x44
 8017564:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8017568:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801756a:	2b00      	cmp	r3, #0
 801756c:	f300 8208 	bgt.w	8017980 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e0>
 8017570:	9b06      	ldr	r3, [sp, #24]
 8017572:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8017576:	9b07      	ldr	r3, [sp, #28]
 8017578:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801757c:	9307      	str	r3, [sp, #28]
 801757e:	e187      	b.n	8017890 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3f0>
 8017580:	1c57      	adds	r7, r2, #1
 8017582:	f040 8174 	bne.w	801786e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017586:	42aa      	cmp	r2, r5
 8017588:	f280 8171 	bge.w	801786e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801758c:	1c5e      	adds	r6, r3, #1
 801758e:	f2c0 816e 	blt.w	801786e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 8017592:	9a08      	ldr	r2, [sp, #32]
 8017594:	4293      	cmp	r3, r2
 8017596:	f280 816a 	bge.w	801786e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ce>
 801759a:	9b06      	ldr	r3, [sp, #24]
 801759c:	9f07      	ldr	r7, [sp, #28]
 801759e:	9311      	str	r3, [sp, #68]	; 0x44
 80175a0:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80175a4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80175a6:	2b00      	cmp	r3, #0
 80175a8:	dde2      	ble.n	8017570 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 80175aa:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175ac:	1419      	asrs	r1, r3, #16
 80175ae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80175b0:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80175b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80175b6:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80175ba:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80175bc:	141b      	asrs	r3, r3, #16
 80175be:	f100 81c4 	bmi.w	801794a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4aa>
 80175c2:	1c58      	adds	r0, r3, #1
 80175c4:	4285      	cmp	r5, r0
 80175c6:	f340 81c2 	ble.w	801794e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80175ca:	2900      	cmp	r1, #0
 80175cc:	f2c0 81bf 	blt.w	801794e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80175d0:	9c08      	ldr	r4, [sp, #32]
 80175d2:	1c48      	adds	r0, r1, #1
 80175d4:	4284      	cmp	r4, r0
 80175d6:	f340 81ba 	ble.w	801794e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4ae>
 80175da:	fb01 3105 	mla	r1, r1, r5, r3
 80175de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175e0:	fa1f fe82 	uxth.w	lr, r2
 80175e4:	eb03 0a01 	add.w	sl, r3, r1
 80175e8:	ea4f 100e 	mov.w	r0, lr, lsl #4
 80175ec:	f813 9001 	ldrb.w	r9, [r3, r1]
 80175f0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80175f4:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 80175f8:	b29b      	uxth	r3, r3
 80175fa:	f1bc 0f00 	cmp.w	ip, #0
 80175fe:	f000 8186 	beq.w	801790e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46e>
 8017602:	f81a 4005 	ldrb.w	r4, [sl, r5]
 8017606:	940b      	str	r4, [sp, #44]	; 0x2c
 8017608:	eb0a 0b05 	add.w	fp, sl, r5
 801760c:	fa1f fa8c 	uxth.w	sl, ip
 8017610:	fb0a fe0e 	mul.w	lr, sl, lr
 8017614:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8017618:	fa1f fa8a 	uxth.w	sl, sl
 801761c:	eba0 000e 	sub.w	r0, r0, lr
 8017620:	eba3 030a 	sub.w	r3, r3, sl
 8017624:	b280      	uxth	r0, r0
 8017626:	fb08 f000 	mul.w	r0, r8, r0
 801762a:	b29b      	uxth	r3, r3
 801762c:	fb09 0303 	mla	r3, r9, r3, r0
 8017630:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017632:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8017636:	940c      	str	r4, [sp, #48]	; 0x30
 8017638:	fb0a 3300 	mla	r3, sl, r0, r3
 801763c:	fb0e 3304 	mla	r3, lr, r4, r3
 8017640:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017644:	2b00      	cmp	r3, #0
 8017646:	f000 8105 	beq.w	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801764a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801764c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801764e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017652:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8017656:	f834 1011 	ldrh.w	r1, [r4, r1, lsl #1]
 801765a:	f000 815d 	beq.w	8017918 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x478>
 801765e:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017662:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017666:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801766a:	fb09 f101 	mul.w	r1, r9, r1
 801766e:	fb0a fe0e 	mul.w	lr, sl, lr
 8017672:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8017676:	f101 0b20 	add.w	fp, r1, #32
 801767a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801767e:	44ce      	add	lr, r9
 8017680:	eb0b 2911 	add.w	r9, fp, r1, lsr #8
 8017684:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017688:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801768c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017690:	ea4e 0909 	orr.w	r9, lr, r9
 8017694:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017698:	8841      	ldrh	r1, [r0, #2]
 801769a:	d019      	beq.n	80176d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x230>
 801769c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80176a0:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 80176a4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176a8:	fb0a fe0e 	mul.w	lr, sl, lr
 80176ac:	fb08 f801 	mul.w	r8, r8, r1
 80176b0:	f108 0b20 	add.w	fp, r8, #32
 80176b4:	ea06 115e 	and.w	r1, r6, lr, lsr #5
 80176b8:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80176bc:	448e      	add	lr, r1
 80176be:	eb0b 2118 	add.w	r1, fp, r8, lsr #8
 80176c2:	0a09      	lsrs	r1, r1, #8
 80176c4:	ea06 1a5e 	and.w	sl, r6, lr, lsr #5
 80176c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80176cc:	ea4a 0101 	orr.w	r1, sl, r1
 80176d0:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80176d4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80176d8:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80176dc:	ea4e 0909 	orr.w	r9, lr, r9
 80176e0:	ea4f 4e01 	mov.w	lr, r1, lsl #16
 80176e4:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80176e8:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80176ec:	ea4e 0e01 	orr.w	lr, lr, r1
 80176f0:	f1bc 0f00 	cmp.w	ip, #0
 80176f4:	f000 8112 	beq.w	801791c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x47c>
 80176f8:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80176fa:	eb00 0801 	add.w	r8, r0, r1
 80176fe:	5a41      	ldrh	r1, [r0, r1]
 8017700:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8017702:	28ff      	cmp	r0, #255	; 0xff
 8017704:	d019      	beq.n	801773a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29a>
 8017706:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8017708:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801770c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017710:	fb04 fb01 	mul.w	fp, r4, r1
 8017714:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017718:	fb0a fa00 	mul.w	sl, sl, r0
 801771c:	f10b 0020 	add.w	r0, fp, #32
 8017720:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017724:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017728:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801772c:	4451      	add	r1, sl
 801772e:	0a00      	lsrs	r0, r0, #8
 8017730:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017734:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017738:	4301      	orrs	r1, r0
 801773a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801773c:	f8b8 0002 	ldrh.w	r0, [r8, #2]
 8017740:	2cff      	cmp	r4, #255	; 0xff
 8017742:	d01a      	beq.n	801777a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2da>
 8017744:	f420 68fc 	bic.w	r8, r0, #2016	; 0x7e0
 8017748:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801774c:	fb04 fb00 	mul.w	fp, r4, r0
 8017750:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017754:	fb0a fa08 	mul.w	sl, sl, r8
 8017758:	f10b 0820 	add.w	r8, fp, #32
 801775c:	ea06 105a 	and.w	r0, r6, sl, lsr #5
 8017760:	eb08 281b 	add.w	r8, r8, fp, lsr #8
 8017764:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017768:	4450      	add	r0, sl
 801776a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801776e:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8017772:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017776:	ea40 0008 	orr.w	r0, r0, r8
 801777a:	fb1c f802 	smulbb	r8, ip, r2
 801777e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017782:	f1cc 0a10 	rsb	sl, ip, #16
 8017786:	ebaa 0a02 	sub.w	sl, sl, r2
 801778a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801778e:	ebc8 0242 	rsb	r2, r8, r2, lsl #1
 8017792:	eb08 0a4a 	add.w	sl, r8, sl, lsl #1
 8017796:	fb0e f202 	mul.w	r2, lr, r2
 801779a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801779e:	ea4f 4e00 	mov.w	lr, r0, lsl #16
 80177a2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80177a6:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 80177aa:	fb09 220a 	mla	r2, r9, sl, r2
 80177ae:	ea4b 0101 	orr.w	r1, fp, r1
 80177b2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80177b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80177ba:	fb0c 2201 	mla	r2, ip, r1, r2
 80177be:	ea4e 0000 	orr.w	r0, lr, r0
 80177c2:	fb08 2800 	mla	r8, r8, r0, r2
 80177c6:	ea4f 5258 	mov.w	r2, r8, lsr #21
 80177ca:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80177ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177d2:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 80177d6:	ea42 0808 	orr.w	r8, r2, r8
 80177da:	fa1f f288 	uxth.w	r2, r8
 80177de:	2bff      	cmp	r3, #255	; 0xff
 80177e0:	f000 80b1 	beq.w	8017946 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4a6>
 80177e4:	f8b7 8000 	ldrh.w	r8, [r7]
 80177e8:	43db      	mvns	r3, r3
 80177ea:	ea4f 2028 	mov.w	r0, r8, asr #8
 80177ee:	fa5f fe83 	uxtb.w	lr, r3
 80177f2:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80177f6:	fb00 f00e 	mul.w	r0, r0, lr
 80177fa:	1c41      	adds	r1, r0, #1
 80177fc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8017800:	1210      	asrs	r0, r2, #8
 8017802:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8017806:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801780a:	eb00 2011 	add.w	r0, r0, r1, lsr #8
 801780e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017812:	495a      	ldr	r1, [pc, #360]	; (801797c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4dc>)
 8017814:	fb0c fc0e 	mul.w	ip, ip, lr
 8017818:	ea01 2000 	and.w	r0, r1, r0, lsl #8
 801781c:	f10c 0101 	add.w	r1, ip, #1
 8017820:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8017824:	10d1      	asrs	r1, r2, #3
 8017826:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801782a:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 801782e:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 8017832:	b2db      	uxtb	r3, r3
 8017834:	00c9      	lsls	r1, r1, #3
 8017836:	fb03 f30e 	mul.w	r3, r3, lr
 801783a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801783e:	4301      	orrs	r1, r0
 8017840:	1c58      	adds	r0, r3, #1
 8017842:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8017846:	00d3      	lsls	r3, r2, #3
 8017848:	b2db      	uxtb	r3, r3
 801784a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801784e:	ea41 03d3 	orr.w	r3, r1, r3, lsr #3
 8017852:	803b      	strh	r3, [r7, #0]
 8017854:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017856:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017858:	4413      	add	r3, r2
 801785a:	9327      	str	r3, [sp, #156]	; 0x9c
 801785c:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801785e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017860:	441a      	add	r2, r3
 8017862:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017864:	9228      	str	r2, [sp, #160]	; 0xa0
 8017866:	3b01      	subs	r3, #1
 8017868:	3702      	adds	r7, #2
 801786a:	9311      	str	r3, [sp, #68]	; 0x44
 801786c:	e69a      	b.n	80175a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 801786e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017870:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017872:	4413      	add	r3, r2
 8017874:	9327      	str	r3, [sp, #156]	; 0x9c
 8017876:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017878:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801787a:	441a      	add	r2, r3
 801787c:	9b06      	ldr	r3, [sp, #24]
 801787e:	9228      	str	r2, [sp, #160]	; 0xa0
 8017880:	3b01      	subs	r3, #1
 8017882:	9306      	str	r3, [sp, #24]
 8017884:	9b07      	ldr	r3, [sp, #28]
 8017886:	3302      	adds	r3, #2
 8017888:	9307      	str	r3, [sp, #28]
 801788a:	e63f      	b.n	801750c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6c>
 801788c:	f47f ae51 	bne.w	8017532 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8017890:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017892:	2b00      	cmp	r3, #0
 8017894:	f340 81dd 	ble.w	8017c52 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7b2>
 8017898:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801789c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80178a0:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80178a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80178a6:	ee79 9a8b 	vadd.f32	s19, s19, s22
 80178aa:	ee39 9a2a 	vadd.f32	s18, s18, s21
 80178ae:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80178b2:	eef0 6a48 	vmov.f32	s13, s16
 80178b6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80178ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178be:	ee37 8a48 	vsub.f32	s16, s14, s16
 80178c2:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 80178c6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80178ca:	eef0 6a68 	vmov.f32	s13, s17
 80178ce:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80178d2:	ee18 2a10 	vmov	r2, s16
 80178d6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80178da:	fb92 f3f3 	sdiv	r3, r2, r3
 80178de:	ee18 2a90 	vmov	r2, s17
 80178e2:	9329      	str	r3, [sp, #164]	; 0xa4
 80178e4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80178e6:	fb92 f3f3 	sdiv	r3, r2, r3
 80178ea:	932a      	str	r3, [sp, #168]	; 0xa8
 80178ec:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80178ee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80178f0:	3b01      	subs	r3, #1
 80178f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80178f6:	9310      	str	r3, [sp, #64]	; 0x40
 80178f8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80178fa:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 80178fe:	bf08      	it	eq
 8017900:	4613      	moveq	r3, r2
 8017902:	9306      	str	r3, [sp, #24]
 8017904:	eef0 8a67 	vmov.f32	s17, s15
 8017908:	eeb0 8a47 	vmov.f32	s16, s14
 801790c:	e5f7      	b.n	80174fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e>
 801790e:	fb08 f000 	mul.w	r0, r8, r0
 8017912:	fb09 0303 	mla	r3, r9, r3, r0
 8017916:	e693      	b.n	8017640 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1a0>
 8017918:	4689      	mov	r9, r1
 801791a:	e6bb      	b.n	8017694 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f4>
 801791c:	f1c2 0010 	rsb	r0, r2, #16
 8017920:	fb0e f202 	mul.w	r2, lr, r2
 8017924:	fb09 2900 	mla	r9, r9, r0, r2
 8017928:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801792c:	ea4f 5259 	mov.w	r2, r9, lsr #21
 8017930:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017934:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017938:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801793c:	ea42 0909 	orr.w	r9, r2, r9
 8017940:	fa1f f289 	uxth.w	r2, r9
 8017944:	e74b      	b.n	80177de <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8017946:	803a      	strh	r2, [r7, #0]
 8017948:	e784      	b.n	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801794a:	1c5c      	adds	r4, r3, #1
 801794c:	d182      	bne.n	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801794e:	429d      	cmp	r5, r3
 8017950:	dd80      	ble.n	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017952:	1c48      	adds	r0, r1, #1
 8017954:	f6ff af7e 	blt.w	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017958:	9808      	ldr	r0, [sp, #32]
 801795a:	4288      	cmp	r0, r1
 801795c:	f77f af7a 	ble.w	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 8017960:	e9cd 3102 	strd	r3, r1, [sp, #8]
 8017964:	e9cd 2c04 	strd	r2, ip, [sp, #16]
 8017968:	e9cd 5000 	strd	r5, r0, [sp]
 801796c:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8017970:	4639      	mov	r1, r7
 8017972:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8017974:	f7ff fbf2 	bl	801715c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8017978:	e76c      	b.n	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b4>
 801797a:	bf00      	nop
 801797c:	fffff800 	.word	0xfffff800
 8017980:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017982:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8017986:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8017988:	141f      	asrs	r7, r3, #16
 801798a:	f3c3 3003 	ubfx	r0, r3, #12, #4
 801798e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017990:	141b      	asrs	r3, r3, #16
 8017992:	fb05 3707 	mla	r7, r5, r7, r3
 8017996:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017998:	fa1f fc82 	uxth.w	ip, r2
 801799c:	eb03 0a07 	add.w	sl, r3, r7
 80179a0:	ea4f 110c 	mov.w	r1, ip, lsl #4
 80179a4:	f813 9007 	ldrb.w	r9, [r3, r7]
 80179a8:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80179ac:	f5c1 7380 	rsb	r3, r1, #256	; 0x100
 80179b0:	b29b      	uxth	r3, r3
 80179b2:	2800      	cmp	r0, #0
 80179b4:	f000 8132 	beq.w	8017c1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x77c>
 80179b8:	f81a 4005 	ldrb.w	r4, [sl, r5]
 80179bc:	940d      	str	r4, [sp, #52]	; 0x34
 80179be:	eb0a 0b05 	add.w	fp, sl, r5
 80179c2:	fa1f fa80 	uxth.w	sl, r0
 80179c6:	fb0a fc0c 	mul.w	ip, sl, ip
 80179ca:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80179ce:	fa1f fa8a 	uxth.w	sl, sl
 80179d2:	eba1 010c 	sub.w	r1, r1, ip
 80179d6:	eba3 030a 	sub.w	r3, r3, sl
 80179da:	b289      	uxth	r1, r1
 80179dc:	fb08 f101 	mul.w	r1, r8, r1
 80179e0:	b29b      	uxth	r3, r3
 80179e2:	fb09 1303 	mla	r3, r9, r3, r1
 80179e6:	990d      	ldr	r1, [sp, #52]	; 0x34
 80179e8:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80179ec:	940e      	str	r4, [sp, #56]	; 0x38
 80179ee:	fb0a 3301 	mla	r3, sl, r1, r3
 80179f2:	fb0c 3304 	mla	r3, ip, r4, r3
 80179f6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80179fa:	2b00      	cmp	r3, #0
 80179fc:	f000 8100 	beq.w	8017c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017a00:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017a02:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8017a04:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017a08:	eb01 0147 	add.w	r1, r1, r7, lsl #1
 8017a0c:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8017a10:	f000 8109 	beq.w	8017c26 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x786>
 8017a14:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017a18:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8017a1c:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a20:	fb09 f707 	mul.w	r7, r9, r7
 8017a24:	fb0a fc0c 	mul.w	ip, sl, ip
 8017a28:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8017a2c:	f107 0b20 	add.w	fp, r7, #32
 8017a30:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017a34:	44cc      	add	ip, r9
 8017a36:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8017a3a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017a3e:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017a42:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017a46:	ea4c 0909 	orr.w	r9, ip, r9
 8017a4a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017a4e:	884f      	ldrh	r7, [r1, #2]
 8017a50:	d019      	beq.n	8017a86 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5e6>
 8017a52:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8017a56:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8017a5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a5e:	fb08 f807 	mul.w	r8, r8, r7
 8017a62:	fb0a fc0c 	mul.w	ip, sl, ip
 8017a66:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8017a6a:	f108 0b20 	add.w	fp, r8, #32
 8017a6e:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 8017a72:	44bc      	add	ip, r7
 8017a74:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8017a78:	0a3f      	lsrs	r7, r7, #8
 8017a7a:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8017a7e:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8017a82:	ea4c 0707 	orr.w	r7, ip, r7
 8017a86:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8017a8a:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8017a8e:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017a92:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017a96:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017a9a:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8017a9e:	ea4c 0909 	orr.w	r9, ip, r9
 8017aa2:	ea4a 0707 	orr.w	r7, sl, r7
 8017aa6:	2800      	cmp	r0, #0
 8017aa8:	f000 80bf 	beq.w	8017c2a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78a>
 8017aac:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8017aae:	eb01 0c04 	add.w	ip, r1, r4
 8017ab2:	f831 8004 	ldrh.w	r8, [r1, r4]
 8017ab6:	990d      	ldr	r1, [sp, #52]	; 0x34
 8017ab8:	29ff      	cmp	r1, #255	; 0xff
 8017aba:	d01a      	beq.n	8017af2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x652>
 8017abc:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8017abe:	f428 61fc 	bic.w	r1, r8, #2016	; 0x7e0
 8017ac2:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8017ac6:	fb04 fb08 	mul.w	fp, r4, r8
 8017aca:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017ace:	fb0a fa01 	mul.w	sl, sl, r1
 8017ad2:	f10b 0120 	add.w	r1, fp, #32
 8017ad6:	ea06 185a 	and.w	r8, r6, sl, lsr #5
 8017ada:	eb01 211b 	add.w	r1, r1, fp, lsr #8
 8017ade:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017ae2:	44d0      	add	r8, sl
 8017ae4:	0a09      	lsrs	r1, r1, #8
 8017ae6:	ea06 1858 	and.w	r8, r6, r8, lsr #5
 8017aea:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017aee:	ea48 0801 	orr.w	r8, r8, r1
 8017af2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8017af4:	f8bc 1002 	ldrh.w	r1, [ip, #2]
 8017af8:	2cff      	cmp	r4, #255	; 0xff
 8017afa:	d01a      	beq.n	8017b32 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x692>
 8017afc:	f421 6cfc 	bic.w	ip, r1, #2016	; 0x7e0
 8017b00:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017b04:	fb04 fb01 	mul.w	fp, r4, r1
 8017b08:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8017b0c:	fb0a fa0c 	mul.w	sl, sl, ip
 8017b10:	f10b 0c20 	add.w	ip, fp, #32
 8017b14:	ea06 115a 	and.w	r1, r6, sl, lsr #5
 8017b18:	eb0c 2c1b 	add.w	ip, ip, fp, lsr #8
 8017b1c:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 8017b20:	4451      	add	r1, sl
 8017b22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017b26:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8017b2a:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8017b2e:	ea41 010c 	orr.w	r1, r1, ip
 8017b32:	fb10 fc02 	smulbb	ip, r0, r2
 8017b36:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8017b3a:	f1c0 0a10 	rsb	sl, r0, #16
 8017b3e:	ebaa 0a02 	sub.w	sl, sl, r2
 8017b42:	ea4f 4b08 	mov.w	fp, r8, lsl #16
 8017b46:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8017b4a:	437a      	muls	r2, r7
 8017b4c:	eb0c 0a4a 	add.w	sl, ip, sl, lsl #1
 8017b50:	040f      	lsls	r7, r1, #16
 8017b52:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8017b56:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8017b5a:	fb09 220a 	mla	r2, r9, sl, r2
 8017b5e:	ea4b 0808 	orr.w	r8, fp, r8
 8017b62:	ebcc 0040 	rsb	r0, ip, r0, lsl #1
 8017b66:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8017b6a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017b6e:	fb00 2208 	mla	r2, r0, r8, r2
 8017b72:	4339      	orrs	r1, r7
 8017b74:	fb0c 2201 	mla	r2, ip, r1, r2
 8017b78:	ea4f 5952 	mov.w	r9, r2, lsr #21
 8017b7c:	0952      	lsrs	r2, r2, #5
 8017b7e:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017b82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017b86:	ea49 0202 	orr.w	r2, r9, r2
 8017b8a:	2bff      	cmp	r3, #255	; 0xff
 8017b8c:	b292      	uxth	r2, r2
 8017b8e:	d05d      	beq.n	8017c4c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7ac>
 8017b90:	f8be 8000 	ldrh.w	r8, [lr]
 8017b94:	4c31      	ldr	r4, [pc, #196]	; (8017c5c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x7bc>)
 8017b96:	43db      	mvns	r3, r3
 8017b98:	ea4f 2028 	mov.w	r0, r8, asr #8
 8017b9c:	fa5f fc83 	uxtb.w	ip, r3
 8017ba0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017ba4:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8017ba8:	fb00 f00c 	mul.w	r0, r0, ip
 8017bac:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017bb0:	fb07 f10c 	mul.w	r1, r7, ip
 8017bb4:	1c47      	adds	r7, r0, #1
 8017bb6:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017bba:	1217      	asrs	r7, r2, #8
 8017bbc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017bc0:	eb07 2010 	add.w	r0, r7, r0, lsr #8
 8017bc4:	1c4f      	adds	r7, r1, #1
 8017bc6:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8017bca:	10d1      	asrs	r1, r2, #3
 8017bcc:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8017bd0:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8017bd4:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8017bd8:	b2db      	uxtb	r3, r3
 8017bda:	00c9      	lsls	r1, r1, #3
 8017bdc:	fb03 f30c 	mul.w	r3, r3, ip
 8017be0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8017be4:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8017be8:	4308      	orrs	r0, r1
 8017bea:	00d2      	lsls	r2, r2, #3
 8017bec:	1c59      	adds	r1, r3, #1
 8017bee:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017bf2:	b2d2      	uxtb	r2, r2
 8017bf4:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8017bf8:	ea40 00d3 	orr.w	r0, r0, r3, lsr #3
 8017bfc:	f8ae 0000 	strh.w	r0, [lr]
 8017c00:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8017c02:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017c04:	4413      	add	r3, r2
 8017c06:	9327      	str	r3, [sp, #156]	; 0x9c
 8017c08:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8017c0a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8017c0c:	441a      	add	r2, r3
 8017c0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8017c10:	9228      	str	r2, [sp, #160]	; 0xa0
 8017c12:	3b01      	subs	r3, #1
 8017c14:	f10e 0e02 	add.w	lr, lr, #2
 8017c18:	9311      	str	r3, [sp, #68]	; 0x44
 8017c1a:	e4a5      	b.n	8017568 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 8017c1c:	fb08 f101 	mul.w	r1, r8, r1
 8017c20:	fb09 1303 	mla	r3, r9, r3, r1
 8017c24:	e6e7      	b.n	80179f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x556>
 8017c26:	46b9      	mov	r9, r7
 8017c28:	e70f      	b.n	8017a4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5aa>
 8017c2a:	f1c2 0110 	rsb	r1, r2, #16
 8017c2e:	437a      	muls	r2, r7
 8017c30:	fb09 2901 	mla	r9, r9, r1, r2
 8017c34:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8017c38:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8017c3c:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8017c40:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017c44:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017c48:	4302      	orrs	r2, r0
 8017c4a:	e79e      	b.n	8017b8a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6ea>
 8017c4c:	f8ae 2000 	strh.w	r2, [lr]
 8017c50:	e7d6      	b.n	8017c00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x760>
 8017c52:	b015      	add	sp, #84	; 0x54
 8017c54:	ecbd 8b08 	vpop	{d8-d11}
 8017c58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c5c:	fffff800 	.word	0xfffff800

08017c60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 8017c60:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017c64:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 8017c68:	fb0c 4e03 	mla	lr, ip, r3, r4
 8017c6c:	f1bc 0f00 	cmp.w	ip, #0
 8017c70:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 8017c74:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 8017c78:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8017c7c:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8017c80:	8808      	ldrh	r0, [r1, #0]
 8017c82:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 8017c86:	db2f      	blt.n	8017ce8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017c88:	45e2      	cmp	sl, ip
 8017c8a:	dd2d      	ble.n	8017ce8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8017c8c:	2c00      	cmp	r4, #0
 8017c8e:	db29      	blt.n	8017ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017c90:	42a3      	cmp	r3, r4
 8017c92:	dd27      	ble.n	8017ce4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8017c94:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 8017c98:	1c62      	adds	r2, r4, #1
 8017c9a:	d428      	bmi.n	8017cee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017c9c:	4293      	cmp	r3, r2
 8017c9e:	dd26      	ble.n	8017cee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017ca0:	b32f      	cbz	r7, 8017cee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8017ca2:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 8017ca6:	f11c 0c01 	adds.w	ip, ip, #1
 8017caa:	d424      	bmi.n	8017cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017cac:	45e2      	cmp	sl, ip
 8017cae:	dd22      	ble.n	8017cf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8017cb0:	2e00      	cmp	r6, #0
 8017cb2:	f000 809c 	beq.w	8017dee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18e>
 8017cb6:	2c00      	cmp	r4, #0
 8017cb8:	db1b      	blt.n	8017cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017cba:	42a3      	cmp	r3, r4
 8017cbc:	dd19      	ble.n	8017cf2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8017cbe:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8017cc2:	3401      	adds	r4, #1
 8017cc4:	d41a      	bmi.n	8017cfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017cc6:	42a3      	cmp	r3, r4
 8017cc8:	dd18      	ble.n	8017cfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 8017cca:	b1cf      	cbz	r7, 8017d00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8017ccc:	3301      	adds	r3, #1
 8017cce:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8017cd2:	2f0f      	cmp	r7, #15
 8017cd4:	d915      	bls.n	8017d02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 8017cd6:	4b49      	ldr	r3, [pc, #292]	; (8017dfc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 8017cd8:	4a49      	ldr	r2, [pc, #292]	; (8017e00 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 8017cda:	484a      	ldr	r0, [pc, #296]	; (8017e04 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8017cdc:	f240 3155 	movw	r1, #853	; 0x355
 8017ce0:	f003 fd06 	bl	801b6f0 <__assert_func>
 8017ce4:	4681      	mov	r9, r0
 8017ce6:	e7d7      	b.n	8017c98 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 8017ce8:	4686      	mov	lr, r0
 8017cea:	4681      	mov	r9, r0
 8017cec:	e7db      	b.n	8017ca6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017cee:	4686      	mov	lr, r0
 8017cf0:	e7d9      	b.n	8017ca6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8017cf2:	4684      	mov	ip, r0
 8017cf4:	e7e5      	b.n	8017cc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 8017cf6:	4603      	mov	r3, r0
 8017cf8:	4684      	mov	ip, r0
 8017cfa:	e7ea      	b.n	8017cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017cfc:	4603      	mov	r3, r0
 8017cfe:	e7e8      	b.n	8017cd2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8017d00:	4603      	mov	r3, r0
 8017d02:	2e0f      	cmp	r6, #15
 8017d04:	d8e7      	bhi.n	8017cd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017d06:	ea4f 4409 	mov.w	r4, r9, lsl #16
 8017d0a:	fb17 f806 	smulbb	r8, r7, r6
 8017d0e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8017d12:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 8017d16:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8017d1a:	ea4f 08e8 	mov.w	r8, r8, asr #3
 8017d1e:	ea44 0909 	orr.w	r9, r4, r9
 8017d22:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017d26:	f1c6 0410 	rsb	r4, r6, #16
 8017d2a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8017d2e:	1be4      	subs	r4, r4, r7
 8017d30:	041a      	lsls	r2, r3, #16
 8017d32:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 8017d36:	ea4a 0e0e 	orr.w	lr, sl, lr
 8017d3a:	fb07 fe0e 	mul.w	lr, r7, lr
 8017d3e:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017d42:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8017d46:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017d4a:	fb04 e409 	mla	r4, r4, r9, lr
 8017d4e:	4313      	orrs	r3, r2
 8017d50:	ea4f 420c 	mov.w	r2, ip, lsl #16
 8017d54:	fb08 4303 	mla	r3, r8, r3, r4
 8017d58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8017d5c:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 8017d60:	4322      	orrs	r2, r4
 8017d62:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8017d66:	fb06 3202 	mla	r2, r6, r2, r3
 8017d6a:	0d53      	lsrs	r3, r2, #21
 8017d6c:	0952      	lsrs	r2, r2, #5
 8017d6e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017d72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017d76:	431a      	orrs	r2, r3
 8017d78:	b293      	uxth	r3, r2
 8017d7a:	b2af      	uxth	r7, r5
 8017d7c:	1202      	asrs	r2, r0, #8
 8017d7e:	43ed      	mvns	r5, r5
 8017d80:	b2ed      	uxtb	r5, r5
 8017d82:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017d86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8017d8a:	fb12 f205 	smulbb	r2, r2, r5
 8017d8e:	10c6      	asrs	r6, r0, #3
 8017d90:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017d94:	fb0c 2c07 	mla	ip, ip, r7, r2
 8017d98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017d9c:	10da      	asrs	r2, r3, #3
 8017d9e:	fb16 f605 	smulbb	r6, r6, r5
 8017da2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017da6:	fb02 6207 	mla	r2, r2, r7, r6
 8017daa:	b296      	uxth	r6, r2
 8017dac:	00c2      	lsls	r2, r0, #3
 8017dae:	00dc      	lsls	r4, r3, #3
 8017db0:	b2d2      	uxtb	r2, r2
 8017db2:	b2e4      	uxtb	r4, r4
 8017db4:	fb12 f205 	smulbb	r2, r2, r5
 8017db8:	fb04 2207 	mla	r2, r4, r7, r2
 8017dbc:	fa1f fc8c 	uxth.w	ip, ip
 8017dc0:	b292      	uxth	r2, r2
 8017dc2:	f10c 0301 	add.w	r3, ip, #1
 8017dc6:	1c50      	adds	r0, r2, #1
 8017dc8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8017dcc:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017dd0:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017dd4:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8017dd8:	4313      	orrs	r3, r2
 8017dda:	1c72      	adds	r2, r6, #1
 8017ddc:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 8017de0:	0952      	lsrs	r2, r2, #5
 8017de2:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017de6:	4313      	orrs	r3, r2
 8017de8:	800b      	strh	r3, [r1, #0]
 8017dea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017dee:	2f0f      	cmp	r7, #15
 8017df0:	f63f af71 	bhi.w	8017cd6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 8017df4:	4603      	mov	r3, r0
 8017df6:	4684      	mov	ip, r0
 8017df8:	e785      	b.n	8017d06 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8017dfa:	bf00      	nop
 8017dfc:	0801f387 	.word	0x0801f387
 8017e00:	0801f98e 	.word	0x0801f98e
 8017e04:	0801f40f 	.word	0x0801f40f

08017e08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8017e08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017e0c:	ed2d 8b08 	vpush	{d8-d11}
 8017e10:	b095      	sub	sp, #84	; 0x54
 8017e12:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 8017e16:	9306      	str	r3, [sp, #24]
 8017e18:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 8017e1c:	9212      	str	r2, [sp, #72]	; 0x48
 8017e1e:	9307      	str	r3, [sp, #28]
 8017e20:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8017e22:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 8017e26:	930c      	str	r3, [sp, #48]	; 0x30
 8017e28:	910b      	str	r1, [sp, #44]	; 0x2c
 8017e2a:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8017e2e:	9013      	str	r0, [sp, #76]	; 0x4c
 8017e30:	6850      	ldr	r0, [r2, #4]
 8017e32:	6812      	ldr	r2, [r2, #0]
 8017e34:	f9bd 70b8 	ldrsh.w	r7, [sp, #184]	; 0xb8
 8017e38:	fb00 1303 	mla	r3, r0, r3, r1
 8017e3c:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8017e40:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017e42:	681b      	ldr	r3, [r3, #0]
 8017e44:	9309      	str	r3, [sp, #36]	; 0x24
 8017e46:	007b      	lsls	r3, r7, #1
 8017e48:	930a      	str	r3, [sp, #40]	; 0x28
 8017e4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8017e4c:	43db      	mvns	r3, r3
 8017e4e:	b2db      	uxtb	r3, r3
 8017e50:	eeb0 aa40 	vmov.f32	s20, s0
 8017e54:	eef0 9a60 	vmov.f32	s19, s1
 8017e58:	eeb0 9a41 	vmov.f32	s18, s2
 8017e5c:	eeb0 8a62 	vmov.f32	s16, s5
 8017e60:	eef0 8a43 	vmov.f32	s17, s6
 8017e64:	eef0 ba44 	vmov.f32	s23, s8
 8017e68:	eeb0 ba64 	vmov.f32	s22, s9
 8017e6c:	eef0 aa45 	vmov.f32	s21, s10
 8017e70:	9308      	str	r3, [sp, #32]
 8017e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8017e74:	2b00      	cmp	r3, #0
 8017e76:	dc03      	bgt.n	8017e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 8017e78:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017e7a:	2b00      	cmp	r3, #0
 8017e7c:	f340 81f3 	ble.w	8018266 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8017e80:	9b06      	ldr	r3, [sp, #24]
 8017e82:	2b00      	cmp	r3, #0
 8017e84:	f340 80fa 	ble.w	801807c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x274>
 8017e88:	1422      	asrs	r2, r4, #16
 8017e8a:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017e8e:	d42b      	bmi.n	8017ee8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe0>
 8017e90:	1c51      	adds	r1, r2, #1
 8017e92:	428f      	cmp	r7, r1
 8017e94:	dd2b      	ble.n	8017eee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017e96:	2b00      	cmp	r3, #0
 8017e98:	db29      	blt.n	8017eee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017e9a:	9807      	ldr	r0, [sp, #28]
 8017e9c:	1c59      	adds	r1, r3, #1
 8017e9e:	4288      	cmp	r0, r1
 8017ea0:	dd25      	ble.n	8017eee <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe6>
 8017ea2:	9b06      	ldr	r3, [sp, #24]
 8017ea4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8017ea6:	3b01      	subs	r3, #1
 8017ea8:	fb02 4203 	mla	r2, r2, r3, r4
 8017eac:	1412      	asrs	r2, r2, #16
 8017eae:	d428      	bmi.n	8017f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017eb0:	3201      	adds	r2, #1
 8017eb2:	4297      	cmp	r7, r2
 8017eb4:	dd25      	ble.n	8017f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017eb6:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8017eb8:	fb02 6303 	mla	r3, r2, r3, r6
 8017ebc:	141b      	asrs	r3, r3, #16
 8017ebe:	d420      	bmi.n	8017f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017ec0:	9a07      	ldr	r2, [sp, #28]
 8017ec2:	3301      	adds	r3, #1
 8017ec4:	429a      	cmp	r2, r3
 8017ec6:	dd1c      	ble.n	8017f02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8017ec8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8017ecc:	f8bd a030 	ldrh.w	sl, [sp, #48]	; 0x30
 8017ed0:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8017ed4:	f1b8 0f00 	cmp.w	r8, #0
 8017ed8:	f300 8129 	bgt.w	801812e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x326>
 8017edc:	9b06      	ldr	r3, [sp, #24]
 8017ede:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017ee2:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8017ee6:	e0cb      	b.n	8018080 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x278>
 8017ee8:	1c51      	adds	r1, r2, #1
 8017eea:	f040 80bd 	bne.w	8018068 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017eee:	42ba      	cmp	r2, r7
 8017ef0:	f280 80ba 	bge.w	8018068 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017ef4:	1c5a      	adds	r2, r3, #1
 8017ef6:	f2c0 80b7 	blt.w	8018068 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017efa:	9a07      	ldr	r2, [sp, #28]
 8017efc:	4293      	cmp	r3, r2
 8017efe:	f280 80b3 	bge.w	8018068 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x260>
 8017f02:	f8dd b018 	ldr.w	fp, [sp, #24]
 8017f06:	46c8      	mov	r8, r9
 8017f08:	f1bb 0f00 	cmp.w	fp, #0
 8017f0c:	dde6      	ble.n	8017edc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd4>
 8017f0e:	1421      	asrs	r1, r4, #16
 8017f10:	ea4f 4226 	mov.w	r2, r6, asr #16
 8017f14:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8017f18:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017f1c:	f100 80ef 	bmi.w	80180fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2f6>
 8017f20:	f101 0c01 	add.w	ip, r1, #1
 8017f24:	4567      	cmp	r7, ip
 8017f26:	f340 80ec 	ble.w	8018102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017f2a:	2a00      	cmp	r2, #0
 8017f2c:	f2c0 80e9 	blt.w	8018102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017f30:	9d07      	ldr	r5, [sp, #28]
 8017f32:	f102 0c01 	add.w	ip, r2, #1
 8017f36:	4565      	cmp	r5, ip
 8017f38:	f340 80e3 	ble.w	8018102 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2fa>
 8017f3c:	fb02 1207 	mla	r2, r2, r7, r1
 8017f40:	9909      	ldr	r1, [sp, #36]	; 0x24
 8017f42:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 8017f46:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 8017f4a:	f8be 1002 	ldrh.w	r1, [lr, #2]
 8017f4e:	b138      	cbz	r0, 8017f60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x158>
 8017f50:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8017f52:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8017f54:	4472      	add	r2, lr
 8017f56:	f83e 5005 	ldrh.w	r5, [lr, r5]
 8017f5a:	8852      	ldrh	r2, [r2, #2]
 8017f5c:	950e      	str	r5, [sp, #56]	; 0x38
 8017f5e:	920f      	str	r2, [sp, #60]	; 0x3c
 8017f60:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 8017f64:	fb13 f200 	smulbb	r2, r3, r0
 8017f68:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8017f6c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8017f70:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8017f74:	10d2      	asrs	r2, r2, #3
 8017f76:	ea4e 0c0c 	orr.w	ip, lr, ip
 8017f7a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8017f7e:	f1c0 0e10 	rsb	lr, r0, #16
 8017f82:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8017f86:	ebae 0e03 	sub.w	lr, lr, r3
 8017f8a:	ea4a 0101 	orr.w	r1, sl, r1
 8017f8e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8017f92:	4359      	muls	r1, r3
 8017f94:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8017f96:	9d08      	ldr	r5, [sp, #32]
 8017f98:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8017f9c:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8017fa0:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8017fa4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8017fa8:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8017fac:	ea4c 0c03 	orr.w	ip, ip, r3
 8017fb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017fb2:	990e      	ldr	r1, [sp, #56]	; 0x38
 8017fb4:	041b      	lsls	r3, r3, #16
 8017fb6:	fb02 ec0c 	mla	ip, r2, ip, lr
 8017fba:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8017fbe:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8017fc2:	ea43 030e 	orr.w	r3, r3, lr
 8017fc6:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8017fca:	fb02 c203 	mla	r2, r2, r3, ip
 8017fce:	0d53      	lsrs	r3, r2, #21
 8017fd0:	0952      	lsrs	r2, r2, #5
 8017fd2:	f8b8 c000 	ldrh.w	ip, [r8]
 8017fd6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017fda:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8017fde:	431a      	orrs	r2, r3
 8017fe0:	b292      	uxth	r2, r2
 8017fe2:	ea4f 212c 	mov.w	r1, ip, asr #8
 8017fe6:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 8017fea:	1210      	asrs	r0, r2, #8
 8017fec:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017ff0:	fb11 f105 	smulbb	r1, r1, r5
 8017ff4:	ea4f 0eec 	mov.w	lr, ip, asr #3
 8017ff8:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017ffc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018000:	fb00 1003 	mla	r0, r0, r3, r1
 8018004:	fa5f fc8c 	uxtb.w	ip, ip
 8018008:	10d1      	asrs	r1, r2, #3
 801800a:	00d2      	lsls	r2, r2, #3
 801800c:	fb1c fc05 	smulbb	ip, ip, r5
 8018010:	b2d2      	uxtb	r2, r2
 8018012:	fb02 c203 	mla	r2, r2, r3, ip
 8018016:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801801a:	b280      	uxth	r0, r0
 801801c:	b292      	uxth	r2, r2
 801801e:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018022:	fb1e fe05 	smulbb	lr, lr, r5
 8018026:	fb01 e103 	mla	r1, r1, r3, lr
 801802a:	f102 0c01 	add.w	ip, r2, #1
 801802e:	1c43      	adds	r3, r0, #1
 8018030:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8018034:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 8018038:	b289      	uxth	r1, r1
 801803a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801803e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018042:	4313      	orrs	r3, r2
 8018044:	1c4a      	adds	r2, r1, #1
 8018046:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801804a:	0949      	lsrs	r1, r1, #5
 801804c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018050:	430b      	orrs	r3, r1
 8018052:	f8a8 3000 	strh.w	r3, [r8]
 8018056:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8018058:	441c      	add	r4, r3
 801805a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801805c:	f108 0802 	add.w	r8, r8, #2
 8018060:	441e      	add	r6, r3
 8018062:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018066:	e74f      	b.n	8017f08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 8018068:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801806a:	441c      	add	r4, r3
 801806c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801806e:	441e      	add	r6, r3
 8018070:	9b06      	ldr	r3, [sp, #24]
 8018072:	3b01      	subs	r3, #1
 8018074:	9306      	str	r3, [sp, #24]
 8018076:	f109 0902 	add.w	r9, r9, #2
 801807a:	e701      	b.n	8017e80 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x78>
 801807c:	f47f af11 	bne.w	8017ea2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018080:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018082:	2b00      	cmp	r3, #0
 8018084:	f340 80ef 	ble.w	8018266 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45e>
 8018088:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801808c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018090:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018094:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018096:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801809a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801809e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 80180a2:	eef0 6a48 	vmov.f32	s13, s16
 80180a6:	ee69 7a27 	vmul.f32	s15, s18, s15
 80180aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80180ae:	ee37 8a48 	vsub.f32	s16, s14, s16
 80180b2:	ee16 4a90 	vmov	r4, s13
 80180b6:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80180ba:	eef0 6a68 	vmov.f32	s13, s17
 80180be:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80180c2:	ee18 2a10 	vmov	r2, s16
 80180c6:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80180ca:	fb92 f3f3 	sdiv	r3, r2, r3
 80180ce:	ee18 2a90 	vmov	r2, s17
 80180d2:	9329      	str	r3, [sp, #164]	; 0xa4
 80180d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80180d6:	fb92 f3f3 	sdiv	r3, r2, r3
 80180da:	932a      	str	r3, [sp, #168]	; 0xa8
 80180dc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80180de:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80180e0:	3b01      	subs	r3, #1
 80180e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80180e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80180e8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80180ea:	bf08      	it	eq
 80180ec:	4613      	moveq	r3, r2
 80180ee:	ee16 6a90 	vmov	r6, s13
 80180f2:	9306      	str	r3, [sp, #24]
 80180f4:	eef0 8a67 	vmov.f32	s17, s15
 80180f8:	eeb0 8a47 	vmov.f32	s16, s14
 80180fc:	e6b9      	b.n	8017e72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6a>
 80180fe:	1c4d      	adds	r5, r1, #1
 8018100:	d1a9      	bne.n	8018056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018102:	428f      	cmp	r7, r1
 8018104:	dda7      	ble.n	8018056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018106:	1c55      	adds	r5, r2, #1
 8018108:	dba5      	blt.n	8018056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801810a:	9d07      	ldr	r5, [sp, #28]
 801810c:	4295      	cmp	r5, r2
 801810e:	dda2      	ble.n	8018056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 8018110:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8018112:	9101      	str	r1, [sp, #4]
 8018114:	e9cd 2302 	strd	r2, r3, [sp, #8]
 8018118:	9b07      	ldr	r3, [sp, #28]
 801811a:	9300      	str	r3, [sp, #0]
 801811c:	e9cd 0504 	strd	r0, r5, [sp, #16]
 8018120:	463b      	mov	r3, r7
 8018122:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018124:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8018126:	4641      	mov	r1, r8
 8018128:	f7ff fd9a 	bl	8017c60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801812c:	e793      	b.n	8018056 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x24e>
 801812e:	1422      	asrs	r2, r4, #16
 8018130:	1431      	asrs	r1, r6, #16
 8018132:	fb07 2101 	mla	r1, r7, r1, r2
 8018136:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018138:	9809      	ldr	r0, [sp, #36]	; 0x24
 801813a:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 801813e:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018142:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 8018146:	8851      	ldrh	r1, [r2, #2]
 8018148:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801814c:	f1be 0f00 	cmp.w	lr, #0
 8018150:	d006      	beq.n	8018160 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 8018152:	980a      	ldr	r0, [sp, #40]	; 0x28
 8018154:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8018156:	1810      	adds	r0, r2, r0
 8018158:	5b52      	ldrh	r2, [r2, r5]
 801815a:	9210      	str	r2, [sp, #64]	; 0x40
 801815c:	8842      	ldrh	r2, [r0, #2]
 801815e:	9211      	str	r2, [sp, #68]	; 0x44
 8018160:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8018164:	fb13 f20e 	smulbb	r2, r3, lr
 8018168:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801816c:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8018170:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018174:	10d2      	asrs	r2, r2, #3
 8018176:	ea40 000c 	orr.w	r0, r0, ip
 801817a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801817e:	f1ce 0c10 	rsb	ip, lr, #16
 8018182:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8018186:	ebac 0c03 	sub.w	ip, ip, r3
 801818a:	ea4b 0101 	orr.w	r1, fp, r1
 801818e:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018192:	4359      	muls	r1, r3
 8018194:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018196:	9d08      	ldr	r5, [sp, #32]
 8018198:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801819c:	fb0c 1c00 	mla	ip, ip, r0, r1
 80181a0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80181a4:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 80181a8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80181aa:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181ae:	ea4b 0000 	orr.w	r0, fp, r0
 80181b2:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 80181b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80181ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80181be:	fb02 c000 	mla	r0, r2, r0, ip
 80181c2:	ea4b 0b03 	orr.w	fp, fp, r3
 80181c6:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80181ca:	fb02 0b0b 	mla	fp, r2, fp, r0
 80181ce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80181d0:	ea4f 515b 	mov.w	r1, fp, lsr #21
 80181d4:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80181d8:	8812      	ldrh	r2, [r2, #0]
 80181da:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80181de:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 80181e2:	ea41 0b0b 	orr.w	fp, r1, fp
 80181e6:	fa1f f38b 	uxth.w	r3, fp
 80181ea:	1211      	asrs	r1, r2, #8
 80181ec:	1218      	asrs	r0, r3, #8
 80181ee:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80181f2:	fb11 f105 	smulbb	r1, r1, r5
 80181f6:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 80181fa:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80181fe:	00d2      	lsls	r2, r2, #3
 8018200:	fb00 100a 	mla	r0, r0, sl, r1
 8018204:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018208:	10d9      	asrs	r1, r3, #3
 801820a:	b2d2      	uxtb	r2, r2
 801820c:	00db      	lsls	r3, r3, #3
 801820e:	fb1c fc05 	smulbb	ip, ip, r5
 8018212:	fb12 f205 	smulbb	r2, r2, r5
 8018216:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801821a:	b2db      	uxtb	r3, r3
 801821c:	b280      	uxth	r0, r0
 801821e:	fb01 c10a 	mla	r1, r1, sl, ip
 8018222:	fb03 230a 	mla	r3, r3, sl, r2
 8018226:	b29b      	uxth	r3, r3
 8018228:	b289      	uxth	r1, r1
 801822a:	1c42      	adds	r2, r0, #1
 801822c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018230:	f101 0c01 	add.w	ip, r1, #1
 8018234:	1c5a      	adds	r2, r3, #1
 8018236:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801823a:	eb0c 2111 	add.w	r1, ip, r1, lsr #8
 801823e:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8018242:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018246:	0949      	lsrs	r1, r1, #5
 8018248:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801824a:	4310      	orrs	r0, r2
 801824c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018250:	4308      	orrs	r0, r1
 8018252:	f823 0b02 	strh.w	r0, [r3], #2
 8018256:	930d      	str	r3, [sp, #52]	; 0x34
 8018258:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801825a:	441c      	add	r4, r3
 801825c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801825e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018262:	441e      	add	r6, r3
 8018264:	e636      	b.n	8017ed4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xcc>
 8018266:	b015      	add	sp, #84	; 0x54
 8018268:	ecbd 8b08 	vpop	{d8-d11}
 801826c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018270 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8018270:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8018274:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8018278:	fb06 5c03 	mla	ip, r6, r3, r5
 801827c:	2e00      	cmp	r6, #0
 801827e:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8018282:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8018286:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 801828a:	8808      	ldrh	r0, [r1, #0]
 801828c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8018290:	db2e      	blt.n	80182f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018292:	45b0      	cmp	r8, r6
 8018294:	dd2c      	ble.n	80182f0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8018296:	2d00      	cmp	r5, #0
 8018298:	db28      	blt.n	80182ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801829a:	42ab      	cmp	r3, r5
 801829c:	dd26      	ble.n	80182ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 801829e:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 80182a2:	1c6a      	adds	r2, r5, #1
 80182a4:	d427      	bmi.n	80182f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182a6:	4293      	cmp	r3, r2
 80182a8:	dd25      	ble.n	80182f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182aa:	b324      	cbz	r4, 80182f6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 80182ac:	f8be 2002 	ldrh.w	r2, [lr, #2]
 80182b0:	3601      	adds	r6, #1
 80182b2:	d424      	bmi.n	80182fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80182b4:	45b0      	cmp	r8, r6
 80182b6:	dd22      	ble.n	80182fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 80182b8:	b31f      	cbz	r7, 8018302 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 80182ba:	2d00      	cmp	r5, #0
 80182bc:	db1d      	blt.n	80182fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80182be:	42ab      	cmp	r3, r5
 80182c0:	dd1b      	ble.n	80182fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 80182c2:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 80182c6:	3501      	adds	r5, #1
 80182c8:	d405      	bmi.n	80182d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80182ca:	42ab      	cmp	r3, r5
 80182cc:	dd03      	ble.n	80182d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 80182ce:	b124      	cbz	r4, 80182da <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 80182d0:	3301      	adds	r3, #1
 80182d2:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 80182d6:	2c0f      	cmp	r4, #15
 80182d8:	d801      	bhi.n	80182de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 80182da:	2f0f      	cmp	r7, #15
 80182dc:	d914      	bls.n	8018308 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 80182de:	4b27      	ldr	r3, [pc, #156]	; (801837c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 80182e0:	4a27      	ldr	r2, [pc, #156]	; (8018380 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 80182e2:	4828      	ldr	r0, [pc, #160]	; (8018384 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 80182e4:	f240 3155 	movw	r1, #853	; 0x355
 80182e8:	f003 fa02 	bl	801b6f0 <__assert_func>
 80182ec:	4684      	mov	ip, r0
 80182ee:	e7d8      	b.n	80182a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 80182f0:	4602      	mov	r2, r0
 80182f2:	4684      	mov	ip, r0
 80182f4:	e7dc      	b.n	80182b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80182f6:	4602      	mov	r2, r0
 80182f8:	e7da      	b.n	80182b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 80182fa:	4606      	mov	r6, r0
 80182fc:	e7e3      	b.n	80182c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 80182fe:	4606      	mov	r6, r0
 8018300:	e7e9      	b.n	80182d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8018302:	2c0f      	cmp	r4, #15
 8018304:	d8eb      	bhi.n	80182de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8018306:	4606      	mov	r6, r0
 8018308:	ea4f 450c 	mov.w	r5, ip, lsl #16
 801830c:	fb14 f307 	smulbb	r3, r4, r7
 8018310:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8018314:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8018318:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801831c:	10db      	asrs	r3, r3, #3
 801831e:	ea45 0c0c 	orr.w	ip, r5, ip
 8018322:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8018326:	f1c7 0510 	rsb	r5, r7, #16
 801832a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801832e:	1b2d      	subs	r5, r5, r4
 8018330:	ea4e 0202 	orr.w	r2, lr, r2
 8018334:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8018338:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801833c:	4354      	muls	r4, r2
 801833e:	fb05 450c 	mla	r5, r5, ip, r4
 8018342:	0404      	lsls	r4, r0, #16
 8018344:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8018348:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801834c:	4320      	orrs	r0, r4
 801834e:	fb03 5400 	mla	r4, r3, r0, r5
 8018352:	0430      	lsls	r0, r6, #16
 8018354:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8018358:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 801835c:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8018360:	4330      	orrs	r0, r6
 8018362:	fb07 4000 	mla	r0, r7, r0, r4
 8018366:	0d43      	lsrs	r3, r0, #21
 8018368:	0940      	lsrs	r0, r0, #5
 801836a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801836e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8018372:	4318      	orrs	r0, r3
 8018374:	8008      	strh	r0, [r1, #0]
 8018376:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801837a:	bf00      	nop
 801837c:	0801f387 	.word	0x0801f387
 8018380:	0801f98e 	.word	0x0801f98e
 8018384:	0801f40f 	.word	0x0801f40f

08018388 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8018388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801838c:	ed2d 8b0a 	vpush	{d8-d12}
 8018390:	b093      	sub	sp, #76	; 0x4c
 8018392:	461d      	mov	r5, r3
 8018394:	9210      	str	r2, [sp, #64]	; 0x40
 8018396:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018398:	f9bd 20bc 	ldrsh.w	r2, [sp, #188]	; 0xbc
 801839c:	9208      	str	r2, [sp, #32]
 801839e:	e9dd 272c 	ldrd	r2, r7, [sp, #176]	; 0xb0
 80183a2:	910b      	str	r1, [sp, #44]	; 0x2c
 80183a4:	6859      	ldr	r1, [r3, #4]
 80183a6:	681b      	ldr	r3, [r3, #0]
 80183a8:	f9bd 80b8 	ldrsh.w	r8, [sp, #184]	; 0xb8
 80183ac:	9011      	str	r0, [sp, #68]	; 0x44
 80183ae:	fb01 2707 	mla	r7, r1, r7, r2
 80183b2:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80183b6:	9307      	str	r3, [sp, #28]
 80183b8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80183ba:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80183be:	681b      	ldr	r3, [r3, #0]
 80183c0:	9309      	str	r3, [sp, #36]	; 0x24
 80183c2:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80183c6:	eeb0 aa40 	vmov.f32	s20, s0
 80183ca:	eef0 9a60 	vmov.f32	s19, s1
 80183ce:	eeb0 9a41 	vmov.f32	s18, s2
 80183d2:	eeb0 8a62 	vmov.f32	s16, s5
 80183d6:	eef0 8a43 	vmov.f32	s17, s6
 80183da:	eeb0 ca44 	vmov.f32	s24, s8
 80183de:	eef0 ba64 	vmov.f32	s23, s9
 80183e2:	eeb0 ba45 	vmov.f32	s22, s10
 80183e6:	930a      	str	r3, [sp, #40]	; 0x28
 80183e8:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 80183ec:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80183ee:	2b00      	cmp	r3, #0
 80183f0:	dc03      	bgt.n	80183fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 80183f2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80183f4:	2b00      	cmp	r3, #0
 80183f6:	f340 816c 	ble.w	80186d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 80183fa:	2d00      	cmp	r5, #0
 80183fc:	f340 80b6 	ble.w	801856c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e4>
 8018400:	1422      	asrs	r2, r4, #16
 8018402:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018406:	d428      	bmi.n	801845a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd2>
 8018408:	1c51      	adds	r1, r2, #1
 801840a:	4588      	cmp	r8, r1
 801840c:	dd27      	ble.n	801845e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801840e:	2b00      	cmp	r3, #0
 8018410:	db25      	blt.n	801845e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8018412:	9808      	ldr	r0, [sp, #32]
 8018414:	1c59      	adds	r1, r3, #1
 8018416:	4288      	cmp	r0, r1
 8018418:	dd21      	ble.n	801845e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 801841a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801841c:	1e6b      	subs	r3, r5, #1
 801841e:	fb02 4203 	mla	r2, r2, r3, r4
 8018422:	1412      	asrs	r2, r2, #16
 8018424:	d422      	bmi.n	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018426:	3201      	adds	r2, #1
 8018428:	4590      	cmp	r8, r2
 801842a:	dd1f      	ble.n	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801842c:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801842e:	fb02 6303 	mla	r3, r2, r3, r6
 8018432:	141b      	asrs	r3, r3, #16
 8018434:	d41a      	bmi.n	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8018436:	9a08      	ldr	r2, [sp, #32]
 8018438:	3301      	adds	r3, #1
 801843a:	429a      	cmp	r2, r3
 801843c:	dd16      	ble.n	801846c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801843e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018442:	46a9      	mov	r9, r5
 8018444:	f1b9 0f00 	cmp.w	r9, #0
 8018448:	f300 80e4 	bgt.w	8018614 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28c>
 801844c:	9b07      	ldr	r3, [sp, #28]
 801844e:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018452:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018456:	9307      	str	r3, [sp, #28]
 8018458:	e08a      	b.n	8018570 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1e8>
 801845a:	1c51      	adds	r1, r2, #1
 801845c:	d17d      	bne.n	801855a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801845e:	4542      	cmp	r2, r8
 8018460:	da7b      	bge.n	801855a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018462:	1c5a      	adds	r2, r3, #1
 8018464:	db79      	blt.n	801855a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 8018466:	9a08      	ldr	r2, [sp, #32]
 8018468:	4293      	cmp	r3, r2
 801846a:	da76      	bge.n	801855a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1d2>
 801846c:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8018470:	46aa      	mov	sl, r5
 8018472:	f1ba 0f00 	cmp.w	sl, #0
 8018476:	dde9      	ble.n	801844c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc4>
 8018478:	1421      	asrs	r1, r4, #16
 801847a:	ea4f 4226 	mov.w	r2, r6, asr #16
 801847e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018482:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018486:	f100 80b0 	bmi.w	80185ea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x262>
 801848a:	f101 0c01 	add.w	ip, r1, #1
 801848e:	45e0      	cmp	r8, ip
 8018490:	f340 80ad 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 8018494:	2a00      	cmp	r2, #0
 8018496:	f2c0 80aa 	blt.w	80185ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 801849a:	9f08      	ldr	r7, [sp, #32]
 801849c:	f102 0c01 	add.w	ip, r2, #1
 80184a0:	4567      	cmp	r7, ip
 80184a2:	f340 80a4 	ble.w	80185ee <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x266>
 80184a6:	fb02 1208 	mla	r2, r2, r8, r1
 80184aa:	9909      	ldr	r1, [sp, #36]	; 0x24
 80184ac:	eb01 0e42 	add.w	lr, r1, r2, lsl #1
 80184b0:	f831 c012 	ldrh.w	ip, [r1, r2, lsl #1]
 80184b4:	f8be 1002 	ldrh.w	r1, [lr, #2]
 80184b8:	b138      	cbz	r0, 80184ca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x142>
 80184ba:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80184bc:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80184be:	4472      	add	r2, lr
 80184c0:	f83e 7007 	ldrh.w	r7, [lr, r7]
 80184c4:	8852      	ldrh	r2, [r2, #2]
 80184c6:	970c      	str	r7, [sp, #48]	; 0x30
 80184c8:	920d      	str	r2, [sp, #52]	; 0x34
 80184ca:	ea4f 4e0c 	mov.w	lr, ip, lsl #16
 80184ce:	fb13 f200 	smulbb	r2, r3, r0
 80184d2:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80184d6:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80184da:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 80184de:	10d2      	asrs	r2, r2, #3
 80184e0:	ea4e 0c0c 	orr.w	ip, lr, ip
 80184e4:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80184e8:	f1c0 0e10 	rsb	lr, r0, #16
 80184ec:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80184f0:	ebae 0e03 	sub.w	lr, lr, r3
 80184f4:	ea4b 0101 	orr.w	r1, fp, r1
 80184f8:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 80184fc:	4359      	muls	r1, r3
 80184fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018500:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8018504:	fb0e 1e0c 	mla	lr, lr, ip, r1
 8018508:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801850c:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8018510:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8018514:	ea4c 0c03 	orr.w	ip, ip, r3
 8018518:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801851a:	990c      	ldr	r1, [sp, #48]	; 0x30
 801851c:	041b      	lsls	r3, r3, #16
 801851e:	fb02 ec0c 	mla	ip, r2, ip, lr
 8018522:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8018526:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801852a:	ea43 030e 	orr.w	r3, r3, lr
 801852e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8018532:	fb02 c203 	mla	r2, r2, r3, ip
 8018536:	0d53      	lsrs	r3, r2, #21
 8018538:	0952      	lsrs	r2, r2, #5
 801853a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801853e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8018542:	431a      	orrs	r2, r3
 8018544:	f8a9 2000 	strh.w	r2, [r9]
 8018548:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801854a:	441c      	add	r4, r3
 801854c:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801854e:	f109 0902 	add.w	r9, r9, #2
 8018552:	441e      	add	r6, r3
 8018554:	f10a 3aff 	add.w	sl, sl, #4294967295
 8018558:	e78b      	b.n	8018472 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xea>
 801855a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801855c:	441c      	add	r4, r3
 801855e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018560:	441e      	add	r6, r3
 8018562:	9b07      	ldr	r3, [sp, #28]
 8018564:	3302      	adds	r3, #2
 8018566:	3d01      	subs	r5, #1
 8018568:	9307      	str	r3, [sp, #28]
 801856a:	e746      	b.n	80183fa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x72>
 801856c:	f47f af55 	bne.w	801841a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x92>
 8018570:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018572:	2b00      	cmp	r3, #0
 8018574:	f340 80ad 	ble.w	80186d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x34a>
 8018578:	ee3a aa0c 	vadd.f32	s20, s20, s24
 801857c:	ee79 9aab 	vadd.f32	s19, s19, s23
 8018580:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8018584:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8018586:	ee39 9a0b 	vadd.f32	s18, s18, s22
 801858a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801858e:	eef0 6a48 	vmov.f32	s13, s16
 8018592:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018596:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801859a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801859e:	ee16 4a90 	vmov	r4, s13
 80185a2:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80185a6:	eef0 6a68 	vmov.f32	s13, s17
 80185aa:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80185ae:	ee18 2a10 	vmov	r2, s16
 80185b2:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80185b6:	fb92 f3f3 	sdiv	r3, r2, r3
 80185ba:	ee18 2a90 	vmov	r2, s17
 80185be:	9329      	str	r3, [sp, #164]	; 0xa4
 80185c0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80185c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80185c6:	932a      	str	r3, [sp, #168]	; 0xa8
 80185c8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80185ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80185cc:	3b01      	subs	r3, #1
 80185ce:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80185d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80185d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80185d6:	ee16 6a90 	vmov	r6, s13
 80185da:	bf14      	ite	ne
 80185dc:	461d      	movne	r5, r3
 80185de:	4615      	moveq	r5, r2
 80185e0:	eef0 8a67 	vmov.f32	s17, s15
 80185e4:	eeb0 8a47 	vmov.f32	s16, s14
 80185e8:	e700      	b.n	80183ec <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x64>
 80185ea:	1c4f      	adds	r7, r1, #1
 80185ec:	d1ac      	bne.n	8018548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80185ee:	4588      	cmp	r8, r1
 80185f0:	ddaa      	ble.n	8018548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80185f2:	1c57      	adds	r7, r2, #1
 80185f4:	dba8      	blt.n	8018548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80185f6:	9f08      	ldr	r7, [sp, #32]
 80185f8:	4297      	cmp	r7, r2
 80185fa:	dda5      	ble.n	8018548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 80185fc:	e9cd 3003 	strd	r3, r0, [sp, #12]
 8018600:	e9cd 1201 	strd	r1, r2, [sp, #4]
 8018604:	9700      	str	r7, [sp, #0]
 8018606:	4643      	mov	r3, r8
 8018608:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801860a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801860c:	4649      	mov	r1, r9
 801860e:	f7ff fe2f 	bl	8018270 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8018612:	e799      	b.n	8018548 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 8018614:	1422      	asrs	r2, r4, #16
 8018616:	1431      	asrs	r1, r6, #16
 8018618:	fb08 2101 	mla	r1, r8, r1, r2
 801861c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801861e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8018620:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 8018624:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8018628:	f830 c011 	ldrh.w	ip, [r0, r1, lsl #1]
 801862c:	8851      	ldrh	r1, [r2, #2]
 801862e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018632:	f1be 0f00 	cmp.w	lr, #0
 8018636:	d006      	beq.n	8018646 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2be>
 8018638:	980a      	ldr	r0, [sp, #40]	; 0x28
 801863a:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801863c:	1810      	adds	r0, r2, r0
 801863e:	5bd2      	ldrh	r2, [r2, r7]
 8018640:	920e      	str	r2, [sp, #56]	; 0x38
 8018642:	8842      	ldrh	r2, [r0, #2]
 8018644:	920f      	str	r2, [sp, #60]	; 0x3c
 8018646:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801864a:	fb13 f20e 	smulbb	r2, r3, lr
 801864e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8018652:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8018656:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801865a:	10d2      	asrs	r2, r2, #3
 801865c:	ea40 000c 	orr.w	r0, r0, ip
 8018660:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018664:	f1ce 0c10 	rsb	ip, lr, #16
 8018668:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801866c:	ebac 0c03 	sub.w	ip, ip, r3
 8018670:	ea4a 0101 	orr.w	r1, sl, r1
 8018674:	ebc2 0343 	rsb	r3, r2, r3, lsl #1
 8018678:	4359      	muls	r1, r3
 801867a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801867c:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8018680:	fb0c 1c00 	mla	ip, ip, r0, r1
 8018684:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8018688:	f423 60fc 	bic.w	r0, r3, #2016	; 0x7e0
 801868c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801868e:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018690:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8018694:	041b      	lsls	r3, r3, #16
 8018696:	ea4a 0000 	orr.w	r0, sl, r0
 801869a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801869e:	f421 6afc 	bic.w	sl, r1, #2016	; 0x7e0
 80186a2:	fb02 c000 	mla	r0, r2, r0, ip
 80186a6:	ea43 0a0a 	orr.w	sl, r3, sl
 80186aa:	ebc2 024e 	rsb	r2, r2, lr, lsl #1
 80186ae:	fb02 000a 	mla	r0, r2, sl, r0
 80186b2:	0d43      	lsrs	r3, r0, #21
 80186b4:	0940      	lsrs	r0, r0, #5
 80186b6:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80186ba:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80186be:	4318      	orrs	r0, r3
 80186c0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80186c2:	f82b 0b02 	strh.w	r0, [fp], #2
 80186c6:	441c      	add	r4, r3
 80186c8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80186ca:	f109 39ff 	add.w	r9, r9, #4294967295
 80186ce:	441e      	add	r6, r3
 80186d0:	e6b8      	b.n	8018444 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xbc>
 80186d2:	b013      	add	sp, #76	; 0x4c
 80186d4:	ecbd 8b0a 	vpop	{d8-d12}
 80186d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080186dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 80186dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186e0:	8808      	ldrh	r0, [r1, #0]
 80186e2:	b085      	sub	sp, #20
 80186e4:	1206      	asrs	r6, r0, #8
 80186e6:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80186ea:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80186ee:	9600      	str	r6, [sp, #0]
 80186f0:	10c6      	asrs	r6, r0, #3
 80186f2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80186f6:	9601      	str	r6, [sp, #4]
 80186f8:	00c0      	lsls	r0, r0, #3
 80186fa:	fb04 c603 	mla	r6, r4, r3, ip
 80186fe:	b2c0      	uxtb	r0, r0
 8018700:	4691      	mov	r9, r2
 8018702:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 8018706:	9a00      	ldr	r2, [sp, #0]
 8018708:	9002      	str	r0, [sp, #8]
 801870a:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 801870e:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 8018712:	9a01      	ldr	r2, [sp, #4]
 8018714:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8018718:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 801871c:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8018720:	2c00      	cmp	r4, #0
 8018722:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8018726:	db3a      	blt.n	801879e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 8018728:	45a0      	cmp	r8, r4
 801872a:	dd38      	ble.n	801879e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc2>
 801872c:	f1bc 0f00 	cmp.w	ip, #0
 8018730:	db33      	blt.n	801879a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018732:	4563      	cmp	r3, ip
 8018734:	dd31      	ble.n	801879a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbe>
 8018736:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 801873a:	f11c 0601 	adds.w	r6, ip, #1
 801873e:	d431      	bmi.n	80187a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018740:	42b3      	cmp	r3, r6
 8018742:	dd2f      	ble.n	80187a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018744:	b375      	cbz	r5, 80187a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc8>
 8018746:	f8de 6004 	ldr.w	r6, [lr, #4]
 801874a:	3401      	adds	r4, #1
 801874c:	d42e      	bmi.n	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 801874e:	45a0      	cmp	r8, r4
 8018750:	dd2c      	ble.n	80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018752:	b35f      	cbz	r7, 80187ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8018754:	f1bc 0f00 	cmp.w	ip, #0
 8018758:	db26      	blt.n	80187a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801875a:	4563      	cmp	r3, ip
 801875c:	dd24      	ble.n	80187a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 801875e:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8018762:	f11c 0c01 	adds.w	ip, ip, #1
 8018766:	d405      	bmi.n	8018774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 8018768:	4563      	cmp	r3, ip
 801876a:	dd03      	ble.n	8018774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801876c:	b115      	cbz	r5, 8018774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 801876e:	3301      	adds	r3, #1
 8018770:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8018774:	2d0f      	cmp	r5, #15
 8018776:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 801877a:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801877e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8018782:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8018786:	d801      	bhi.n	801878c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb0>
 8018788:	2f0f      	cmp	r7, #15
 801878a:	d911      	bls.n	80187b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 801878c:	4b82      	ldr	r3, [pc, #520]	; (8018998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2bc>)
 801878e:	4a83      	ldr	r2, [pc, #524]	; (801899c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c0>)
 8018790:	4883      	ldr	r0, [pc, #524]	; (80189a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2c4>)
 8018792:	f240 3173 	movw	r1, #883	; 0x373
 8018796:	f002 ffab 	bl	801b6f0 <__assert_func>
 801879a:	4602      	mov	r2, r0
 801879c:	e7cd      	b.n	801873a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801879e:	4606      	mov	r6, r0
 80187a0:	4602      	mov	r2, r0
 80187a2:	e7d2      	b.n	801874a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80187a4:	4606      	mov	r6, r0
 80187a6:	e7d0      	b.n	801874a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x6e>
 80187a8:	4604      	mov	r4, r0
 80187aa:	e7da      	b.n	8018762 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x86>
 80187ac:	4604      	mov	r4, r0
 80187ae:	e7e1      	b.n	8018774 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x98>
 80187b0:	b2ab      	uxth	r3, r5
 80187b2:	b2bf      	uxth	r7, r7
 80187b4:	fb03 fe07 	mul.w	lr, r3, r7
 80187b8:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80187bc:	011b      	lsls	r3, r3, #4
 80187be:	eba3 0c0e 	sub.w	ip, r3, lr
 80187c2:	b2bf      	uxth	r7, r7
 80187c4:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80187c8:	fa1f fc8c 	uxth.w	ip, ip
 80187cc:	1bed      	subs	r5, r5, r7
 80187ce:	b2ad      	uxth	r5, r5
 80187d0:	fb0c f30a 	mul.w	r3, ip, sl
 80187d4:	fb05 330b 	mla	r3, r5, fp, r3
 80187d8:	fb07 3309 	mla	r3, r7, r9, r3
 80187dc:	fb0e 3308 	mla	r3, lr, r8, r3
 80187e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80187e4:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80187e8:	9303      	str	r3, [sp, #12]
 80187ea:	d018      	beq.n	801881e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 80187ec:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80187f0:	fb0b f303 	mul.w	r3, fp, r3
 80187f4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80187f8:	fb0b fb02 	mul.w	fp, fp, r2
 80187fc:	0a1a      	lsrs	r2, r3, #8
 80187fe:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018802:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 8018806:	441a      	add	r2, r3
 8018808:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 801880c:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 8018810:	0a12      	lsrs	r2, r2, #8
 8018812:	0a1b      	lsrs	r3, r3, #8
 8018814:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8018818:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801881c:	431a      	orrs	r2, r3
 801881e:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018822:	d019      	beq.n	8018858 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 8018824:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8018828:	fb0a fb0b 	mul.w	fp, sl, fp
 801882c:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018830:	fb0a fa06 	mul.w	sl, sl, r6
 8018834:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8018838:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801883c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8018840:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8018844:	445e      	add	r6, fp
 8018846:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 801884a:	0a36      	lsrs	r6, r6, #8
 801884c:	0a1b      	lsrs	r3, r3, #8
 801884e:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018852:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018856:	431e      	orrs	r6, r3
 8018858:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801885c:	d019      	beq.n	8018892 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801885e:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8018862:	fb09 fa0a 	mul.w	sl, r9, sl
 8018866:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801886a:	fb09 f904 	mul.w	r9, r9, r4
 801886e:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8018872:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8018876:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801887a:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801887e:	4454      	add	r4, sl
 8018880:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8018884:	0a24      	lsrs	r4, r4, #8
 8018886:	0a1b      	lsrs	r3, r3, #8
 8018888:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801888c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018890:	431c      	orrs	r4, r3
 8018892:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018896:	d019      	beq.n	80188cc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8018898:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 801889c:	fb08 f909 	mul.w	r9, r8, r9
 80188a0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80188a4:	fb08 f800 	mul.w	r8, r8, r0
 80188a8:	ea4f 2019 	mov.w	r0, r9, lsr #8
 80188ac:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80188b0:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80188b4:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80188b8:	4448      	add	r0, r9
 80188ba:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80188be:	0a00      	lsrs	r0, r0, #8
 80188c0:	0a1b      	lsrs	r3, r3, #8
 80188c2:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80188c6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80188ca:	4318      	orrs	r0, r3
 80188cc:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80188d0:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80188d4:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80188d8:	fb0c f808 	mul.w	r8, ip, r8
 80188dc:	fb0c f606 	mul.w	r6, ip, r6
 80188e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80188e4:	fb05 6202 	mla	r2, r5, r2, r6
 80188e8:	fb05 8803 	mla	r8, r5, r3, r8
 80188ec:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80188f0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80188f4:	fb07 8803 	mla	r8, r7, r3, r8
 80188f8:	fb07 2704 	mla	r7, r7, r4, r2
 80188fc:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 8018900:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8018904:	fb0e 8303 	mla	r3, lr, r3, r8
 8018908:	fb0e 7e00 	mla	lr, lr, r0, r7
 801890c:	0a1b      	lsrs	r3, r3, #8
 801890e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018912:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018916:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 801891a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801891e:	ea43 0e0e 	orr.w	lr, r3, lr
 8018922:	9b03      	ldr	r3, [sp, #12]
 8018924:	b2a4      	uxth	r4, r4
 8018926:	4363      	muls	r3, r4
 8018928:	1c5a      	adds	r2, r3, #1
 801892a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801892e:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8018932:	9b00      	ldr	r3, [sp, #0]
 8018934:	b2d2      	uxtb	r2, r2
 8018936:	ea4f 451e 	mov.w	r5, lr, lsr #16
 801893a:	fb13 f302 	smulbb	r3, r3, r2
 801893e:	fb05 3304 	mla	r3, r5, r4, r3
 8018942:	b29d      	uxth	r5, r3
 8018944:	9b01      	ldr	r3, [sp, #4]
 8018946:	f3ce 2007 	ubfx	r0, lr, #8, #8
 801894a:	fb13 f302 	smulbb	r3, r3, r2
 801894e:	fb00 3004 	mla	r0, r0, r4, r3
 8018952:	9b02      	ldr	r3, [sp, #8]
 8018954:	fa5f fe8e 	uxtb.w	lr, lr
 8018958:	fb13 f202 	smulbb	r2, r3, r2
 801895c:	fb0e 2e04 	mla	lr, lr, r4, r2
 8018960:	fa1f fe8e 	uxth.w	lr, lr
 8018964:	b280      	uxth	r0, r0
 8018966:	f10e 0201 	add.w	r2, lr, #1
 801896a:	1c6b      	adds	r3, r5, #1
 801896c:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8018970:	1c42      	adds	r2, r0, #1
 8018972:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8018976:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801897a:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801897e:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018982:	0952      	lsrs	r2, r2, #5
 8018984:	ea43 030e 	orr.w	r3, r3, lr
 8018988:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801898c:	4313      	orrs	r3, r2
 801898e:	800b      	strh	r3, [r1, #0]
 8018990:	b005      	add	sp, #20
 8018992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018996:	bf00      	nop
 8018998:	0801f387 	.word	0x0801f387
 801899c:	0801f8e5 	.word	0x0801f8e5
 80189a0:	0801f40f 	.word	0x0801f40f

080189a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 80189a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189a8:	ed2d 8b08 	vpush	{d8-d11}
 80189ac:	b099      	sub	sp, #100	; 0x64
 80189ae:	eeb0 aa40 	vmov.f32	s20, s0
 80189b2:	9306      	str	r3, [sp, #24]
 80189b4:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 80189b8:	9307      	str	r3, [sp, #28]
 80189ba:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 80189be:	9216      	str	r2, [sp, #88]	; 0x58
 80189c0:	9310      	str	r3, [sp, #64]	; 0x40
 80189c2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80189c4:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 80189c8:	9113      	str	r1, [sp, #76]	; 0x4c
 80189ca:	9315      	str	r3, [sp, #84]	; 0x54
 80189cc:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80189d0:	9017      	str	r0, [sp, #92]	; 0x5c
 80189d2:	6850      	ldr	r0, [r2, #4]
 80189d4:	6812      	ldr	r2, [r2, #0]
 80189d6:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80189d8:	fb00 1303 	mla	r3, r0, r3, r1
 80189dc:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80189e0:	930a      	str	r3, [sp, #40]	; 0x28
 80189e2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80189e4:	681b      	ldr	r3, [r3, #0]
 80189e6:	9312      	str	r3, [sp, #72]	; 0x48
 80189e8:	9b07      	ldr	r3, [sp, #28]
 80189ea:	009b      	lsls	r3, r3, #2
 80189ec:	eef0 9a60 	vmov.f32	s19, s1
 80189f0:	eeb0 9a41 	vmov.f32	s18, s2
 80189f4:	eeb0 8a62 	vmov.f32	s16, s5
 80189f8:	eef0 8a43 	vmov.f32	s17, s6
 80189fc:	eef0 ba44 	vmov.f32	s23, s8
 8018a00:	eeb0 ba64 	vmov.f32	s22, s9
 8018a04:	eef0 aa45 	vmov.f32	s21, s10
 8018a08:	930e      	str	r3, [sp, #56]	; 0x38
 8018a0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018a0c:	2b00      	cmp	r3, #0
 8018a0e:	dc03      	bgt.n	8018a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018a10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018a12:	2b00      	cmp	r3, #0
 8018a14:	f340 8352 	ble.w	80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018a18:	9b06      	ldr	r3, [sp, #24]
 8018a1a:	2b00      	cmp	r3, #0
 8018a1c:	f340 81a8 	ble.w	8018d70 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3cc>
 8018a20:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018a22:	1412      	asrs	r2, r2, #16
 8018a24:	ea4f 4324 	mov.w	r3, r4, asr #16
 8018a28:	d430      	bmi.n	8018a8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8018a2a:	9807      	ldr	r0, [sp, #28]
 8018a2c:	1c51      	adds	r1, r2, #1
 8018a2e:	4288      	cmp	r0, r1
 8018a30:	dd2f      	ble.n	8018a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018a32:	2b00      	cmp	r3, #0
 8018a34:	db2d      	blt.n	8018a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018a36:	9810      	ldr	r0, [sp, #64]	; 0x40
 8018a38:	1c59      	adds	r1, r3, #1
 8018a3a:	4288      	cmp	r0, r1
 8018a3c:	dd29      	ble.n	8018a92 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xee>
 8018a3e:	9b06      	ldr	r3, [sp, #24]
 8018a40:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018a42:	992b      	ldr	r1, [sp, #172]	; 0xac
 8018a44:	3b01      	subs	r3, #1
 8018a46:	fb02 1203 	mla	r2, r2, r3, r1
 8018a4a:	1412      	asrs	r2, r2, #16
 8018a4c:	d42c      	bmi.n	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018a4e:	9907      	ldr	r1, [sp, #28]
 8018a50:	3201      	adds	r2, #1
 8018a52:	4291      	cmp	r1, r2
 8018a54:	dd28      	ble.n	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018a56:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8018a58:	fb02 4303 	mla	r3, r2, r3, r4
 8018a5c:	141b      	asrs	r3, r3, #16
 8018a5e:	d423      	bmi.n	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018a60:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018a62:	3301      	adds	r3, #1
 8018a64:	429a      	cmp	r2, r3
 8018a66:	dd1f      	ble.n	8018aa8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x104>
 8018a68:	9b06      	ldr	r3, [sp, #24]
 8018a6a:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8018a6e:	f8bd b054 	ldrh.w	fp, [sp, #84]	; 0x54
 8018a72:	9311      	str	r3, [sp, #68]	; 0x44
 8018a74:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018a76:	2b00      	cmp	r3, #0
 8018a78:	f300 81e3 	bgt.w	8018e42 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x49e>
 8018a7c:	9b06      	ldr	r3, [sp, #24]
 8018a7e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8018a82:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018a84:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8018a88:	930a      	str	r3, [sp, #40]	; 0x28
 8018a8a:	e173      	b.n	8018d74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3d0>
 8018a8c:	1c51      	adds	r1, r2, #1
 8018a8e:	f040 8162 	bne.w	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018a92:	9907      	ldr	r1, [sp, #28]
 8018a94:	428a      	cmp	r2, r1
 8018a96:	f280 815e 	bge.w	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018a9a:	1c5f      	adds	r7, r3, #1
 8018a9c:	f2c0 815b 	blt.w	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018aa0:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8018aa2:	4293      	cmp	r3, r2
 8018aa4:	f280 8157 	bge.w	8018d56 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b2>
 8018aa8:	9b06      	ldr	r3, [sp, #24]
 8018aaa:	9314      	str	r3, [sp, #80]	; 0x50
 8018aac:	f8bd 7054 	ldrh.w	r7, [sp, #84]	; 0x54
 8018ab0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ab2:	9311      	str	r3, [sp, #68]	; 0x44
 8018ab4:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018ab6:	2b00      	cmp	r3, #0
 8018ab8:	dde0      	ble.n	8018a7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd8>
 8018aba:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018abc:	f3c2 3003 	ubfx	r0, r2, #12, #4
 8018ac0:	1412      	asrs	r2, r2, #16
 8018ac2:	ea4f 4324 	mov.w	r3, r4, asr #16
 8018ac6:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018aca:	f100 81a1 	bmi.w	8018e10 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x46c>
 8018ace:	9e07      	ldr	r6, [sp, #28]
 8018ad0:	1c55      	adds	r5, r2, #1
 8018ad2:	42ae      	cmp	r6, r5
 8018ad4:	f340 819e 	ble.w	8018e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018ad8:	2b00      	cmp	r3, #0
 8018ada:	f2c0 819b 	blt.w	8018e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018ade:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8018ae0:	1c5d      	adds	r5, r3, #1
 8018ae2:	42ae      	cmp	r6, r5
 8018ae4:	f340 8196 	ble.w	8018e14 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x470>
 8018ae8:	9d07      	ldr	r5, [sp, #28]
 8018aea:	fb03 2305 	mla	r3, r3, r5, r2
 8018aee:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018af0:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018af4:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018af8:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8018afc:	2800      	cmp	r0, #0
 8018afe:	f000 8178 	beq.w	8018df2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44e>
 8018b02:	686a      	ldr	r2, [r5, #4]
 8018b04:	920b      	str	r2, [sp, #44]	; 0x2c
 8018b06:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8018b0a:	2900      	cmp	r1, #0
 8018b0c:	f000 817a 	beq.w	8018e04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x460>
 8018b10:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018b12:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8018b14:	18aa      	adds	r2, r5, r2
 8018b16:	59ad      	ldr	r5, [r5, r6]
 8018b18:	6852      	ldr	r2, [r2, #4]
 8018b1a:	9508      	str	r5, [sp, #32]
 8018b1c:	ea4f 6a15 	mov.w	sl, r5, lsr #24
 8018b20:	920c      	str	r2, [sp, #48]	; 0x30
 8018b22:	0e15      	lsrs	r5, r2, #24
 8018b24:	b280      	uxth	r0, r0
 8018b26:	b289      	uxth	r1, r1
 8018b28:	fb00 fb01 	mul.w	fp, r0, r1
 8018b2c:	ebcb 1101 	rsb	r1, fp, r1, lsl #4
 8018b30:	0100      	lsls	r0, r0, #4
 8018b32:	eba0 090b 	sub.w	r9, r0, fp
 8018b36:	b289      	uxth	r1, r1
 8018b38:	f5c0 7280 	rsb	r2, r0, #256	; 0x100
 8018b3c:	fa1f f989 	uxth.w	r9, r9
 8018b40:	1a52      	subs	r2, r2, r1
 8018b42:	b292      	uxth	r2, r2
 8018b44:	fb09 f008 	mul.w	r0, r9, r8
 8018b48:	fb02 000c 	mla	r0, r2, ip, r0
 8018b4c:	fb01 000a 	mla	r0, r1, sl, r0
 8018b50:	fb0b 0005 	mla	r0, fp, r5, r0
 8018b54:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8018b58:	2800      	cmp	r0, #0
 8018b5a:	f000 80ef 	beq.w	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018b5e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018b62:	d01b      	beq.n	8018b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1f8>
 8018b64:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8018b68:	fb0c fe0e 	mul.w	lr, ip, lr
 8018b6c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018b70:	fb0c fc03 	mul.w	ip, ip, r3
 8018b74:	ea4f 231e 	mov.w	r3, lr, lsr #8
 8018b78:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b7c:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8018b80:	4473      	add	r3, lr
 8018b82:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 8018b86:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8018b8a:	0a1b      	lsrs	r3, r3, #8
 8018b8c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018b90:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018b94:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8018b98:	ea43 030e 	orr.w	r3, r3, lr
 8018b9c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018ba0:	d01e      	beq.n	8018be0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x23c>
 8018ba2:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018ba4:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018ba8:	fb08 fc0c 	mul.w	ip, r8, ip
 8018bac:	f406 4e7f 	and.w	lr, r6, #65280	; 0xff00
 8018bb0:	fb08 f80e 	mul.w	r8, r8, lr
 8018bb4:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 8018bb8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018bbc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018bc0:	44e6      	add	lr, ip
 8018bc2:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 8018bc6:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8018bca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018bce:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018bd2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018bd6:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018bda:	ea4e 0608 	orr.w	r6, lr, r8
 8018bde:	960b      	str	r6, [sp, #44]	; 0x2c
 8018be0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018be4:	d01e      	beq.n	8018c24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x280>
 8018be6:	9e08      	ldr	r6, [sp, #32]
 8018be8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018bec:	fb0a f808 	mul.w	r8, sl, r8
 8018bf0:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018bf4:	fb0a fa0c 	mul.w	sl, sl, ip
 8018bf8:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018bfc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c00:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018c04:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8018c08:	44c6      	add	lr, r8
 8018c0a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8018c0e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018c16:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018c1e:	ea4e 060a 	orr.w	r6, lr, sl
 8018c22:	9608      	str	r6, [sp, #32]
 8018c24:	2dff      	cmp	r5, #255	; 0xff
 8018c26:	d01d      	beq.n	8018c64 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8018c28:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018c2a:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8018c2e:	fb05 f808 	mul.w	r8, r5, r8
 8018c32:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018c36:	fb05 f50c 	mul.w	r5, r5, ip
 8018c3a:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8018c3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c42:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 8018c46:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 8018c4a:	44c6      	add	lr, r8
 8018c4c:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018c50:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8018c54:	0a2d      	lsrs	r5, r5, #8
 8018c56:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8018c5a:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018c5e:	ea4e 0505 	orr.w	r5, lr, r5
 8018c62:	950c      	str	r5, [sp, #48]	; 0x30
 8018c64:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018c66:	9e08      	ldr	r6, [sp, #32]
 8018c68:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018c6c:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8018c70:	fb09 f505 	mul.w	r5, r9, r5
 8018c74:	fb02 550c 	mla	r5, r2, ip, r5
 8018c78:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018c7c:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8018c7e:	fb01 550c 	mla	r5, r1, ip, r5
 8018c82:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018c86:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8018c88:	fb0b 550c 	mla	r5, fp, ip, r5
 8018c8c:	f406 4c7f 	and.w	ip, r6, #65280	; 0xff00
 8018c90:	fb09 f90c 	mul.w	r9, r9, ip
 8018c94:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018c98:	fb02 9303 	mla	r3, r2, r3, r9
 8018c9c:	9a08      	ldr	r2, [sp, #32]
 8018c9e:	f402 4e7f 	and.w	lr, r2, #65280	; 0xff00
 8018ca2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018ca4:	fb01 330e 	mla	r3, r1, lr, r3
 8018ca8:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8018cac:	fb0b 3b01 	mla	fp, fp, r1, r3
 8018cb0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018cb2:	0a2d      	lsrs	r5, r5, #8
 8018cb4:	f8b3 c000 	ldrh.w	ip, [r3]
 8018cb8:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 8018cbc:	fb00 f307 	mul.w	r3, r0, r7
 8018cc0:	1c58      	adds	r0, r3, #1
 8018cc2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018cc6:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8018cca:	ea45 050b 	orr.w	r5, r5, fp
 8018cce:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8018cd2:	0c29      	lsrs	r1, r5, #16
 8018cd4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8018cd8:	ea4f 232c 	mov.w	r3, ip, asr #8
 8018cdc:	b2c0      	uxtb	r0, r0
 8018cde:	fb11 f107 	smulbb	r1, r1, r7
 8018ce2:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8018ce6:	fb03 1300 	mla	r3, r3, r0, r1
 8018cea:	b299      	uxth	r1, r3
 8018cec:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018cf0:	f3c5 2307 	ubfx	r3, r5, #8, #8
 8018cf4:	fb13 f307 	smulbb	r3, r3, r7
 8018cf8:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018cfc:	fb02 3200 	mla	r2, r2, r0, r3
 8018d00:	b2ed      	uxtb	r5, r5
 8018d02:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8018d06:	b2db      	uxtb	r3, r3
 8018d08:	fb15 f507 	smulbb	r5, r5, r7
 8018d0c:	fb03 5500 	mla	r5, r3, r0, r5
 8018d10:	b292      	uxth	r2, r2
 8018d12:	b2ad      	uxth	r5, r5
 8018d14:	1c4b      	adds	r3, r1, #1
 8018d16:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8018d1a:	1c68      	adds	r0, r5, #1
 8018d1c:	1c51      	adds	r1, r2, #1
 8018d1e:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 8018d22:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018d26:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 8018d2a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8018d2e:	0952      	lsrs	r2, r2, #5
 8018d30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018d34:	432b      	orrs	r3, r5
 8018d36:	4313      	orrs	r3, r2
 8018d38:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018d3a:	8013      	strh	r3, [r2, #0]
 8018d3c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8018d3e:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018d40:	3302      	adds	r3, #2
 8018d42:	9311      	str	r3, [sp, #68]	; 0x44
 8018d44:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018d46:	4413      	add	r3, r2
 8018d48:	932b      	str	r3, [sp, #172]	; 0xac
 8018d4a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018d4c:	441c      	add	r4, r3
 8018d4e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8018d50:	3b01      	subs	r3, #1
 8018d52:	9314      	str	r3, [sp, #80]	; 0x50
 8018d54:	e6ae      	b.n	8018ab4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x110>
 8018d56:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018d58:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8018d5a:	4413      	add	r3, r2
 8018d5c:	932b      	str	r3, [sp, #172]	; 0xac
 8018d5e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8018d60:	441c      	add	r4, r3
 8018d62:	9b06      	ldr	r3, [sp, #24]
 8018d64:	3b01      	subs	r3, #1
 8018d66:	9306      	str	r3, [sp, #24]
 8018d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018d6a:	3302      	adds	r3, #2
 8018d6c:	930a      	str	r3, [sp, #40]	; 0x28
 8018d6e:	e653      	b.n	8018a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x74>
 8018d70:	f47f ae65 	bne.w	8018a3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8018d74:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018d76:	2b00      	cmp	r3, #0
 8018d78:	f340 81a0 	ble.w	80190bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x718>
 8018d7c:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018d80:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018d84:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018d88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018d8a:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018d8e:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018d92:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018d96:	eef0 6a48 	vmov.f32	s13, s16
 8018d9a:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018d9e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018da2:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018da6:	edcd 6a2b 	vstr	s13, [sp, #172]	; 0xac
 8018daa:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018dae:	eef0 6a68 	vmov.f32	s13, s17
 8018db2:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018db6:	ee18 2a10 	vmov	r2, s16
 8018dba:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018dbe:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dc2:	ee18 2a90 	vmov	r2, s17
 8018dc6:	932d      	str	r3, [sp, #180]	; 0xb4
 8018dc8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018dca:	fb92 f3f3 	sdiv	r3, r2, r3
 8018dce:	932e      	str	r3, [sp, #184]	; 0xb8
 8018dd0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018dd2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8018dd4:	3b01      	subs	r3, #1
 8018dd6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018dda:	9313      	str	r3, [sp, #76]	; 0x4c
 8018ddc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018dde:	bf08      	it	eq
 8018de0:	4613      	moveq	r3, r2
 8018de2:	ee16 4a90 	vmov	r4, s13
 8018de6:	9306      	str	r3, [sp, #24]
 8018de8:	eef0 8a67 	vmov.f32	s17, s15
 8018dec:	eeb0 8a47 	vmov.f32	s16, s14
 8018df0:	e60b      	b.n	8018a0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x66>
 8018df2:	b151      	cbz	r1, 8018e0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 8018df4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018df6:	58aa      	ldr	r2, [r5, r2]
 8018df8:	9208      	str	r2, [sp, #32]
 8018dfa:	ea4f 6a12 	mov.w	sl, r2, lsr #24
 8018dfe:	25ff      	movs	r5, #255	; 0xff
 8018e00:	46a8      	mov	r8, r5
 8018e02:	e68f      	b.n	8018b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018e04:	25ff      	movs	r5, #255	; 0xff
 8018e06:	46aa      	mov	sl, r5
 8018e08:	e68c      	b.n	8018b24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x180>
 8018e0a:	25ff      	movs	r5, #255	; 0xff
 8018e0c:	46aa      	mov	sl, r5
 8018e0e:	e7f7      	b.n	8018e00 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x45c>
 8018e10:	1c56      	adds	r6, r2, #1
 8018e12:	d193      	bne.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018e14:	9d07      	ldr	r5, [sp, #28]
 8018e16:	4295      	cmp	r5, r2
 8018e18:	dd90      	ble.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018e1a:	1c5d      	adds	r5, r3, #1
 8018e1c:	db8e      	blt.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018e1e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018e20:	429d      	cmp	r5, r3
 8018e22:	dd8b      	ble.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018e24:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018e26:	9201      	str	r2, [sp, #4]
 8018e28:	e9cd 3002 	strd	r3, r0, [sp, #8]
 8018e2c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e2e:	9300      	str	r3, [sp, #0]
 8018e30:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8018e34:	9b07      	ldr	r3, [sp, #28]
 8018e36:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8018e38:	e9dd 1211 	ldrd	r1, r2, [sp, #68]	; 0x44
 8018e3c:	f7ff fc4e 	bl	80186dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8018e40:	e77c      	b.n	8018d3c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 8018e42:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018e44:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8018e46:	9d07      	ldr	r5, [sp, #28]
 8018e48:	1412      	asrs	r2, r2, #16
 8018e4a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8018e4e:	1423      	asrs	r3, r4, #16
 8018e50:	fb05 2303 	mla	r3, r5, r3, r2
 8018e54:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8018e56:	eb02 0583 	add.w	r5, r2, r3, lsl #2
 8018e5a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8018e5e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8018e62:	0e1e      	lsrs	r6, r3, #24
 8018e64:	2900      	cmp	r1, #0
 8018e66:	f000 811a 	beq.w	801909e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6fa>
 8018e6a:	686a      	ldr	r2, [r5, #4]
 8018e6c:	920d      	str	r2, [sp, #52]	; 0x34
 8018e6e:	ea4f 6c12 	mov.w	ip, r2, lsr #24
 8018e72:	2800      	cmp	r0, #0
 8018e74:	f000 811c 	beq.w	80190b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70c>
 8018e78:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018e7a:	9f0e      	ldr	r7, [sp, #56]	; 0x38
 8018e7c:	18aa      	adds	r2, r5, r2
 8018e7e:	59ed      	ldr	r5, [r5, r7]
 8018e80:	6852      	ldr	r2, [r2, #4]
 8018e82:	9509      	str	r5, [sp, #36]	; 0x24
 8018e84:	ea4f 6815 	mov.w	r8, r5, lsr #24
 8018e88:	920f      	str	r2, [sp, #60]	; 0x3c
 8018e8a:	0e15      	lsrs	r5, r2, #24
 8018e8c:	b289      	uxth	r1, r1
 8018e8e:	b280      	uxth	r0, r0
 8018e90:	fb01 f900 	mul.w	r9, r1, r0
 8018e94:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8018e98:	0109      	lsls	r1, r1, #4
 8018e9a:	eba1 0e09 	sub.w	lr, r1, r9
 8018e9e:	b280      	uxth	r0, r0
 8018ea0:	f5c1 7280 	rsb	r2, r1, #256	; 0x100
 8018ea4:	fa1f fe8e 	uxth.w	lr, lr
 8018ea8:	1a12      	subs	r2, r2, r0
 8018eaa:	b292      	uxth	r2, r2
 8018eac:	fb0e f10c 	mul.w	r1, lr, ip
 8018eb0:	fb02 1106 	mla	r1, r2, r6, r1
 8018eb4:	fb00 1108 	mla	r1, r0, r8, r1
 8018eb8:	fb09 1105 	mla	r1, r9, r5, r1
 8018ebc:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8018ec0:	2900      	cmp	r1, #0
 8018ec2:	f000 80e0 	beq.w	8019086 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e2>
 8018ec6:	2eff      	cmp	r6, #255	; 0xff
 8018ec8:	d016      	beq.n	8018ef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x554>
 8018eca:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 8018ece:	4377      	muls	r7, r6
 8018ed0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018ed4:	435e      	muls	r6, r3
 8018ed6:	0a3b      	lsrs	r3, r7, #8
 8018ed8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018edc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018ee0:	443b      	add	r3, r7
 8018ee2:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8018ee6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 8018eea:	0a1b      	lsrs	r3, r3, #8
 8018eec:	0a3f      	lsrs	r7, r7, #8
 8018eee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8018ef2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018ef6:	433b      	orrs	r3, r7
 8018ef8:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018efc:	d01d      	beq.n	8018f3a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 8018efe:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018f00:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 8018f02:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018f06:	fb0c f606 	mul.w	r6, ip, r6
 8018f0a:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8018f0e:	fb0c fc07 	mul.w	ip, ip, r7
 8018f12:	0a37      	lsrs	r7, r6, #8
 8018f14:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f18:	f106 1601 	add.w	r6, r6, #65537	; 0x10001
 8018f1c:	4437      	add	r7, r6
 8018f1e:	f50c 7680 	add.w	r6, ip, #256	; 0x100
 8018f22:	eb06 2c1c 	add.w	ip, r6, ip, lsr #8
 8018f26:	0a3f      	lsrs	r7, r7, #8
 8018f28:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018f2c:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f30:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8018f34:	ea47 060c 	orr.w	r6, r7, ip
 8018f38:	960d      	str	r6, [sp, #52]	; 0x34
 8018f3a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8018f3e:	d01d      	beq.n	8018f7c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5d8>
 8018f40:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018f42:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018f46:	fb08 fc0c 	mul.w	ip, r8, ip
 8018f4a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018f4e:	fb08 f806 	mul.w	r8, r8, r6
 8018f52:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018f56:	f508 7680 	add.w	r6, r8, #256	; 0x100
 8018f5a:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f5e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018f62:	eb06 2818 	add.w	r8, r6, r8, lsr #8
 8018f66:	4467      	add	r7, ip
 8018f68:	0a3f      	lsrs	r7, r7, #8
 8018f6a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8018f6e:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f72:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 8018f76:	ea47 0608 	orr.w	r6, r7, r8
 8018f7a:	9609      	str	r6, [sp, #36]	; 0x24
 8018f7c:	2dff      	cmp	r5, #255	; 0xff
 8018f7e:	d01a      	beq.n	8018fb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x612>
 8018f80:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018f82:	f006 1cff 	and.w	ip, r6, #16711935	; 0xff00ff
 8018f86:	fb05 fc0c 	mul.w	ip, r5, ip
 8018f8a:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018f8e:	4375      	muls	r5, r6
 8018f90:	ea4f 271c 	mov.w	r7, ip, lsr #8
 8018f94:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018f98:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8018f9c:	f505 7680 	add.w	r6, r5, #256	; 0x100
 8018fa0:	4467      	add	r7, ip
 8018fa2:	eb06 2515 	add.w	r5, r6, r5, lsr #8
 8018fa6:	0a3f      	lsrs	r7, r7, #8
 8018fa8:	0a2d      	lsrs	r5, r5, #8
 8018faa:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8018fae:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 8018fb2:	433d      	orrs	r5, r7
 8018fb4:	950f      	str	r5, [sp, #60]	; 0x3c
 8018fb6:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8018fb8:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8018fbc:	f003 16ff 	and.w	r6, r3, #16711935	; 0xff00ff
 8018fc0:	fb0e f505 	mul.w	r5, lr, r5
 8018fc4:	fb02 5506 	mla	r5, r2, r6, r5
 8018fc8:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8018fca:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018fce:	fb00 5506 	mla	r5, r0, r6, r5
 8018fd2:	9e0f      	ldr	r6, [sp, #60]	; 0x3c
 8018fd4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8018fd8:	fb09 5506 	mla	r5, r9, r6, r5
 8018fdc:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8018fde:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8018fe2:	fb0e fe06 	mul.w	lr, lr, r6
 8018fe6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8018fea:	fb02 e303 	mla	r3, r2, r3, lr
 8018fee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018ff0:	f402 477f 	and.w	r7, r2, #65280	; 0xff00
 8018ff4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8018ff6:	fb00 3307 	mla	r3, r0, r7, r3
 8018ffa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 8018ffe:	fb09 3c0c 	mla	ip, r9, ip, r3
 8019002:	fb01 f10b 	mul.w	r1, r1, fp
 8019006:	0a2d      	lsrs	r5, r5, #8
 8019008:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801900c:	f8ba 0000 	ldrh.w	r0, [sl]
 8019010:	1c4b      	adds	r3, r1, #1
 8019012:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 8019016:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801901a:	ea45 050c 	orr.w	r5, r5, ip
 801901e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019022:	1202      	asrs	r2, r0, #8
 8019024:	0c2b      	lsrs	r3, r5, #16
 8019026:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801902a:	b2c9      	uxtb	r1, r1
 801902c:	fb13 f30b 	smulbb	r3, r3, fp
 8019030:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019034:	fb02 3201 	mla	r2, r2, r1, r3
 8019038:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801903c:	10c3      	asrs	r3, r0, #3
 801903e:	b2ed      	uxtb	r5, r5
 8019040:	00c0      	lsls	r0, r0, #3
 8019042:	b2c0      	uxtb	r0, r0
 8019044:	fb15 f50b 	smulbb	r5, r5, fp
 8019048:	fb00 5001 	mla	r0, r0, r1, r5
 801904c:	b292      	uxth	r2, r2
 801904e:	fb16 f60b 	smulbb	r6, r6, fp
 8019052:	b280      	uxth	r0, r0
 8019054:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8019058:	fb03 6301 	mla	r3, r3, r1, r6
 801905c:	1c51      	adds	r1, r2, #1
 801905e:	1c46      	adds	r6, r0, #1
 8019060:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019064:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019068:	b29b      	uxth	r3, r3
 801906a:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801906e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019072:	4332      	orrs	r2, r6
 8019074:	1c5e      	adds	r6, r3, #1
 8019076:	eb06 2313 	add.w	r3, r6, r3, lsr #8
 801907a:	095b      	lsrs	r3, r3, #5
 801907c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019080:	431a      	orrs	r2, r3
 8019082:	f8aa 2000 	strh.w	r2, [sl]
 8019086:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019088:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801908a:	4413      	add	r3, r2
 801908c:	932b      	str	r3, [sp, #172]	; 0xac
 801908e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019090:	441c      	add	r4, r3
 8019092:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019094:	3b01      	subs	r3, #1
 8019096:	f10a 0a02 	add.w	sl, sl, #2
 801909a:	9311      	str	r3, [sp, #68]	; 0x44
 801909c:	e4ea      	b.n	8018a74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801909e:	b150      	cbz	r0, 80190b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x712>
 80190a0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80190a2:	58aa      	ldr	r2, [r5, r2]
 80190a4:	9209      	str	r2, [sp, #36]	; 0x24
 80190a6:	ea4f 6812 	mov.w	r8, r2, lsr #24
 80190aa:	25ff      	movs	r5, #255	; 0xff
 80190ac:	46ac      	mov	ip, r5
 80190ae:	e6ed      	b.n	8018e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 80190b0:	25ff      	movs	r5, #255	; 0xff
 80190b2:	46a8      	mov	r8, r5
 80190b4:	e6ea      	b.n	8018e8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 80190b6:	25ff      	movs	r5, #255	; 0xff
 80190b8:	46a8      	mov	r8, r5
 80190ba:	e7f7      	b.n	80190ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 80190bc:	b019      	add	sp, #100	; 0x64
 80190be:	ecbd 8b08 	vpop	{d8-d11}
 80190c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080190c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80190c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80190cc:	8808      	ldrh	r0, [r1, #0]
 80190ce:	b085      	sub	sp, #20
 80190d0:	1206      	asrs	r6, r0, #8
 80190d2:	e9dd c40f 	ldrd	ip, r4, [sp, #60]	; 0x3c
 80190d6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80190da:	9600      	str	r6, [sp, #0]
 80190dc:	10c6      	asrs	r6, r0, #3
 80190de:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80190e2:	9601      	str	r6, [sp, #4]
 80190e4:	00c0      	lsls	r0, r0, #3
 80190e6:	fb04 c603 	mla	r6, r4, r3, ip
 80190ea:	b2c0      	uxtb	r0, r0
 80190ec:	4691      	mov	r9, r2
 80190ee:	eb02 0e86 	add.w	lr, r2, r6, lsl #2
 80190f2:	9a00      	ldr	r2, [sp, #0]
 80190f4:	9002      	str	r0, [sp, #8]
 80190f6:	f040 407f 	orr.w	r0, r0, #4278190080	; 0xff000000
 80190fa:	ea40 4002 	orr.w	r0, r0, r2, lsl #16
 80190fe:	9a01      	ldr	r2, [sp, #4]
 8019100:	f9bd 8038 	ldrsh.w	r8, [sp, #56]	; 0x38
 8019104:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8019108:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 801910c:	2c00      	cmp	r4, #0
 801910e:	ea40 2002 	orr.w	r0, r0, r2, lsl #8
 8019112:	db3a      	blt.n	801918a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019114:	45a0      	cmp	r8, r4
 8019116:	dd38      	ble.n	801918a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8019118:	f1bc 0f00 	cmp.w	ip, #0
 801911c:	db33      	blt.n	8019186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 801911e:	4563      	cmp	r3, ip
 8019120:	dd31      	ble.n	8019186 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8019122:	f859 2026 	ldr.w	r2, [r9, r6, lsl #2]
 8019126:	f11c 0601 	adds.w	r6, ip, #1
 801912a:	d431      	bmi.n	8019190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 801912c:	42b3      	cmp	r3, r6
 801912e:	dd2f      	ble.n	8019190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019130:	b375      	cbz	r5, 8019190 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8019132:	f8de 6004 	ldr.w	r6, [lr, #4]
 8019136:	3401      	adds	r4, #1
 8019138:	d42e      	bmi.n	8019198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801913a:	45a0      	cmp	r8, r4
 801913c:	dd2c      	ble.n	8019198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 801913e:	b35f      	cbz	r7, 8019198 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd0>
 8019140:	f1bc 0f00 	cmp.w	ip, #0
 8019144:	db26      	blt.n	8019194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 8019146:	4563      	cmp	r3, ip
 8019148:	dd24      	ble.n	8019194 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xcc>
 801914a:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 801914e:	f11c 0c01 	adds.w	ip, ip, #1
 8019152:	d405      	bmi.n	8019160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019154:	4563      	cmp	r3, ip
 8019156:	dd03      	ble.n	8019160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 8019158:	b115      	cbz	r5, 8019160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801915a:	3301      	adds	r3, #1
 801915c:	f85e 0023 	ldr.w	r0, [lr, r3, lsl #2]
 8019160:	2d0f      	cmp	r5, #15
 8019162:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8019166:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801916a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801916e:	ea4f 6810 	mov.w	r8, r0, lsr #24
 8019172:	d801      	bhi.n	8019178 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 8019174:	2f0f      	cmp	r7, #15
 8019176:	d911      	bls.n	801919c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd4>
 8019178:	4b7b      	ldr	r3, [pc, #492]	; (8019368 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a0>)
 801917a:	4a7c      	ldr	r2, [pc, #496]	; (801936c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a4>)
 801917c:	487c      	ldr	r0, [pc, #496]	; (8019370 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2a8>)
 801917e:	f240 3173 	movw	r1, #883	; 0x373
 8019182:	f002 fab5 	bl	801b6f0 <__assert_func>
 8019186:	4602      	mov	r2, r0
 8019188:	e7cd      	b.n	8019126 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 801918a:	4606      	mov	r6, r0
 801918c:	4602      	mov	r2, r0
 801918e:	e7d2      	b.n	8019136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019190:	4606      	mov	r6, r0
 8019192:	e7d0      	b.n	8019136 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x6e>
 8019194:	4604      	mov	r4, r0
 8019196:	e7da      	b.n	801914e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8019198:	4604      	mov	r4, r0
 801919a:	e7e1      	b.n	8019160 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x98>
 801919c:	b2ab      	uxth	r3, r5
 801919e:	b2bf      	uxth	r7, r7
 80191a0:	fb03 fe07 	mul.w	lr, r3, r7
 80191a4:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 80191a8:	011b      	lsls	r3, r3, #4
 80191aa:	eba3 0c0e 	sub.w	ip, r3, lr
 80191ae:	b2bf      	uxth	r7, r7
 80191b0:	f5c3 7580 	rsb	r5, r3, #256	; 0x100
 80191b4:	fa1f fc8c 	uxth.w	ip, ip
 80191b8:	1bed      	subs	r5, r5, r7
 80191ba:	b2ad      	uxth	r5, r5
 80191bc:	fb0c f30a 	mul.w	r3, ip, sl
 80191c0:	fb05 330b 	mla	r3, r5, fp, r3
 80191c4:	fb07 3309 	mla	r3, r7, r9, r3
 80191c8:	fb0e 3308 	mla	r3, lr, r8, r3
 80191cc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80191d0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80191d4:	9303      	str	r3, [sp, #12]
 80191d6:	d018      	beq.n	801920a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x142>
 80191d8:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80191dc:	fb0b f303 	mul.w	r3, fp, r3
 80191e0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80191e4:	fb0b fb02 	mul.w	fp, fp, r2
 80191e8:	0a1a      	lsrs	r2, r3, #8
 80191ea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80191ee:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 80191f2:	441a      	add	r2, r3
 80191f4:	f50b 7380 	add.w	r3, fp, #256	; 0x100
 80191f8:	eb03 231b 	add.w	r3, r3, fp, lsr #8
 80191fc:	0a12      	lsrs	r2, r2, #8
 80191fe:	0a1b      	lsrs	r3, r3, #8
 8019200:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8019204:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019208:	431a      	orrs	r2, r3
 801920a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801920e:	d019      	beq.n	8019244 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17c>
 8019210:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8019214:	fb0a fb0b 	mul.w	fp, sl, fp
 8019218:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801921c:	fb0a fa06 	mul.w	sl, sl, r6
 8019220:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8019224:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019228:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801922c:	f50a 7380 	add.w	r3, sl, #256	; 0x100
 8019230:	445e      	add	r6, fp
 8019232:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8019236:	0a36      	lsrs	r6, r6, #8
 8019238:	0a1b      	lsrs	r3, r3, #8
 801923a:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 801923e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019242:	431e      	orrs	r6, r3
 8019244:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019248:	d019      	beq.n	801927e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b6>
 801924a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801924e:	fb09 fa0a 	mul.w	sl, r9, sl
 8019252:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8019256:	fb09 f904 	mul.w	r9, r9, r4
 801925a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801925e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019262:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8019266:	f509 7380 	add.w	r3, r9, #256	; 0x100
 801926a:	4454      	add	r4, sl
 801926c:	eb03 2319 	add.w	r3, r3, r9, lsr #8
 8019270:	0a24      	lsrs	r4, r4, #8
 8019272:	0a1b      	lsrs	r3, r3, #8
 8019274:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8019278:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801927c:	431c      	orrs	r4, r3
 801927e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019282:	d019      	beq.n	80192b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f0>
 8019284:	f000 19ff 	and.w	r9, r0, #16711935	; 0xff00ff
 8019288:	fb08 f909 	mul.w	r9, r8, r9
 801928c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8019290:	fb08 f800 	mul.w	r8, r8, r0
 8019294:	ea4f 2019 	mov.w	r0, r9, lsr #8
 8019298:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801929c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 80192a0:	f508 7380 	add.w	r3, r8, #256	; 0x100
 80192a4:	4448      	add	r0, r9
 80192a6:	eb03 2318 	add.w	r3, r3, r8, lsr #8
 80192aa:	0a00      	lsrs	r0, r0, #8
 80192ac:	0a1b      	lsrs	r3, r3, #8
 80192ae:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 80192b2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80192b6:	4318      	orrs	r0, r3
 80192b8:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 80192bc:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80192c0:	f002 13ff 	and.w	r3, r2, #16711935	; 0xff00ff
 80192c4:	fb0c f808 	mul.w	r8, ip, r8
 80192c8:	fb0c f606 	mul.w	r6, ip, r6
 80192cc:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80192d0:	fb05 8803 	mla	r8, r5, r3, r8
 80192d4:	fb05 6202 	mla	r2, r5, r2, r6
 80192d8:	f004 13ff 	and.w	r3, r4, #16711935	; 0xff00ff
 80192dc:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 80192e0:	fb07 8803 	mla	r8, r7, r3, r8
 80192e4:	fb07 2704 	mla	r7, r7, r4, r2
 80192e8:	f000 13ff 	and.w	r3, r0, #16711935	; 0xff00ff
 80192ec:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80192f0:	fb0e 8303 	mla	r3, lr, r3, r8
 80192f4:	fb0e 7e00 	mla	lr, lr, r0, r7
 80192f8:	0a1b      	lsrs	r3, r3, #8
 80192fa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80192fe:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019302:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019306:	ea43 0e0e 	orr.w	lr, r3, lr
 801930a:	9b03      	ldr	r3, [sp, #12]
 801930c:	9800      	ldr	r0, [sp, #0]
 801930e:	9c01      	ldr	r4, [sp, #4]
 8019310:	9a02      	ldr	r2, [sp, #8]
 8019312:	43db      	mvns	r3, r3
 8019314:	b2db      	uxtb	r3, r3
 8019316:	4358      	muls	r0, r3
 8019318:	435c      	muls	r4, r3
 801931a:	435a      	muls	r2, r3
 801931c:	1c43      	adds	r3, r0, #1
 801931e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019322:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8019326:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801932a:	4b12      	ldr	r3, [pc, #72]	; (8019374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x2ac>)
 801932c:	ea03 2300 	and.w	r3, r3, r0, lsl #8
 8019330:	1c50      	adds	r0, r2, #1
 8019332:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8019336:	fa5f f28e 	uxtb.w	r2, lr
 801933a:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801933e:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 8019342:	1c62      	adds	r2, r4, #1
 8019344:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8019348:	f3ce 2e07 	ubfx	lr, lr, #8, #8
 801934c:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 8019350:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019354:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8019358:	ea43 0e0e 	orr.w	lr, r3, lr
 801935c:	f8a1 e000 	strh.w	lr, [r1]
 8019360:	b005      	add	sp, #20
 8019362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019366:	bf00      	nop
 8019368:	0801f387 	.word	0x0801f387
 801936c:	0801f8e5 	.word	0x0801f8e5
 8019370:	0801f40f 	.word	0x0801f40f
 8019374:	fffff800 	.word	0xfffff800

08019378 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801937c:	ed2d 8b08 	vpush	{d8-d11}
 8019380:	b097      	sub	sp, #92	; 0x5c
 8019382:	eeb0 aa40 	vmov.f32	s20, s0
 8019386:	9306      	str	r3, [sp, #24]
 8019388:	f9bd 30c0 	ldrsh.w	r3, [sp, #192]	; 0xc0
 801938c:	9307      	str	r3, [sp, #28]
 801938e:	9214      	str	r2, [sp, #80]	; 0x50
 8019390:	f9bd 30c4 	ldrsh.w	r3, [sp, #196]	; 0xc4
 8019394:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019396:	9112      	str	r1, [sp, #72]	; 0x48
 8019398:	9310      	str	r3, [sp, #64]	; 0x40
 801939a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801939e:	9015      	str	r0, [sp, #84]	; 0x54
 80193a0:	6850      	ldr	r0, [r2, #4]
 80193a2:	6812      	ldr	r2, [r2, #0]
 80193a4:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 80193a6:	fb00 1303 	mla	r3, r0, r3, r1
 80193aa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80193ae:	930a      	str	r3, [sp, #40]	; 0x28
 80193b0:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80193b2:	681b      	ldr	r3, [r3, #0]
 80193b4:	9311      	str	r3, [sp, #68]	; 0x44
 80193b6:	9b07      	ldr	r3, [sp, #28]
 80193b8:	009b      	lsls	r3, r3, #2
 80193ba:	eef0 9a60 	vmov.f32	s19, s1
 80193be:	eeb0 9a41 	vmov.f32	s18, s2
 80193c2:	eeb0 8a62 	vmov.f32	s16, s5
 80193c6:	eef0 8a43 	vmov.f32	s17, s6
 80193ca:	eef0 ba44 	vmov.f32	s23, s8
 80193ce:	eeb0 ba64 	vmov.f32	s22, s9
 80193d2:	eef0 aa45 	vmov.f32	s21, s10
 80193d6:	930e      	str	r3, [sp, #56]	; 0x38
 80193d8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80193da:	2b00      	cmp	r3, #0
 80193dc:	dc03      	bgt.n	80193e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 80193de:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80193e0:	2b00      	cmp	r3, #0
 80193e2:	f340 8361 	ble.w	8019aa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 80193e6:	9b06      	ldr	r3, [sp, #24]
 80193e8:	2b00      	cmp	r3, #0
 80193ea:	f340 819b 	ble.w	8019724 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3ac>
 80193ee:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80193f0:	1412      	asrs	r2, r2, #16
 80193f2:	ea4f 4325 	mov.w	r3, r5, asr #16
 80193f6:	d42e      	bmi.n	8019456 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xde>
 80193f8:	9807      	ldr	r0, [sp, #28]
 80193fa:	1c51      	adds	r1, r2, #1
 80193fc:	4288      	cmp	r0, r1
 80193fe:	dd2d      	ble.n	801945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019400:	2b00      	cmp	r3, #0
 8019402:	db2b      	blt.n	801945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 8019404:	9810      	ldr	r0, [sp, #64]	; 0x40
 8019406:	1c59      	adds	r1, r3, #1
 8019408:	4288      	cmp	r0, r1
 801940a:	dd27      	ble.n	801945c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe4>
 801940c:	9b06      	ldr	r3, [sp, #24]
 801940e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8019410:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019412:	3b01      	subs	r3, #1
 8019414:	fb02 1203 	mla	r2, r2, r3, r1
 8019418:	1412      	asrs	r2, r2, #16
 801941a:	d42a      	bmi.n	8019472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801941c:	9907      	ldr	r1, [sp, #28]
 801941e:	3201      	adds	r2, #1
 8019420:	4291      	cmp	r1, r2
 8019422:	dd26      	ble.n	8019472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019424:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8019426:	fb02 5303 	mla	r3, r2, r3, r5
 801942a:	141b      	asrs	r3, r3, #16
 801942c:	d421      	bmi.n	8019472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 801942e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8019430:	3301      	adds	r3, #1
 8019432:	429a      	cmp	r2, r3
 8019434:	dd1d      	ble.n	8019472 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfa>
 8019436:	9b06      	ldr	r3, [sp, #24]
 8019438:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 801943c:	9313      	str	r3, [sp, #76]	; 0x4c
 801943e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019440:	2b00      	cmp	r3, #0
 8019442:	f300 81e3 	bgt.w	801980c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x494>
 8019446:	9b06      	ldr	r3, [sp, #24]
 8019448:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801944c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801944e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8019452:	930a      	str	r3, [sp, #40]	; 0x28
 8019454:	e168      	b.n	8019728 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x3b0>
 8019456:	1c51      	adds	r1, r2, #1
 8019458:	f040 8157 	bne.w	801970a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801945c:	9907      	ldr	r1, [sp, #28]
 801945e:	428a      	cmp	r2, r1
 8019460:	f280 8153 	bge.w	801970a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019464:	1c5f      	adds	r7, r3, #1
 8019466:	f2c0 8150 	blt.w	801970a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 801946a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801946c:	4293      	cmp	r3, r2
 801946e:	f280 814c 	bge.w	801970a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x392>
 8019472:	9b06      	ldr	r3, [sp, #24]
 8019474:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8019476:	9313      	str	r3, [sp, #76]	; 0x4c
 8019478:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801947a:	2b00      	cmp	r3, #0
 801947c:	dde3      	ble.n	8019446 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801947e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019480:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019482:	1409      	asrs	r1, r1, #16
 8019484:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019488:	f3c2 3203 	ubfx	r2, r2, #12, #4
 801948c:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019490:	f100 81a3 	bmi.w	80197da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x462>
 8019494:	9c07      	ldr	r4, [sp, #28]
 8019496:	1c4e      	adds	r6, r1, #1
 8019498:	42b4      	cmp	r4, r6
 801949a:	f340 81a0 	ble.w	80197de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 801949e:	2b00      	cmp	r3, #0
 80194a0:	f2c0 819d 	blt.w	80197de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80194a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80194a6:	1c5e      	adds	r6, r3, #1
 80194a8:	42b4      	cmp	r4, r6
 80194aa:	f340 8198 	ble.w	80197de <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x466>
 80194ae:	9c07      	ldr	r4, [sp, #28]
 80194b0:	fb03 1304 	mla	r3, r3, r4, r1
 80194b4:	9911      	ldr	r1, [sp, #68]	; 0x44
 80194b6:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 80194ba:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 80194be:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80194c2:	2a00      	cmp	r2, #0
 80194c4:	f000 816f 	beq.w	80197a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x42e>
 80194c8:	6871      	ldr	r1, [r6, #4]
 80194ca:	910b      	str	r1, [sp, #44]	; 0x2c
 80194cc:	ea4f 6811 	mov.w	r8, r1, lsr #24
 80194d0:	2800      	cmp	r0, #0
 80194d2:	f000 8171 	beq.w	80197b8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x440>
 80194d6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80194d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 80194da:	1871      	adds	r1, r6, r1
 80194dc:	5934      	ldr	r4, [r6, r4]
 80194de:	6849      	ldr	r1, [r1, #4]
 80194e0:	9408      	str	r4, [sp, #32]
 80194e2:	ea4f 6a14 	mov.w	sl, r4, lsr #24
 80194e6:	910c      	str	r1, [sp, #48]	; 0x30
 80194e8:	0e0e      	lsrs	r6, r1, #24
 80194ea:	b292      	uxth	r2, r2
 80194ec:	b280      	uxth	r0, r0
 80194ee:	fb02 fb00 	mul.w	fp, r2, r0
 80194f2:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 80194f6:	0112      	lsls	r2, r2, #4
 80194f8:	eba2 090b 	sub.w	r9, r2, fp
 80194fc:	b280      	uxth	r0, r0
 80194fe:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8019502:	fa1f f989 	uxth.w	r9, r9
 8019506:	1a09      	subs	r1, r1, r0
 8019508:	b289      	uxth	r1, r1
 801950a:	fb09 f208 	mul.w	r2, r9, r8
 801950e:	fb01 220c 	mla	r2, r1, ip, r2
 8019512:	fb00 220a 	mla	r2, r0, sl, r2
 8019516:	fb0b 2206 	mla	r2, fp, r6, r2
 801951a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801951e:	2a00      	cmp	r2, #0
 8019520:	f000 80e8 	beq.w	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019524:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8019528:	d01b      	beq.n	8019562 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1ea>
 801952a:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801952e:	fb0c fe0e 	mul.w	lr, ip, lr
 8019532:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8019536:	fb0c fc03 	mul.w	ip, ip, r3
 801953a:	ea4f 231e 	mov.w	r3, lr, lsr #8
 801953e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8019542:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019546:	4473      	add	r3, lr
 8019548:	f50c 7e80 	add.w	lr, ip, #256	; 0x100
 801954c:	eb0e 2e1c 	add.w	lr, lr, ip, lsr #8
 8019550:	0a1b      	lsrs	r3, r3, #8
 8019552:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019556:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801955a:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 801955e:	ea43 030e 	orr.w	r3, r3, lr
 8019562:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8019566:	d01e      	beq.n	80195a6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x22e>
 8019568:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801956a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801956e:	fb08 fc0c 	mul.w	ip, r8, ip
 8019572:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8019576:	fb08 f80e 	mul.w	r8, r8, lr
 801957a:	ea4f 2e1c 	mov.w	lr, ip, lsr #8
 801957e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019582:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 8019586:	44e6      	add	lr, ip
 8019588:	f508 7c80 	add.w	ip, r8, #256	; 0x100
 801958c:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 8019590:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019594:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8019598:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801959c:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 80195a0:	ea4e 0408 	orr.w	r4, lr, r8
 80195a4:	940b      	str	r4, [sp, #44]	; 0x2c
 80195a6:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80195aa:	d01e      	beq.n	80195ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x272>
 80195ac:	9c08      	ldr	r4, [sp, #32]
 80195ae:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80195b2:	fb0a f808 	mul.w	r8, sl, r8
 80195b6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80195ba:	fb0a fa0c 	mul.w	sl, sl, ip
 80195be:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 80195c2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195c6:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 80195ca:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80195ce:	44c6      	add	lr, r8
 80195d0:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80195d4:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80195d8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80195dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80195e0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80195e4:	ea4e 040a 	orr.w	r4, lr, sl
 80195e8:	9408      	str	r4, [sp, #32]
 80195ea:	2eff      	cmp	r6, #255	; 0xff
 80195ec:	d01d      	beq.n	801962a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b2>
 80195ee:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80195f0:	f004 18ff 	and.w	r8, r4, #16711935	; 0xff00ff
 80195f4:	fb06 f808 	mul.w	r8, r6, r8
 80195f8:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80195fc:	fb06 f60c 	mul.w	r6, r6, ip
 8019600:	ea4f 2e18 	mov.w	lr, r8, lsr #8
 8019604:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019608:	f108 1801 	add.w	r8, r8, #65537	; 0x10001
 801960c:	f506 7c80 	add.w	ip, r6, #256	; 0x100
 8019610:	44c6      	add	lr, r8
 8019612:	eb0c 2616 	add.w	r6, ip, r6, lsr #8
 8019616:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801961a:	0a36      	lsrs	r6, r6, #8
 801961c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8019620:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8019624:	ea4e 0406 	orr.w	r4, lr, r6
 8019628:	940c      	str	r4, [sp, #48]	; 0x30
 801962a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801962c:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019630:	9c08      	ldr	r4, [sp, #32]
 8019632:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019636:	fb09 f606 	mul.w	r6, r9, r6
 801963a:	fb01 660c 	mla	r6, r1, ip, r6
 801963e:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8019642:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8019644:	fb00 660c 	mla	r6, r0, ip, r6
 8019648:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801964c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801964e:	fb0b 660c 	mla	r6, fp, ip, r6
 8019652:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8019656:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801965a:	fb09 f90c 	mul.w	r9, r9, ip
 801965e:	fb01 9303 	mla	r3, r1, r3, r9
 8019662:	9908      	ldr	r1, [sp, #32]
 8019664:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 8019668:	990c      	ldr	r1, [sp, #48]	; 0x30
 801966a:	fb00 330e 	mla	r3, r0, lr, r3
 801966e:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8019672:	fb0b 3b00 	mla	fp, fp, r0, r3
 8019676:	0a36      	lsrs	r6, r6, #8
 8019678:	ea4f 2b1b 	mov.w	fp, fp, lsr #8
 801967c:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8019680:	f40b 4b7f 	and.w	fp, fp, #65280	; 0xff00
 8019684:	ea46 060b 	orr.w	r6, r6, fp
 8019688:	2aff      	cmp	r2, #255	; 0xff
 801968a:	ea4f 2316 	mov.w	r3, r6, lsr #8
 801968e:	f000 8099 	beq.w	80197c4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x44c>
 8019692:	8839      	ldrh	r1, [r7, #0]
 8019694:	43d2      	mvns	r2, r2
 8019696:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801969a:	fa5f fe82 	uxtb.w	lr, r2
 801969e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80196a2:	fb0c fc0e 	mul.w	ip, ip, lr
 80196a6:	10c8      	asrs	r0, r1, #3
 80196a8:	00ca      	lsls	r2, r1, #3
 80196aa:	f10c 0101 	add.w	r1, ip, #1
 80196ae:	eb01 211c 	add.w	r1, r1, ip, lsr #8
 80196b2:	ea4f 4c16 	mov.w	ip, r6, lsr #16
 80196b6:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 80196ba:	b2d2      	uxtb	r2, r2
 80196bc:	4952      	ldr	r1, [pc, #328]	; (8019808 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x490>)
 80196be:	fb02 f20e 	mul.w	r2, r2, lr
 80196c2:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80196c6:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80196ca:	1c51      	adds	r1, r2, #1
 80196cc:	fb00 f00e 	mul.w	r0, r0, lr
 80196d0:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80196d4:	b2f6      	uxtb	r6, r6
 80196d6:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 80196da:	1c42      	adds	r2, r0, #1
 80196dc:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 80196e0:	b2db      	uxtb	r3, r3
 80196e2:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80196e6:	00db      	lsls	r3, r3, #3
 80196e8:	ea4c 06d6 	orr.w	r6, ip, r6, lsr #3
 80196ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80196f0:	431e      	orrs	r6, r3
 80196f2:	803e      	strh	r6, [r7, #0]
 80196f4:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80196f6:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80196f8:	441a      	add	r2, r3
 80196fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80196fc:	9229      	str	r2, [sp, #164]	; 0xa4
 80196fe:	441d      	add	r5, r3
 8019700:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019702:	3b01      	subs	r3, #1
 8019704:	3702      	adds	r7, #2
 8019706:	9313      	str	r3, [sp, #76]	; 0x4c
 8019708:	e6b6      	b.n	8019478 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x100>
 801970a:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801970c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801970e:	441a      	add	r2, r3
 8019710:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019712:	9229      	str	r2, [sp, #164]	; 0xa4
 8019714:	441d      	add	r5, r3
 8019716:	9b06      	ldr	r3, [sp, #24]
 8019718:	3b01      	subs	r3, #1
 801971a:	9306      	str	r3, [sp, #24]
 801971c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801971e:	3302      	adds	r3, #2
 8019720:	930a      	str	r3, [sp, #40]	; 0x28
 8019722:	e660      	b.n	80193e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6e>
 8019724:	f47f ae72 	bne.w	801940c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 8019728:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801972a:	2b00      	cmp	r3, #0
 801972c:	f340 81bc 	ble.w	8019aa8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x730>
 8019730:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019734:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019738:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801973c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801973e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019742:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019746:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801974a:	eef0 6a48 	vmov.f32	s13, s16
 801974e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019752:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019756:	ee37 8a48 	vsub.f32	s16, s14, s16
 801975a:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801975e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019762:	eef0 6a68 	vmov.f32	s13, s17
 8019766:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801976a:	ee18 2a10 	vmov	r2, s16
 801976e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019772:	fb92 f3f3 	sdiv	r3, r2, r3
 8019776:	ee18 2a90 	vmov	r2, s17
 801977a:	932b      	str	r3, [sp, #172]	; 0xac
 801977c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801977e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019782:	932c      	str	r3, [sp, #176]	; 0xb0
 8019784:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019786:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8019788:	3b01      	subs	r3, #1
 801978a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801978e:	9312      	str	r3, [sp, #72]	; 0x48
 8019790:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019792:	bf08      	it	eq
 8019794:	4613      	moveq	r3, r2
 8019796:	ee16 5a90 	vmov	r5, s13
 801979a:	9306      	str	r3, [sp, #24]
 801979c:	eef0 8a67 	vmov.f32	s17, s15
 80197a0:	eeb0 8a47 	vmov.f32	s16, s14
 80197a4:	e618      	b.n	80193d8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x60>
 80197a6:	b150      	cbz	r0, 80197be <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x446>
 80197a8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80197aa:	5871      	ldr	r1, [r6, r1]
 80197ac:	9108      	str	r1, [sp, #32]
 80197ae:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 80197b2:	26ff      	movs	r6, #255	; 0xff
 80197b4:	46b0      	mov	r8, r6
 80197b6:	e698      	b.n	80194ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80197b8:	26ff      	movs	r6, #255	; 0xff
 80197ba:	46b2      	mov	sl, r6
 80197bc:	e695      	b.n	80194ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x172>
 80197be:	26ff      	movs	r6, #255	; 0xff
 80197c0:	46b2      	mov	sl, r6
 80197c2:	e7f7      	b.n	80197b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x43c>
 80197c4:	0972      	lsrs	r2, r6, #5
 80197c6:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 80197ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80197ce:	f023 0307 	bic.w	r3, r3, #7
 80197d2:	4313      	orrs	r3, r2
 80197d4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80197d8:	e78a      	b.n	80196f0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x378>
 80197da:	1c4e      	adds	r6, r1, #1
 80197dc:	d18a      	bne.n	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80197de:	9c07      	ldr	r4, [sp, #28]
 80197e0:	428c      	cmp	r4, r1
 80197e2:	dd87      	ble.n	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80197e4:	1c5c      	adds	r4, r3, #1
 80197e6:	db85      	blt.n	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80197e8:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80197ea:	429c      	cmp	r4, r3
 80197ec:	dd82      	ble.n	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 80197ee:	e9cd 2003 	strd	r2, r0, [sp, #12]
 80197f2:	e9cd 1301 	strd	r1, r3, [sp, #4]
 80197f6:	9400      	str	r4, [sp, #0]
 80197f8:	9b07      	ldr	r3, [sp, #28]
 80197fa:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80197fc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80197fe:	4639      	mov	r1, r7
 8019800:	f7ff fc62 	bl	80190c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8019804:	e776      	b.n	80196f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x37c>
 8019806:	bf00      	nop
 8019808:	fffff800 	.word	0xfffff800
 801980c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801980e:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8019810:	9c07      	ldr	r4, [sp, #28]
 8019812:	1409      	asrs	r1, r1, #16
 8019814:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8019818:	142b      	asrs	r3, r5, #16
 801981a:	fb04 1303 	mla	r3, r4, r3, r1
 801981e:	9911      	ldr	r1, [sp, #68]	; 0x44
 8019820:	eb01 0683 	add.w	r6, r1, r3, lsl #2
 8019824:	f851 3023 	ldr.w	r3, [r1, r3, lsl #2]
 8019828:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801982c:	0e1f      	lsrs	r7, r3, #24
 801982e:	2a00      	cmp	r2, #0
 8019830:	f000 811d 	beq.w	8019a6e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6f6>
 8019834:	6871      	ldr	r1, [r6, #4]
 8019836:	910d      	str	r1, [sp, #52]	; 0x34
 8019838:	ea4f 6e11 	mov.w	lr, r1, lsr #24
 801983c:	2800      	cmp	r0, #0
 801983e:	f000 811f 	beq.w	8019a80 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x708>
 8019842:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019844:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8019846:	1871      	adds	r1, r6, r1
 8019848:	5934      	ldr	r4, [r6, r4]
 801984a:	6849      	ldr	r1, [r1, #4]
 801984c:	9409      	str	r4, [sp, #36]	; 0x24
 801984e:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8019852:	910f      	str	r1, [sp, #60]	; 0x3c
 8019854:	0e0e      	lsrs	r6, r1, #24
 8019856:	b292      	uxth	r2, r2
 8019858:	b280      	uxth	r0, r0
 801985a:	fb02 fb00 	mul.w	fp, r2, r0
 801985e:	ebcb 1000 	rsb	r0, fp, r0, lsl #4
 8019862:	0112      	lsls	r2, r2, #4
 8019864:	eba2 080b 	sub.w	r8, r2, fp
 8019868:	b280      	uxth	r0, r0
 801986a:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801986e:	fa1f f888 	uxth.w	r8, r8
 8019872:	1a09      	subs	r1, r1, r0
 8019874:	b289      	uxth	r1, r1
 8019876:	fb08 f20e 	mul.w	r2, r8, lr
 801987a:	fb01 2207 	mla	r2, r1, r7, r2
 801987e:	fb00 2209 	mla	r2, r0, r9, r2
 8019882:	fb0b 2206 	mla	r2, fp, r6, r2
 8019886:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801988a:	2a00      	cmp	r2, #0
 801988c:	f000 80e3 	beq.w	8019a56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019890:	2fff      	cmp	r7, #255	; 0xff
 8019892:	d01a      	beq.n	80198ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x552>
 8019894:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8019898:	fb07 fc0c 	mul.w	ip, r7, ip
 801989c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80198a0:	435f      	muls	r7, r3
 80198a2:	ea4f 231c 	mov.w	r3, ip, lsr #8
 80198a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198aa:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 80198ae:	4463      	add	r3, ip
 80198b0:	f507 7c80 	add.w	ip, r7, #256	; 0x100
 80198b4:	eb0c 2c17 	add.w	ip, ip, r7, lsr #8
 80198b8:	0a1b      	lsrs	r3, r3, #8
 80198ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80198c2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80198c6:	ea43 030c 	orr.w	r3, r3, ip
 80198ca:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80198ce:	d01e      	beq.n	801990e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x596>
 80198d0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80198d2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80198d6:	fb0e f707 	mul.w	r7, lr, r7
 80198da:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 80198de:	fb0e fe0c 	mul.w	lr, lr, ip
 80198e2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80198e6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80198ea:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80198ee:	44bc      	add	ip, r7
 80198f0:	f50e 7780 	add.w	r7, lr, #256	; 0x100
 80198f4:	eb07 2e1e 	add.w	lr, r7, lr, lsr #8
 80198f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80198fc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8019900:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019904:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 8019908:	ea4c 040e 	orr.w	r4, ip, lr
 801990c:	940d      	str	r4, [sp, #52]	; 0x34
 801990e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8019912:	d01e      	beq.n	8019952 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x5da>
 8019914:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019916:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801991a:	fb09 fe0e 	mul.w	lr, r9, lr
 801991e:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019922:	fb09 f907 	mul.w	r9, r9, r7
 8019926:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801992a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801992e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019932:	f509 7780 	add.w	r7, r9, #256	; 0x100
 8019936:	44f4      	add	ip, lr
 8019938:	eb07 2919 	add.w	r9, r7, r9, lsr #8
 801993c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019940:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8019944:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019948:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801994c:	ea4c 0409 	orr.w	r4, ip, r9
 8019950:	9409      	str	r4, [sp, #36]	; 0x24
 8019952:	2eff      	cmp	r6, #255	; 0xff
 8019954:	d01c      	beq.n	8019990 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x618>
 8019956:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8019958:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801995c:	fb06 fe0e 	mul.w	lr, r6, lr
 8019960:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 8019964:	437e      	muls	r6, r7
 8019966:	ea4f 2c1e 	mov.w	ip, lr, lsr #8
 801996a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801996e:	f10e 1e01 	add.w	lr, lr, #65537	; 0x10001
 8019972:	f506 7780 	add.w	r7, r6, #256	; 0x100
 8019976:	44f4      	add	ip, lr
 8019978:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801997c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8019980:	0a36      	lsrs	r6, r6, #8
 8019982:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8019986:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801998a:	ea4c 0406 	orr.w	r4, ip, r6
 801998e:	940f      	str	r4, [sp, #60]	; 0x3c
 8019990:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019992:	f004 16ff 	and.w	r6, r4, #16711935	; 0xff00ff
 8019996:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8019998:	f003 17ff 	and.w	r7, r3, #16711935	; 0xff00ff
 801999c:	fb08 f606 	mul.w	r6, r8, r6
 80199a0:	fb01 6607 	mla	r6, r1, r7, r6
 80199a4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80199a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80199aa:	fb00 6607 	mla	r6, r0, r7, r6
 80199ae:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80199b2:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80199b4:	fb0b 6607 	mla	r6, fp, r7, r6
 80199b8:	f404 477f 	and.w	r7, r4, #65280	; 0xff00
 80199bc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80199c0:	fb08 f807 	mul.w	r8, r8, r7
 80199c4:	fb01 8303 	mla	r3, r1, r3, r8
 80199c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80199ca:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80199ce:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80199d0:	fb00 330c 	mla	r3, r0, ip, r3
 80199d4:	f401 4e7f 	and.w	lr, r1, #65280	; 0xff00
 80199d8:	fb0b 3e0e 	mla	lr, fp, lr, r3
 80199dc:	0a36      	lsrs	r6, r6, #8
 80199de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80199e2:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80199e6:	f40e 4e7f 	and.w	lr, lr, #65280	; 0xff00
 80199ea:	ea46 060e 	orr.w	r6, r6, lr
 80199ee:	2aff      	cmp	r2, #255	; 0xff
 80199f0:	ea4f 2316 	mov.w	r3, r6, lsr #8
 80199f4:	d04a      	beq.n	8019a8c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x714>
 80199f6:	f8ba 1000 	ldrh.w	r1, [sl]
 80199fa:	43d2      	mvns	r2, r2
 80199fc:	120f      	asrs	r7, r1, #8
 80199fe:	fa5f fc82 	uxtb.w	ip, r2
 8019a02:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8019a06:	fb07 f70c 	mul.w	r7, r7, ip
 8019a0a:	10c8      	asrs	r0, r1, #3
 8019a0c:	00ca      	lsls	r2, r1, #3
 8019a0e:	1c79      	adds	r1, r7, #1
 8019a10:	eb01 2117 	add.w	r1, r1, r7, lsr #8
 8019a14:	0c37      	lsrs	r7, r6, #16
 8019a16:	eb07 2711 	add.w	r7, r7, r1, lsr #8
 8019a1a:	b2d2      	uxtb	r2, r2
 8019a1c:	4925      	ldr	r1, [pc, #148]	; (8019ab4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x73c>)
 8019a1e:	fb02 f20c 	mul.w	r2, r2, ip
 8019a22:	ea01 2707 	and.w	r7, r1, r7, lsl #8
 8019a26:	1c51      	adds	r1, r2, #1
 8019a28:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019a2c:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8019a30:	b2f6      	uxtb	r6, r6
 8019a32:	fb00 f00c 	mul.w	r0, r0, ip
 8019a36:	eb06 2612 	add.w	r6, r6, r2, lsr #8
 8019a3a:	ea47 07d6 	orr.w	r7, r7, r6, lsr #3
 8019a3e:	1c46      	adds	r6, r0, #1
 8019a40:	eb06 2010 	add.w	r0, r6, r0, lsr #8
 8019a44:	b2de      	uxtb	r6, r3
 8019a46:	eb06 2610 	add.w	r6, r6, r0, lsr #8
 8019a4a:	00f6      	lsls	r6, r6, #3
 8019a4c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8019a50:	4337      	orrs	r7, r6
 8019a52:	f8aa 7000 	strh.w	r7, [sl]
 8019a56:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8019a58:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8019a5a:	441a      	add	r2, r3
 8019a5c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8019a5e:	9229      	str	r2, [sp, #164]	; 0xa4
 8019a60:	441d      	add	r5, r3
 8019a62:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019a64:	3b01      	subs	r3, #1
 8019a66:	f10a 0a02 	add.w	sl, sl, #2
 8019a6a:	9313      	str	r3, [sp, #76]	; 0x4c
 8019a6c:	e4e7      	b.n	801943e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc6>
 8019a6e:	b150      	cbz	r0, 8019a86 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70e>
 8019a70:	990e      	ldr	r1, [sp, #56]	; 0x38
 8019a72:	5871      	ldr	r1, [r6, r1]
 8019a74:	9109      	str	r1, [sp, #36]	; 0x24
 8019a76:	ea4f 6911 	mov.w	r9, r1, lsr #24
 8019a7a:	26ff      	movs	r6, #255	; 0xff
 8019a7c:	46b6      	mov	lr, r6
 8019a7e:	e6ea      	b.n	8019856 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019a80:	26ff      	movs	r6, #255	; 0xff
 8019a82:	46b1      	mov	r9, r6
 8019a84:	e6e7      	b.n	8019856 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4de>
 8019a86:	26ff      	movs	r6, #255	; 0xff
 8019a88:	46b1      	mov	r9, r6
 8019a8a:	e7f7      	b.n	8019a7c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x704>
 8019a8c:	0972      	lsrs	r2, r6, #5
 8019a8e:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 8019a92:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a96:	f023 0307 	bic.w	r3, r3, #7
 8019a9a:	4313      	orrs	r3, r2
 8019a9c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019aa0:	431e      	orrs	r6, r3
 8019aa2:	f8aa 6000 	strh.w	r6, [sl]
 8019aa6:	e7d6      	b.n	8019a56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x6de>
 8019aa8:	b017      	add	sp, #92	; 0x5c
 8019aaa:	ecbd 8b08 	vpop	{d8-d11}
 8019aae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019ab2:	bf00      	nop
 8019ab4:	fffff800 	.word	0xfffff800

08019ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 8019ab8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019abc:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8019ac0:	2c00      	cmp	r4, #0
 8019ac2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8019ac6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8019aca:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019ace:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8019ad2:	fb04 ce03 	mla	lr, r4, r3, ip
 8019ad6:	db60      	blt.n	8019b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019ad8:	45a1      	cmp	r9, r4
 8019ada:	dd5e      	ble.n	8019b9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 8019adc:	f1bc 0f00 	cmp.w	ip, #0
 8019ae0:	db59      	blt.n	8019b96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019ae2:	45e0      	cmp	r8, ip
 8019ae4:	dd57      	ble.n	8019b96 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 8019ae6:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8019aea:	f01e 0f01 	tst.w	lr, #1
 8019aee:	5c16      	ldrb	r6, [r2, r0]
 8019af0:	bf0c      	ite	eq
 8019af2:	f006 060f 	andeq.w	r6, r6, #15
 8019af6:	1136      	asrne	r6, r6, #4
 8019af8:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8019afc:	b2f6      	uxtb	r6, r6
 8019afe:	f11c 0001 	adds.w	r0, ip, #1
 8019b02:	d44d      	bmi.n	8019ba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019b04:	4580      	cmp	r8, r0
 8019b06:	dd4b      	ble.n	8019ba0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8019b08:	2d00      	cmp	r5, #0
 8019b0a:	d04b      	beq.n	8019ba4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8019b0c:	f10e 0a01 	add.w	sl, lr, #1
 8019b10:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8019b14:	f01a 0f01 	tst.w	sl, #1
 8019b18:	5c10      	ldrb	r0, [r2, r0]
 8019b1a:	bf0c      	ite	eq
 8019b1c:	f000 000f 	andeq.w	r0, r0, #15
 8019b20:	1100      	asrne	r0, r0, #4
 8019b22:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019b26:	b2c0      	uxtb	r0, r0
 8019b28:	3401      	adds	r4, #1
 8019b2a:	d43f      	bmi.n	8019bac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019b2c:	45a1      	cmp	r9, r4
 8019b2e:	dd3d      	ble.n	8019bac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8019b30:	2f00      	cmp	r7, #0
 8019b32:	f000 80a0 	beq.w	8019c76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1be>
 8019b36:	f1bc 0f00 	cmp.w	ip, #0
 8019b3a:	db35      	blt.n	8019ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019b3c:	45e0      	cmp	r8, ip
 8019b3e:	dd33      	ble.n	8019ba8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8019b40:	eb03 090e 	add.w	r9, r3, lr
 8019b44:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8019b48:	f019 0f01 	tst.w	r9, #1
 8019b4c:	5d14      	ldrb	r4, [r2, r4]
 8019b4e:	bf0c      	ite	eq
 8019b50:	f004 040f 	andeq.w	r4, r4, #15
 8019b54:	1124      	asrne	r4, r4, #4
 8019b56:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8019b5a:	b2e4      	uxtb	r4, r4
 8019b5c:	f11c 0c01 	adds.w	ip, ip, #1
 8019b60:	d427      	bmi.n	8019bb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8019b62:	45e0      	cmp	r8, ip
 8019b64:	dd25      	ble.n	8019bb2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8019b66:	b335      	cbz	r5, 8019bb6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8019b68:	3301      	adds	r3, #1
 8019b6a:	449e      	add	lr, r3
 8019b6c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8019b70:	f01e 0f01 	tst.w	lr, #1
 8019b74:	5cd2      	ldrb	r2, [r2, r3]
 8019b76:	bf0c      	ite	eq
 8019b78:	f002 020f 	andeq.w	r2, r2, #15
 8019b7c:	1112      	asrne	r2, r2, #4
 8019b7e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019b82:	b2d3      	uxtb	r3, r2
 8019b84:	2d0f      	cmp	r5, #15
 8019b86:	d917      	bls.n	8019bb8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8019b88:	4b3d      	ldr	r3, [pc, #244]	; (8019c80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 8019b8a:	4a3e      	ldr	r2, [pc, #248]	; (8019c84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8019b8c:	483e      	ldr	r0, [pc, #248]	; (8019c88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d0>)
 8019b8e:	f240 3173 	movw	r1, #883	; 0x373
 8019b92:	f001 fdad 	bl	801b6f0 <__assert_func>
 8019b96:	2600      	movs	r6, #0
 8019b98:	e7b1      	b.n	8019afe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 8019b9a:	2000      	movs	r0, #0
 8019b9c:	4606      	mov	r6, r0
 8019b9e:	e7c3      	b.n	8019b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019ba0:	2000      	movs	r0, #0
 8019ba2:	e7c1      	b.n	8019b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019ba4:	4628      	mov	r0, r5
 8019ba6:	e7bf      	b.n	8019b28 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 8019ba8:	2400      	movs	r4, #0
 8019baa:	e7d7      	b.n	8019b5c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 8019bac:	2300      	movs	r3, #0
 8019bae:	461c      	mov	r4, r3
 8019bb0:	e7e8      	b.n	8019b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019bb2:	2300      	movs	r3, #0
 8019bb4:	e7e6      	b.n	8019b84 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 8019bb6:	462b      	mov	r3, r5
 8019bb8:	2f0f      	cmp	r7, #15
 8019bba:	d8e5      	bhi.n	8019b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019bbc:	b2ad      	uxth	r5, r5
 8019bbe:	b2bf      	uxth	r7, r7
 8019bc0:	fb05 fc07 	mul.w	ip, r5, r7
 8019bc4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8019bc8:	012d      	lsls	r5, r5, #4
 8019bca:	b2bf      	uxth	r7, r7
 8019bcc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8019bd0:	eba5 050c 	sub.w	r5, r5, ip
 8019bd4:	1bd2      	subs	r2, r2, r7
 8019bd6:	b2ad      	uxth	r5, r5
 8019bd8:	b292      	uxth	r2, r2
 8019bda:	4368      	muls	r0, r5
 8019bdc:	fb06 0002 	mla	r0, r6, r2, r0
 8019be0:	fb07 0404 	mla	r4, r7, r4, r0
 8019be4:	fb0c 4303 	mla	r3, ip, r3, r4
 8019be8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019bec:	2b00      	cmp	r3, #0
 8019bee:	d040      	beq.n	8019c72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1ba>
 8019bf0:	f89d 0038 	ldrb.w	r0, [sp, #56]	; 0x38
 8019bf4:	4a25      	ldr	r2, [pc, #148]	; (8019c8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1d4>)
 8019bf6:	4343      	muls	r3, r0
 8019bf8:	1c58      	adds	r0, r3, #1
 8019bfa:	6816      	ldr	r6, [r2, #0]
 8019bfc:	880a      	ldrh	r2, [r1, #0]
 8019bfe:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8019c02:	1200      	asrs	r0, r0, #8
 8019c04:	b284      	uxth	r4, r0
 8019c06:	1215      	asrs	r5, r2, #8
 8019c08:	43c0      	mvns	r0, r0
 8019c0a:	b2c3      	uxtb	r3, r0
 8019c0c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019c10:	1230      	asrs	r0, r6, #8
 8019c12:	fb15 f503 	smulbb	r5, r5, r3
 8019c16:	10d7      	asrs	r7, r2, #3
 8019c18:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019c1c:	fb00 5004 	mla	r0, r0, r4, r5
 8019c20:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019c24:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 8019c28:	00d2      	lsls	r2, r2, #3
 8019c2a:	fb17 f703 	smulbb	r7, r7, r3
 8019c2e:	b2d2      	uxtb	r2, r2
 8019c30:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8019c34:	00f6      	lsls	r6, r6, #3
 8019c36:	fb05 7504 	mla	r5, r5, r4, r7
 8019c3a:	fb12 f303 	smulbb	r3, r2, r3
 8019c3e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8019c42:	fb06 3304 	mla	r3, r6, r4, r3
 8019c46:	b2ad      	uxth	r5, r5
 8019c48:	b29a      	uxth	r2, r3
 8019c4a:	b280      	uxth	r0, r0
 8019c4c:	1c6b      	adds	r3, r5, #1
 8019c4e:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 8019c52:	1c44      	adds	r4, r0, #1
 8019c54:	095b      	lsrs	r3, r3, #5
 8019c56:	eb04 2010 	add.w	r0, r4, r0, lsr #8
 8019c5a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019c5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019c62:	4303      	orrs	r3, r0
 8019c64:	1c50      	adds	r0, r2, #1
 8019c66:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019c6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019c6e:	4313      	orrs	r3, r2
 8019c70:	800b      	strh	r3, [r1, #0]
 8019c72:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019c76:	2d0f      	cmp	r5, #15
 8019c78:	d886      	bhi.n	8019b88 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 8019c7a:	463b      	mov	r3, r7
 8019c7c:	463c      	mov	r4, r7
 8019c7e:	e79d      	b.n	8019bbc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8019c80:	0801f387 	.word	0x0801f387
 8019c84:	0801f8e5 	.word	0x0801f8e5
 8019c88:	0801f40f 	.word	0x0801f40f
 8019c8c:	20001444 	.word	0x20001444

08019c90 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 8019c90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019c94:	ed2d 8b08 	vpush	{d8-d11}
 8019c98:	b099      	sub	sp, #100	; 0x64
 8019c9a:	e9dd 462b 	ldrd	r4, r6, [sp, #172]	; 0xac
 8019c9e:	9309      	str	r3, [sp, #36]	; 0x24
 8019ca0:	f9bd 30c8 	ldrsh.w	r3, [sp, #200]	; 0xc8
 8019ca4:	930a      	str	r3, [sp, #40]	; 0x28
 8019ca6:	f9bd 30cc 	ldrsh.w	r3, [sp, #204]	; 0xcc
 8019caa:	9216      	str	r2, [sp, #88]	; 0x58
 8019cac:	930b      	str	r3, [sp, #44]	; 0x2c
 8019cae:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8019cb0:	f89d 30d4 	ldrb.w	r3, [sp, #212]	; 0xd4
 8019cb4:	910f      	str	r1, [sp, #60]	; 0x3c
 8019cb6:	9310      	str	r3, [sp, #64]	; 0x40
 8019cb8:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 8019cbc:	9017      	str	r0, [sp, #92]	; 0x5c
 8019cbe:	6850      	ldr	r0, [r2, #4]
 8019cc0:	6812      	ldr	r2, [r2, #0]
 8019cc2:	fb00 1303 	mla	r3, r0, r3, r1
 8019cc6:	eb02 0a43 	add.w	sl, r2, r3, lsl #1
 8019cca:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019ccc:	3301      	adds	r3, #1
 8019cce:	f023 0301 	bic.w	r3, r3, #1
 8019cd2:	930c      	str	r3, [sp, #48]	; 0x30
 8019cd4:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8019cd6:	681f      	ldr	r7, [r3, #0]
 8019cd8:	eeb0 aa40 	vmov.f32	s20, s0
 8019cdc:	eef0 9a60 	vmov.f32	s19, s1
 8019ce0:	eeb0 9a41 	vmov.f32	s18, s2
 8019ce4:	eeb0 8a62 	vmov.f32	s16, s5
 8019ce8:	eef0 8a43 	vmov.f32	s17, s6
 8019cec:	eef0 ba44 	vmov.f32	s23, s8
 8019cf0:	eeb0 ba64 	vmov.f32	s22, s9
 8019cf4:	eef0 aa45 	vmov.f32	s21, s10
 8019cf8:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019cfa:	2b00      	cmp	r3, #0
 8019cfc:	dc03      	bgt.n	8019d06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019cfe:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8019d00:	2b00      	cmp	r3, #0
 8019d02:	f340 826b 	ble.w	801a1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d08:	2b00      	cmp	r3, #0
 8019d0a:	f340 811f 	ble.w	8019f4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2bc>
 8019d0e:	1422      	asrs	r2, r4, #16
 8019d10:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019d14:	d42d      	bmi.n	8019d72 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 8019d16:	980a      	ldr	r0, [sp, #40]	; 0x28
 8019d18:	1c51      	adds	r1, r2, #1
 8019d1a:	4288      	cmp	r0, r1
 8019d1c:	dd2c      	ble.n	8019d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019d1e:	2b00      	cmp	r3, #0
 8019d20:	db2a      	blt.n	8019d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019d22:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019d24:	1c59      	adds	r1, r3, #1
 8019d26:	4288      	cmp	r0, r1
 8019d28:	dd26      	ble.n	8019d78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe8>
 8019d2a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d2c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8019d2e:	3b01      	subs	r3, #1
 8019d30:	fb02 4203 	mla	r2, r2, r3, r4
 8019d34:	1412      	asrs	r2, r2, #16
 8019d36:	d42a      	bmi.n	8019d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019d38:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019d3a:	3201      	adds	r2, #1
 8019d3c:	4291      	cmp	r1, r2
 8019d3e:	dd26      	ble.n	8019d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019d40:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8019d42:	fb02 6303 	mla	r3, r2, r3, r6
 8019d46:	141b      	asrs	r3, r3, #16
 8019d48:	d421      	bmi.n	8019d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019d4a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d4c:	3301      	adds	r3, #1
 8019d4e:	429a      	cmp	r2, r3
 8019d50:	dd1d      	ble.n	8019d8e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xfe>
 8019d52:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019d56:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019d5a:	9311      	str	r3, [sp, #68]	; 0x44
 8019d5c:	46d1      	mov	r9, sl
 8019d5e:	f1bb 0f00 	cmp.w	fp, #0
 8019d62:	f300 8163 	bgt.w	801a02c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x39c>
 8019d66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019d68:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8019d6c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 8019d70:	e0ee      	b.n	8019f50 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2c0>
 8019d72:	1c51      	adds	r1, r2, #1
 8019d74:	f040 80e0 	bne.w	8019f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019d78:	990a      	ldr	r1, [sp, #40]	; 0x28
 8019d7a:	4291      	cmp	r1, r2
 8019d7c:	f340 80dc 	ble.w	8019f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019d80:	1c5a      	adds	r2, r3, #1
 8019d82:	f2c0 80d9 	blt.w	8019f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019d86:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d88:	4293      	cmp	r3, r2
 8019d8a:	f280 80d5 	bge.w	8019f38 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2a8>
 8019d8e:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8019d92:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8019d96:	9311      	str	r3, [sp, #68]	; 0x44
 8019d98:	46d0      	mov	r8, sl
 8019d9a:	f1b9 0f00 	cmp.w	r9, #0
 8019d9e:	dde2      	ble.n	8019d66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd6>
 8019da0:	1420      	asrs	r0, r4, #16
 8019da2:	ea4f 4326 	mov.w	r3, r6, asr #16
 8019da6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8019daa:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8019dae:	f100 8122 	bmi.w	8019ff6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x366>
 8019db2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019db4:	f100 0c01 	add.w	ip, r0, #1
 8019db8:	4565      	cmp	r5, ip
 8019dba:	f340 811e 	ble.w	8019ffa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019dbe:	2b00      	cmp	r3, #0
 8019dc0:	f2c0 811b 	blt.w	8019ffa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019dc4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8019dc6:	f103 0c01 	add.w	ip, r3, #1
 8019dca:	4565      	cmp	r5, ip
 8019dcc:	f340 8115 	ble.w	8019ffa <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36a>
 8019dd0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8019dd2:	fb03 0305 	mla	r3, r3, r5, r0
 8019dd6:	0858      	lsrs	r0, r3, #1
 8019dd8:	07dd      	lsls	r5, r3, #31
 8019dda:	5c38      	ldrb	r0, [r7, r0]
 8019ddc:	bf54      	ite	pl
 8019dde:	f000 000f 	andpl.w	r0, r0, #15
 8019de2:	1100      	asrmi	r0, r0, #4
 8019de4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8019de8:	b2c0      	uxtb	r0, r0
 8019dea:	2a00      	cmp	r2, #0
 8019dec:	f000 80ef 	beq.w	8019fce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x33e>
 8019df0:	f103 0e01 	add.w	lr, r3, #1
 8019df4:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8019df8:	f01e 0f01 	tst.w	lr, #1
 8019dfc:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e00:	bf0c      	ite	eq
 8019e02:	f00c 0c0f 	andeq.w	ip, ip, #15
 8019e06:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8019e0a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e0e:	fa5f f58c 	uxtb.w	r5, ip
 8019e12:	9512      	str	r5, [sp, #72]	; 0x48
 8019e14:	b1f9      	cbz	r1, 8019e56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019e16:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019e18:	442b      	add	r3, r5
 8019e1a:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e1e:	07dd      	lsls	r5, r3, #31
 8019e20:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e24:	bf54      	ite	pl
 8019e26:	f00c 0c0f 	andpl.w	ip, ip, #15
 8019e2a:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8019e2e:	3301      	adds	r3, #1
 8019e30:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8019e34:	fa5f f58c 	uxtb.w	r5, ip
 8019e38:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019e3c:	950d      	str	r5, [sp, #52]	; 0x34
 8019e3e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019e42:	07dd      	lsls	r5, r3, #31
 8019e44:	bf54      	ite	pl
 8019e46:	f00c 030f 	andpl.w	r3, ip, #15
 8019e4a:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019e4e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019e52:	b2db      	uxtb	r3, r3
 8019e54:	9313      	str	r3, [sp, #76]	; 0x4c
 8019e56:	b292      	uxth	r2, r2
 8019e58:	b289      	uxth	r1, r1
 8019e5a:	fb02 f301 	mul.w	r3, r2, r1
 8019e5e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8019e62:	0112      	lsls	r2, r2, #4
 8019e64:	b289      	uxth	r1, r1
 8019e66:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 8019e6a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8019e6c:	1ad2      	subs	r2, r2, r3
 8019e6e:	ebac 0c01 	sub.w	ip, ip, r1
 8019e72:	b292      	uxth	r2, r2
 8019e74:	436a      	muls	r2, r5
 8019e76:	fa1f fc8c 	uxth.w	ip, ip
 8019e7a:	fb00 200c 	mla	r0, r0, ip, r2
 8019e7e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8019e80:	fb01 0102 	mla	r1, r1, r2, r0
 8019e84:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8019e86:	fb03 1302 	mla	r3, r3, r2, r1
 8019e8a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8019e8e:	2b00      	cmp	r3, #0
 8019e90:	d049      	beq.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019e92:	9910      	ldr	r1, [sp, #64]	; 0x40
 8019e94:	4ac5      	ldr	r2, [pc, #788]	; (801a1ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 8019e96:	4dc6      	ldr	r5, [pc, #792]	; (801a1b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 8019e98:	f8d2 e000 	ldr.w	lr, [r2]
 8019e9c:	f8b8 2000 	ldrh.w	r2, [r8]
 8019ea0:	434b      	muls	r3, r1
 8019ea2:	1c59      	adds	r1, r3, #1
 8019ea4:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8019ea8:	121b      	asrs	r3, r3, #8
 8019eaa:	b299      	uxth	r1, r3
 8019eac:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019eb0:	43db      	mvns	r3, r3
 8019eb2:	b2db      	uxtb	r3, r3
 8019eb4:	ea4f 202e 	mov.w	r0, lr, asr #8
 8019eb8:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019ebc:	fb1c fc03 	smulbb	ip, ip, r3
 8019ec0:	ea4f 0be2 	mov.w	fp, r2, asr #3
 8019ec4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019ec8:	fb00 c001 	mla	r0, r0, r1, ip
 8019ecc:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8019ed0:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 8019ed4:	fb1b fb03 	smulbb	fp, fp, r3
 8019ed8:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8019edc:	00d2      	lsls	r2, r2, #3
 8019ede:	fb0c bc01 	mla	ip, ip, r1, fp
 8019ee2:	b2d2      	uxtb	r2, r2
 8019ee4:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 8019ee8:	fb12 f303 	smulbb	r3, r2, r3
 8019eec:	fa1f fc8c 	uxth.w	ip, ip
 8019ef0:	fa5f fe8e 	uxtb.w	lr, lr
 8019ef4:	b280      	uxth	r0, r0
 8019ef6:	fb0e 3101 	mla	r1, lr, r1, r3
 8019efa:	f10c 0201 	add.w	r2, ip, #1
 8019efe:	b289      	uxth	r1, r1
 8019f00:	1c43      	adds	r3, r0, #1
 8019f02:	eb02 221c 	add.w	r2, r2, ip, lsr #8
 8019f06:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8019f0a:	0952      	lsrs	r2, r2, #5
 8019f0c:	1c4b      	adds	r3, r1, #1
 8019f0e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f12:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019f16:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8019f1a:	4310      	orrs	r0, r2
 8019f1c:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8019f20:	4308      	orrs	r0, r1
 8019f22:	f8a8 0000 	strh.w	r0, [r8]
 8019f26:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019f28:	441c      	add	r4, r3
 8019f2a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019f2c:	f108 0802 	add.w	r8, r8, #2
 8019f30:	441e      	add	r6, r3
 8019f32:	f109 39ff 	add.w	r9, r9, #4294967295
 8019f36:	e730      	b.n	8019d9a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x10a>
 8019f38:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8019f3a:	441c      	add	r4, r3
 8019f3c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8019f3e:	441e      	add	r6, r3
 8019f40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019f42:	3b01      	subs	r3, #1
 8019f44:	9309      	str	r3, [sp, #36]	; 0x24
 8019f46:	f10a 0a02 	add.w	sl, sl, #2
 8019f4a:	e6dc      	b.n	8019d06 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x76>
 8019f4c:	f47f aeed 	bne.w	8019d2a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x9a>
 8019f50:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019f52:	2b00      	cmp	r3, #0
 8019f54:	f340 8142 	ble.w	801a1dc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x54c>
 8019f58:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8019f5c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019f60:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8019f64:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019f66:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8019f6a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8019f6e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8019f72:	eef0 6a48 	vmov.f32	s13, s16
 8019f76:	ee69 7a27 	vmul.f32	s15, s18, s15
 8019f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019f7e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8019f82:	ee16 4a90 	vmov	r4, s13
 8019f86:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8019f8a:	eef0 6a68 	vmov.f32	s13, s17
 8019f8e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8019f92:	ee18 2a10 	vmov	r2, s16
 8019f96:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8019f9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8019f9e:	ee18 2a90 	vmov	r2, s17
 8019fa2:	932d      	str	r3, [sp, #180]	; 0xb4
 8019fa4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019fa6:	fb92 f3f3 	sdiv	r3, r2, r3
 8019faa:	932e      	str	r3, [sp, #184]	; 0xb8
 8019fac:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019fae:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8019fb0:	3b01      	subs	r3, #1
 8019fb2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019fb6:	930f      	str	r3, [sp, #60]	; 0x3c
 8019fb8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019fba:	bf08      	it	eq
 8019fbc:	4613      	moveq	r3, r2
 8019fbe:	ee16 6a90 	vmov	r6, s13
 8019fc2:	9309      	str	r3, [sp, #36]	; 0x24
 8019fc4:	eef0 8a67 	vmov.f32	s17, s15
 8019fc8:	eeb0 8a47 	vmov.f32	s16, s14
 8019fcc:	e694      	b.n	8019cf8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x68>
 8019fce:	2900      	cmp	r1, #0
 8019fd0:	f43f af41 	beq.w	8019e56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019fd4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8019fd6:	442b      	add	r3, r5
 8019fd8:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8019fdc:	07db      	lsls	r3, r3, #31
 8019fde:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8019fe2:	bf54      	ite	pl
 8019fe4:	f00c 030f 	andpl.w	r3, ip, #15
 8019fe8:	ea4f 132c 	movmi.w	r3, ip, asr #4
 8019fec:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8019ff0:	b2db      	uxtb	r3, r3
 8019ff2:	930d      	str	r3, [sp, #52]	; 0x34
 8019ff4:	e72f      	b.n	8019e56 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c6>
 8019ff6:	1c45      	adds	r5, r0, #1
 8019ff8:	d195      	bne.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 8019ffa:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8019ffc:	4285      	cmp	r5, r0
 8019ffe:	dd92      	ble.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a000:	1c5d      	adds	r5, r3, #1
 801a002:	db90      	blt.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a004:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801a006:	429d      	cmp	r5, r3
 801a008:	dd8d      	ble.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a00a:	e9cd 3203 	strd	r3, r2, [sp, #12]
 801a00e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801a010:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a012:	9301      	str	r3, [sp, #4]
 801a014:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a016:	9002      	str	r0, [sp, #8]
 801a018:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801a01c:	9300      	str	r3, [sp, #0]
 801a01e:	463a      	mov	r2, r7
 801a020:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a022:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801a024:	4641      	mov	r1, r8
 801a026:	f7ff fd47 	bl	8019ab8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801a02a:	e77c      	b.n	8019f26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x296>
 801a02c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a02e:	1422      	asrs	r2, r4, #16
 801a030:	1433      	asrs	r3, r6, #16
 801a032:	fb05 2303 	mla	r3, r5, r3, r2
 801a036:	085a      	lsrs	r2, r3, #1
 801a038:	07dd      	lsls	r5, r3, #31
 801a03a:	5cba      	ldrb	r2, [r7, r2]
 801a03c:	bf54      	ite	pl
 801a03e:	f002 020f 	andpl.w	r2, r2, #15
 801a042:	1112      	asrmi	r2, r2, #4
 801a044:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a048:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801a04c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a050:	b2d2      	uxtb	r2, r2
 801a052:	2900      	cmp	r1, #0
 801a054:	f000 80ae 	beq.w	801a1b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a058:	f103 0e01 	add.w	lr, r3, #1
 801a05c:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a060:	f01e 0f01 	tst.w	lr, #1
 801a064:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a068:	bf0c      	ite	eq
 801a06a:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a06e:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a072:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a076:	fa5f f58c 	uxtb.w	r5, ip
 801a07a:	9514      	str	r5, [sp, #80]	; 0x50
 801a07c:	b300      	cbz	r0, 801a0c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a07e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a080:	442b      	add	r3, r5
 801a082:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a086:	07dd      	lsls	r5, r3, #31
 801a088:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a08c:	bf54      	ite	pl
 801a08e:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a092:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a096:	3301      	adds	r3, #1
 801a098:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a09c:	fa5f f58c 	uxtb.w	r5, ip
 801a0a0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a0a4:	950e      	str	r5, [sp, #56]	; 0x38
 801a0a6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a0aa:	07dd      	lsls	r5, r3, #31
 801a0ac:	bf54      	ite	pl
 801a0ae:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a0b2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a0b6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a0ba:	fa5f f38c 	uxtb.w	r3, ip
 801a0be:	9315      	str	r3, [sp, #84]	; 0x54
 801a0c0:	b289      	uxth	r1, r1
 801a0c2:	b280      	uxth	r0, r0
 801a0c4:	fb01 f300 	mul.w	r3, r1, r0
 801a0c8:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801a0cc:	0109      	lsls	r1, r1, #4
 801a0ce:	b280      	uxth	r0, r0
 801a0d0:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801a0d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801a0d6:	1ac9      	subs	r1, r1, r3
 801a0d8:	ebac 0c00 	sub.w	ip, ip, r0
 801a0dc:	b289      	uxth	r1, r1
 801a0de:	4369      	muls	r1, r5
 801a0e0:	fa1f fc8c 	uxth.w	ip, ip
 801a0e4:	fb02 120c 	mla	r2, r2, ip, r1
 801a0e8:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a0ea:	fb00 2001 	mla	r0, r0, r1, r2
 801a0ee:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a0f0:	fb03 0302 	mla	r3, r3, r2, r0
 801a0f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a0f8:	2b00      	cmp	r3, #0
 801a0fa:	d04d      	beq.n	801a198 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x508>
 801a0fc:	9910      	ldr	r1, [sp, #64]	; 0x40
 801a0fe:	4a2b      	ldr	r2, [pc, #172]	; (801a1ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a100:	4d2b      	ldr	r5, [pc, #172]	; (801a1b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a102:	f8d2 e000 	ldr.w	lr, [r2]
 801a106:	f8b9 2000 	ldrh.w	r2, [r9]
 801a10a:	434b      	muls	r3, r1
 801a10c:	1c59      	adds	r1, r3, #1
 801a10e:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801a112:	121b      	asrs	r3, r3, #8
 801a114:	b299      	uxth	r1, r3
 801a116:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a11a:	43db      	mvns	r3, r3
 801a11c:	b2db      	uxtb	r3, r3
 801a11e:	ea4f 202e 	mov.w	r0, lr, asr #8
 801a122:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a126:	fb1c fc03 	smulbb	ip, ip, r3
 801a12a:	ea4f 08e2 	mov.w	r8, r2, asr #3
 801a12e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a132:	fb00 c001 	mla	r0, r0, r1, ip
 801a136:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801a13a:	f3ce 0ccc 	ubfx	ip, lr, #3, #13
 801a13e:	fb18 f803 	smulbb	r8, r8, r3
 801a142:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a146:	00d2      	lsls	r2, r2, #3
 801a148:	fb0c 8c01 	mla	ip, ip, r1, r8
 801a14c:	ea05 0ece 	and.w	lr, r5, lr, lsl #3
 801a150:	b2d2      	uxtb	r2, r2
 801a152:	fa1f fc8c 	uxth.w	ip, ip
 801a156:	fa5f fe8e 	uxtb.w	lr, lr
 801a15a:	fb12 f203 	smulbb	r2, r2, r3
 801a15e:	b280      	uxth	r0, r0
 801a160:	fb0e 2201 	mla	r2, lr, r1, r2
 801a164:	f10c 0801 	add.w	r8, ip, #1
 801a168:	b292      	uxth	r2, r2
 801a16a:	eb08 2c1c 	add.w	ip, r8, ip, lsr #8
 801a16e:	f100 0801 	add.w	r8, r0, #1
 801a172:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a176:	eb08 2010 	add.w	r0, r8, r0, lsr #8
 801a17a:	1c51      	adds	r1, r2, #1
 801a17c:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a180:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a184:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801a188:	ea4c 0c00 	orr.w	ip, ip, r0
 801a18c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a190:	ea4c 0c02 	orr.w	ip, ip, r2
 801a194:	f8a9 c000 	strh.w	ip, [r9]
 801a198:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801a19a:	441c      	add	r4, r3
 801a19c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801a19e:	f109 0902 	add.w	r9, r9, #2
 801a1a2:	441e      	add	r6, r3
 801a1a4:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a1a8:	e5d9      	b.n	8019d5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xce>
 801a1aa:	bf00      	nop
 801a1ac:	20001444 	.word	0x20001444
 801a1b0:	0007fff8 	.word	0x0007fff8
 801a1b4:	2800      	cmp	r0, #0
 801a1b6:	d083      	beq.n	801a0c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a1b8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a1ba:	442b      	add	r3, r5
 801a1bc:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a1c0:	07db      	lsls	r3, r3, #31
 801a1c2:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a1c6:	bf54      	ite	pl
 801a1c8:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a1cc:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a1d0:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a1d4:	fa5f f38c 	uxtb.w	r3, ip
 801a1d8:	930e      	str	r3, [sp, #56]	; 0x38
 801a1da:	e771      	b.n	801a0c0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x430>
 801a1dc:	b019      	add	sp, #100	; 0x64
 801a1de:	ecbd 8b08 	vpop	{d8-d11}
 801a1e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a1e6:	bf00      	nop

0801a1e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801a1e8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a1ec:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 801a1f0:	2c00      	cmp	r4, #0
 801a1f2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801a1f6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801a1fa:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a1fe:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 801a202:	fb04 ce03 	mla	lr, r4, r3, ip
 801a206:	db60      	blt.n	801a2ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a208:	45a1      	cmp	r9, r4
 801a20a:	dd5e      	ble.n	801a2ca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 801a20c:	f1bc 0f00 	cmp.w	ip, #0
 801a210:	db59      	blt.n	801a2c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a212:	45e0      	cmp	r8, ip
 801a214:	dd57      	ble.n	801a2c6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 801a216:	ea4f 005e 	mov.w	r0, lr, lsr #1
 801a21a:	f01e 0f01 	tst.w	lr, #1
 801a21e:	5c16      	ldrb	r6, [r2, r0]
 801a220:	bf0c      	ite	eq
 801a222:	f006 060f 	andeq.w	r6, r6, #15
 801a226:	1136      	asrne	r6, r6, #4
 801a228:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801a22c:	b2f6      	uxtb	r6, r6
 801a22e:	f11c 0001 	adds.w	r0, ip, #1
 801a232:	d44d      	bmi.n	801a2d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a234:	4580      	cmp	r8, r0
 801a236:	dd4b      	ble.n	801a2d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 801a238:	2d00      	cmp	r5, #0
 801a23a:	d04b      	beq.n	801a2d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 801a23c:	f10e 0a01 	add.w	sl, lr, #1
 801a240:	ea4f 005a 	mov.w	r0, sl, lsr #1
 801a244:	f01a 0f01 	tst.w	sl, #1
 801a248:	5c10      	ldrb	r0, [r2, r0]
 801a24a:	bf0c      	ite	eq
 801a24c:	f000 000f 	andeq.w	r0, r0, #15
 801a250:	1100      	asrne	r0, r0, #4
 801a252:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a256:	b2c0      	uxtb	r0, r0
 801a258:	3401      	adds	r4, #1
 801a25a:	d43f      	bmi.n	801a2dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a25c:	45a1      	cmp	r9, r4
 801a25e:	dd3d      	ble.n	801a2dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 801a260:	2f00      	cmp	r7, #0
 801a262:	f000 8099 	beq.w	801a398 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>
 801a266:	f1bc 0f00 	cmp.w	ip, #0
 801a26a:	db35      	blt.n	801a2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a26c:	45e0      	cmp	r8, ip
 801a26e:	dd33      	ble.n	801a2d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 801a270:	eb03 090e 	add.w	r9, r3, lr
 801a274:	ea4f 0459 	mov.w	r4, r9, lsr #1
 801a278:	f019 0f01 	tst.w	r9, #1
 801a27c:	5d14      	ldrb	r4, [r2, r4]
 801a27e:	bf0c      	ite	eq
 801a280:	f004 040f 	andeq.w	r4, r4, #15
 801a284:	1124      	asrne	r4, r4, #4
 801a286:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801a28a:	b2e4      	uxtb	r4, r4
 801a28c:	f11c 0c01 	adds.w	ip, ip, #1
 801a290:	d427      	bmi.n	801a2e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a292:	45e0      	cmp	r8, ip
 801a294:	dd25      	ble.n	801a2e2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 801a296:	b335      	cbz	r5, 801a2e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 801a298:	3301      	adds	r3, #1
 801a29a:	449e      	add	lr, r3
 801a29c:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801a2a0:	f01e 0f01 	tst.w	lr, #1
 801a2a4:	5cd2      	ldrb	r2, [r2, r3]
 801a2a6:	bf0c      	ite	eq
 801a2a8:	f002 020f 	andeq.w	r2, r2, #15
 801a2ac:	1112      	asrne	r2, r2, #4
 801a2ae:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a2b2:	b2d3      	uxtb	r3, r2
 801a2b4:	2d0f      	cmp	r5, #15
 801a2b6:	d917      	bls.n	801a2e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 801a2b8:	4b3a      	ldr	r3, [pc, #232]	; (801a3a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 801a2ba:	4a3b      	ldr	r2, [pc, #236]	; (801a3a8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c0>)
 801a2bc:	483b      	ldr	r0, [pc, #236]	; (801a3ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c4>)
 801a2be:	f240 3173 	movw	r1, #883	; 0x373
 801a2c2:	f001 fa15 	bl	801b6f0 <__assert_func>
 801a2c6:	2600      	movs	r6, #0
 801a2c8:	e7b1      	b.n	801a22e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 801a2ca:	2000      	movs	r0, #0
 801a2cc:	4606      	mov	r6, r0
 801a2ce:	e7c3      	b.n	801a258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a2d0:	2000      	movs	r0, #0
 801a2d2:	e7c1      	b.n	801a258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a2d4:	4628      	mov	r0, r5
 801a2d6:	e7bf      	b.n	801a258 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 801a2d8:	2400      	movs	r4, #0
 801a2da:	e7d7      	b.n	801a28c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 801a2dc:	2300      	movs	r3, #0
 801a2de:	461c      	mov	r4, r3
 801a2e0:	e7e8      	b.n	801a2b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a2e2:	2300      	movs	r3, #0
 801a2e4:	e7e6      	b.n	801a2b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 801a2e6:	462b      	mov	r3, r5
 801a2e8:	2f0f      	cmp	r7, #15
 801a2ea:	d8e5      	bhi.n	801a2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a2ec:	b2ad      	uxth	r5, r5
 801a2ee:	b2bf      	uxth	r7, r7
 801a2f0:	fb05 fc07 	mul.w	ip, r5, r7
 801a2f4:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 801a2f8:	012d      	lsls	r5, r5, #4
 801a2fa:	b2bf      	uxth	r7, r7
 801a2fc:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 801a300:	eba5 050c 	sub.w	r5, r5, ip
 801a304:	1bd2      	subs	r2, r2, r7
 801a306:	b2ad      	uxth	r5, r5
 801a308:	b292      	uxth	r2, r2
 801a30a:	4368      	muls	r0, r5
 801a30c:	fb06 0002 	mla	r0, r6, r2, r0
 801a310:	fb07 0404 	mla	r4, r7, r4, r0
 801a314:	fb0c 4303 	mla	r3, ip, r3, r4
 801a318:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a31c:	2b00      	cmp	r3, #0
 801a31e:	d039      	beq.n	801a394 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1ac>
 801a320:	4a23      	ldr	r2, [pc, #140]	; (801a3b0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1c8>)
 801a322:	6816      	ldr	r6, [r2, #0]
 801a324:	880a      	ldrh	r2, [r1, #0]
 801a326:	b298      	uxth	r0, r3
 801a328:	1215      	asrs	r5, r2, #8
 801a32a:	43db      	mvns	r3, r3
 801a32c:	b2db      	uxtb	r3, r3
 801a32e:	1234      	asrs	r4, r6, #8
 801a330:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801a334:	fb15 f503 	smulbb	r5, r5, r3
 801a338:	10d7      	asrs	r7, r2, #3
 801a33a:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801a33e:	fb04 5400 	mla	r4, r4, r0, r5
 801a342:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a346:	f3c6 05cc 	ubfx	r5, r6, #3, #13
 801a34a:	fb17 f703 	smulbb	r7, r7, r3
 801a34e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801a352:	00d2      	lsls	r2, r2, #3
 801a354:	fb05 7500 	mla	r5, r5, r0, r7
 801a358:	b2d2      	uxtb	r2, r2
 801a35a:	00f6      	lsls	r6, r6, #3
 801a35c:	fb12 f303 	smulbb	r3, r2, r3
 801a360:	b2ad      	uxth	r5, r5
 801a362:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801a366:	b2a4      	uxth	r4, r4
 801a368:	fb06 3000 	mla	r0, r6, r0, r3
 801a36c:	1c6b      	adds	r3, r5, #1
 801a36e:	b280      	uxth	r0, r0
 801a370:	1c62      	adds	r2, r4, #1
 801a372:	eb03 2315 	add.w	r3, r3, r5, lsr #8
 801a376:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801a37a:	095b      	lsrs	r3, r3, #5
 801a37c:	1c42      	adds	r2, r0, #1
 801a37e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a382:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801a386:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a38a:	4323      	orrs	r3, r4
 801a38c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801a390:	4303      	orrs	r3, r0
 801a392:	800b      	strh	r3, [r1, #0]
 801a394:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a398:	2d0f      	cmp	r5, #15
 801a39a:	d88d      	bhi.n	801a2b8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 801a39c:	463b      	mov	r3, r7
 801a39e:	463c      	mov	r4, r7
 801a3a0:	e7a4      	b.n	801a2ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 801a3a2:	bf00      	nop
 801a3a4:	0801f387 	.word	0x0801f387
 801a3a8:	0801f8e5 	.word	0x0801f8e5
 801a3ac:	0801f40f 	.word	0x0801f40f
 801a3b0:	20001444 	.word	0x20001444

0801a3b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff>:
 801a3b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a3b8:	ed2d 8b08 	vpush	{d8-d11}
 801a3bc:	b095      	sub	sp, #84	; 0x54
 801a3be:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801a3c2:	9306      	str	r3, [sp, #24]
 801a3c4:	f9bd 30b8 	ldrsh.w	r3, [sp, #184]	; 0xb8
 801a3c8:	9307      	str	r3, [sp, #28]
 801a3ca:	920d      	str	r2, [sp, #52]	; 0x34
 801a3cc:	f9bd 30bc 	ldrsh.w	r3, [sp, #188]	; 0xbc
 801a3d0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801a3d2:	910a      	str	r1, [sp, #40]	; 0x28
 801a3d4:	9308      	str	r3, [sp, #32]
 801a3d6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801a3da:	9013      	str	r0, [sp, #76]	; 0x4c
 801a3dc:	6850      	ldr	r0, [r2, #4]
 801a3de:	6812      	ldr	r2, [r2, #0]
 801a3e0:	fb00 1303 	mla	r3, r0, r3, r1
 801a3e4:	eb02 0b43 	add.w	fp, r2, r3, lsl #1
 801a3e8:	9b07      	ldr	r3, [sp, #28]
 801a3ea:	3301      	adds	r3, #1
 801a3ec:	f023 0301 	bic.w	r3, r3, #1
 801a3f0:	9309      	str	r3, [sp, #36]	; 0x24
 801a3f2:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801a3f4:	681f      	ldr	r7, [r3, #0]
 801a3f6:	eeb0 aa40 	vmov.f32	s20, s0
 801a3fa:	eef0 9a60 	vmov.f32	s19, s1
 801a3fe:	eeb0 9a41 	vmov.f32	s18, s2
 801a402:	eeb0 8a62 	vmov.f32	s16, s5
 801a406:	eef0 8a43 	vmov.f32	s17, s6
 801a40a:	eef0 ba44 	vmov.f32	s23, s8
 801a40e:	eeb0 ba64 	vmov.f32	s22, s9
 801a412:	eef0 aa45 	vmov.f32	s21, s10
 801a416:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a418:	2b00      	cmp	r3, #0
 801a41a:	dc03      	bgt.n	801a424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a41c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a41e:	2b00      	cmp	r3, #0
 801a420:	f340 8260 	ble.w	801a8e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a424:	9b06      	ldr	r3, [sp, #24]
 801a426:	2b00      	cmp	r3, #0
 801a428:	f340 811c 	ble.w	801a664 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b0>
 801a42c:	1422      	asrs	r2, r4, #16
 801a42e:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a432:	d42d      	bmi.n	801a490 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xdc>
 801a434:	9807      	ldr	r0, [sp, #28]
 801a436:	1c51      	adds	r1, r2, #1
 801a438:	4288      	cmp	r0, r1
 801a43a:	dd2c      	ble.n	801a496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a43c:	2b00      	cmp	r3, #0
 801a43e:	db2a      	blt.n	801a496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a440:	9808      	ldr	r0, [sp, #32]
 801a442:	1c59      	adds	r1, r3, #1
 801a444:	4288      	cmp	r0, r1
 801a446:	dd26      	ble.n	801a496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xe2>
 801a448:	9b06      	ldr	r3, [sp, #24]
 801a44a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801a44c:	3b01      	subs	r3, #1
 801a44e:	fb02 4203 	mla	r2, r2, r3, r4
 801a452:	1412      	asrs	r2, r2, #16
 801a454:	d42a      	bmi.n	801a4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a456:	9907      	ldr	r1, [sp, #28]
 801a458:	3201      	adds	r2, #1
 801a45a:	4291      	cmp	r1, r2
 801a45c:	dd26      	ble.n	801a4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a45e:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801a460:	fb02 6303 	mla	r3, r2, r3, r6
 801a464:	141b      	asrs	r3, r3, #16
 801a466:	d421      	bmi.n	801a4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a468:	9a08      	ldr	r2, [sp, #32]
 801a46a:	3301      	adds	r3, #1
 801a46c:	429a      	cmp	r2, r3
 801a46e:	dd1d      	ble.n	801a4ac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xf8>
 801a470:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 801a474:	f8dd a018 	ldr.w	sl, [sp, #24]
 801a478:	930e      	str	r3, [sp, #56]	; 0x38
 801a47a:	46d8      	mov	r8, fp
 801a47c:	f1ba 0f00 	cmp.w	sl, #0
 801a480:	f300 8164 	bgt.w	801a74c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x398>
 801a484:	9b06      	ldr	r3, [sp, #24]
 801a486:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a48a:	eb0b 0b45 	add.w	fp, fp, r5, lsl #1
 801a48e:	e0eb      	b.n	801a668 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x2b4>
 801a490:	1c51      	adds	r1, r2, #1
 801a492:	f040 80dd 	bne.w	801a650 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a496:	9907      	ldr	r1, [sp, #28]
 801a498:	4291      	cmp	r1, r2
 801a49a:	f340 80d9 	ble.w	801a650 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a49e:	1c5a      	adds	r2, r3, #1
 801a4a0:	f2c0 80d6 	blt.w	801a650 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a4a4:	9a08      	ldr	r2, [sp, #32]
 801a4a6:	4293      	cmp	r3, r2
 801a4a8:	f280 80d2 	bge.w	801a650 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x29c>
 801a4ac:	f8dd 9018 	ldr.w	r9, [sp, #24]
 801a4b0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a4b4:	46d8      	mov	r8, fp
 801a4b6:	f1b9 0f00 	cmp.w	r9, #0
 801a4ba:	dde3      	ble.n	801a484 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xd0>
 801a4bc:	1420      	asrs	r0, r4, #16
 801a4be:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a4c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801a4c6:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a4ca:	f100 8127 	bmi.w	801a71c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x368>
 801a4ce:	9d07      	ldr	r5, [sp, #28]
 801a4d0:	f100 0c01 	add.w	ip, r0, #1
 801a4d4:	4565      	cmp	r5, ip
 801a4d6:	f340 8123 	ble.w	801a720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a4da:	2b00      	cmp	r3, #0
 801a4dc:	f2c0 8120 	blt.w	801a720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a4e0:	9d08      	ldr	r5, [sp, #32]
 801a4e2:	f103 0c01 	add.w	ip, r3, #1
 801a4e6:	4565      	cmp	r5, ip
 801a4e8:	f340 811a 	ble.w	801a720 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x36c>
 801a4ec:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801a4ee:	fb03 0305 	mla	r3, r3, r5, r0
 801a4f2:	0858      	lsrs	r0, r3, #1
 801a4f4:	07dd      	lsls	r5, r3, #31
 801a4f6:	5c38      	ldrb	r0, [r7, r0]
 801a4f8:	bf54      	ite	pl
 801a4fa:	f000 000f 	andpl.w	r0, r0, #15
 801a4fe:	1100      	asrmi	r0, r0, #4
 801a500:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801a504:	b2c0      	uxtb	r0, r0
 801a506:	2a00      	cmp	r2, #0
 801a508:	f000 80ed 	beq.w	801a6e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x332>
 801a50c:	f103 0e01 	add.w	lr, r3, #1
 801a510:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801a514:	f01e 0f01 	tst.w	lr, #1
 801a518:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a51c:	bf0c      	ite	eq
 801a51e:	f00c 0c0f 	andeq.w	ip, ip, #15
 801a522:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801a526:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a52a:	fa5f fc8c 	uxtb.w	ip, ip
 801a52e:	f8cd c03c 	str.w	ip, [sp, #60]	; 0x3c
 801a532:	b1f9      	cbz	r1, 801a574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a534:	4453      	add	r3, sl
 801a536:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a53a:	07dd      	lsls	r5, r3, #31
 801a53c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a540:	bf54      	ite	pl
 801a542:	f00c 0c0f 	andpl.w	ip, ip, #15
 801a546:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801a54a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801a54e:	3301      	adds	r3, #1
 801a550:	fa5f fc8c 	uxtb.w	ip, ip
 801a554:	f8cd c02c 	str.w	ip, [sp, #44]	; 0x2c
 801a558:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a55c:	07dd      	lsls	r5, r3, #31
 801a55e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a562:	bf54      	ite	pl
 801a564:	f00c 030f 	andpl.w	r3, ip, #15
 801a568:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a56c:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a570:	b2db      	uxtb	r3, r3
 801a572:	9310      	str	r3, [sp, #64]	; 0x40
 801a574:	b292      	uxth	r2, r2
 801a576:	b289      	uxth	r1, r1
 801a578:	fb02 f301 	mul.w	r3, r2, r1
 801a57c:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801a580:	0112      	lsls	r2, r2, #4
 801a582:	b289      	uxth	r1, r1
 801a584:	f5c2 7c80 	rsb	ip, r2, #256	; 0x100
 801a588:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801a58a:	1ad2      	subs	r2, r2, r3
 801a58c:	ebac 0c01 	sub.w	ip, ip, r1
 801a590:	b292      	uxth	r2, r2
 801a592:	436a      	muls	r2, r5
 801a594:	fa1f fc8c 	uxth.w	ip, ip
 801a598:	fb00 200c 	mla	r0, r0, ip, r2
 801a59c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a59e:	fb01 0102 	mla	r1, r1, r2, r0
 801a5a2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801a5a4:	fb03 1302 	mla	r3, r3, r2, r1
 801a5a8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a5ac:	2b00      	cmp	r3, #0
 801a5ae:	d046      	beq.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a5b0:	4ac7      	ldr	r2, [pc, #796]	; (801a8d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a5b2:	49c8      	ldr	r1, [pc, #800]	; (801a8d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a5b4:	6812      	ldr	r2, [r2, #0]
 801a5b6:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a5ba:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a5be:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a5c2:	b2d2      	uxtb	r2, r2
 801a5c4:	2bff      	cmp	r3, #255	; 0xff
 801a5c6:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a5ca:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a5ce:	4615      	mov	r5, r2
 801a5d0:	f000 809c 	beq.w	801a70c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x358>
 801a5d4:	f8b8 0000 	ldrh.w	r0, [r8]
 801a5d8:	b29a      	uxth	r2, r3
 801a5da:	1201      	asrs	r1, r0, #8
 801a5dc:	43db      	mvns	r3, r3
 801a5de:	b2db      	uxtb	r3, r3
 801a5e0:	fb1e fe02 	smulbb	lr, lr, r2
 801a5e4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a5e8:	fb01 e103 	mla	r1, r1, r3, lr
 801a5ec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a5f0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a5f4:	fb1c fc02 	smulbb	ip, ip, r2
 801a5f8:	fb0e cc03 	mla	ip, lr, r3, ip
 801a5fc:	00c0      	lsls	r0, r0, #3
 801a5fe:	fa1f fc8c 	uxth.w	ip, ip
 801a602:	fb15 f202 	smulbb	r2, r5, r2
 801a606:	b2c0      	uxtb	r0, r0
 801a608:	b289      	uxth	r1, r1
 801a60a:	fb00 2303 	mla	r3, r0, r3, r2
 801a60e:	f10c 0e01 	add.w	lr, ip, #1
 801a612:	b29b      	uxth	r3, r3
 801a614:	1c4a      	adds	r2, r1, #1
 801a616:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a61a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a61e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a622:	1c5a      	adds	r2, r3, #1
 801a624:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a628:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a62c:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801a630:	ea4c 0101 	orr.w	r1, ip, r1
 801a634:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a638:	4319      	orrs	r1, r3
 801a63a:	f8a8 1000 	strh.w	r1, [r8]
 801a63e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a640:	441c      	add	r4, r3
 801a642:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a644:	f108 0802 	add.w	r8, r8, #2
 801a648:	441e      	add	r6, r3
 801a64a:	f109 39ff 	add.w	r9, r9, #4294967295
 801a64e:	e732      	b.n	801a4b6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x102>
 801a650:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a652:	441c      	add	r4, r3
 801a654:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a656:	441e      	add	r6, r3
 801a658:	9b06      	ldr	r3, [sp, #24]
 801a65a:	3b01      	subs	r3, #1
 801a65c:	9306      	str	r3, [sp, #24]
 801a65e:	f10b 0b02 	add.w	fp, fp, #2
 801a662:	e6df      	b.n	801a424 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x70>
 801a664:	f47f aef0 	bne.w	801a448 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x94>
 801a668:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a66a:	2b00      	cmp	r3, #0
 801a66c:	f340 813a 	ble.w	801a8e4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x530>
 801a670:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801a674:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a678:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801a67c:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a67e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801a682:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801a686:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801a68a:	eef0 6a48 	vmov.f32	s13, s16
 801a68e:	ee69 7a27 	vmul.f32	s15, s18, s15
 801a692:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a696:	ee37 8a48 	vsub.f32	s16, s14, s16
 801a69a:	ee16 4a90 	vmov	r4, s13
 801a69e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801a6a2:	eef0 6a68 	vmov.f32	s13, s17
 801a6a6:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801a6aa:	ee18 2a10 	vmov	r2, s16
 801a6ae:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801a6b2:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6b6:	ee18 2a90 	vmov	r2, s17
 801a6ba:	9329      	str	r3, [sp, #164]	; 0xa4
 801a6bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a6be:	fb92 f3f3 	sdiv	r3, r2, r3
 801a6c2:	932a      	str	r3, [sp, #168]	; 0xa8
 801a6c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a6c6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801a6c8:	3b01      	subs	r3, #1
 801a6ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a6ce:	930a      	str	r3, [sp, #40]	; 0x28
 801a6d0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a6d2:	bf08      	it	eq
 801a6d4:	4613      	moveq	r3, r2
 801a6d6:	ee16 6a90 	vmov	r6, s13
 801a6da:	9306      	str	r3, [sp, #24]
 801a6dc:	eef0 8a67 	vmov.f32	s17, s15
 801a6e0:	eeb0 8a47 	vmov.f32	s16, s14
 801a6e4:	e697      	b.n	801a416 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x62>
 801a6e6:	2900      	cmp	r1, #0
 801a6e8:	f43f af44 	beq.w	801a574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a6ec:	4453      	add	r3, sl
 801a6ee:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801a6f2:	07db      	lsls	r3, r3, #31
 801a6f4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801a6f8:	bf54      	ite	pl
 801a6fa:	f00c 030f 	andpl.w	r3, ip, #15
 801a6fe:	ea4f 132c 	movmi.w	r3, ip, asr #4
 801a702:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801a706:	b2db      	uxtb	r3, r3
 801a708:	930b      	str	r3, [sp, #44]	; 0x2c
 801a70a:	e733      	b.n	801a574 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x1c0>
 801a70c:	08d2      	lsrs	r2, r2, #3
 801a70e:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a712:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a716:	f8a8 c000 	strh.w	ip, [r8]
 801a71a:	e790      	b.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a71c:	1c45      	adds	r5, r0, #1
 801a71e:	d18e      	bne.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a720:	9d07      	ldr	r5, [sp, #28]
 801a722:	4285      	cmp	r5, r0
 801a724:	dd8b      	ble.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a726:	1c5d      	adds	r5, r3, #1
 801a728:	db89      	blt.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a72a:	9d08      	ldr	r5, [sp, #32]
 801a72c:	429d      	cmp	r5, r3
 801a72e:	dd86      	ble.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a730:	e9cd 0302 	strd	r0, r3, [sp, #8]
 801a734:	9b07      	ldr	r3, [sp, #28]
 801a736:	9300      	str	r3, [sp, #0]
 801a738:	e9cd 2104 	strd	r2, r1, [sp, #16]
 801a73c:	9501      	str	r5, [sp, #4]
 801a73e:	4653      	mov	r3, sl
 801a740:	463a      	mov	r2, r7
 801a742:	4641      	mov	r1, r8
 801a744:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a746:	f7ff fd4f 	bl	801a1e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 801a74a:	e778      	b.n	801a63e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x28a>
 801a74c:	9909      	ldr	r1, [sp, #36]	; 0x24
 801a74e:	1422      	asrs	r2, r4, #16
 801a750:	1433      	asrs	r3, r6, #16
 801a752:	fb01 2303 	mla	r3, r1, r3, r2
 801a756:	085a      	lsrs	r2, r3, #1
 801a758:	07d9      	lsls	r1, r3, #31
 801a75a:	5cba      	ldrb	r2, [r7, r2]
 801a75c:	bf54      	ite	pl
 801a75e:	f002 020f 	andpl.w	r2, r2, #15
 801a762:	1112      	asrmi	r2, r2, #4
 801a764:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801a768:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a76c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801a770:	b2d2      	uxtb	r2, r2
 801a772:	2800      	cmp	r0, #0
 801a774:	f000 809b 	beq.w	801a8ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4fa>
 801a778:	f103 0e01 	add.w	lr, r3, #1
 801a77c:	ea4f 015e 	mov.w	r1, lr, lsr #1
 801a780:	f01e 0f01 	tst.w	lr, #1
 801a784:	5c79      	ldrb	r1, [r7, r1]
 801a786:	bf0c      	ite	eq
 801a788:	f001 010f 	andeq.w	r1, r1, #15
 801a78c:	1109      	asrne	r1, r1, #4
 801a78e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a792:	b2c9      	uxtb	r1, r1
 801a794:	9111      	str	r1, [sp, #68]	; 0x44
 801a796:	f1bc 0f00 	cmp.w	ip, #0
 801a79a:	d018      	beq.n	801a7ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a79c:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a79e:	440b      	add	r3, r1
 801a7a0:	0859      	lsrs	r1, r3, #1
 801a7a2:	07dd      	lsls	r5, r3, #31
 801a7a4:	5c79      	ldrb	r1, [r7, r1]
 801a7a6:	bf54      	ite	pl
 801a7a8:	f001 010f 	andpl.w	r1, r1, #15
 801a7ac:	1109      	asrmi	r1, r1, #4
 801a7ae:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a7b2:	b2c9      	uxtb	r1, r1
 801a7b4:	3301      	adds	r3, #1
 801a7b6:	910c      	str	r1, [sp, #48]	; 0x30
 801a7b8:	0859      	lsrs	r1, r3, #1
 801a7ba:	07dd      	lsls	r5, r3, #31
 801a7bc:	5c79      	ldrb	r1, [r7, r1]
 801a7be:	bf54      	ite	pl
 801a7c0:	f001 010f 	andpl.w	r1, r1, #15
 801a7c4:	1109      	asrmi	r1, r1, #4
 801a7c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a7ca:	b2c9      	uxtb	r1, r1
 801a7cc:	9112      	str	r1, [sp, #72]	; 0x48
 801a7ce:	b280      	uxth	r0, r0
 801a7d0:	fa1f fc8c 	uxth.w	ip, ip
 801a7d4:	fb00 f30c 	mul.w	r3, r0, ip
 801a7d8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 801a7dc:	0100      	lsls	r0, r0, #4
 801a7de:	fa1f fc8c 	uxth.w	ip, ip
 801a7e2:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 801a7e6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a7e8:	1ac0      	subs	r0, r0, r3
 801a7ea:	eba1 010c 	sub.w	r1, r1, ip
 801a7ee:	b280      	uxth	r0, r0
 801a7f0:	b289      	uxth	r1, r1
 801a7f2:	4368      	muls	r0, r5
 801a7f4:	fb02 0201 	mla	r2, r2, r1, r0
 801a7f8:	990c      	ldr	r1, [sp, #48]	; 0x30
 801a7fa:	fb0c 2c01 	mla	ip, ip, r1, r2
 801a7fe:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a800:	fb03 c302 	mla	r3, r3, r2, ip
 801a804:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801a808:	2b00      	cmp	r3, #0
 801a80a:	d047      	beq.n	801a89c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e8>
 801a80c:	4a30      	ldr	r2, [pc, #192]	; (801a8d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x51c>)
 801a80e:	4931      	ldr	r1, [pc, #196]	; (801a8d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x520>)
 801a810:	6812      	ldr	r2, [r2, #0]
 801a812:	2bff      	cmp	r3, #255	; 0xff
 801a814:	ea4f 2e22 	mov.w	lr, r2, asr #8
 801a818:	f3c2 0ccc 	ubfx	ip, r2, #3, #13
 801a81c:	ea01 02c2 	and.w	r2, r1, r2, lsl #3
 801a820:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801a824:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801a828:	b2d2      	uxtb	r2, r2
 801a82a:	d055      	beq.n	801a8d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x524>
 801a82c:	f8b8 0000 	ldrh.w	r0, [r8]
 801a830:	fa1f f983 	uxth.w	r9, r3
 801a834:	1201      	asrs	r1, r0, #8
 801a836:	43db      	mvns	r3, r3
 801a838:	b2db      	uxtb	r3, r3
 801a83a:	fb1e fe09 	smulbb	lr, lr, r9
 801a83e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a842:	fb01 e103 	mla	r1, r1, r3, lr
 801a846:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a84a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a84e:	fb1c fc09 	smulbb	ip, ip, r9
 801a852:	fb0e cc03 	mla	ip, lr, r3, ip
 801a856:	00c0      	lsls	r0, r0, #3
 801a858:	fa1f fc8c 	uxth.w	ip, ip
 801a85c:	b2c0      	uxtb	r0, r0
 801a85e:	fb12 f209 	smulbb	r2, r2, r9
 801a862:	b289      	uxth	r1, r1
 801a864:	fb00 2203 	mla	r2, r0, r3, r2
 801a868:	f10c 0e01 	add.w	lr, ip, #1
 801a86c:	b292      	uxth	r2, r2
 801a86e:	eb0e 2c1c 	add.w	ip, lr, ip, lsr #8
 801a872:	f101 0e01 	add.w	lr, r1, #1
 801a876:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a87a:	eb0e 2111 	add.w	r1, lr, r1, lsr #8
 801a87e:	1c53      	adds	r3, r2, #1
 801a880:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801a884:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801a888:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801a88c:	ea4c 0c01 	orr.w	ip, ip, r1
 801a890:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a894:	ea4c 0c02 	orr.w	ip, ip, r2
 801a898:	f8a8 c000 	strh.w	ip, [r8]
 801a89c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801a89e:	441c      	add	r4, r3
 801a8a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a8a2:	f108 0802 	add.w	r8, r8, #2
 801a8a6:	441e      	add	r6, r3
 801a8a8:	f10a 3aff 	add.w	sl, sl, #4294967295
 801a8ac:	e5e6      	b.n	801a47c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0xc8>
 801a8ae:	f1bc 0f00 	cmp.w	ip, #0
 801a8b2:	d08c      	beq.n	801a7ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a8b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801a8b6:	440b      	add	r3, r1
 801a8b8:	0859      	lsrs	r1, r3, #1
 801a8ba:	07db      	lsls	r3, r3, #31
 801a8bc:	5c79      	ldrb	r1, [r7, r1]
 801a8be:	bf54      	ite	pl
 801a8c0:	f001 010f 	andpl.w	r1, r1, #15
 801a8c4:	1109      	asrmi	r1, r1, #4
 801a8c6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801a8ca:	b2c9      	uxtb	r1, r1
 801a8cc:	910c      	str	r1, [sp, #48]	; 0x30
 801a8ce:	e77e      	b.n	801a7ce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x41a>
 801a8d0:	20001444 	.word	0x20001444
 801a8d4:	0007fff8 	.word	0x0007fff8
 801a8d8:	08d2      	lsrs	r2, r2, #3
 801a8da:	ea42 2e0e 	orr.w	lr, r2, lr, lsl #8
 801a8de:	ea4e 0ccc 	orr.w	ip, lr, ip, lsl #3
 801a8e2:	e7d9      	b.n	801a898 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiissRKNS_14TextureSurfaceEhfff+0x4e4>
 801a8e4:	b015      	add	sp, #84	; 0x54
 801a8e6:	ecbd 8b08 	vpop	{d8-d11}
 801a8ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a8ee:	bf00      	nop

0801a8f0 <CRC_Lock>:
 801a8f0:	b530      	push	{r4, r5, lr}
 801a8f2:	4a1d      	ldr	r2, [pc, #116]	; (801a968 <CRC_Lock+0x78>)
 801a8f4:	6813      	ldr	r3, [r2, #0]
 801a8f6:	f023 0301 	bic.w	r3, r3, #1
 801a8fa:	6013      	str	r3, [r2, #0]
 801a8fc:	4b1b      	ldr	r3, [pc, #108]	; (801a96c <CRC_Lock+0x7c>)
 801a8fe:	681a      	ldr	r2, [r3, #0]
 801a900:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 801a904:	4022      	ands	r2, r4
 801a906:	f24c 2540 	movw	r5, #49728	; 0xc240
 801a90a:	42aa      	cmp	r2, r5
 801a90c:	d005      	beq.n	801a91a <CRC_Lock+0x2a>
 801a90e:	681b      	ldr	r3, [r3, #0]
 801a910:	f24c 2270 	movw	r2, #49776	; 0xc270
 801a914:	4023      	ands	r3, r4
 801a916:	4293      	cmp	r3, r2
 801a918:	d11d      	bne.n	801a956 <CRC_Lock+0x66>
 801a91a:	4b15      	ldr	r3, [pc, #84]	; (801a970 <CRC_Lock+0x80>)
 801a91c:	681b      	ldr	r3, [r3, #0]
 801a91e:	b9d3      	cbnz	r3, 801a956 <CRC_Lock+0x66>
 801a920:	4a14      	ldr	r2, [pc, #80]	; (801a974 <CRC_Lock+0x84>)
 801a922:	6813      	ldr	r3, [r2, #0]
 801a924:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a928:	f5b3 6f8a 	cmp.w	r3, #1104	; 0x450
 801a92c:	d006      	beq.n	801a93c <CRC_Lock+0x4c>
 801a92e:	6813      	ldr	r3, [r2, #0]
 801a930:	f240 4283 	movw	r2, #1155	; 0x483
 801a934:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801a938:	4293      	cmp	r3, r2
 801a93a:	d10c      	bne.n	801a956 <CRC_Lock+0x66>
 801a93c:	4b0e      	ldr	r3, [pc, #56]	; (801a978 <CRC_Lock+0x88>)
 801a93e:	2201      	movs	r2, #1
 801a940:	601a      	str	r2, [r3, #0]
 801a942:	681a      	ldr	r2, [r3, #0]
 801a944:	2a00      	cmp	r2, #0
 801a946:	d1fc      	bne.n	801a942 <CRC_Lock+0x52>
 801a948:	4b0c      	ldr	r3, [pc, #48]	; (801a97c <CRC_Lock+0x8c>)
 801a94a:	6018      	str	r0, [r3, #0]
 801a94c:	6818      	ldr	r0, [r3, #0]
 801a94e:	1a43      	subs	r3, r0, r1
 801a950:	4258      	negs	r0, r3
 801a952:	4158      	adcs	r0, r3
 801a954:	bd30      	pop	{r4, r5, pc}
 801a956:	4b0a      	ldr	r3, [pc, #40]	; (801a980 <CRC_Lock+0x90>)
 801a958:	2201      	movs	r2, #1
 801a95a:	601a      	str	r2, [r3, #0]
 801a95c:	681a      	ldr	r2, [r3, #0]
 801a95e:	2a00      	cmp	r2, #0
 801a960:	d1fc      	bne.n	801a95c <CRC_Lock+0x6c>
 801a962:	4b08      	ldr	r3, [pc, #32]	; (801a984 <CRC_Lock+0x94>)
 801a964:	e7f1      	b.n	801a94a <CRC_Lock+0x5a>
 801a966:	bf00      	nop
 801a968:	e0002000 	.word	0xe0002000
 801a96c:	e000ed00 	.word	0xe000ed00
 801a970:	e0042000 	.word	0xe0042000
 801a974:	5c001000 	.word	0x5c001000
 801a978:	58024c08 	.word	0x58024c08
 801a97c:	58024c00 	.word	0x58024c00
 801a980:	40023008 	.word	0x40023008
 801a984:	40023000 	.word	0x40023000

0801a988 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801a988:	6101      	str	r1, [r0, #16]
 801a98a:	4770      	bx	lr

0801a98c <_ZN8touchgfx8Gestures4tickEv>:
 801a98c:	7b83      	ldrb	r3, [r0, #14]
 801a98e:	b14b      	cbz	r3, 801a9a4 <_ZN8touchgfx8Gestures4tickEv+0x18>
 801a990:	8903      	ldrh	r3, [r0, #8]
 801a992:	3301      	adds	r3, #1
 801a994:	b29b      	uxth	r3, r3
 801a996:	2b07      	cmp	r3, #7
 801a998:	8103      	strh	r3, [r0, #8]
 801a99a:	bf81      	itttt	hi
 801a99c:	2300      	movhi	r3, #0
 801a99e:	8143      	strhhi	r3, [r0, #10]
 801a9a0:	8183      	strhhi	r3, [r0, #12]
 801a9a2:	7383      	strbhi	r3, [r0, #14]
 801a9a4:	4770      	bx	lr
	...

0801a9a8 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801a9a8:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 801a9ac:	4604      	mov	r4, r0
 801a9ae:	8880      	ldrh	r0, [r0, #4]
 801a9b0:	f8ad 0006 	strh.w	r0, [sp, #6]
 801a9b4:	4698      	mov	r8, r3
 801a9b6:	eba8 0000 	sub.w	r0, r8, r0
 801a9ba:	4b1c      	ldr	r3, [pc, #112]	; (801aa2c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 801a9bc:	9300      	str	r3, [sp, #0]
 801a9be:	b280      	uxth	r0, r0
 801a9c0:	2300      	movs	r3, #0
 801a9c2:	f88d 3004 	strb.w	r3, [sp, #4]
 801a9c6:	b203      	sxth	r3, r0
 801a9c8:	2b00      	cmp	r3, #0
 801a9ca:	bfb8      	it	lt
 801a9cc:	4240      	neglt	r0, r0
 801a9ce:	4617      	mov	r7, r2
 801a9d0:	8aa2      	ldrh	r2, [r4, #20]
 801a9d2:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 801a9d6:	f8ad 800a 	strh.w	r8, [sp, #10]
 801a9da:	bfb8      	it	lt
 801a9dc:	b203      	sxthlt	r3, r0
 801a9de:	460e      	mov	r6, r1
 801a9e0:	4293      	cmp	r3, r2
 801a9e2:	88e1      	ldrh	r1, [r4, #6]
 801a9e4:	f8ad 1008 	strh.w	r1, [sp, #8]
 801a9e8:	f8ad 500c 	strh.w	r5, [sp, #12]
 801a9ec:	dc08      	bgt.n	801aa00 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 801a9ee:	1a69      	subs	r1, r5, r1
 801a9f0:	b289      	uxth	r1, r1
 801a9f2:	b20b      	sxth	r3, r1
 801a9f4:	2b00      	cmp	r3, #0
 801a9f6:	bfbc      	itt	lt
 801a9f8:	4249      	neglt	r1, r1
 801a9fa:	b20b      	sxthlt	r3, r1
 801a9fc:	429a      	cmp	r2, r3
 801a9fe:	da13      	bge.n	801aa28 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 801aa00:	6920      	ldr	r0, [r4, #16]
 801aa02:	6803      	ldr	r3, [r0, #0]
 801aa04:	4669      	mov	r1, sp
 801aa06:	685b      	ldr	r3, [r3, #4]
 801aa08:	4798      	blx	r3
 801aa0a:	eba8 0606 	sub.w	r6, r8, r6
 801aa0e:	2300      	movs	r3, #0
 801aa10:	1bef      	subs	r7, r5, r7
 801aa12:	2001      	movs	r0, #1
 801aa14:	8123      	strh	r3, [r4, #8]
 801aa16:	8166      	strh	r6, [r4, #10]
 801aa18:	81a7      	strh	r7, [r4, #12]
 801aa1a:	f8a4 8004 	strh.w	r8, [r4, #4]
 801aa1e:	80e5      	strh	r5, [r4, #6]
 801aa20:	73a0      	strb	r0, [r4, #14]
 801aa22:	b004      	add	sp, #16
 801aa24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801aa28:	2000      	movs	r0, #0
 801aa2a:	e7fa      	b.n	801aa22 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 801aa2c:	0801e608 	.word	0x0801e608

0801aa30 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 801aa30:	b5f0      	push	{r4, r5, r6, r7, lr}
 801aa32:	461e      	mov	r6, r3
 801aa34:	1e4b      	subs	r3, r1, #1
 801aa36:	2b01      	cmp	r3, #1
 801aa38:	b085      	sub	sp, #20
 801aa3a:	4604      	mov	r4, r0
 801aa3c:	460d      	mov	r5, r1
 801aa3e:	4617      	mov	r7, r2
 801aa40:	d84b      	bhi.n	801aada <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 801aa42:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801aa46:	1cd3      	adds	r3, r2, #3
 801aa48:	b29b      	uxth	r3, r3
 801aa4a:	2b06      	cmp	r3, #6
 801aa4c:	d916      	bls.n	801aa7c <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 801aa4e:	f8df c098 	ldr.w	ip, [pc, #152]	; 801aae8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801aa52:	f8cd c004 	str.w	ip, [sp, #4]
 801aa56:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801aa5a:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801aa5e:	6900      	ldr	r0, [r0, #16]
 801aa60:	f8ad 100c 	strh.w	r1, [sp, #12]
 801aa64:	f04f 0c00 	mov.w	ip, #0
 801aa68:	f88d c008 	strb.w	ip, [sp, #8]
 801aa6c:	f8ad 200a 	strh.w	r2, [sp, #10]
 801aa70:	f8ad 300e 	strh.w	r3, [sp, #14]
 801aa74:	6803      	ldr	r3, [r0, #0]
 801aa76:	a901      	add	r1, sp, #4
 801aa78:	689b      	ldr	r3, [r3, #8]
 801aa7a:	4798      	blx	r3
 801aa7c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801aa80:	1cd3      	adds	r3, r2, #3
 801aa82:	b29b      	uxth	r3, r3
 801aa84:	2b06      	cmp	r3, #6
 801aa86:	d916      	bls.n	801aab6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801aa88:	f8df c05c 	ldr.w	ip, [pc, #92]	; 801aae8 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb8>
 801aa8c:	f8cd c004 	str.w	ip, [sp, #4]
 801aa90:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801aa94:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801aa98:	6920      	ldr	r0, [r4, #16]
 801aa9a:	f8ad 100c 	strh.w	r1, [sp, #12]
 801aa9e:	f04f 0c01 	mov.w	ip, #1
 801aaa2:	f88d c008 	strb.w	ip, [sp, #8]
 801aaa6:	f8ad 200a 	strh.w	r2, [sp, #10]
 801aaaa:	f8ad 300e 	strh.w	r3, [sp, #14]
 801aaae:	6803      	ldr	r3, [r0, #0]
 801aab0:	a901      	add	r1, sp, #4
 801aab2:	689b      	ldr	r3, [r3, #8]
 801aab4:	4798      	blx	r3
 801aab6:	4b0b      	ldr	r3, [pc, #44]	; (801aae4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xb4>)
 801aab8:	9301      	str	r3, [sp, #4]
 801aaba:	6920      	ldr	r0, [r4, #16]
 801aabc:	f88d 5008 	strb.w	r5, [sp, #8]
 801aac0:	2300      	movs	r3, #0
 801aac2:	f8ad 700a 	strh.w	r7, [sp, #10]
 801aac6:	f8ad 600c 	strh.w	r6, [sp, #12]
 801aaca:	f8ad 300e 	strh.w	r3, [sp, #14]
 801aace:	6803      	ldr	r3, [r0, #0]
 801aad0:	a901      	add	r1, sp, #4
 801aad2:	681b      	ldr	r3, [r3, #0]
 801aad4:	4798      	blx	r3
 801aad6:	b005      	add	sp, #20
 801aad8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801aada:	2900      	cmp	r1, #0
 801aadc:	d1eb      	bne.n	801aab6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801aade:	80a2      	strh	r2, [r4, #4]
 801aae0:	80c6      	strh	r6, [r0, #6]
 801aae2:	e7e8      	b.n	801aab6 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801aae4:	0801e5f4 	.word	0x0801e5f4
 801aae8:	0801e61c 	.word	0x0801e61c

0801aaec <__aeabi_atexit>:
 801aaec:	460b      	mov	r3, r1
 801aaee:	4601      	mov	r1, r0
 801aaf0:	4618      	mov	r0, r3
 801aaf2:	f000 be21 	b.w	801b738 <__cxa_atexit>

0801aaf6 <__cxa_pure_virtual>:
 801aaf6:	b508      	push	{r3, lr}
 801aaf8:	f000 f820 	bl	801ab3c <_ZSt9terminatev>

0801aafc <_ZdlPvj>:
 801aafc:	f000 b80f 	b.w	801ab1e <_ZdlPv>

0801ab00 <__cxa_guard_acquire>:
 801ab00:	6803      	ldr	r3, [r0, #0]
 801ab02:	07db      	lsls	r3, r3, #31
 801ab04:	d406      	bmi.n	801ab14 <__cxa_guard_acquire+0x14>
 801ab06:	7843      	ldrb	r3, [r0, #1]
 801ab08:	b103      	cbz	r3, 801ab0c <__cxa_guard_acquire+0xc>
 801ab0a:	deff      	udf	#255	; 0xff
 801ab0c:	2301      	movs	r3, #1
 801ab0e:	7043      	strb	r3, [r0, #1]
 801ab10:	4618      	mov	r0, r3
 801ab12:	4770      	bx	lr
 801ab14:	2000      	movs	r0, #0
 801ab16:	4770      	bx	lr

0801ab18 <__cxa_guard_release>:
 801ab18:	2301      	movs	r3, #1
 801ab1a:	6003      	str	r3, [r0, #0]
 801ab1c:	4770      	bx	lr

0801ab1e <_ZdlPv>:
 801ab1e:	f000 be5d 	b.w	801b7dc <free>

0801ab22 <_ZN10__cxxabiv111__terminateEPFvvE>:
 801ab22:	b508      	push	{r3, lr}
 801ab24:	4780      	blx	r0
 801ab26:	f000 fddb 	bl	801b6e0 <abort>
	...

0801ab2c <_ZSt13get_terminatev>:
 801ab2c:	4b02      	ldr	r3, [pc, #8]	; (801ab38 <_ZSt13get_terminatev+0xc>)
 801ab2e:	6818      	ldr	r0, [r3, #0]
 801ab30:	f3bf 8f5b 	dmb	ish
 801ab34:	4770      	bx	lr
 801ab36:	bf00      	nop
 801ab38:	20000090 	.word	0x20000090

0801ab3c <_ZSt9terminatev>:
 801ab3c:	b508      	push	{r3, lr}
 801ab3e:	f7ff fff5 	bl	801ab2c <_ZSt13get_terminatev>
 801ab42:	f7ff ffee 	bl	801ab22 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

0801ab48 <ceilf>:
 801ab48:	ee10 3a10 	vmov	r3, s0
 801ab4c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801ab50:	0dca      	lsrs	r2, r1, #23
 801ab52:	3a7f      	subs	r2, #127	; 0x7f
 801ab54:	2a16      	cmp	r2, #22
 801ab56:	dc2a      	bgt.n	801abae <ceilf+0x66>
 801ab58:	2a00      	cmp	r2, #0
 801ab5a:	da11      	bge.n	801ab80 <ceilf+0x38>
 801ab5c:	eddf 7a18 	vldr	s15, [pc, #96]	; 801abc0 <ceilf+0x78>
 801ab60:	ee30 0a27 	vadd.f32	s0, s0, s15
 801ab64:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ab68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab6c:	dd05      	ble.n	801ab7a <ceilf+0x32>
 801ab6e:	2b00      	cmp	r3, #0
 801ab70:	db23      	blt.n	801abba <ceilf+0x72>
 801ab72:	2900      	cmp	r1, #0
 801ab74:	bf18      	it	ne
 801ab76:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 801ab7a:	ee00 3a10 	vmov	s0, r3
 801ab7e:	4770      	bx	lr
 801ab80:	4910      	ldr	r1, [pc, #64]	; (801abc4 <ceilf+0x7c>)
 801ab82:	4111      	asrs	r1, r2
 801ab84:	420b      	tst	r3, r1
 801ab86:	d0fa      	beq.n	801ab7e <ceilf+0x36>
 801ab88:	eddf 7a0d 	vldr	s15, [pc, #52]	; 801abc0 <ceilf+0x78>
 801ab8c:	ee30 0a27 	vadd.f32	s0, s0, s15
 801ab90:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ab94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ab98:	ddef      	ble.n	801ab7a <ceilf+0x32>
 801ab9a:	2b00      	cmp	r3, #0
 801ab9c:	bfc2      	ittt	gt
 801ab9e:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 801aba2:	fa40 f202 	asrgt.w	r2, r0, r2
 801aba6:	189b      	addgt	r3, r3, r2
 801aba8:	ea23 0301 	bic.w	r3, r3, r1
 801abac:	e7e5      	b.n	801ab7a <ceilf+0x32>
 801abae:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801abb2:	d3e4      	bcc.n	801ab7e <ceilf+0x36>
 801abb4:	ee30 0a00 	vadd.f32	s0, s0, s0
 801abb8:	4770      	bx	lr
 801abba:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 801abbe:	e7dc      	b.n	801ab7a <ceilf+0x32>
 801abc0:	7149f2ca 	.word	0x7149f2ca
 801abc4:	007fffff 	.word	0x007fffff

0801abc8 <cosf>:
 801abc8:	ee10 3a10 	vmov	r3, s0
 801abcc:	b507      	push	{r0, r1, r2, lr}
 801abce:	4a1c      	ldr	r2, [pc, #112]	; (801ac40 <cosf+0x78>)
 801abd0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801abd4:	4293      	cmp	r3, r2
 801abd6:	dc04      	bgt.n	801abe2 <cosf+0x1a>
 801abd8:	eddf 0a1a 	vldr	s1, [pc, #104]	; 801ac44 <cosf+0x7c>
 801abdc:	f000 f9e4 	bl	801afa8 <__kernel_cosf>
 801abe0:	e004      	b.n	801abec <cosf+0x24>
 801abe2:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801abe6:	db04      	blt.n	801abf2 <cosf+0x2a>
 801abe8:	ee30 0a40 	vsub.f32	s0, s0, s0
 801abec:	b003      	add	sp, #12
 801abee:	f85d fb04 	ldr.w	pc, [sp], #4
 801abf2:	4668      	mov	r0, sp
 801abf4:	f000 f8ac 	bl	801ad50 <__ieee754_rem_pio2f>
 801abf8:	f000 0003 	and.w	r0, r0, #3
 801abfc:	2801      	cmp	r0, #1
 801abfe:	d007      	beq.n	801ac10 <cosf+0x48>
 801ac00:	2802      	cmp	r0, #2
 801ac02:	d00e      	beq.n	801ac22 <cosf+0x5a>
 801ac04:	b9a0      	cbnz	r0, 801ac30 <cosf+0x68>
 801ac06:	eddd 0a01 	vldr	s1, [sp, #4]
 801ac0a:	ed9d 0a00 	vldr	s0, [sp]
 801ac0e:	e7e5      	b.n	801abdc <cosf+0x14>
 801ac10:	eddd 0a01 	vldr	s1, [sp, #4]
 801ac14:	ed9d 0a00 	vldr	s0, [sp]
 801ac18:	f000 fca6 	bl	801b568 <__kernel_sinf>
 801ac1c:	eeb1 0a40 	vneg.f32	s0, s0
 801ac20:	e7e4      	b.n	801abec <cosf+0x24>
 801ac22:	eddd 0a01 	vldr	s1, [sp, #4]
 801ac26:	ed9d 0a00 	vldr	s0, [sp]
 801ac2a:	f000 f9bd 	bl	801afa8 <__kernel_cosf>
 801ac2e:	e7f5      	b.n	801ac1c <cosf+0x54>
 801ac30:	2001      	movs	r0, #1
 801ac32:	eddd 0a01 	vldr	s1, [sp, #4]
 801ac36:	ed9d 0a00 	vldr	s0, [sp]
 801ac3a:	f000 fc95 	bl	801b568 <__kernel_sinf>
 801ac3e:	e7d5      	b.n	801abec <cosf+0x24>
 801ac40:	3f490fd8 	.word	0x3f490fd8
 801ac44:	00000000 	.word	0x00000000

0801ac48 <floorf>:
 801ac48:	ee10 3a10 	vmov	r3, s0
 801ac4c:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 801ac50:	0dca      	lsrs	r2, r1, #23
 801ac52:	3a7f      	subs	r2, #127	; 0x7f
 801ac54:	2a16      	cmp	r2, #22
 801ac56:	dc2a      	bgt.n	801acae <floorf+0x66>
 801ac58:	2a00      	cmp	r2, #0
 801ac5a:	da11      	bge.n	801ac80 <floorf+0x38>
 801ac5c:	eddf 7a18 	vldr	s15, [pc, #96]	; 801acc0 <floorf+0x78>
 801ac60:	ee30 0a27 	vadd.f32	s0, s0, s15
 801ac64:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ac68:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac6c:	dd05      	ble.n	801ac7a <floorf+0x32>
 801ac6e:	2b00      	cmp	r3, #0
 801ac70:	da23      	bge.n	801acba <floorf+0x72>
 801ac72:	4a14      	ldr	r2, [pc, #80]	; (801acc4 <floorf+0x7c>)
 801ac74:	2900      	cmp	r1, #0
 801ac76:	bf18      	it	ne
 801ac78:	4613      	movne	r3, r2
 801ac7a:	ee00 3a10 	vmov	s0, r3
 801ac7e:	4770      	bx	lr
 801ac80:	4911      	ldr	r1, [pc, #68]	; (801acc8 <floorf+0x80>)
 801ac82:	4111      	asrs	r1, r2
 801ac84:	420b      	tst	r3, r1
 801ac86:	d0fa      	beq.n	801ac7e <floorf+0x36>
 801ac88:	eddf 7a0d 	vldr	s15, [pc, #52]	; 801acc0 <floorf+0x78>
 801ac8c:	ee30 0a27 	vadd.f32	s0, s0, s15
 801ac90:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 801ac94:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801ac98:	ddef      	ble.n	801ac7a <floorf+0x32>
 801ac9a:	2b00      	cmp	r3, #0
 801ac9c:	bfbe      	ittt	lt
 801ac9e:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 801aca2:	fa40 f202 	asrlt.w	r2, r0, r2
 801aca6:	189b      	addlt	r3, r3, r2
 801aca8:	ea23 0301 	bic.w	r3, r3, r1
 801acac:	e7e5      	b.n	801ac7a <floorf+0x32>
 801acae:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 801acb2:	d3e4      	bcc.n	801ac7e <floorf+0x36>
 801acb4:	ee30 0a00 	vadd.f32	s0, s0, s0
 801acb8:	4770      	bx	lr
 801acba:	2300      	movs	r3, #0
 801acbc:	e7dd      	b.n	801ac7a <floorf+0x32>
 801acbe:	bf00      	nop
 801acc0:	7149f2ca 	.word	0x7149f2ca
 801acc4:	bf800000 	.word	0xbf800000
 801acc8:	007fffff 	.word	0x007fffff

0801accc <sinf>:
 801accc:	ee10 3a10 	vmov	r3, s0
 801acd0:	b507      	push	{r0, r1, r2, lr}
 801acd2:	4a1d      	ldr	r2, [pc, #116]	; (801ad48 <sinf+0x7c>)
 801acd4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801acd8:	4293      	cmp	r3, r2
 801acda:	dc05      	bgt.n	801ace8 <sinf+0x1c>
 801acdc:	eddf 0a1b 	vldr	s1, [pc, #108]	; 801ad4c <sinf+0x80>
 801ace0:	2000      	movs	r0, #0
 801ace2:	f000 fc41 	bl	801b568 <__kernel_sinf>
 801ace6:	e004      	b.n	801acf2 <sinf+0x26>
 801ace8:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801acec:	db04      	blt.n	801acf8 <sinf+0x2c>
 801acee:	ee30 0a40 	vsub.f32	s0, s0, s0
 801acf2:	b003      	add	sp, #12
 801acf4:	f85d fb04 	ldr.w	pc, [sp], #4
 801acf8:	4668      	mov	r0, sp
 801acfa:	f000 f829 	bl	801ad50 <__ieee754_rem_pio2f>
 801acfe:	f000 0003 	and.w	r0, r0, #3
 801ad02:	2801      	cmp	r0, #1
 801ad04:	d008      	beq.n	801ad18 <sinf+0x4c>
 801ad06:	2802      	cmp	r0, #2
 801ad08:	d00d      	beq.n	801ad26 <sinf+0x5a>
 801ad0a:	b9b0      	cbnz	r0, 801ad3a <sinf+0x6e>
 801ad0c:	2001      	movs	r0, #1
 801ad0e:	eddd 0a01 	vldr	s1, [sp, #4]
 801ad12:	ed9d 0a00 	vldr	s0, [sp]
 801ad16:	e7e4      	b.n	801ace2 <sinf+0x16>
 801ad18:	eddd 0a01 	vldr	s1, [sp, #4]
 801ad1c:	ed9d 0a00 	vldr	s0, [sp]
 801ad20:	f000 f942 	bl	801afa8 <__kernel_cosf>
 801ad24:	e7e5      	b.n	801acf2 <sinf+0x26>
 801ad26:	2001      	movs	r0, #1
 801ad28:	eddd 0a01 	vldr	s1, [sp, #4]
 801ad2c:	ed9d 0a00 	vldr	s0, [sp]
 801ad30:	f000 fc1a 	bl	801b568 <__kernel_sinf>
 801ad34:	eeb1 0a40 	vneg.f32	s0, s0
 801ad38:	e7db      	b.n	801acf2 <sinf+0x26>
 801ad3a:	eddd 0a01 	vldr	s1, [sp, #4]
 801ad3e:	ed9d 0a00 	vldr	s0, [sp]
 801ad42:	f000 f931 	bl	801afa8 <__kernel_cosf>
 801ad46:	e7f5      	b.n	801ad34 <sinf+0x68>
 801ad48:	3f490fd8 	.word	0x3f490fd8
 801ad4c:	00000000 	.word	0x00000000

0801ad50 <__ieee754_rem_pio2f>:
 801ad50:	b5f0      	push	{r4, r5, r6, r7, lr}
 801ad52:	ee10 6a10 	vmov	r6, s0
 801ad56:	4b86      	ldr	r3, [pc, #536]	; (801af70 <__ieee754_rem_pio2f+0x220>)
 801ad58:	f026 4400 	bic.w	r4, r6, #2147483648	; 0x80000000
 801ad5c:	429c      	cmp	r4, r3
 801ad5e:	b087      	sub	sp, #28
 801ad60:	4605      	mov	r5, r0
 801ad62:	dc05      	bgt.n	801ad70 <__ieee754_rem_pio2f+0x20>
 801ad64:	2300      	movs	r3, #0
 801ad66:	ed85 0a00 	vstr	s0, [r5]
 801ad6a:	6043      	str	r3, [r0, #4]
 801ad6c:	2000      	movs	r0, #0
 801ad6e:	e020      	b.n	801adb2 <__ieee754_rem_pio2f+0x62>
 801ad70:	4b80      	ldr	r3, [pc, #512]	; (801af74 <__ieee754_rem_pio2f+0x224>)
 801ad72:	429c      	cmp	r4, r3
 801ad74:	dc38      	bgt.n	801ade8 <__ieee754_rem_pio2f+0x98>
 801ad76:	2e00      	cmp	r6, #0
 801ad78:	f024 040f 	bic.w	r4, r4, #15
 801ad7c:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 801af78 <__ieee754_rem_pio2f+0x228>
 801ad80:	4b7e      	ldr	r3, [pc, #504]	; (801af7c <__ieee754_rem_pio2f+0x22c>)
 801ad82:	dd18      	ble.n	801adb6 <__ieee754_rem_pio2f+0x66>
 801ad84:	429c      	cmp	r4, r3
 801ad86:	ee70 7a47 	vsub.f32	s15, s0, s14
 801ad8a:	bf09      	itett	eq
 801ad8c:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 801af80 <__ieee754_rem_pio2f+0x230>
 801ad90:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 801af84 <__ieee754_rem_pio2f+0x234>
 801ad94:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 801ad98:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 801af88 <__ieee754_rem_pio2f+0x238>
 801ad9c:	ee77 6ac7 	vsub.f32	s13, s15, s14
 801ada0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801ada4:	edc0 6a00 	vstr	s13, [r0]
 801ada8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801adac:	edc0 7a01 	vstr	s15, [r0, #4]
 801adb0:	2001      	movs	r0, #1
 801adb2:	b007      	add	sp, #28
 801adb4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801adb6:	429c      	cmp	r4, r3
 801adb8:	ee70 7a07 	vadd.f32	s15, s0, s14
 801adbc:	bf09      	itett	eq
 801adbe:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 801af80 <__ieee754_rem_pio2f+0x230>
 801adc2:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 801af84 <__ieee754_rem_pio2f+0x234>
 801adc6:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 801adca:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 801af88 <__ieee754_rem_pio2f+0x238>
 801adce:	ee77 6a87 	vadd.f32	s13, s15, s14
 801add2:	ee77 7ae6 	vsub.f32	s15, s15, s13
 801add6:	edc0 6a00 	vstr	s13, [r0]
 801adda:	ee77 7a87 	vadd.f32	s15, s15, s14
 801adde:	edc0 7a01 	vstr	s15, [r0, #4]
 801ade2:	f04f 30ff 	mov.w	r0, #4294967295
 801ade6:	e7e4      	b.n	801adb2 <__ieee754_rem_pio2f+0x62>
 801ade8:	4b68      	ldr	r3, [pc, #416]	; (801af8c <__ieee754_rem_pio2f+0x23c>)
 801adea:	429c      	cmp	r4, r3
 801adec:	dc71      	bgt.n	801aed2 <__ieee754_rem_pio2f+0x182>
 801adee:	f000 fc03 	bl	801b5f8 <fabsf>
 801adf2:	ed9f 7a67 	vldr	s14, [pc, #412]	; 801af90 <__ieee754_rem_pio2f+0x240>
 801adf6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801adfa:	eee0 7a07 	vfma.f32	s15, s0, s14
 801adfe:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801ae02:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 801ae06:	ee17 0a90 	vmov	r0, s15
 801ae0a:	eddf 7a5b 	vldr	s15, [pc, #364]	; 801af78 <__ieee754_rem_pio2f+0x228>
 801ae0e:	eeb1 7a46 	vneg.f32	s14, s12
 801ae12:	eea7 0a27 	vfma.f32	s0, s14, s15
 801ae16:	281f      	cmp	r0, #31
 801ae18:	eddf 7a5a 	vldr	s15, [pc, #360]	; 801af84 <__ieee754_rem_pio2f+0x234>
 801ae1c:	ee66 7a27 	vmul.f32	s15, s12, s15
 801ae20:	ee70 6a67 	vsub.f32	s13, s0, s15
 801ae24:	ee16 3a90 	vmov	r3, s13
 801ae28:	dc1c      	bgt.n	801ae64 <__ieee754_rem_pio2f+0x114>
 801ae2a:	1e47      	subs	r7, r0, #1
 801ae2c:	4959      	ldr	r1, [pc, #356]	; (801af94 <__ieee754_rem_pio2f+0x244>)
 801ae2e:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801ae32:	f024 02ff 	bic.w	r2, r4, #255	; 0xff
 801ae36:	428a      	cmp	r2, r1
 801ae38:	d014      	beq.n	801ae64 <__ieee754_rem_pio2f+0x114>
 801ae3a:	602b      	str	r3, [r5, #0]
 801ae3c:	ed95 7a00 	vldr	s14, [r5]
 801ae40:	ee30 0a47 	vsub.f32	s0, s0, s14
 801ae44:	2e00      	cmp	r6, #0
 801ae46:	ee30 0a67 	vsub.f32	s0, s0, s15
 801ae4a:	ed85 0a01 	vstr	s0, [r5, #4]
 801ae4e:	dab0      	bge.n	801adb2 <__ieee754_rem_pio2f+0x62>
 801ae50:	eeb1 7a47 	vneg.f32	s14, s14
 801ae54:	eeb1 0a40 	vneg.f32	s0, s0
 801ae58:	ed85 7a00 	vstr	s14, [r5]
 801ae5c:	ed85 0a01 	vstr	s0, [r5, #4]
 801ae60:	4240      	negs	r0, r0
 801ae62:	e7a6      	b.n	801adb2 <__ieee754_rem_pio2f+0x62>
 801ae64:	15e4      	asrs	r4, r4, #23
 801ae66:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801ae6a:	1aa2      	subs	r2, r4, r2
 801ae6c:	2a08      	cmp	r2, #8
 801ae6e:	dde4      	ble.n	801ae3a <__ieee754_rem_pio2f+0xea>
 801ae70:	eddf 7a43 	vldr	s15, [pc, #268]	; 801af80 <__ieee754_rem_pio2f+0x230>
 801ae74:	eef0 6a40 	vmov.f32	s13, s0
 801ae78:	eee7 6a27 	vfma.f32	s13, s14, s15
 801ae7c:	ee30 0a66 	vsub.f32	s0, s0, s13
 801ae80:	eea7 0a27 	vfma.f32	s0, s14, s15
 801ae84:	eddf 7a40 	vldr	s15, [pc, #256]	; 801af88 <__ieee754_rem_pio2f+0x238>
 801ae88:	ee96 0a27 	vfnms.f32	s0, s12, s15
 801ae8c:	ee76 5ac0 	vsub.f32	s11, s13, s0
 801ae90:	eef0 7a40 	vmov.f32	s15, s0
 801ae94:	ee15 3a90 	vmov	r3, s11
 801ae98:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 801ae9c:	1aa4      	subs	r4, r4, r2
 801ae9e:	2c19      	cmp	r4, #25
 801aea0:	dc04      	bgt.n	801aeac <__ieee754_rem_pio2f+0x15c>
 801aea2:	edc5 5a00 	vstr	s11, [r5]
 801aea6:	eeb0 0a66 	vmov.f32	s0, s13
 801aeaa:	e7c7      	b.n	801ae3c <__ieee754_rem_pio2f+0xec>
 801aeac:	eddf 5a3a 	vldr	s11, [pc, #232]	; 801af98 <__ieee754_rem_pio2f+0x248>
 801aeb0:	eeb0 0a66 	vmov.f32	s0, s13
 801aeb4:	eea7 0a25 	vfma.f32	s0, s14, s11
 801aeb8:	ee76 7ac0 	vsub.f32	s15, s13, s0
 801aebc:	eee7 7a25 	vfma.f32	s15, s14, s11
 801aec0:	ed9f 7a36 	vldr	s14, [pc, #216]	; 801af9c <__ieee754_rem_pio2f+0x24c>
 801aec4:	eed6 7a07 	vfnms.f32	s15, s12, s14
 801aec8:	ee30 7a67 	vsub.f32	s14, s0, s15
 801aecc:	ed85 7a00 	vstr	s14, [r5]
 801aed0:	e7b4      	b.n	801ae3c <__ieee754_rem_pio2f+0xec>
 801aed2:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 801aed6:	db06      	blt.n	801aee6 <__ieee754_rem_pio2f+0x196>
 801aed8:	ee70 7a40 	vsub.f32	s15, s0, s0
 801aedc:	edc0 7a01 	vstr	s15, [r0, #4]
 801aee0:	edc0 7a00 	vstr	s15, [r0]
 801aee4:	e742      	b.n	801ad6c <__ieee754_rem_pio2f+0x1c>
 801aee6:	15e2      	asrs	r2, r4, #23
 801aee8:	3a86      	subs	r2, #134	; 0x86
 801aeea:	eba4 53c2 	sub.w	r3, r4, r2, lsl #23
 801aeee:	ee07 3a90 	vmov	s15, r3
 801aef2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801aef6:	eddf 6a2a 	vldr	s13, [pc, #168]	; 801afa0 <__ieee754_rem_pio2f+0x250>
 801aefa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801aefe:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801af02:	ed8d 7a03 	vstr	s14, [sp, #12]
 801af06:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801af0a:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801af0e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801af12:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801af16:	ed8d 7a04 	vstr	s14, [sp, #16]
 801af1a:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801af1e:	eef5 7a40 	vcmp.f32	s15, #0.0
 801af22:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af26:	edcd 7a05 	vstr	s15, [sp, #20]
 801af2a:	d11e      	bne.n	801af6a <__ieee754_rem_pio2f+0x21a>
 801af2c:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801af30:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801af34:	bf0c      	ite	eq
 801af36:	2301      	moveq	r3, #1
 801af38:	2302      	movne	r3, #2
 801af3a:	491a      	ldr	r1, [pc, #104]	; (801afa4 <__ieee754_rem_pio2f+0x254>)
 801af3c:	9101      	str	r1, [sp, #4]
 801af3e:	2102      	movs	r1, #2
 801af40:	9100      	str	r1, [sp, #0]
 801af42:	a803      	add	r0, sp, #12
 801af44:	4629      	mov	r1, r5
 801af46:	f000 f88d 	bl	801b064 <__kernel_rem_pio2f>
 801af4a:	2e00      	cmp	r6, #0
 801af4c:	f6bf af31 	bge.w	801adb2 <__ieee754_rem_pio2f+0x62>
 801af50:	edd5 7a00 	vldr	s15, [r5]
 801af54:	eef1 7a67 	vneg.f32	s15, s15
 801af58:	edc5 7a00 	vstr	s15, [r5]
 801af5c:	edd5 7a01 	vldr	s15, [r5, #4]
 801af60:	eef1 7a67 	vneg.f32	s15, s15
 801af64:	edc5 7a01 	vstr	s15, [r5, #4]
 801af68:	e77a      	b.n	801ae60 <__ieee754_rem_pio2f+0x110>
 801af6a:	2303      	movs	r3, #3
 801af6c:	e7e5      	b.n	801af3a <__ieee754_rem_pio2f+0x1ea>
 801af6e:	bf00      	nop
 801af70:	3f490fd8 	.word	0x3f490fd8
 801af74:	4016cbe3 	.word	0x4016cbe3
 801af78:	3fc90f80 	.word	0x3fc90f80
 801af7c:	3fc90fd0 	.word	0x3fc90fd0
 801af80:	37354400 	.word	0x37354400
 801af84:	37354443 	.word	0x37354443
 801af88:	2e85a308 	.word	0x2e85a308
 801af8c:	43490f80 	.word	0x43490f80
 801af90:	3f22f984 	.word	0x3f22f984
 801af94:	0801fb20 	.word	0x0801fb20
 801af98:	2e85a300 	.word	0x2e85a300
 801af9c:	248d3132 	.word	0x248d3132
 801afa0:	43800000 	.word	0x43800000
 801afa4:	0801fba0 	.word	0x0801fba0

0801afa8 <__kernel_cosf>:
 801afa8:	ee10 3a10 	vmov	r3, s0
 801afac:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801afb0:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801afb4:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801afb8:	da05      	bge.n	801afc6 <__kernel_cosf+0x1e>
 801afba:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801afbe:	ee17 2a90 	vmov	r2, s15
 801afc2:	2a00      	cmp	r2, #0
 801afc4:	d03b      	beq.n	801b03e <__kernel_cosf+0x96>
 801afc6:	ee20 6a00 	vmul.f32	s12, s0, s0
 801afca:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801afce:	eddf 5a1d 	vldr	s11, [pc, #116]	; 801b044 <__kernel_cosf+0x9c>
 801afd2:	4a1d      	ldr	r2, [pc, #116]	; (801b048 <__kernel_cosf+0xa0>)
 801afd4:	ee66 7a07 	vmul.f32	s15, s12, s14
 801afd8:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 801b04c <__kernel_cosf+0xa4>
 801afdc:	eea6 7a25 	vfma.f32	s14, s12, s11
 801afe0:	4293      	cmp	r3, r2
 801afe2:	eddf 5a1b 	vldr	s11, [pc, #108]	; 801b050 <__kernel_cosf+0xa8>
 801afe6:	eee7 5a06 	vfma.f32	s11, s14, s12
 801afea:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 801b054 <__kernel_cosf+0xac>
 801afee:	eea5 7a86 	vfma.f32	s14, s11, s12
 801aff2:	eddf 5a19 	vldr	s11, [pc, #100]	; 801b058 <__kernel_cosf+0xb0>
 801aff6:	eee7 5a06 	vfma.f32	s11, s14, s12
 801affa:	ed9f 7a18 	vldr	s14, [pc, #96]	; 801b05c <__kernel_cosf+0xb4>
 801affe:	eea5 7a86 	vfma.f32	s14, s11, s12
 801b002:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 801b006:	ee27 7a06 	vmul.f32	s14, s14, s12
 801b00a:	eee6 0a07 	vfma.f32	s1, s12, s14
 801b00e:	dc04      	bgt.n	801b01a <__kernel_cosf+0x72>
 801b010:	ee77 0ae0 	vsub.f32	s1, s15, s1
 801b014:	ee36 0ae0 	vsub.f32	s0, s13, s1
 801b018:	4770      	bx	lr
 801b01a:	4a11      	ldr	r2, [pc, #68]	; (801b060 <__kernel_cosf+0xb8>)
 801b01c:	4293      	cmp	r3, r2
 801b01e:	bfda      	itte	le
 801b020:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 801b024:	ee07 3a10 	vmovle	s14, r3
 801b028:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 801b02c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b030:	ee36 0ac7 	vsub.f32	s0, s13, s14
 801b034:	ee77 7ae0 	vsub.f32	s15, s15, s1
 801b038:	ee30 0a67 	vsub.f32	s0, s0, s15
 801b03c:	4770      	bx	lr
 801b03e:	eeb0 0a66 	vmov.f32	s0, s13
 801b042:	4770      	bx	lr
 801b044:	ad47d74e 	.word	0xad47d74e
 801b048:	3e999999 	.word	0x3e999999
 801b04c:	310f74f6 	.word	0x310f74f6
 801b050:	b493f27c 	.word	0xb493f27c
 801b054:	37d00d01 	.word	0x37d00d01
 801b058:	bab60b61 	.word	0xbab60b61
 801b05c:	3d2aaaab 	.word	0x3d2aaaab
 801b060:	3f480000 	.word	0x3f480000

0801b064 <__kernel_rem_pio2f>:
 801b064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b068:	ed2d 8b04 	vpush	{d8-d9}
 801b06c:	b0d7      	sub	sp, #348	; 0x15c
 801b06e:	469b      	mov	fp, r3
 801b070:	460e      	mov	r6, r1
 801b072:	4bbe      	ldr	r3, [pc, #760]	; (801b36c <__kernel_rem_pio2f+0x308>)
 801b074:	9964      	ldr	r1, [sp, #400]	; 0x190
 801b076:	9002      	str	r0, [sp, #8]
 801b078:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
 801b07c:	9865      	ldr	r0, [sp, #404]	; 0x194
 801b07e:	ed9f 7abf 	vldr	s14, [pc, #764]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b082:	1ed1      	subs	r1, r2, #3
 801b084:	2308      	movs	r3, #8
 801b086:	fb91 f1f3 	sdiv	r1, r1, r3
 801b08a:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 801b08e:	f10b 3aff 	add.w	sl, fp, #4294967295
 801b092:	1c4c      	adds	r4, r1, #1
 801b094:	eba2 04c4 	sub.w	r4, r2, r4, lsl #3
 801b098:	eba1 050a 	sub.w	r5, r1, sl
 801b09c:	aa1a      	add	r2, sp, #104	; 0x68
 801b09e:	eb09 070a 	add.w	r7, r9, sl
 801b0a2:	eb00 0c85 	add.w	ip, r0, r5, lsl #2
 801b0a6:	4696      	mov	lr, r2
 801b0a8:	2300      	movs	r3, #0
 801b0aa:	42bb      	cmp	r3, r7
 801b0ac:	dd0f      	ble.n	801b0ce <__kernel_rem_pio2f+0x6a>
 801b0ae:	af42      	add	r7, sp, #264	; 0x108
 801b0b0:	2200      	movs	r2, #0
 801b0b2:	454a      	cmp	r2, r9
 801b0b4:	dc27      	bgt.n	801b106 <__kernel_rem_pio2f+0xa2>
 801b0b6:	f10d 0c68 	add.w	ip, sp, #104	; 0x68
 801b0ba:	eb0b 0302 	add.w	r3, fp, r2
 801b0be:	eb0c 0383 	add.w	r3, ip, r3, lsl #2
 801b0c2:	9d02      	ldr	r5, [sp, #8]
 801b0c4:	eddf 7aad 	vldr	s15, [pc, #692]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b0c8:	f04f 0c00 	mov.w	ip, #0
 801b0cc:	e015      	b.n	801b0fa <__kernel_rem_pio2f+0x96>
 801b0ce:	42dd      	cmn	r5, r3
 801b0d0:	bf5d      	ittte	pl
 801b0d2:	f85c 2023 	ldrpl.w	r2, [ip, r3, lsl #2]
 801b0d6:	ee07 2a90 	vmovpl	s15, r2
 801b0da:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 801b0de:	eef0 7a47 	vmovmi.f32	s15, s14
 801b0e2:	ecee 7a01 	vstmia	lr!, {s15}
 801b0e6:	3301      	adds	r3, #1
 801b0e8:	e7df      	b.n	801b0aa <__kernel_rem_pio2f+0x46>
 801b0ea:	ecf5 6a01 	vldmia	r5!, {s13}
 801b0ee:	ed33 7a01 	vldmdb	r3!, {s14}
 801b0f2:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b0f6:	f10c 0c01 	add.w	ip, ip, #1
 801b0fa:	45d4      	cmp	ip, sl
 801b0fc:	ddf5      	ble.n	801b0ea <__kernel_rem_pio2f+0x86>
 801b0fe:	ece7 7a01 	vstmia	r7!, {s15}
 801b102:	3201      	adds	r2, #1
 801b104:	e7d5      	b.n	801b0b2 <__kernel_rem_pio2f+0x4e>
 801b106:	ab06      	add	r3, sp, #24
 801b108:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 801b10c:	9304      	str	r3, [sp, #16]
 801b10e:	eddf 8a9a 	vldr	s17, [pc, #616]	; 801b378 <__kernel_rem_pio2f+0x314>
 801b112:	ed9f 9a98 	vldr	s18, [pc, #608]	; 801b374 <__kernel_rem_pio2f+0x310>
 801b116:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 801b11a:	9303      	str	r3, [sp, #12]
 801b11c:	464d      	mov	r5, r9
 801b11e:	ab56      	add	r3, sp, #344	; 0x158
 801b120:	f105 4780 	add.w	r7, r5, #1073741824	; 0x40000000
 801b124:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 801b128:	3f01      	subs	r7, #1
 801b12a:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 801b12e:	00bf      	lsls	r7, r7, #2
 801b130:	ab56      	add	r3, sp, #344	; 0x158
 801b132:	19da      	adds	r2, r3, r7
 801b134:	3a4c      	subs	r2, #76	; 0x4c
 801b136:	2300      	movs	r3, #0
 801b138:	1ae9      	subs	r1, r5, r3
 801b13a:	2900      	cmp	r1, #0
 801b13c:	dc4c      	bgt.n	801b1d8 <__kernel_rem_pio2f+0x174>
 801b13e:	4620      	mov	r0, r4
 801b140:	f000 fa62 	bl	801b608 <scalbnf>
 801b144:	eeb0 8a40 	vmov.f32	s16, s0
 801b148:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 801b14c:	ee28 0a00 	vmul.f32	s0, s16, s0
 801b150:	f7ff fd7a 	bl	801ac48 <floorf>
 801b154:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 801b158:	eea0 8a67 	vfms.f32	s16, s0, s15
 801b15c:	2c00      	cmp	r4, #0
 801b15e:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 801b162:	edcd 7a01 	vstr	s15, [sp, #4]
 801b166:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b16a:	ee38 8a67 	vsub.f32	s16, s16, s15
 801b16e:	dd48      	ble.n	801b202 <__kernel_rem_pio2f+0x19e>
 801b170:	1e69      	subs	r1, r5, #1
 801b172:	ab06      	add	r3, sp, #24
 801b174:	f1c4 0008 	rsb	r0, r4, #8
 801b178:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
 801b17c:	9a01      	ldr	r2, [sp, #4]
 801b17e:	fa4c f300 	asr.w	r3, ip, r0
 801b182:	441a      	add	r2, r3
 801b184:	4083      	lsls	r3, r0
 801b186:	9201      	str	r2, [sp, #4]
 801b188:	ebac 0203 	sub.w	r2, ip, r3
 801b18c:	ab06      	add	r3, sp, #24
 801b18e:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 801b192:	f1c4 0307 	rsb	r3, r4, #7
 801b196:	fa42 f803 	asr.w	r8, r2, r3
 801b19a:	f1b8 0f00 	cmp.w	r8, #0
 801b19e:	dd41      	ble.n	801b224 <__kernel_rem_pio2f+0x1c0>
 801b1a0:	9b01      	ldr	r3, [sp, #4]
 801b1a2:	2000      	movs	r0, #0
 801b1a4:	3301      	adds	r3, #1
 801b1a6:	9301      	str	r3, [sp, #4]
 801b1a8:	4601      	mov	r1, r0
 801b1aa:	4285      	cmp	r5, r0
 801b1ac:	dc6d      	bgt.n	801b28a <__kernel_rem_pio2f+0x226>
 801b1ae:	2c00      	cmp	r4, #0
 801b1b0:	dd04      	ble.n	801b1bc <__kernel_rem_pio2f+0x158>
 801b1b2:	2c01      	cmp	r4, #1
 801b1b4:	d07e      	beq.n	801b2b4 <__kernel_rem_pio2f+0x250>
 801b1b6:	2c02      	cmp	r4, #2
 801b1b8:	f000 8086 	beq.w	801b2c8 <__kernel_rem_pio2f+0x264>
 801b1bc:	f1b8 0f02 	cmp.w	r8, #2
 801b1c0:	d130      	bne.n	801b224 <__kernel_rem_pio2f+0x1c0>
 801b1c2:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801b1c6:	ee30 8a48 	vsub.f32	s16, s0, s16
 801b1ca:	b359      	cbz	r1, 801b224 <__kernel_rem_pio2f+0x1c0>
 801b1cc:	4620      	mov	r0, r4
 801b1ce:	f000 fa1b 	bl	801b608 <scalbnf>
 801b1d2:	ee38 8a40 	vsub.f32	s16, s16, s0
 801b1d6:	e025      	b.n	801b224 <__kernel_rem_pio2f+0x1c0>
 801b1d8:	ee60 7a28 	vmul.f32	s15, s0, s17
 801b1dc:	a806      	add	r0, sp, #24
 801b1de:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801b1e2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b1e6:	eea7 0ac9 	vfms.f32	s0, s15, s18
 801b1ea:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801b1ee:	ee10 1a10 	vmov	r1, s0
 801b1f2:	ed32 0a01 	vldmdb	r2!, {s0}
 801b1f6:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
 801b1fa:	ee37 0a80 	vadd.f32	s0, s15, s0
 801b1fe:	3301      	adds	r3, #1
 801b200:	e79a      	b.n	801b138 <__kernel_rem_pio2f+0xd4>
 801b202:	d106      	bne.n	801b212 <__kernel_rem_pio2f+0x1ae>
 801b204:	1e6b      	subs	r3, r5, #1
 801b206:	aa06      	add	r2, sp, #24
 801b208:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 801b20c:	ea4f 2822 	mov.w	r8, r2, asr #8
 801b210:	e7c3      	b.n	801b19a <__kernel_rem_pio2f+0x136>
 801b212:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801b216:	eeb4 8ae7 	vcmpe.f32	s16, s15
 801b21a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b21e:	da31      	bge.n	801b284 <__kernel_rem_pio2f+0x220>
 801b220:	f04f 0800 	mov.w	r8, #0
 801b224:	eeb5 8a40 	vcmp.f32	s16, #0.0
 801b228:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b22c:	f040 80a8 	bne.w	801b380 <__kernel_rem_pio2f+0x31c>
 801b230:	1e6b      	subs	r3, r5, #1
 801b232:	4618      	mov	r0, r3
 801b234:	2200      	movs	r2, #0
 801b236:	4548      	cmp	r0, r9
 801b238:	da4d      	bge.n	801b2d6 <__kernel_rem_pio2f+0x272>
 801b23a:	2a00      	cmp	r2, #0
 801b23c:	f000 8087 	beq.w	801b34e <__kernel_rem_pio2f+0x2ea>
 801b240:	aa06      	add	r2, sp, #24
 801b242:	3c08      	subs	r4, #8
 801b244:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 801b248:	2900      	cmp	r1, #0
 801b24a:	f000 808d 	beq.w	801b368 <__kernel_rem_pio2f+0x304>
 801b24e:	4620      	mov	r0, r4
 801b250:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801b254:	9302      	str	r3, [sp, #8]
 801b256:	f000 f9d7 	bl	801b608 <scalbnf>
 801b25a:	9b02      	ldr	r3, [sp, #8]
 801b25c:	ed9f 7a46 	vldr	s14, [pc, #280]	; 801b378 <__kernel_rem_pio2f+0x314>
 801b260:	0099      	lsls	r1, r3, #2
 801b262:	aa42      	add	r2, sp, #264	; 0x108
 801b264:	1850      	adds	r0, r2, r1
 801b266:	1d05      	adds	r5, r0, #4
 801b268:	461c      	mov	r4, r3
 801b26a:	2c00      	cmp	r4, #0
 801b26c:	f280 80b8 	bge.w	801b3e0 <__kernel_rem_pio2f+0x37c>
 801b270:	2500      	movs	r5, #0
 801b272:	1b5c      	subs	r4, r3, r5
 801b274:	2c00      	cmp	r4, #0
 801b276:	f2c0 80d8 	blt.w	801b42a <__kernel_rem_pio2f+0x3c6>
 801b27a:	4f3d      	ldr	r7, [pc, #244]	; (801b370 <__kernel_rem_pio2f+0x30c>)
 801b27c:	eddf 7a3f 	vldr	s15, [pc, #252]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b280:	2400      	movs	r4, #0
 801b282:	e0c6      	b.n	801b412 <__kernel_rem_pio2f+0x3ae>
 801b284:	f04f 0802 	mov.w	r8, #2
 801b288:	e78a      	b.n	801b1a0 <__kernel_rem_pio2f+0x13c>
 801b28a:	ab06      	add	r3, sp, #24
 801b28c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801b290:	b949      	cbnz	r1, 801b2a6 <__kernel_rem_pio2f+0x242>
 801b292:	b12b      	cbz	r3, 801b2a0 <__kernel_rem_pio2f+0x23c>
 801b294:	aa06      	add	r2, sp, #24
 801b296:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 801b29a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 801b29e:	2301      	movs	r3, #1
 801b2a0:	3001      	adds	r0, #1
 801b2a2:	4619      	mov	r1, r3
 801b2a4:	e781      	b.n	801b1aa <__kernel_rem_pio2f+0x146>
 801b2a6:	aa06      	add	r2, sp, #24
 801b2a8:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 801b2ac:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 801b2b0:	460b      	mov	r3, r1
 801b2b2:	e7f5      	b.n	801b2a0 <__kernel_rem_pio2f+0x23c>
 801b2b4:	1e68      	subs	r0, r5, #1
 801b2b6:	ab06      	add	r3, sp, #24
 801b2b8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801b2bc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 801b2c0:	aa06      	add	r2, sp, #24
 801b2c2:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 801b2c6:	e779      	b.n	801b1bc <__kernel_rem_pio2f+0x158>
 801b2c8:	1e68      	subs	r0, r5, #1
 801b2ca:	ab06      	add	r3, sp, #24
 801b2cc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 801b2d0:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 801b2d4:	e7f4      	b.n	801b2c0 <__kernel_rem_pio2f+0x25c>
 801b2d6:	a906      	add	r1, sp, #24
 801b2d8:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 801b2dc:	3801      	subs	r0, #1
 801b2de:	430a      	orrs	r2, r1
 801b2e0:	e7a9      	b.n	801b236 <__kernel_rem_pio2f+0x1d2>
 801b2e2:	f10c 0c01 	add.w	ip, ip, #1
 801b2e6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 801b2ea:	2a00      	cmp	r2, #0
 801b2ec:	d0f9      	beq.n	801b2e2 <__kernel_rem_pio2f+0x27e>
 801b2ee:	eb0b 0305 	add.w	r3, fp, r5
 801b2f2:	aa1a      	add	r2, sp, #104	; 0x68
 801b2f4:	009b      	lsls	r3, r3, #2
 801b2f6:	1898      	adds	r0, r3, r2
 801b2f8:	3004      	adds	r0, #4
 801b2fa:	1c69      	adds	r1, r5, #1
 801b2fc:	3704      	adds	r7, #4
 801b2fe:	2200      	movs	r2, #0
 801b300:	4465      	add	r5, ip
 801b302:	9005      	str	r0, [sp, #20]
 801b304:	428d      	cmp	r5, r1
 801b306:	f6ff af0a 	blt.w	801b11e <__kernel_rem_pio2f+0xba>
 801b30a:	a81a      	add	r0, sp, #104	; 0x68
 801b30c:	eb02 0c03 	add.w	ip, r2, r3
 801b310:	4484      	add	ip, r0
 801b312:	9803      	ldr	r0, [sp, #12]
 801b314:	f8dd e008 	ldr.w	lr, [sp, #8]
 801b318:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 801b31c:	9001      	str	r0, [sp, #4]
 801b31e:	ee07 0a90 	vmov	s15, r0
 801b322:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b326:	9805      	ldr	r0, [sp, #20]
 801b328:	edcc 7a00 	vstr	s15, [ip]
 801b32c:	eddf 7a13 	vldr	s15, [pc, #76]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b330:	eb00 0802 	add.w	r8, r0, r2
 801b334:	f04f 0c00 	mov.w	ip, #0
 801b338:	45d4      	cmp	ip, sl
 801b33a:	dd0c      	ble.n	801b356 <__kernel_rem_pio2f+0x2f2>
 801b33c:	eb02 0c07 	add.w	ip, r2, r7
 801b340:	a842      	add	r0, sp, #264	; 0x108
 801b342:	4484      	add	ip, r0
 801b344:	edcc 7a01 	vstr	s15, [ip, #4]
 801b348:	3101      	adds	r1, #1
 801b34a:	3204      	adds	r2, #4
 801b34c:	e7da      	b.n	801b304 <__kernel_rem_pio2f+0x2a0>
 801b34e:	9b04      	ldr	r3, [sp, #16]
 801b350:	f04f 0c01 	mov.w	ip, #1
 801b354:	e7c7      	b.n	801b2e6 <__kernel_rem_pio2f+0x282>
 801b356:	ecfe 6a01 	vldmia	lr!, {s13}
 801b35a:	ed38 7a01 	vldmdb	r8!, {s14}
 801b35e:	f10c 0c01 	add.w	ip, ip, #1
 801b362:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b366:	e7e7      	b.n	801b338 <__kernel_rem_pio2f+0x2d4>
 801b368:	3b01      	subs	r3, #1
 801b36a:	e769      	b.n	801b240 <__kernel_rem_pio2f+0x1dc>
 801b36c:	0801fee4 	.word	0x0801fee4
 801b370:	0801feb8 	.word	0x0801feb8
 801b374:	43800000 	.word	0x43800000
 801b378:	3b800000 	.word	0x3b800000
 801b37c:	00000000 	.word	0x00000000
 801b380:	4260      	negs	r0, r4
 801b382:	eeb0 0a48 	vmov.f32	s0, s16
 801b386:	f000 f93f 	bl	801b608 <scalbnf>
 801b38a:	ed1f 7a06 	vldr	s14, [pc, #-24]	; 801b374 <__kernel_rem_pio2f+0x310>
 801b38e:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801b392:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801b396:	db1a      	blt.n	801b3ce <__kernel_rem_pio2f+0x36a>
 801b398:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 801b378 <__kernel_rem_pio2f+0x314>
 801b39c:	ee60 7a27 	vmul.f32	s15, s0, s15
 801b3a0:	aa06      	add	r2, sp, #24
 801b3a2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801b3a6:	a906      	add	r1, sp, #24
 801b3a8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b3ac:	3408      	adds	r4, #8
 801b3ae:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801b3b2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801b3b6:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801b3ba:	ee10 3a10 	vmov	r3, s0
 801b3be:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 801b3c2:	1c6b      	adds	r3, r5, #1
 801b3c4:	ee17 2a90 	vmov	r2, s15
 801b3c8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 801b3cc:	e73f      	b.n	801b24e <__kernel_rem_pio2f+0x1ea>
 801b3ce:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801b3d2:	aa06      	add	r2, sp, #24
 801b3d4:	ee10 3a10 	vmov	r3, s0
 801b3d8:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 801b3dc:	462b      	mov	r3, r5
 801b3de:	e736      	b.n	801b24e <__kernel_rem_pio2f+0x1ea>
 801b3e0:	aa06      	add	r2, sp, #24
 801b3e2:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 801b3e6:	9202      	str	r2, [sp, #8]
 801b3e8:	ee07 2a90 	vmov	s15, r2
 801b3ec:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801b3f0:	3c01      	subs	r4, #1
 801b3f2:	ee67 7a80 	vmul.f32	s15, s15, s0
 801b3f6:	ee20 0a07 	vmul.f32	s0, s0, s14
 801b3fa:	ed65 7a01 	vstmdb	r5!, {s15}
 801b3fe:	e734      	b.n	801b26a <__kernel_rem_pio2f+0x206>
 801b400:	eb00 0c84 	add.w	ip, r0, r4, lsl #2
 801b404:	ecf7 6a01 	vldmia	r7!, {s13}
 801b408:	ed9c 7a00 	vldr	s14, [ip]
 801b40c:	eee6 7a87 	vfma.f32	s15, s13, s14
 801b410:	3401      	adds	r4, #1
 801b412:	454c      	cmp	r4, r9
 801b414:	dc01      	bgt.n	801b41a <__kernel_rem_pio2f+0x3b6>
 801b416:	42a5      	cmp	r5, r4
 801b418:	daf2      	bge.n	801b400 <__kernel_rem_pio2f+0x39c>
 801b41a:	aa56      	add	r2, sp, #344	; 0x158
 801b41c:	eb02 0485 	add.w	r4, r2, r5, lsl #2
 801b420:	ed44 7a28 	vstr	s15, [r4, #-160]	; 0xffffff60
 801b424:	3501      	adds	r5, #1
 801b426:	3804      	subs	r0, #4
 801b428:	e723      	b.n	801b272 <__kernel_rem_pio2f+0x20e>
 801b42a:	9a64      	ldr	r2, [sp, #400]	; 0x190
 801b42c:	2a03      	cmp	r2, #3
 801b42e:	d84d      	bhi.n	801b4cc <__kernel_rem_pio2f+0x468>
 801b430:	e8df f002 	tbb	[pc, r2]
 801b434:	021f1f3e 	.word	0x021f1f3e
 801b438:	aa56      	add	r2, sp, #344	; 0x158
 801b43a:	4411      	add	r1, r2
 801b43c:	399c      	subs	r1, #156	; 0x9c
 801b43e:	4608      	mov	r0, r1
 801b440:	461c      	mov	r4, r3
 801b442:	2c00      	cmp	r4, #0
 801b444:	dc5f      	bgt.n	801b506 <__kernel_rem_pio2f+0x4a2>
 801b446:	4608      	mov	r0, r1
 801b448:	461c      	mov	r4, r3
 801b44a:	2c01      	cmp	r4, #1
 801b44c:	dc6b      	bgt.n	801b526 <__kernel_rem_pio2f+0x4c2>
 801b44e:	ed5f 7a35 	vldr	s15, [pc, #-212]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b452:	2b01      	cmp	r3, #1
 801b454:	dc77      	bgt.n	801b546 <__kernel_rem_pio2f+0x4e2>
 801b456:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 801b45a:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 801b45e:	f1b8 0f00 	cmp.w	r8, #0
 801b462:	d176      	bne.n	801b552 <__kernel_rem_pio2f+0x4ee>
 801b464:	edc6 6a00 	vstr	s13, [r6]
 801b468:	ed86 7a01 	vstr	s14, [r6, #4]
 801b46c:	edc6 7a02 	vstr	s15, [r6, #8]
 801b470:	e02c      	b.n	801b4cc <__kernel_rem_pio2f+0x468>
 801b472:	aa56      	add	r2, sp, #344	; 0x158
 801b474:	4411      	add	r1, r2
 801b476:	ed1f 7a3f 	vldr	s14, [pc, #-252]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b47a:	399c      	subs	r1, #156	; 0x9c
 801b47c:	4618      	mov	r0, r3
 801b47e:	2800      	cmp	r0, #0
 801b480:	da32      	bge.n	801b4e8 <__kernel_rem_pio2f+0x484>
 801b482:	f1b8 0f00 	cmp.w	r8, #0
 801b486:	d035      	beq.n	801b4f4 <__kernel_rem_pio2f+0x490>
 801b488:	eef1 7a47 	vneg.f32	s15, s14
 801b48c:	edc6 7a00 	vstr	s15, [r6]
 801b490:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 801b494:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b498:	a82f      	add	r0, sp, #188	; 0xbc
 801b49a:	2101      	movs	r1, #1
 801b49c:	428b      	cmp	r3, r1
 801b49e:	da2c      	bge.n	801b4fa <__kernel_rem_pio2f+0x496>
 801b4a0:	f1b8 0f00 	cmp.w	r8, #0
 801b4a4:	d001      	beq.n	801b4aa <__kernel_rem_pio2f+0x446>
 801b4a6:	eef1 7a67 	vneg.f32	s15, s15
 801b4aa:	edc6 7a01 	vstr	s15, [r6, #4]
 801b4ae:	e00d      	b.n	801b4cc <__kernel_rem_pio2f+0x468>
 801b4b0:	aa56      	add	r2, sp, #344	; 0x158
 801b4b2:	4411      	add	r1, r2
 801b4b4:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 801b37c <__kernel_rem_pio2f+0x318>
 801b4b8:	399c      	subs	r1, #156	; 0x9c
 801b4ba:	2b00      	cmp	r3, #0
 801b4bc:	da0e      	bge.n	801b4dc <__kernel_rem_pio2f+0x478>
 801b4be:	f1b8 0f00 	cmp.w	r8, #0
 801b4c2:	d001      	beq.n	801b4c8 <__kernel_rem_pio2f+0x464>
 801b4c4:	eef1 7a67 	vneg.f32	s15, s15
 801b4c8:	edc6 7a00 	vstr	s15, [r6]
 801b4cc:	9b01      	ldr	r3, [sp, #4]
 801b4ce:	f003 0007 	and.w	r0, r3, #7
 801b4d2:	b057      	add	sp, #348	; 0x15c
 801b4d4:	ecbd 8b04 	vpop	{d8-d9}
 801b4d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b4dc:	ed31 7a01 	vldmdb	r1!, {s14}
 801b4e0:	3b01      	subs	r3, #1
 801b4e2:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b4e6:	e7e8      	b.n	801b4ba <__kernel_rem_pio2f+0x456>
 801b4e8:	ed71 7a01 	vldmdb	r1!, {s15}
 801b4ec:	3801      	subs	r0, #1
 801b4ee:	ee37 7a27 	vadd.f32	s14, s14, s15
 801b4f2:	e7c4      	b.n	801b47e <__kernel_rem_pio2f+0x41a>
 801b4f4:	eef0 7a47 	vmov.f32	s15, s14
 801b4f8:	e7c8      	b.n	801b48c <__kernel_rem_pio2f+0x428>
 801b4fa:	ecb0 7a01 	vldmia	r0!, {s14}
 801b4fe:	3101      	adds	r1, #1
 801b500:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b504:	e7ca      	b.n	801b49c <__kernel_rem_pio2f+0x438>
 801b506:	ed50 7a02 	vldr	s15, [r0, #-8]
 801b50a:	ed70 6a01 	vldmdb	r0!, {s13}
 801b50e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801b512:	3c01      	subs	r4, #1
 801b514:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b518:	ed00 7a01 	vstr	s14, [r0, #-4]
 801b51c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b520:	edc0 7a00 	vstr	s15, [r0]
 801b524:	e78d      	b.n	801b442 <__kernel_rem_pio2f+0x3de>
 801b526:	ed50 7a02 	vldr	s15, [r0, #-8]
 801b52a:	ed70 6a01 	vldmdb	r0!, {s13}
 801b52e:	ee37 7aa6 	vadd.f32	s14, s15, s13
 801b532:	3c01      	subs	r4, #1
 801b534:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801b538:	ed00 7a01 	vstr	s14, [r0, #-4]
 801b53c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801b540:	edc0 7a00 	vstr	s15, [r0]
 801b544:	e781      	b.n	801b44a <__kernel_rem_pio2f+0x3e6>
 801b546:	ed31 7a01 	vldmdb	r1!, {s14}
 801b54a:	3b01      	subs	r3, #1
 801b54c:	ee77 7a87 	vadd.f32	s15, s15, s14
 801b550:	e77f      	b.n	801b452 <__kernel_rem_pio2f+0x3ee>
 801b552:	eef1 6a66 	vneg.f32	s13, s13
 801b556:	eeb1 7a47 	vneg.f32	s14, s14
 801b55a:	edc6 6a00 	vstr	s13, [r6]
 801b55e:	ed86 7a01 	vstr	s14, [r6, #4]
 801b562:	eef1 7a67 	vneg.f32	s15, s15
 801b566:	e781      	b.n	801b46c <__kernel_rem_pio2f+0x408>

0801b568 <__kernel_sinf>:
 801b568:	ee10 3a10 	vmov	r3, s0
 801b56c:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801b570:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801b574:	da04      	bge.n	801b580 <__kernel_sinf+0x18>
 801b576:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 801b57a:	ee17 3a90 	vmov	r3, s15
 801b57e:	b35b      	cbz	r3, 801b5d8 <__kernel_sinf+0x70>
 801b580:	ee20 7a00 	vmul.f32	s14, s0, s0
 801b584:	eddf 7a15 	vldr	s15, [pc, #84]	; 801b5dc <__kernel_sinf+0x74>
 801b588:	ed9f 6a15 	vldr	s12, [pc, #84]	; 801b5e0 <__kernel_sinf+0x78>
 801b58c:	eea7 6a27 	vfma.f32	s12, s14, s15
 801b590:	eddf 7a14 	vldr	s15, [pc, #80]	; 801b5e4 <__kernel_sinf+0x7c>
 801b594:	eee6 7a07 	vfma.f32	s15, s12, s14
 801b598:	ed9f 6a13 	vldr	s12, [pc, #76]	; 801b5e8 <__kernel_sinf+0x80>
 801b59c:	eea7 6a87 	vfma.f32	s12, s15, s14
 801b5a0:	eddf 7a12 	vldr	s15, [pc, #72]	; 801b5ec <__kernel_sinf+0x84>
 801b5a4:	ee60 6a07 	vmul.f32	s13, s0, s14
 801b5a8:	eee6 7a07 	vfma.f32	s15, s12, s14
 801b5ac:	b930      	cbnz	r0, 801b5bc <__kernel_sinf+0x54>
 801b5ae:	ed9f 6a10 	vldr	s12, [pc, #64]	; 801b5f0 <__kernel_sinf+0x88>
 801b5b2:	eea7 6a27 	vfma.f32	s12, s14, s15
 801b5b6:	eea6 0a26 	vfma.f32	s0, s12, s13
 801b5ba:	4770      	bx	lr
 801b5bc:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 801b5c0:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 801b5c4:	eee0 7a86 	vfma.f32	s15, s1, s12
 801b5c8:	eed7 0a87 	vfnms.f32	s1, s15, s14
 801b5cc:	eddf 7a09 	vldr	s15, [pc, #36]	; 801b5f4 <__kernel_sinf+0x8c>
 801b5d0:	eee6 0aa7 	vfma.f32	s1, s13, s15
 801b5d4:	ee30 0a60 	vsub.f32	s0, s0, s1
 801b5d8:	4770      	bx	lr
 801b5da:	bf00      	nop
 801b5dc:	2f2ec9d3 	.word	0x2f2ec9d3
 801b5e0:	b2d72f34 	.word	0xb2d72f34
 801b5e4:	3638ef1b 	.word	0x3638ef1b
 801b5e8:	b9500d01 	.word	0xb9500d01
 801b5ec:	3c088889 	.word	0x3c088889
 801b5f0:	be2aaaab 	.word	0xbe2aaaab
 801b5f4:	3e2aaaab 	.word	0x3e2aaaab

0801b5f8 <fabsf>:
 801b5f8:	ee10 3a10 	vmov	r3, s0
 801b5fc:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801b600:	ee00 3a10 	vmov	s0, r3
 801b604:	4770      	bx	lr
	...

0801b608 <scalbnf>:
 801b608:	b508      	push	{r3, lr}
 801b60a:	ee10 2a10 	vmov	r2, s0
 801b60e:	f032 4300 	bics.w	r3, r2, #2147483648	; 0x80000000
 801b612:	ed2d 8b02 	vpush	{d8}
 801b616:	eef0 0a40 	vmov.f32	s1, s0
 801b61a:	d004      	beq.n	801b626 <scalbnf+0x1e>
 801b61c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801b620:	d306      	bcc.n	801b630 <scalbnf+0x28>
 801b622:	ee70 0a00 	vadd.f32	s1, s0, s0
 801b626:	ecbd 8b02 	vpop	{d8}
 801b62a:	eeb0 0a60 	vmov.f32	s0, s1
 801b62e:	bd08      	pop	{r3, pc}
 801b630:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 801b634:	d21c      	bcs.n	801b670 <scalbnf+0x68>
 801b636:	4b1f      	ldr	r3, [pc, #124]	; (801b6b4 <scalbnf+0xac>)
 801b638:	eddf 7a1f 	vldr	s15, [pc, #124]	; 801b6b8 <scalbnf+0xb0>
 801b63c:	4298      	cmp	r0, r3
 801b63e:	ee60 0a27 	vmul.f32	s1, s0, s15
 801b642:	db10      	blt.n	801b666 <scalbnf+0x5e>
 801b644:	ee10 2a90 	vmov	r2, s1
 801b648:	f3c2 53c7 	ubfx	r3, r2, #23, #8
 801b64c:	3b19      	subs	r3, #25
 801b64e:	4403      	add	r3, r0
 801b650:	2bfe      	cmp	r3, #254	; 0xfe
 801b652:	dd0f      	ble.n	801b674 <scalbnf+0x6c>
 801b654:	ed9f 8a19 	vldr	s16, [pc, #100]	; 801b6bc <scalbnf+0xb4>
 801b658:	eeb0 0a48 	vmov.f32	s0, s16
 801b65c:	f000 f834 	bl	801b6c8 <copysignf>
 801b660:	ee60 0a08 	vmul.f32	s1, s0, s16
 801b664:	e7df      	b.n	801b626 <scalbnf+0x1e>
 801b666:	eddf 7a16 	vldr	s15, [pc, #88]	; 801b6c0 <scalbnf+0xb8>
 801b66a:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801b66e:	e7da      	b.n	801b626 <scalbnf+0x1e>
 801b670:	0ddb      	lsrs	r3, r3, #23
 801b672:	e7ec      	b.n	801b64e <scalbnf+0x46>
 801b674:	2b00      	cmp	r3, #0
 801b676:	dd06      	ble.n	801b686 <scalbnf+0x7e>
 801b678:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 801b67c:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 801b680:	ee00 3a90 	vmov	s1, r3
 801b684:	e7cf      	b.n	801b626 <scalbnf+0x1e>
 801b686:	f113 0f16 	cmn.w	r3, #22
 801b68a:	da06      	bge.n	801b69a <scalbnf+0x92>
 801b68c:	f24c 3350 	movw	r3, #50000	; 0xc350
 801b690:	4298      	cmp	r0, r3
 801b692:	dcdf      	bgt.n	801b654 <scalbnf+0x4c>
 801b694:	ed9f 8a0a 	vldr	s16, [pc, #40]	; 801b6c0 <scalbnf+0xb8>
 801b698:	e7de      	b.n	801b658 <scalbnf+0x50>
 801b69a:	3319      	adds	r3, #25
 801b69c:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 801b6a0:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 801b6a4:	eddf 7a07 	vldr	s15, [pc, #28]	; 801b6c4 <scalbnf+0xbc>
 801b6a8:	ee07 3a10 	vmov	s14, r3
 801b6ac:	ee67 0a27 	vmul.f32	s1, s14, s15
 801b6b0:	e7b9      	b.n	801b626 <scalbnf+0x1e>
 801b6b2:	bf00      	nop
 801b6b4:	ffff3cb0 	.word	0xffff3cb0
 801b6b8:	4c000000 	.word	0x4c000000
 801b6bc:	7149f2ca 	.word	0x7149f2ca
 801b6c0:	0da24260 	.word	0x0da24260
 801b6c4:	33000000 	.word	0x33000000

0801b6c8 <copysignf>:
 801b6c8:	ee10 3a10 	vmov	r3, s0
 801b6cc:	ee10 2a90 	vmov	r2, s1
 801b6d0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801b6d4:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 801b6d8:	4313      	orrs	r3, r2
 801b6da:	ee00 3a10 	vmov	s0, r3
 801b6de:	4770      	bx	lr

0801b6e0 <abort>:
 801b6e0:	b508      	push	{r3, lr}
 801b6e2:	2006      	movs	r0, #6
 801b6e4:	f000 fc3e 	bl	801bf64 <raise>
 801b6e8:	2001      	movs	r0, #1
 801b6ea:	f7e5 fd8b 	bl	8001204 <_exit>
	...

0801b6f0 <__assert_func>:
 801b6f0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801b6f2:	461c      	mov	r4, r3
 801b6f4:	4b09      	ldr	r3, [pc, #36]	; (801b71c <__assert_func+0x2c>)
 801b6f6:	681b      	ldr	r3, [r3, #0]
 801b6f8:	4605      	mov	r5, r0
 801b6fa:	68d8      	ldr	r0, [r3, #12]
 801b6fc:	b152      	cbz	r2, 801b714 <__assert_func+0x24>
 801b6fe:	4b08      	ldr	r3, [pc, #32]	; (801b720 <__assert_func+0x30>)
 801b700:	9100      	str	r1, [sp, #0]
 801b702:	e9cd 3201 	strd	r3, r2, [sp, #4]
 801b706:	4907      	ldr	r1, [pc, #28]	; (801b724 <__assert_func+0x34>)
 801b708:	462b      	mov	r3, r5
 801b70a:	4622      	mov	r2, r4
 801b70c:	f000 f828 	bl	801b760 <fiprintf>
 801b710:	f7ff ffe6 	bl	801b6e0 <abort>
 801b714:	4b04      	ldr	r3, [pc, #16]	; (801b728 <__assert_func+0x38>)
 801b716:	461a      	mov	r2, r3
 801b718:	e7f2      	b.n	801b700 <__assert_func+0x10>
 801b71a:	bf00      	nop
 801b71c:	20000094 	.word	0x20000094
 801b720:	0801fef0 	.word	0x0801fef0
 801b724:	0801fefd 	.word	0x0801fefd
 801b728:	0801ff2b 	.word	0x0801ff2b

0801b72c <atexit>:
 801b72c:	2300      	movs	r3, #0
 801b72e:	4601      	mov	r1, r0
 801b730:	461a      	mov	r2, r3
 801b732:	4618      	mov	r0, r3
 801b734:	f000 bcf2 	b.w	801c11c <__register_exitproc>

0801b738 <__cxa_atexit>:
 801b738:	b510      	push	{r4, lr}
 801b73a:	4c05      	ldr	r4, [pc, #20]	; (801b750 <__cxa_atexit+0x18>)
 801b73c:	4613      	mov	r3, r2
 801b73e:	b12c      	cbz	r4, 801b74c <__cxa_atexit+0x14>
 801b740:	460a      	mov	r2, r1
 801b742:	4601      	mov	r1, r0
 801b744:	2002      	movs	r0, #2
 801b746:	f000 fce9 	bl	801c11c <__register_exitproc>
 801b74a:	bd10      	pop	{r4, pc}
 801b74c:	4620      	mov	r0, r4
 801b74e:	e7fc      	b.n	801b74a <__cxa_atexit+0x12>
 801b750:	0801c11d 	.word	0x0801c11d

0801b754 <__errno>:
 801b754:	4b01      	ldr	r3, [pc, #4]	; (801b75c <__errno+0x8>)
 801b756:	6818      	ldr	r0, [r3, #0]
 801b758:	4770      	bx	lr
 801b75a:	bf00      	nop
 801b75c:	20000094 	.word	0x20000094

0801b760 <fiprintf>:
 801b760:	b40e      	push	{r1, r2, r3}
 801b762:	b503      	push	{r0, r1, lr}
 801b764:	4601      	mov	r1, r0
 801b766:	ab03      	add	r3, sp, #12
 801b768:	4805      	ldr	r0, [pc, #20]	; (801b780 <fiprintf+0x20>)
 801b76a:	f853 2b04 	ldr.w	r2, [r3], #4
 801b76e:	6800      	ldr	r0, [r0, #0]
 801b770:	9301      	str	r3, [sp, #4]
 801b772:	f000 f921 	bl	801b9b8 <_vfiprintf_r>
 801b776:	b002      	add	sp, #8
 801b778:	f85d eb04 	ldr.w	lr, [sp], #4
 801b77c:	b003      	add	sp, #12
 801b77e:	4770      	bx	lr
 801b780:	20000094 	.word	0x20000094

0801b784 <__libc_init_array>:
 801b784:	b570      	push	{r4, r5, r6, lr}
 801b786:	4e0d      	ldr	r6, [pc, #52]	; (801b7bc <__libc_init_array+0x38>)
 801b788:	4c0d      	ldr	r4, [pc, #52]	; (801b7c0 <__libc_init_array+0x3c>)
 801b78a:	1ba4      	subs	r4, r4, r6
 801b78c:	10a4      	asrs	r4, r4, #2
 801b78e:	2500      	movs	r5, #0
 801b790:	42a5      	cmp	r5, r4
 801b792:	d109      	bne.n	801b7a8 <__libc_init_array+0x24>
 801b794:	4e0b      	ldr	r6, [pc, #44]	; (801b7c4 <__libc_init_array+0x40>)
 801b796:	4c0c      	ldr	r4, [pc, #48]	; (801b7c8 <__libc_init_array+0x44>)
 801b798:	f000 ffb0 	bl	801c6fc <_init>
 801b79c:	1ba4      	subs	r4, r4, r6
 801b79e:	10a4      	asrs	r4, r4, #2
 801b7a0:	2500      	movs	r5, #0
 801b7a2:	42a5      	cmp	r5, r4
 801b7a4:	d105      	bne.n	801b7b2 <__libc_init_array+0x2e>
 801b7a6:	bd70      	pop	{r4, r5, r6, pc}
 801b7a8:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b7ac:	4798      	blx	r3
 801b7ae:	3501      	adds	r5, #1
 801b7b0:	e7ee      	b.n	801b790 <__libc_init_array+0xc>
 801b7b2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801b7b6:	4798      	blx	r3
 801b7b8:	3501      	adds	r5, #1
 801b7ba:	e7f2      	b.n	801b7a2 <__libc_init_array+0x1e>
 801b7bc:	08059ffc 	.word	0x08059ffc
 801b7c0:	08059ffc 	.word	0x08059ffc
 801b7c4:	08059ffc 	.word	0x08059ffc
 801b7c8:	0805a010 	.word	0x0805a010

0801b7cc <malloc>:
 801b7cc:	4b02      	ldr	r3, [pc, #8]	; (801b7d8 <malloc+0xc>)
 801b7ce:	4601      	mov	r1, r0
 801b7d0:	6818      	ldr	r0, [r3, #0]
 801b7d2:	f000 b86d 	b.w	801b8b0 <_malloc_r>
 801b7d6:	bf00      	nop
 801b7d8:	20000094 	.word	0x20000094

0801b7dc <free>:
 801b7dc:	4b02      	ldr	r3, [pc, #8]	; (801b7e8 <free+0xc>)
 801b7de:	4601      	mov	r1, r0
 801b7e0:	6818      	ldr	r0, [r3, #0]
 801b7e2:	f000 b817 	b.w	801b814 <_free_r>
 801b7e6:	bf00      	nop
 801b7e8:	20000094 	.word	0x20000094

0801b7ec <memcpy>:
 801b7ec:	b510      	push	{r4, lr}
 801b7ee:	1e43      	subs	r3, r0, #1
 801b7f0:	440a      	add	r2, r1
 801b7f2:	4291      	cmp	r1, r2
 801b7f4:	d100      	bne.n	801b7f8 <memcpy+0xc>
 801b7f6:	bd10      	pop	{r4, pc}
 801b7f8:	f811 4b01 	ldrb.w	r4, [r1], #1
 801b7fc:	f803 4f01 	strb.w	r4, [r3, #1]!
 801b800:	e7f7      	b.n	801b7f2 <memcpy+0x6>

0801b802 <memset>:
 801b802:	4402      	add	r2, r0
 801b804:	4603      	mov	r3, r0
 801b806:	4293      	cmp	r3, r2
 801b808:	d100      	bne.n	801b80c <memset+0xa>
 801b80a:	4770      	bx	lr
 801b80c:	f803 1b01 	strb.w	r1, [r3], #1
 801b810:	e7f9      	b.n	801b806 <memset+0x4>
	...

0801b814 <_free_r>:
 801b814:	b538      	push	{r3, r4, r5, lr}
 801b816:	4605      	mov	r5, r0
 801b818:	2900      	cmp	r1, #0
 801b81a:	d045      	beq.n	801b8a8 <_free_r+0x94>
 801b81c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801b820:	1f0c      	subs	r4, r1, #4
 801b822:	2b00      	cmp	r3, #0
 801b824:	bfb8      	it	lt
 801b826:	18e4      	addlt	r4, r4, r3
 801b828:	f000 feba 	bl	801c5a0 <__malloc_lock>
 801b82c:	4a1f      	ldr	r2, [pc, #124]	; (801b8ac <_free_r+0x98>)
 801b82e:	6813      	ldr	r3, [r2, #0]
 801b830:	4610      	mov	r0, r2
 801b832:	b933      	cbnz	r3, 801b842 <_free_r+0x2e>
 801b834:	6063      	str	r3, [r4, #4]
 801b836:	6014      	str	r4, [r2, #0]
 801b838:	4628      	mov	r0, r5
 801b83a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801b83e:	f000 beb0 	b.w	801c5a2 <__malloc_unlock>
 801b842:	42a3      	cmp	r3, r4
 801b844:	d90c      	bls.n	801b860 <_free_r+0x4c>
 801b846:	6821      	ldr	r1, [r4, #0]
 801b848:	1862      	adds	r2, r4, r1
 801b84a:	4293      	cmp	r3, r2
 801b84c:	bf04      	itt	eq
 801b84e:	681a      	ldreq	r2, [r3, #0]
 801b850:	685b      	ldreq	r3, [r3, #4]
 801b852:	6063      	str	r3, [r4, #4]
 801b854:	bf04      	itt	eq
 801b856:	1852      	addeq	r2, r2, r1
 801b858:	6022      	streq	r2, [r4, #0]
 801b85a:	6004      	str	r4, [r0, #0]
 801b85c:	e7ec      	b.n	801b838 <_free_r+0x24>
 801b85e:	4613      	mov	r3, r2
 801b860:	685a      	ldr	r2, [r3, #4]
 801b862:	b10a      	cbz	r2, 801b868 <_free_r+0x54>
 801b864:	42a2      	cmp	r2, r4
 801b866:	d9fa      	bls.n	801b85e <_free_r+0x4a>
 801b868:	6819      	ldr	r1, [r3, #0]
 801b86a:	1858      	adds	r0, r3, r1
 801b86c:	42a0      	cmp	r0, r4
 801b86e:	d10b      	bne.n	801b888 <_free_r+0x74>
 801b870:	6820      	ldr	r0, [r4, #0]
 801b872:	4401      	add	r1, r0
 801b874:	1858      	adds	r0, r3, r1
 801b876:	4282      	cmp	r2, r0
 801b878:	6019      	str	r1, [r3, #0]
 801b87a:	d1dd      	bne.n	801b838 <_free_r+0x24>
 801b87c:	6810      	ldr	r0, [r2, #0]
 801b87e:	6852      	ldr	r2, [r2, #4]
 801b880:	605a      	str	r2, [r3, #4]
 801b882:	4401      	add	r1, r0
 801b884:	6019      	str	r1, [r3, #0]
 801b886:	e7d7      	b.n	801b838 <_free_r+0x24>
 801b888:	d902      	bls.n	801b890 <_free_r+0x7c>
 801b88a:	230c      	movs	r3, #12
 801b88c:	602b      	str	r3, [r5, #0]
 801b88e:	e7d3      	b.n	801b838 <_free_r+0x24>
 801b890:	6820      	ldr	r0, [r4, #0]
 801b892:	1821      	adds	r1, r4, r0
 801b894:	428a      	cmp	r2, r1
 801b896:	bf04      	itt	eq
 801b898:	6811      	ldreq	r1, [r2, #0]
 801b89a:	6852      	ldreq	r2, [r2, #4]
 801b89c:	6062      	str	r2, [r4, #4]
 801b89e:	bf04      	itt	eq
 801b8a0:	1809      	addeq	r1, r1, r0
 801b8a2:	6021      	streq	r1, [r4, #0]
 801b8a4:	605c      	str	r4, [r3, #4]
 801b8a6:	e7c7      	b.n	801b838 <_free_r+0x24>
 801b8a8:	bd38      	pop	{r3, r4, r5, pc}
 801b8aa:	bf00      	nop
 801b8ac:	20001558 	.word	0x20001558

0801b8b0 <_malloc_r>:
 801b8b0:	b570      	push	{r4, r5, r6, lr}
 801b8b2:	1ccd      	adds	r5, r1, #3
 801b8b4:	f025 0503 	bic.w	r5, r5, #3
 801b8b8:	3508      	adds	r5, #8
 801b8ba:	2d0c      	cmp	r5, #12
 801b8bc:	bf38      	it	cc
 801b8be:	250c      	movcc	r5, #12
 801b8c0:	2d00      	cmp	r5, #0
 801b8c2:	4606      	mov	r6, r0
 801b8c4:	db01      	blt.n	801b8ca <_malloc_r+0x1a>
 801b8c6:	42a9      	cmp	r1, r5
 801b8c8:	d903      	bls.n	801b8d2 <_malloc_r+0x22>
 801b8ca:	230c      	movs	r3, #12
 801b8cc:	6033      	str	r3, [r6, #0]
 801b8ce:	2000      	movs	r0, #0
 801b8d0:	bd70      	pop	{r4, r5, r6, pc}
 801b8d2:	f000 fe65 	bl	801c5a0 <__malloc_lock>
 801b8d6:	4a21      	ldr	r2, [pc, #132]	; (801b95c <_malloc_r+0xac>)
 801b8d8:	6814      	ldr	r4, [r2, #0]
 801b8da:	4621      	mov	r1, r4
 801b8dc:	b991      	cbnz	r1, 801b904 <_malloc_r+0x54>
 801b8de:	4c20      	ldr	r4, [pc, #128]	; (801b960 <_malloc_r+0xb0>)
 801b8e0:	6823      	ldr	r3, [r4, #0]
 801b8e2:	b91b      	cbnz	r3, 801b8ec <_malloc_r+0x3c>
 801b8e4:	4630      	mov	r0, r6
 801b8e6:	f000 fb05 	bl	801bef4 <_sbrk_r>
 801b8ea:	6020      	str	r0, [r4, #0]
 801b8ec:	4629      	mov	r1, r5
 801b8ee:	4630      	mov	r0, r6
 801b8f0:	f000 fb00 	bl	801bef4 <_sbrk_r>
 801b8f4:	1c43      	adds	r3, r0, #1
 801b8f6:	d124      	bne.n	801b942 <_malloc_r+0x92>
 801b8f8:	230c      	movs	r3, #12
 801b8fa:	6033      	str	r3, [r6, #0]
 801b8fc:	4630      	mov	r0, r6
 801b8fe:	f000 fe50 	bl	801c5a2 <__malloc_unlock>
 801b902:	e7e4      	b.n	801b8ce <_malloc_r+0x1e>
 801b904:	680b      	ldr	r3, [r1, #0]
 801b906:	1b5b      	subs	r3, r3, r5
 801b908:	d418      	bmi.n	801b93c <_malloc_r+0x8c>
 801b90a:	2b0b      	cmp	r3, #11
 801b90c:	d90f      	bls.n	801b92e <_malloc_r+0x7e>
 801b90e:	600b      	str	r3, [r1, #0]
 801b910:	50cd      	str	r5, [r1, r3]
 801b912:	18cc      	adds	r4, r1, r3
 801b914:	4630      	mov	r0, r6
 801b916:	f000 fe44 	bl	801c5a2 <__malloc_unlock>
 801b91a:	f104 000b 	add.w	r0, r4, #11
 801b91e:	1d23      	adds	r3, r4, #4
 801b920:	f020 0007 	bic.w	r0, r0, #7
 801b924:	1ac3      	subs	r3, r0, r3
 801b926:	d0d3      	beq.n	801b8d0 <_malloc_r+0x20>
 801b928:	425a      	negs	r2, r3
 801b92a:	50e2      	str	r2, [r4, r3]
 801b92c:	e7d0      	b.n	801b8d0 <_malloc_r+0x20>
 801b92e:	428c      	cmp	r4, r1
 801b930:	684b      	ldr	r3, [r1, #4]
 801b932:	bf16      	itet	ne
 801b934:	6063      	strne	r3, [r4, #4]
 801b936:	6013      	streq	r3, [r2, #0]
 801b938:	460c      	movne	r4, r1
 801b93a:	e7eb      	b.n	801b914 <_malloc_r+0x64>
 801b93c:	460c      	mov	r4, r1
 801b93e:	6849      	ldr	r1, [r1, #4]
 801b940:	e7cc      	b.n	801b8dc <_malloc_r+0x2c>
 801b942:	1cc4      	adds	r4, r0, #3
 801b944:	f024 0403 	bic.w	r4, r4, #3
 801b948:	42a0      	cmp	r0, r4
 801b94a:	d005      	beq.n	801b958 <_malloc_r+0xa8>
 801b94c:	1a21      	subs	r1, r4, r0
 801b94e:	4630      	mov	r0, r6
 801b950:	f000 fad0 	bl	801bef4 <_sbrk_r>
 801b954:	3001      	adds	r0, #1
 801b956:	d0cf      	beq.n	801b8f8 <_malloc_r+0x48>
 801b958:	6025      	str	r5, [r4, #0]
 801b95a:	e7db      	b.n	801b914 <_malloc_r+0x64>
 801b95c:	20001558 	.word	0x20001558
 801b960:	2000155c 	.word	0x2000155c

0801b964 <__sfputc_r>:
 801b964:	6893      	ldr	r3, [r2, #8]
 801b966:	3b01      	subs	r3, #1
 801b968:	2b00      	cmp	r3, #0
 801b96a:	b410      	push	{r4}
 801b96c:	6093      	str	r3, [r2, #8]
 801b96e:	da08      	bge.n	801b982 <__sfputc_r+0x1e>
 801b970:	6994      	ldr	r4, [r2, #24]
 801b972:	42a3      	cmp	r3, r4
 801b974:	db01      	blt.n	801b97a <__sfputc_r+0x16>
 801b976:	290a      	cmp	r1, #10
 801b978:	d103      	bne.n	801b982 <__sfputc_r+0x1e>
 801b97a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b97e:	f000 bb0d 	b.w	801bf9c <__swbuf_r>
 801b982:	6813      	ldr	r3, [r2, #0]
 801b984:	1c58      	adds	r0, r3, #1
 801b986:	6010      	str	r0, [r2, #0]
 801b988:	7019      	strb	r1, [r3, #0]
 801b98a:	4608      	mov	r0, r1
 801b98c:	f85d 4b04 	ldr.w	r4, [sp], #4
 801b990:	4770      	bx	lr

0801b992 <__sfputs_r>:
 801b992:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801b994:	4606      	mov	r6, r0
 801b996:	460f      	mov	r7, r1
 801b998:	4614      	mov	r4, r2
 801b99a:	18d5      	adds	r5, r2, r3
 801b99c:	42ac      	cmp	r4, r5
 801b99e:	d101      	bne.n	801b9a4 <__sfputs_r+0x12>
 801b9a0:	2000      	movs	r0, #0
 801b9a2:	e007      	b.n	801b9b4 <__sfputs_r+0x22>
 801b9a4:	463a      	mov	r2, r7
 801b9a6:	f814 1b01 	ldrb.w	r1, [r4], #1
 801b9aa:	4630      	mov	r0, r6
 801b9ac:	f7ff ffda 	bl	801b964 <__sfputc_r>
 801b9b0:	1c43      	adds	r3, r0, #1
 801b9b2:	d1f3      	bne.n	801b99c <__sfputs_r+0xa>
 801b9b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

0801b9b8 <_vfiprintf_r>:
 801b9b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9bc:	460c      	mov	r4, r1
 801b9be:	b09d      	sub	sp, #116	; 0x74
 801b9c0:	4617      	mov	r7, r2
 801b9c2:	461d      	mov	r5, r3
 801b9c4:	4606      	mov	r6, r0
 801b9c6:	b118      	cbz	r0, 801b9d0 <_vfiprintf_r+0x18>
 801b9c8:	6983      	ldr	r3, [r0, #24]
 801b9ca:	b90b      	cbnz	r3, 801b9d0 <_vfiprintf_r+0x18>
 801b9cc:	f000 fcfa 	bl	801c3c4 <__sinit>
 801b9d0:	4b7c      	ldr	r3, [pc, #496]	; (801bbc4 <_vfiprintf_r+0x20c>)
 801b9d2:	429c      	cmp	r4, r3
 801b9d4:	d158      	bne.n	801ba88 <_vfiprintf_r+0xd0>
 801b9d6:	6874      	ldr	r4, [r6, #4]
 801b9d8:	89a3      	ldrh	r3, [r4, #12]
 801b9da:	0718      	lsls	r0, r3, #28
 801b9dc:	d55e      	bpl.n	801ba9c <_vfiprintf_r+0xe4>
 801b9de:	6923      	ldr	r3, [r4, #16]
 801b9e0:	2b00      	cmp	r3, #0
 801b9e2:	d05b      	beq.n	801ba9c <_vfiprintf_r+0xe4>
 801b9e4:	2300      	movs	r3, #0
 801b9e6:	9309      	str	r3, [sp, #36]	; 0x24
 801b9e8:	2320      	movs	r3, #32
 801b9ea:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801b9ee:	2330      	movs	r3, #48	; 0x30
 801b9f0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801b9f4:	9503      	str	r5, [sp, #12]
 801b9f6:	f04f 0b01 	mov.w	fp, #1
 801b9fa:	46b8      	mov	r8, r7
 801b9fc:	4645      	mov	r5, r8
 801b9fe:	f815 3b01 	ldrb.w	r3, [r5], #1
 801ba02:	b10b      	cbz	r3, 801ba08 <_vfiprintf_r+0x50>
 801ba04:	2b25      	cmp	r3, #37	; 0x25
 801ba06:	d154      	bne.n	801bab2 <_vfiprintf_r+0xfa>
 801ba08:	ebb8 0a07 	subs.w	sl, r8, r7
 801ba0c:	d00b      	beq.n	801ba26 <_vfiprintf_r+0x6e>
 801ba0e:	4653      	mov	r3, sl
 801ba10:	463a      	mov	r2, r7
 801ba12:	4621      	mov	r1, r4
 801ba14:	4630      	mov	r0, r6
 801ba16:	f7ff ffbc 	bl	801b992 <__sfputs_r>
 801ba1a:	3001      	adds	r0, #1
 801ba1c:	f000 80c2 	beq.w	801bba4 <_vfiprintf_r+0x1ec>
 801ba20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ba22:	4453      	add	r3, sl
 801ba24:	9309      	str	r3, [sp, #36]	; 0x24
 801ba26:	f898 3000 	ldrb.w	r3, [r8]
 801ba2a:	2b00      	cmp	r3, #0
 801ba2c:	f000 80ba 	beq.w	801bba4 <_vfiprintf_r+0x1ec>
 801ba30:	2300      	movs	r3, #0
 801ba32:	f04f 32ff 	mov.w	r2, #4294967295
 801ba36:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801ba3a:	9304      	str	r3, [sp, #16]
 801ba3c:	9307      	str	r3, [sp, #28]
 801ba3e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801ba42:	931a      	str	r3, [sp, #104]	; 0x68
 801ba44:	46a8      	mov	r8, r5
 801ba46:	2205      	movs	r2, #5
 801ba48:	f818 1b01 	ldrb.w	r1, [r8], #1
 801ba4c:	485e      	ldr	r0, [pc, #376]	; (801bbc8 <_vfiprintf_r+0x210>)
 801ba4e:	f7e4 fbcf 	bl	80001f0 <memchr>
 801ba52:	9b04      	ldr	r3, [sp, #16]
 801ba54:	bb78      	cbnz	r0, 801bab6 <_vfiprintf_r+0xfe>
 801ba56:	06d9      	lsls	r1, r3, #27
 801ba58:	bf44      	itt	mi
 801ba5a:	2220      	movmi	r2, #32
 801ba5c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ba60:	071a      	lsls	r2, r3, #28
 801ba62:	bf44      	itt	mi
 801ba64:	222b      	movmi	r2, #43	; 0x2b
 801ba66:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801ba6a:	782a      	ldrb	r2, [r5, #0]
 801ba6c:	2a2a      	cmp	r2, #42	; 0x2a
 801ba6e:	d02a      	beq.n	801bac6 <_vfiprintf_r+0x10e>
 801ba70:	9a07      	ldr	r2, [sp, #28]
 801ba72:	46a8      	mov	r8, r5
 801ba74:	2000      	movs	r0, #0
 801ba76:	250a      	movs	r5, #10
 801ba78:	4641      	mov	r1, r8
 801ba7a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801ba7e:	3b30      	subs	r3, #48	; 0x30
 801ba80:	2b09      	cmp	r3, #9
 801ba82:	d969      	bls.n	801bb58 <_vfiprintf_r+0x1a0>
 801ba84:	b360      	cbz	r0, 801bae0 <_vfiprintf_r+0x128>
 801ba86:	e024      	b.n	801bad2 <_vfiprintf_r+0x11a>
 801ba88:	4b50      	ldr	r3, [pc, #320]	; (801bbcc <_vfiprintf_r+0x214>)
 801ba8a:	429c      	cmp	r4, r3
 801ba8c:	d101      	bne.n	801ba92 <_vfiprintf_r+0xda>
 801ba8e:	68b4      	ldr	r4, [r6, #8]
 801ba90:	e7a2      	b.n	801b9d8 <_vfiprintf_r+0x20>
 801ba92:	4b4f      	ldr	r3, [pc, #316]	; (801bbd0 <_vfiprintf_r+0x218>)
 801ba94:	429c      	cmp	r4, r3
 801ba96:	bf08      	it	eq
 801ba98:	68f4      	ldreq	r4, [r6, #12]
 801ba9a:	e79d      	b.n	801b9d8 <_vfiprintf_r+0x20>
 801ba9c:	4621      	mov	r1, r4
 801ba9e:	4630      	mov	r0, r6
 801baa0:	f000 face 	bl	801c040 <__swsetup_r>
 801baa4:	2800      	cmp	r0, #0
 801baa6:	d09d      	beq.n	801b9e4 <_vfiprintf_r+0x2c>
 801baa8:	f04f 30ff 	mov.w	r0, #4294967295
 801baac:	b01d      	add	sp, #116	; 0x74
 801baae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bab2:	46a8      	mov	r8, r5
 801bab4:	e7a2      	b.n	801b9fc <_vfiprintf_r+0x44>
 801bab6:	4a44      	ldr	r2, [pc, #272]	; (801bbc8 <_vfiprintf_r+0x210>)
 801bab8:	1a80      	subs	r0, r0, r2
 801baba:	fa0b f000 	lsl.w	r0, fp, r0
 801babe:	4318      	orrs	r0, r3
 801bac0:	9004      	str	r0, [sp, #16]
 801bac2:	4645      	mov	r5, r8
 801bac4:	e7be      	b.n	801ba44 <_vfiprintf_r+0x8c>
 801bac6:	9a03      	ldr	r2, [sp, #12]
 801bac8:	1d11      	adds	r1, r2, #4
 801baca:	6812      	ldr	r2, [r2, #0]
 801bacc:	9103      	str	r1, [sp, #12]
 801bace:	2a00      	cmp	r2, #0
 801bad0:	db01      	blt.n	801bad6 <_vfiprintf_r+0x11e>
 801bad2:	9207      	str	r2, [sp, #28]
 801bad4:	e004      	b.n	801bae0 <_vfiprintf_r+0x128>
 801bad6:	4252      	negs	r2, r2
 801bad8:	f043 0302 	orr.w	r3, r3, #2
 801badc:	9207      	str	r2, [sp, #28]
 801bade:	9304      	str	r3, [sp, #16]
 801bae0:	f898 3000 	ldrb.w	r3, [r8]
 801bae4:	2b2e      	cmp	r3, #46	; 0x2e
 801bae6:	d10e      	bne.n	801bb06 <_vfiprintf_r+0x14e>
 801bae8:	f898 3001 	ldrb.w	r3, [r8, #1]
 801baec:	2b2a      	cmp	r3, #42	; 0x2a
 801baee:	d138      	bne.n	801bb62 <_vfiprintf_r+0x1aa>
 801baf0:	9b03      	ldr	r3, [sp, #12]
 801baf2:	1d1a      	adds	r2, r3, #4
 801baf4:	681b      	ldr	r3, [r3, #0]
 801baf6:	9203      	str	r2, [sp, #12]
 801baf8:	2b00      	cmp	r3, #0
 801bafa:	bfb8      	it	lt
 801bafc:	f04f 33ff 	movlt.w	r3, #4294967295
 801bb00:	f108 0802 	add.w	r8, r8, #2
 801bb04:	9305      	str	r3, [sp, #20]
 801bb06:	4d33      	ldr	r5, [pc, #204]	; (801bbd4 <_vfiprintf_r+0x21c>)
 801bb08:	f898 1000 	ldrb.w	r1, [r8]
 801bb0c:	2203      	movs	r2, #3
 801bb0e:	4628      	mov	r0, r5
 801bb10:	f7e4 fb6e 	bl	80001f0 <memchr>
 801bb14:	b140      	cbz	r0, 801bb28 <_vfiprintf_r+0x170>
 801bb16:	2340      	movs	r3, #64	; 0x40
 801bb18:	1b40      	subs	r0, r0, r5
 801bb1a:	fa03 f000 	lsl.w	r0, r3, r0
 801bb1e:	9b04      	ldr	r3, [sp, #16]
 801bb20:	4303      	orrs	r3, r0
 801bb22:	f108 0801 	add.w	r8, r8, #1
 801bb26:	9304      	str	r3, [sp, #16]
 801bb28:	f898 1000 	ldrb.w	r1, [r8]
 801bb2c:	482a      	ldr	r0, [pc, #168]	; (801bbd8 <_vfiprintf_r+0x220>)
 801bb2e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801bb32:	2206      	movs	r2, #6
 801bb34:	f108 0701 	add.w	r7, r8, #1
 801bb38:	f7e4 fb5a 	bl	80001f0 <memchr>
 801bb3c:	2800      	cmp	r0, #0
 801bb3e:	d037      	beq.n	801bbb0 <_vfiprintf_r+0x1f8>
 801bb40:	4b26      	ldr	r3, [pc, #152]	; (801bbdc <_vfiprintf_r+0x224>)
 801bb42:	bb1b      	cbnz	r3, 801bb8c <_vfiprintf_r+0x1d4>
 801bb44:	9b03      	ldr	r3, [sp, #12]
 801bb46:	3307      	adds	r3, #7
 801bb48:	f023 0307 	bic.w	r3, r3, #7
 801bb4c:	3308      	adds	r3, #8
 801bb4e:	9303      	str	r3, [sp, #12]
 801bb50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb52:	444b      	add	r3, r9
 801bb54:	9309      	str	r3, [sp, #36]	; 0x24
 801bb56:	e750      	b.n	801b9fa <_vfiprintf_r+0x42>
 801bb58:	fb05 3202 	mla	r2, r5, r2, r3
 801bb5c:	2001      	movs	r0, #1
 801bb5e:	4688      	mov	r8, r1
 801bb60:	e78a      	b.n	801ba78 <_vfiprintf_r+0xc0>
 801bb62:	2300      	movs	r3, #0
 801bb64:	f108 0801 	add.w	r8, r8, #1
 801bb68:	9305      	str	r3, [sp, #20]
 801bb6a:	4619      	mov	r1, r3
 801bb6c:	250a      	movs	r5, #10
 801bb6e:	4640      	mov	r0, r8
 801bb70:	f810 2b01 	ldrb.w	r2, [r0], #1
 801bb74:	3a30      	subs	r2, #48	; 0x30
 801bb76:	2a09      	cmp	r2, #9
 801bb78:	d903      	bls.n	801bb82 <_vfiprintf_r+0x1ca>
 801bb7a:	2b00      	cmp	r3, #0
 801bb7c:	d0c3      	beq.n	801bb06 <_vfiprintf_r+0x14e>
 801bb7e:	9105      	str	r1, [sp, #20]
 801bb80:	e7c1      	b.n	801bb06 <_vfiprintf_r+0x14e>
 801bb82:	fb05 2101 	mla	r1, r5, r1, r2
 801bb86:	2301      	movs	r3, #1
 801bb88:	4680      	mov	r8, r0
 801bb8a:	e7f0      	b.n	801bb6e <_vfiprintf_r+0x1b6>
 801bb8c:	ab03      	add	r3, sp, #12
 801bb8e:	9300      	str	r3, [sp, #0]
 801bb90:	4622      	mov	r2, r4
 801bb92:	4b13      	ldr	r3, [pc, #76]	; (801bbe0 <_vfiprintf_r+0x228>)
 801bb94:	a904      	add	r1, sp, #16
 801bb96:	4630      	mov	r0, r6
 801bb98:	f3af 8000 	nop.w
 801bb9c:	f1b0 3fff 	cmp.w	r0, #4294967295
 801bba0:	4681      	mov	r9, r0
 801bba2:	d1d5      	bne.n	801bb50 <_vfiprintf_r+0x198>
 801bba4:	89a3      	ldrh	r3, [r4, #12]
 801bba6:	065b      	lsls	r3, r3, #25
 801bba8:	f53f af7e 	bmi.w	801baa8 <_vfiprintf_r+0xf0>
 801bbac:	9809      	ldr	r0, [sp, #36]	; 0x24
 801bbae:	e77d      	b.n	801baac <_vfiprintf_r+0xf4>
 801bbb0:	ab03      	add	r3, sp, #12
 801bbb2:	9300      	str	r3, [sp, #0]
 801bbb4:	4622      	mov	r2, r4
 801bbb6:	4b0a      	ldr	r3, [pc, #40]	; (801bbe0 <_vfiprintf_r+0x228>)
 801bbb8:	a904      	add	r1, sp, #16
 801bbba:	4630      	mov	r0, r6
 801bbbc:	f000 f888 	bl	801bcd0 <_printf_i>
 801bbc0:	e7ec      	b.n	801bb9c <_vfiprintf_r+0x1e4>
 801bbc2:	bf00      	nop
 801bbc4:	0801ff88 	.word	0x0801ff88
 801bbc8:	0801ff30 	.word	0x0801ff30
 801bbcc:	0801ffa8 	.word	0x0801ffa8
 801bbd0:	0801ff68 	.word	0x0801ff68
 801bbd4:	0801ff36 	.word	0x0801ff36
 801bbd8:	0801ff3a 	.word	0x0801ff3a
 801bbdc:	00000000 	.word	0x00000000
 801bbe0:	0801b993 	.word	0x0801b993

0801bbe4 <_printf_common>:
 801bbe4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801bbe8:	4691      	mov	r9, r2
 801bbea:	461f      	mov	r7, r3
 801bbec:	688a      	ldr	r2, [r1, #8]
 801bbee:	690b      	ldr	r3, [r1, #16]
 801bbf0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801bbf4:	4293      	cmp	r3, r2
 801bbf6:	bfb8      	it	lt
 801bbf8:	4613      	movlt	r3, r2
 801bbfa:	f8c9 3000 	str.w	r3, [r9]
 801bbfe:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801bc02:	4606      	mov	r6, r0
 801bc04:	460c      	mov	r4, r1
 801bc06:	b112      	cbz	r2, 801bc0e <_printf_common+0x2a>
 801bc08:	3301      	adds	r3, #1
 801bc0a:	f8c9 3000 	str.w	r3, [r9]
 801bc0e:	6823      	ldr	r3, [r4, #0]
 801bc10:	0699      	lsls	r1, r3, #26
 801bc12:	bf42      	ittt	mi
 801bc14:	f8d9 3000 	ldrmi.w	r3, [r9]
 801bc18:	3302      	addmi	r3, #2
 801bc1a:	f8c9 3000 	strmi.w	r3, [r9]
 801bc1e:	6825      	ldr	r5, [r4, #0]
 801bc20:	f015 0506 	ands.w	r5, r5, #6
 801bc24:	d107      	bne.n	801bc36 <_printf_common+0x52>
 801bc26:	f104 0a19 	add.w	sl, r4, #25
 801bc2a:	68e3      	ldr	r3, [r4, #12]
 801bc2c:	f8d9 2000 	ldr.w	r2, [r9]
 801bc30:	1a9b      	subs	r3, r3, r2
 801bc32:	42ab      	cmp	r3, r5
 801bc34:	dc28      	bgt.n	801bc88 <_printf_common+0xa4>
 801bc36:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801bc3a:	6822      	ldr	r2, [r4, #0]
 801bc3c:	3300      	adds	r3, #0
 801bc3e:	bf18      	it	ne
 801bc40:	2301      	movne	r3, #1
 801bc42:	0692      	lsls	r2, r2, #26
 801bc44:	d42d      	bmi.n	801bca2 <_printf_common+0xbe>
 801bc46:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801bc4a:	4639      	mov	r1, r7
 801bc4c:	4630      	mov	r0, r6
 801bc4e:	47c0      	blx	r8
 801bc50:	3001      	adds	r0, #1
 801bc52:	d020      	beq.n	801bc96 <_printf_common+0xb2>
 801bc54:	6823      	ldr	r3, [r4, #0]
 801bc56:	68e5      	ldr	r5, [r4, #12]
 801bc58:	f8d9 2000 	ldr.w	r2, [r9]
 801bc5c:	f003 0306 	and.w	r3, r3, #6
 801bc60:	2b04      	cmp	r3, #4
 801bc62:	bf08      	it	eq
 801bc64:	1aad      	subeq	r5, r5, r2
 801bc66:	68a3      	ldr	r3, [r4, #8]
 801bc68:	6922      	ldr	r2, [r4, #16]
 801bc6a:	bf0c      	ite	eq
 801bc6c:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801bc70:	2500      	movne	r5, #0
 801bc72:	4293      	cmp	r3, r2
 801bc74:	bfc4      	itt	gt
 801bc76:	1a9b      	subgt	r3, r3, r2
 801bc78:	18ed      	addgt	r5, r5, r3
 801bc7a:	f04f 0900 	mov.w	r9, #0
 801bc7e:	341a      	adds	r4, #26
 801bc80:	454d      	cmp	r5, r9
 801bc82:	d11a      	bne.n	801bcba <_printf_common+0xd6>
 801bc84:	2000      	movs	r0, #0
 801bc86:	e008      	b.n	801bc9a <_printf_common+0xb6>
 801bc88:	2301      	movs	r3, #1
 801bc8a:	4652      	mov	r2, sl
 801bc8c:	4639      	mov	r1, r7
 801bc8e:	4630      	mov	r0, r6
 801bc90:	47c0      	blx	r8
 801bc92:	3001      	adds	r0, #1
 801bc94:	d103      	bne.n	801bc9e <_printf_common+0xba>
 801bc96:	f04f 30ff 	mov.w	r0, #4294967295
 801bc9a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801bc9e:	3501      	adds	r5, #1
 801bca0:	e7c3      	b.n	801bc2a <_printf_common+0x46>
 801bca2:	18e1      	adds	r1, r4, r3
 801bca4:	1c5a      	adds	r2, r3, #1
 801bca6:	2030      	movs	r0, #48	; 0x30
 801bca8:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801bcac:	4422      	add	r2, r4
 801bcae:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801bcb2:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801bcb6:	3302      	adds	r3, #2
 801bcb8:	e7c5      	b.n	801bc46 <_printf_common+0x62>
 801bcba:	2301      	movs	r3, #1
 801bcbc:	4622      	mov	r2, r4
 801bcbe:	4639      	mov	r1, r7
 801bcc0:	4630      	mov	r0, r6
 801bcc2:	47c0      	blx	r8
 801bcc4:	3001      	adds	r0, #1
 801bcc6:	d0e6      	beq.n	801bc96 <_printf_common+0xb2>
 801bcc8:	f109 0901 	add.w	r9, r9, #1
 801bccc:	e7d8      	b.n	801bc80 <_printf_common+0x9c>
	...

0801bcd0 <_printf_i>:
 801bcd0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801bcd4:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801bcd8:	460c      	mov	r4, r1
 801bcda:	7e09      	ldrb	r1, [r1, #24]
 801bcdc:	b085      	sub	sp, #20
 801bcde:	296e      	cmp	r1, #110	; 0x6e
 801bce0:	4617      	mov	r7, r2
 801bce2:	4606      	mov	r6, r0
 801bce4:	4698      	mov	r8, r3
 801bce6:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bce8:	f000 80b3 	beq.w	801be52 <_printf_i+0x182>
 801bcec:	d822      	bhi.n	801bd34 <_printf_i+0x64>
 801bcee:	2963      	cmp	r1, #99	; 0x63
 801bcf0:	d036      	beq.n	801bd60 <_printf_i+0x90>
 801bcf2:	d80a      	bhi.n	801bd0a <_printf_i+0x3a>
 801bcf4:	2900      	cmp	r1, #0
 801bcf6:	f000 80b9 	beq.w	801be6c <_printf_i+0x19c>
 801bcfa:	2958      	cmp	r1, #88	; 0x58
 801bcfc:	f000 8083 	beq.w	801be06 <_printf_i+0x136>
 801bd00:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bd04:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801bd08:	e032      	b.n	801bd70 <_printf_i+0xa0>
 801bd0a:	2964      	cmp	r1, #100	; 0x64
 801bd0c:	d001      	beq.n	801bd12 <_printf_i+0x42>
 801bd0e:	2969      	cmp	r1, #105	; 0x69
 801bd10:	d1f6      	bne.n	801bd00 <_printf_i+0x30>
 801bd12:	6820      	ldr	r0, [r4, #0]
 801bd14:	6813      	ldr	r3, [r2, #0]
 801bd16:	0605      	lsls	r5, r0, #24
 801bd18:	f103 0104 	add.w	r1, r3, #4
 801bd1c:	d52a      	bpl.n	801bd74 <_printf_i+0xa4>
 801bd1e:	681b      	ldr	r3, [r3, #0]
 801bd20:	6011      	str	r1, [r2, #0]
 801bd22:	2b00      	cmp	r3, #0
 801bd24:	da03      	bge.n	801bd2e <_printf_i+0x5e>
 801bd26:	222d      	movs	r2, #45	; 0x2d
 801bd28:	425b      	negs	r3, r3
 801bd2a:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801bd2e:	486f      	ldr	r0, [pc, #444]	; (801beec <_printf_i+0x21c>)
 801bd30:	220a      	movs	r2, #10
 801bd32:	e039      	b.n	801bda8 <_printf_i+0xd8>
 801bd34:	2973      	cmp	r1, #115	; 0x73
 801bd36:	f000 809d 	beq.w	801be74 <_printf_i+0x1a4>
 801bd3a:	d808      	bhi.n	801bd4e <_printf_i+0x7e>
 801bd3c:	296f      	cmp	r1, #111	; 0x6f
 801bd3e:	d020      	beq.n	801bd82 <_printf_i+0xb2>
 801bd40:	2970      	cmp	r1, #112	; 0x70
 801bd42:	d1dd      	bne.n	801bd00 <_printf_i+0x30>
 801bd44:	6823      	ldr	r3, [r4, #0]
 801bd46:	f043 0320 	orr.w	r3, r3, #32
 801bd4a:	6023      	str	r3, [r4, #0]
 801bd4c:	e003      	b.n	801bd56 <_printf_i+0x86>
 801bd4e:	2975      	cmp	r1, #117	; 0x75
 801bd50:	d017      	beq.n	801bd82 <_printf_i+0xb2>
 801bd52:	2978      	cmp	r1, #120	; 0x78
 801bd54:	d1d4      	bne.n	801bd00 <_printf_i+0x30>
 801bd56:	2378      	movs	r3, #120	; 0x78
 801bd58:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801bd5c:	4864      	ldr	r0, [pc, #400]	; (801bef0 <_printf_i+0x220>)
 801bd5e:	e055      	b.n	801be0c <_printf_i+0x13c>
 801bd60:	6813      	ldr	r3, [r2, #0]
 801bd62:	1d19      	adds	r1, r3, #4
 801bd64:	681b      	ldr	r3, [r3, #0]
 801bd66:	6011      	str	r1, [r2, #0]
 801bd68:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801bd6c:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bd70:	2301      	movs	r3, #1
 801bd72:	e08c      	b.n	801be8e <_printf_i+0x1be>
 801bd74:	681b      	ldr	r3, [r3, #0]
 801bd76:	6011      	str	r1, [r2, #0]
 801bd78:	f010 0f40 	tst.w	r0, #64	; 0x40
 801bd7c:	bf18      	it	ne
 801bd7e:	b21b      	sxthne	r3, r3
 801bd80:	e7cf      	b.n	801bd22 <_printf_i+0x52>
 801bd82:	6813      	ldr	r3, [r2, #0]
 801bd84:	6825      	ldr	r5, [r4, #0]
 801bd86:	1d18      	adds	r0, r3, #4
 801bd88:	6010      	str	r0, [r2, #0]
 801bd8a:	0628      	lsls	r0, r5, #24
 801bd8c:	d501      	bpl.n	801bd92 <_printf_i+0xc2>
 801bd8e:	681b      	ldr	r3, [r3, #0]
 801bd90:	e002      	b.n	801bd98 <_printf_i+0xc8>
 801bd92:	0668      	lsls	r0, r5, #25
 801bd94:	d5fb      	bpl.n	801bd8e <_printf_i+0xbe>
 801bd96:	881b      	ldrh	r3, [r3, #0]
 801bd98:	4854      	ldr	r0, [pc, #336]	; (801beec <_printf_i+0x21c>)
 801bd9a:	296f      	cmp	r1, #111	; 0x6f
 801bd9c:	bf14      	ite	ne
 801bd9e:	220a      	movne	r2, #10
 801bda0:	2208      	moveq	r2, #8
 801bda2:	2100      	movs	r1, #0
 801bda4:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801bda8:	6865      	ldr	r5, [r4, #4]
 801bdaa:	60a5      	str	r5, [r4, #8]
 801bdac:	2d00      	cmp	r5, #0
 801bdae:	f2c0 8095 	blt.w	801bedc <_printf_i+0x20c>
 801bdb2:	6821      	ldr	r1, [r4, #0]
 801bdb4:	f021 0104 	bic.w	r1, r1, #4
 801bdb8:	6021      	str	r1, [r4, #0]
 801bdba:	2b00      	cmp	r3, #0
 801bdbc:	d13d      	bne.n	801be3a <_printf_i+0x16a>
 801bdbe:	2d00      	cmp	r5, #0
 801bdc0:	f040 808e 	bne.w	801bee0 <_printf_i+0x210>
 801bdc4:	4665      	mov	r5, ip
 801bdc6:	2a08      	cmp	r2, #8
 801bdc8:	d10b      	bne.n	801bde2 <_printf_i+0x112>
 801bdca:	6823      	ldr	r3, [r4, #0]
 801bdcc:	07db      	lsls	r3, r3, #31
 801bdce:	d508      	bpl.n	801bde2 <_printf_i+0x112>
 801bdd0:	6923      	ldr	r3, [r4, #16]
 801bdd2:	6862      	ldr	r2, [r4, #4]
 801bdd4:	429a      	cmp	r2, r3
 801bdd6:	bfde      	ittt	le
 801bdd8:	2330      	movle	r3, #48	; 0x30
 801bdda:	f805 3c01 	strble.w	r3, [r5, #-1]
 801bdde:	f105 35ff 	addle.w	r5, r5, #4294967295
 801bde2:	ebac 0305 	sub.w	r3, ip, r5
 801bde6:	6123      	str	r3, [r4, #16]
 801bde8:	f8cd 8000 	str.w	r8, [sp]
 801bdec:	463b      	mov	r3, r7
 801bdee:	aa03      	add	r2, sp, #12
 801bdf0:	4621      	mov	r1, r4
 801bdf2:	4630      	mov	r0, r6
 801bdf4:	f7ff fef6 	bl	801bbe4 <_printf_common>
 801bdf8:	3001      	adds	r0, #1
 801bdfa:	d14d      	bne.n	801be98 <_printf_i+0x1c8>
 801bdfc:	f04f 30ff 	mov.w	r0, #4294967295
 801be00:	b005      	add	sp, #20
 801be02:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801be06:	4839      	ldr	r0, [pc, #228]	; (801beec <_printf_i+0x21c>)
 801be08:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801be0c:	6813      	ldr	r3, [r2, #0]
 801be0e:	6821      	ldr	r1, [r4, #0]
 801be10:	1d1d      	adds	r5, r3, #4
 801be12:	681b      	ldr	r3, [r3, #0]
 801be14:	6015      	str	r5, [r2, #0]
 801be16:	060a      	lsls	r2, r1, #24
 801be18:	d50b      	bpl.n	801be32 <_printf_i+0x162>
 801be1a:	07ca      	lsls	r2, r1, #31
 801be1c:	bf44      	itt	mi
 801be1e:	f041 0120 	orrmi.w	r1, r1, #32
 801be22:	6021      	strmi	r1, [r4, #0]
 801be24:	b91b      	cbnz	r3, 801be2e <_printf_i+0x15e>
 801be26:	6822      	ldr	r2, [r4, #0]
 801be28:	f022 0220 	bic.w	r2, r2, #32
 801be2c:	6022      	str	r2, [r4, #0]
 801be2e:	2210      	movs	r2, #16
 801be30:	e7b7      	b.n	801bda2 <_printf_i+0xd2>
 801be32:	064d      	lsls	r5, r1, #25
 801be34:	bf48      	it	mi
 801be36:	b29b      	uxthmi	r3, r3
 801be38:	e7ef      	b.n	801be1a <_printf_i+0x14a>
 801be3a:	4665      	mov	r5, ip
 801be3c:	fbb3 f1f2 	udiv	r1, r3, r2
 801be40:	fb02 3311 	mls	r3, r2, r1, r3
 801be44:	5cc3      	ldrb	r3, [r0, r3]
 801be46:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801be4a:	460b      	mov	r3, r1
 801be4c:	2900      	cmp	r1, #0
 801be4e:	d1f5      	bne.n	801be3c <_printf_i+0x16c>
 801be50:	e7b9      	b.n	801bdc6 <_printf_i+0xf6>
 801be52:	6813      	ldr	r3, [r2, #0]
 801be54:	6825      	ldr	r5, [r4, #0]
 801be56:	6961      	ldr	r1, [r4, #20]
 801be58:	1d18      	adds	r0, r3, #4
 801be5a:	6010      	str	r0, [r2, #0]
 801be5c:	0628      	lsls	r0, r5, #24
 801be5e:	681b      	ldr	r3, [r3, #0]
 801be60:	d501      	bpl.n	801be66 <_printf_i+0x196>
 801be62:	6019      	str	r1, [r3, #0]
 801be64:	e002      	b.n	801be6c <_printf_i+0x19c>
 801be66:	066a      	lsls	r2, r5, #25
 801be68:	d5fb      	bpl.n	801be62 <_printf_i+0x192>
 801be6a:	8019      	strh	r1, [r3, #0]
 801be6c:	2300      	movs	r3, #0
 801be6e:	6123      	str	r3, [r4, #16]
 801be70:	4665      	mov	r5, ip
 801be72:	e7b9      	b.n	801bde8 <_printf_i+0x118>
 801be74:	6813      	ldr	r3, [r2, #0]
 801be76:	1d19      	adds	r1, r3, #4
 801be78:	6011      	str	r1, [r2, #0]
 801be7a:	681d      	ldr	r5, [r3, #0]
 801be7c:	6862      	ldr	r2, [r4, #4]
 801be7e:	2100      	movs	r1, #0
 801be80:	4628      	mov	r0, r5
 801be82:	f7e4 f9b5 	bl	80001f0 <memchr>
 801be86:	b108      	cbz	r0, 801be8c <_printf_i+0x1bc>
 801be88:	1b40      	subs	r0, r0, r5
 801be8a:	6060      	str	r0, [r4, #4]
 801be8c:	6863      	ldr	r3, [r4, #4]
 801be8e:	6123      	str	r3, [r4, #16]
 801be90:	2300      	movs	r3, #0
 801be92:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801be96:	e7a7      	b.n	801bde8 <_printf_i+0x118>
 801be98:	6923      	ldr	r3, [r4, #16]
 801be9a:	462a      	mov	r2, r5
 801be9c:	4639      	mov	r1, r7
 801be9e:	4630      	mov	r0, r6
 801bea0:	47c0      	blx	r8
 801bea2:	3001      	adds	r0, #1
 801bea4:	d0aa      	beq.n	801bdfc <_printf_i+0x12c>
 801bea6:	6823      	ldr	r3, [r4, #0]
 801bea8:	079b      	lsls	r3, r3, #30
 801beaa:	d413      	bmi.n	801bed4 <_printf_i+0x204>
 801beac:	68e0      	ldr	r0, [r4, #12]
 801beae:	9b03      	ldr	r3, [sp, #12]
 801beb0:	4298      	cmp	r0, r3
 801beb2:	bfb8      	it	lt
 801beb4:	4618      	movlt	r0, r3
 801beb6:	e7a3      	b.n	801be00 <_printf_i+0x130>
 801beb8:	2301      	movs	r3, #1
 801beba:	464a      	mov	r2, r9
 801bebc:	4639      	mov	r1, r7
 801bebe:	4630      	mov	r0, r6
 801bec0:	47c0      	blx	r8
 801bec2:	3001      	adds	r0, #1
 801bec4:	d09a      	beq.n	801bdfc <_printf_i+0x12c>
 801bec6:	3501      	adds	r5, #1
 801bec8:	68e3      	ldr	r3, [r4, #12]
 801beca:	9a03      	ldr	r2, [sp, #12]
 801becc:	1a9b      	subs	r3, r3, r2
 801bece:	42ab      	cmp	r3, r5
 801bed0:	dcf2      	bgt.n	801beb8 <_printf_i+0x1e8>
 801bed2:	e7eb      	b.n	801beac <_printf_i+0x1dc>
 801bed4:	2500      	movs	r5, #0
 801bed6:	f104 0919 	add.w	r9, r4, #25
 801beda:	e7f5      	b.n	801bec8 <_printf_i+0x1f8>
 801bedc:	2b00      	cmp	r3, #0
 801bede:	d1ac      	bne.n	801be3a <_printf_i+0x16a>
 801bee0:	7803      	ldrb	r3, [r0, #0]
 801bee2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801bee6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801beea:	e76c      	b.n	801bdc6 <_printf_i+0xf6>
 801beec:	0801ff41 	.word	0x0801ff41
 801bef0:	0801ff52 	.word	0x0801ff52

0801bef4 <_sbrk_r>:
 801bef4:	b538      	push	{r3, r4, r5, lr}
 801bef6:	4c06      	ldr	r4, [pc, #24]	; (801bf10 <_sbrk_r+0x1c>)
 801bef8:	2300      	movs	r3, #0
 801befa:	4605      	mov	r5, r0
 801befc:	4608      	mov	r0, r1
 801befe:	6023      	str	r3, [r4, #0]
 801bf00:	f7e5 f9f8 	bl	80012f4 <_sbrk>
 801bf04:	1c43      	adds	r3, r0, #1
 801bf06:	d102      	bne.n	801bf0e <_sbrk_r+0x1a>
 801bf08:	6823      	ldr	r3, [r4, #0]
 801bf0a:	b103      	cbz	r3, 801bf0e <_sbrk_r+0x1a>
 801bf0c:	602b      	str	r3, [r5, #0]
 801bf0e:	bd38      	pop	{r3, r4, r5, pc}
 801bf10:	20001d50 	.word	0x20001d50

0801bf14 <_raise_r>:
 801bf14:	291f      	cmp	r1, #31
 801bf16:	b538      	push	{r3, r4, r5, lr}
 801bf18:	4604      	mov	r4, r0
 801bf1a:	460d      	mov	r5, r1
 801bf1c:	d904      	bls.n	801bf28 <_raise_r+0x14>
 801bf1e:	2316      	movs	r3, #22
 801bf20:	6003      	str	r3, [r0, #0]
 801bf22:	f04f 30ff 	mov.w	r0, #4294967295
 801bf26:	bd38      	pop	{r3, r4, r5, pc}
 801bf28:	6c42      	ldr	r2, [r0, #68]	; 0x44
 801bf2a:	b112      	cbz	r2, 801bf32 <_raise_r+0x1e>
 801bf2c:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 801bf30:	b94b      	cbnz	r3, 801bf46 <_raise_r+0x32>
 801bf32:	4620      	mov	r0, r4
 801bf34:	f000 f830 	bl	801bf98 <_getpid_r>
 801bf38:	462a      	mov	r2, r5
 801bf3a:	4601      	mov	r1, r0
 801bf3c:	4620      	mov	r0, r4
 801bf3e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801bf42:	f000 b817 	b.w	801bf74 <_kill_r>
 801bf46:	2b01      	cmp	r3, #1
 801bf48:	d00a      	beq.n	801bf60 <_raise_r+0x4c>
 801bf4a:	1c59      	adds	r1, r3, #1
 801bf4c:	d103      	bne.n	801bf56 <_raise_r+0x42>
 801bf4e:	2316      	movs	r3, #22
 801bf50:	6003      	str	r3, [r0, #0]
 801bf52:	2001      	movs	r0, #1
 801bf54:	e7e7      	b.n	801bf26 <_raise_r+0x12>
 801bf56:	2400      	movs	r4, #0
 801bf58:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 801bf5c:	4628      	mov	r0, r5
 801bf5e:	4798      	blx	r3
 801bf60:	2000      	movs	r0, #0
 801bf62:	e7e0      	b.n	801bf26 <_raise_r+0x12>

0801bf64 <raise>:
 801bf64:	4b02      	ldr	r3, [pc, #8]	; (801bf70 <raise+0xc>)
 801bf66:	4601      	mov	r1, r0
 801bf68:	6818      	ldr	r0, [r3, #0]
 801bf6a:	f7ff bfd3 	b.w	801bf14 <_raise_r>
 801bf6e:	bf00      	nop
 801bf70:	20000094 	.word	0x20000094

0801bf74 <_kill_r>:
 801bf74:	b538      	push	{r3, r4, r5, lr}
 801bf76:	4c07      	ldr	r4, [pc, #28]	; (801bf94 <_kill_r+0x20>)
 801bf78:	2300      	movs	r3, #0
 801bf7a:	4605      	mov	r5, r0
 801bf7c:	4608      	mov	r0, r1
 801bf7e:	4611      	mov	r1, r2
 801bf80:	6023      	str	r3, [r4, #0]
 801bf82:	f7e5 f92f 	bl	80011e4 <_kill>
 801bf86:	1c43      	adds	r3, r0, #1
 801bf88:	d102      	bne.n	801bf90 <_kill_r+0x1c>
 801bf8a:	6823      	ldr	r3, [r4, #0]
 801bf8c:	b103      	cbz	r3, 801bf90 <_kill_r+0x1c>
 801bf8e:	602b      	str	r3, [r5, #0]
 801bf90:	bd38      	pop	{r3, r4, r5, pc}
 801bf92:	bf00      	nop
 801bf94:	20001d50 	.word	0x20001d50

0801bf98 <_getpid_r>:
 801bf98:	f7e5 b91c 	b.w	80011d4 <_getpid>

0801bf9c <__swbuf_r>:
 801bf9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801bf9e:	460e      	mov	r6, r1
 801bfa0:	4614      	mov	r4, r2
 801bfa2:	4605      	mov	r5, r0
 801bfa4:	b118      	cbz	r0, 801bfae <__swbuf_r+0x12>
 801bfa6:	6983      	ldr	r3, [r0, #24]
 801bfa8:	b90b      	cbnz	r3, 801bfae <__swbuf_r+0x12>
 801bfaa:	f000 fa0b 	bl	801c3c4 <__sinit>
 801bfae:	4b21      	ldr	r3, [pc, #132]	; (801c034 <__swbuf_r+0x98>)
 801bfb0:	429c      	cmp	r4, r3
 801bfb2:	d12a      	bne.n	801c00a <__swbuf_r+0x6e>
 801bfb4:	686c      	ldr	r4, [r5, #4]
 801bfb6:	69a3      	ldr	r3, [r4, #24]
 801bfb8:	60a3      	str	r3, [r4, #8]
 801bfba:	89a3      	ldrh	r3, [r4, #12]
 801bfbc:	071a      	lsls	r2, r3, #28
 801bfbe:	d52e      	bpl.n	801c01e <__swbuf_r+0x82>
 801bfc0:	6923      	ldr	r3, [r4, #16]
 801bfc2:	b363      	cbz	r3, 801c01e <__swbuf_r+0x82>
 801bfc4:	6923      	ldr	r3, [r4, #16]
 801bfc6:	6820      	ldr	r0, [r4, #0]
 801bfc8:	1ac0      	subs	r0, r0, r3
 801bfca:	6963      	ldr	r3, [r4, #20]
 801bfcc:	b2f6      	uxtb	r6, r6
 801bfce:	4283      	cmp	r3, r0
 801bfd0:	4637      	mov	r7, r6
 801bfd2:	dc04      	bgt.n	801bfde <__swbuf_r+0x42>
 801bfd4:	4621      	mov	r1, r4
 801bfd6:	4628      	mov	r0, r5
 801bfd8:	f000 f98a 	bl	801c2f0 <_fflush_r>
 801bfdc:	bb28      	cbnz	r0, 801c02a <__swbuf_r+0x8e>
 801bfde:	68a3      	ldr	r3, [r4, #8]
 801bfe0:	3b01      	subs	r3, #1
 801bfe2:	60a3      	str	r3, [r4, #8]
 801bfe4:	6823      	ldr	r3, [r4, #0]
 801bfe6:	1c5a      	adds	r2, r3, #1
 801bfe8:	6022      	str	r2, [r4, #0]
 801bfea:	701e      	strb	r6, [r3, #0]
 801bfec:	6963      	ldr	r3, [r4, #20]
 801bfee:	3001      	adds	r0, #1
 801bff0:	4283      	cmp	r3, r0
 801bff2:	d004      	beq.n	801bffe <__swbuf_r+0x62>
 801bff4:	89a3      	ldrh	r3, [r4, #12]
 801bff6:	07db      	lsls	r3, r3, #31
 801bff8:	d519      	bpl.n	801c02e <__swbuf_r+0x92>
 801bffa:	2e0a      	cmp	r6, #10
 801bffc:	d117      	bne.n	801c02e <__swbuf_r+0x92>
 801bffe:	4621      	mov	r1, r4
 801c000:	4628      	mov	r0, r5
 801c002:	f000 f975 	bl	801c2f0 <_fflush_r>
 801c006:	b190      	cbz	r0, 801c02e <__swbuf_r+0x92>
 801c008:	e00f      	b.n	801c02a <__swbuf_r+0x8e>
 801c00a:	4b0b      	ldr	r3, [pc, #44]	; (801c038 <__swbuf_r+0x9c>)
 801c00c:	429c      	cmp	r4, r3
 801c00e:	d101      	bne.n	801c014 <__swbuf_r+0x78>
 801c010:	68ac      	ldr	r4, [r5, #8]
 801c012:	e7d0      	b.n	801bfb6 <__swbuf_r+0x1a>
 801c014:	4b09      	ldr	r3, [pc, #36]	; (801c03c <__swbuf_r+0xa0>)
 801c016:	429c      	cmp	r4, r3
 801c018:	bf08      	it	eq
 801c01a:	68ec      	ldreq	r4, [r5, #12]
 801c01c:	e7cb      	b.n	801bfb6 <__swbuf_r+0x1a>
 801c01e:	4621      	mov	r1, r4
 801c020:	4628      	mov	r0, r5
 801c022:	f000 f80d 	bl	801c040 <__swsetup_r>
 801c026:	2800      	cmp	r0, #0
 801c028:	d0cc      	beq.n	801bfc4 <__swbuf_r+0x28>
 801c02a:	f04f 37ff 	mov.w	r7, #4294967295
 801c02e:	4638      	mov	r0, r7
 801c030:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c032:	bf00      	nop
 801c034:	0801ff88 	.word	0x0801ff88
 801c038:	0801ffa8 	.word	0x0801ffa8
 801c03c:	0801ff68 	.word	0x0801ff68

0801c040 <__swsetup_r>:
 801c040:	4b32      	ldr	r3, [pc, #200]	; (801c10c <__swsetup_r+0xcc>)
 801c042:	b570      	push	{r4, r5, r6, lr}
 801c044:	681d      	ldr	r5, [r3, #0]
 801c046:	4606      	mov	r6, r0
 801c048:	460c      	mov	r4, r1
 801c04a:	b125      	cbz	r5, 801c056 <__swsetup_r+0x16>
 801c04c:	69ab      	ldr	r3, [r5, #24]
 801c04e:	b913      	cbnz	r3, 801c056 <__swsetup_r+0x16>
 801c050:	4628      	mov	r0, r5
 801c052:	f000 f9b7 	bl	801c3c4 <__sinit>
 801c056:	4b2e      	ldr	r3, [pc, #184]	; (801c110 <__swsetup_r+0xd0>)
 801c058:	429c      	cmp	r4, r3
 801c05a:	d10f      	bne.n	801c07c <__swsetup_r+0x3c>
 801c05c:	686c      	ldr	r4, [r5, #4]
 801c05e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c062:	b29a      	uxth	r2, r3
 801c064:	0715      	lsls	r5, r2, #28
 801c066:	d42c      	bmi.n	801c0c2 <__swsetup_r+0x82>
 801c068:	06d0      	lsls	r0, r2, #27
 801c06a:	d411      	bmi.n	801c090 <__swsetup_r+0x50>
 801c06c:	2209      	movs	r2, #9
 801c06e:	6032      	str	r2, [r6, #0]
 801c070:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c074:	81a3      	strh	r3, [r4, #12]
 801c076:	f04f 30ff 	mov.w	r0, #4294967295
 801c07a:	e03e      	b.n	801c0fa <__swsetup_r+0xba>
 801c07c:	4b25      	ldr	r3, [pc, #148]	; (801c114 <__swsetup_r+0xd4>)
 801c07e:	429c      	cmp	r4, r3
 801c080:	d101      	bne.n	801c086 <__swsetup_r+0x46>
 801c082:	68ac      	ldr	r4, [r5, #8]
 801c084:	e7eb      	b.n	801c05e <__swsetup_r+0x1e>
 801c086:	4b24      	ldr	r3, [pc, #144]	; (801c118 <__swsetup_r+0xd8>)
 801c088:	429c      	cmp	r4, r3
 801c08a:	bf08      	it	eq
 801c08c:	68ec      	ldreq	r4, [r5, #12]
 801c08e:	e7e6      	b.n	801c05e <__swsetup_r+0x1e>
 801c090:	0751      	lsls	r1, r2, #29
 801c092:	d512      	bpl.n	801c0ba <__swsetup_r+0x7a>
 801c094:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c096:	b141      	cbz	r1, 801c0aa <__swsetup_r+0x6a>
 801c098:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c09c:	4299      	cmp	r1, r3
 801c09e:	d002      	beq.n	801c0a6 <__swsetup_r+0x66>
 801c0a0:	4630      	mov	r0, r6
 801c0a2:	f7ff fbb7 	bl	801b814 <_free_r>
 801c0a6:	2300      	movs	r3, #0
 801c0a8:	6363      	str	r3, [r4, #52]	; 0x34
 801c0aa:	89a3      	ldrh	r3, [r4, #12]
 801c0ac:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801c0b0:	81a3      	strh	r3, [r4, #12]
 801c0b2:	2300      	movs	r3, #0
 801c0b4:	6063      	str	r3, [r4, #4]
 801c0b6:	6923      	ldr	r3, [r4, #16]
 801c0b8:	6023      	str	r3, [r4, #0]
 801c0ba:	89a3      	ldrh	r3, [r4, #12]
 801c0bc:	f043 0308 	orr.w	r3, r3, #8
 801c0c0:	81a3      	strh	r3, [r4, #12]
 801c0c2:	6923      	ldr	r3, [r4, #16]
 801c0c4:	b94b      	cbnz	r3, 801c0da <__swsetup_r+0x9a>
 801c0c6:	89a3      	ldrh	r3, [r4, #12]
 801c0c8:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801c0cc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801c0d0:	d003      	beq.n	801c0da <__swsetup_r+0x9a>
 801c0d2:	4621      	mov	r1, r4
 801c0d4:	4630      	mov	r0, r6
 801c0d6:	f000 fa23 	bl	801c520 <__smakebuf_r>
 801c0da:	89a2      	ldrh	r2, [r4, #12]
 801c0dc:	f012 0301 	ands.w	r3, r2, #1
 801c0e0:	d00c      	beq.n	801c0fc <__swsetup_r+0xbc>
 801c0e2:	2300      	movs	r3, #0
 801c0e4:	60a3      	str	r3, [r4, #8]
 801c0e6:	6963      	ldr	r3, [r4, #20]
 801c0e8:	425b      	negs	r3, r3
 801c0ea:	61a3      	str	r3, [r4, #24]
 801c0ec:	6923      	ldr	r3, [r4, #16]
 801c0ee:	b953      	cbnz	r3, 801c106 <__swsetup_r+0xc6>
 801c0f0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c0f4:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 801c0f8:	d1ba      	bne.n	801c070 <__swsetup_r+0x30>
 801c0fa:	bd70      	pop	{r4, r5, r6, pc}
 801c0fc:	0792      	lsls	r2, r2, #30
 801c0fe:	bf58      	it	pl
 801c100:	6963      	ldrpl	r3, [r4, #20]
 801c102:	60a3      	str	r3, [r4, #8]
 801c104:	e7f2      	b.n	801c0ec <__swsetup_r+0xac>
 801c106:	2000      	movs	r0, #0
 801c108:	e7f7      	b.n	801c0fa <__swsetup_r+0xba>
 801c10a:	bf00      	nop
 801c10c:	20000094 	.word	0x20000094
 801c110:	0801ff88 	.word	0x0801ff88
 801c114:	0801ffa8 	.word	0x0801ffa8
 801c118:	0801ff68 	.word	0x0801ff68

0801c11c <__register_exitproc>:
 801c11c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c120:	4d2c      	ldr	r5, [pc, #176]	; (801c1d4 <__register_exitproc+0xb8>)
 801c122:	682c      	ldr	r4, [r5, #0]
 801c124:	4607      	mov	r7, r0
 801c126:	460e      	mov	r6, r1
 801c128:	4691      	mov	r9, r2
 801c12a:	4698      	mov	r8, r3
 801c12c:	b934      	cbnz	r4, 801c13c <__register_exitproc+0x20>
 801c12e:	4b2a      	ldr	r3, [pc, #168]	; (801c1d8 <__register_exitproc+0xbc>)
 801c130:	4c2a      	ldr	r4, [pc, #168]	; (801c1dc <__register_exitproc+0xc0>)
 801c132:	602c      	str	r4, [r5, #0]
 801c134:	b113      	cbz	r3, 801c13c <__register_exitproc+0x20>
 801c136:	681b      	ldr	r3, [r3, #0]
 801c138:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801c13c:	6863      	ldr	r3, [r4, #4]
 801c13e:	2b1f      	cmp	r3, #31
 801c140:	dd3d      	ble.n	801c1be <__register_exitproc+0xa2>
 801c142:	4b27      	ldr	r3, [pc, #156]	; (801c1e0 <__register_exitproc+0xc4>)
 801c144:	b91b      	cbnz	r3, 801c14e <__register_exitproc+0x32>
 801c146:	f04f 30ff 	mov.w	r0, #4294967295
 801c14a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c14e:	208c      	movs	r0, #140	; 0x8c
 801c150:	f7ff fb3c 	bl	801b7cc <malloc>
 801c154:	4604      	mov	r4, r0
 801c156:	2800      	cmp	r0, #0
 801c158:	d0f5      	beq.n	801c146 <__register_exitproc+0x2a>
 801c15a:	2300      	movs	r3, #0
 801c15c:	682a      	ldr	r2, [r5, #0]
 801c15e:	6002      	str	r2, [r0, #0]
 801c160:	6043      	str	r3, [r0, #4]
 801c162:	6028      	str	r0, [r5, #0]
 801c164:	f8c0 3088 	str.w	r3, [r0, #136]	; 0x88
 801c168:	b30f      	cbz	r7, 801c1ae <__register_exitproc+0x92>
 801c16a:	f44f 7084 	mov.w	r0, #264	; 0x108
 801c16e:	f7ff fb2d 	bl	801b7cc <malloc>
 801c172:	2800      	cmp	r0, #0
 801c174:	d0e7      	beq.n	801c146 <__register_exitproc+0x2a>
 801c176:	2300      	movs	r3, #0
 801c178:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801c17c:	f8c0 3104 	str.w	r3, [r0, #260]	; 0x104
 801c180:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801c184:	6862      	ldr	r2, [r4, #4]
 801c186:	f840 9022 	str.w	r9, [r0, r2, lsl #2]
 801c18a:	2301      	movs	r3, #1
 801c18c:	4093      	lsls	r3, r2
 801c18e:	eb00 0182 	add.w	r1, r0, r2, lsl #2
 801c192:	f8d0 2100 	ldr.w	r2, [r0, #256]	; 0x100
 801c196:	431a      	orrs	r2, r3
 801c198:	2f02      	cmp	r7, #2
 801c19a:	f8c0 2100 	str.w	r2, [r0, #256]	; 0x100
 801c19e:	f8c1 8080 	str.w	r8, [r1, #128]	; 0x80
 801c1a2:	bf02      	ittt	eq
 801c1a4:	f8d0 2104 	ldreq.w	r2, [r0, #260]	; 0x104
 801c1a8:	4313      	orreq	r3, r2
 801c1aa:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 801c1ae:	6863      	ldr	r3, [r4, #4]
 801c1b0:	1c5a      	adds	r2, r3, #1
 801c1b2:	3302      	adds	r3, #2
 801c1b4:	6062      	str	r2, [r4, #4]
 801c1b6:	2000      	movs	r0, #0
 801c1b8:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 801c1bc:	e7c5      	b.n	801c14a <__register_exitproc+0x2e>
 801c1be:	2f00      	cmp	r7, #0
 801c1c0:	d0f5      	beq.n	801c1ae <__register_exitproc+0x92>
 801c1c2:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801c1c6:	2800      	cmp	r0, #0
 801c1c8:	d1dc      	bne.n	801c184 <__register_exitproc+0x68>
 801c1ca:	4b05      	ldr	r3, [pc, #20]	; (801c1e0 <__register_exitproc+0xc4>)
 801c1cc:	2b00      	cmp	r3, #0
 801c1ce:	d0ba      	beq.n	801c146 <__register_exitproc+0x2a>
 801c1d0:	e7cb      	b.n	801c16a <__register_exitproc+0x4e>
 801c1d2:	bf00      	nop
 801c1d4:	200016f4 	.word	0x200016f4
 801c1d8:	0801ff64 	.word	0x0801ff64
 801c1dc:	20001668 	.word	0x20001668
 801c1e0:	0801b7cd 	.word	0x0801b7cd

0801c1e4 <__sflush_r>:
 801c1e4:	898a      	ldrh	r2, [r1, #12]
 801c1e6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c1ea:	4605      	mov	r5, r0
 801c1ec:	0710      	lsls	r0, r2, #28
 801c1ee:	460c      	mov	r4, r1
 801c1f0:	d458      	bmi.n	801c2a4 <__sflush_r+0xc0>
 801c1f2:	684b      	ldr	r3, [r1, #4]
 801c1f4:	2b00      	cmp	r3, #0
 801c1f6:	dc05      	bgt.n	801c204 <__sflush_r+0x20>
 801c1f8:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801c1fa:	2b00      	cmp	r3, #0
 801c1fc:	dc02      	bgt.n	801c204 <__sflush_r+0x20>
 801c1fe:	2000      	movs	r0, #0
 801c200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801c204:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c206:	2e00      	cmp	r6, #0
 801c208:	d0f9      	beq.n	801c1fe <__sflush_r+0x1a>
 801c20a:	2300      	movs	r3, #0
 801c20c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801c210:	682f      	ldr	r7, [r5, #0]
 801c212:	6a21      	ldr	r1, [r4, #32]
 801c214:	602b      	str	r3, [r5, #0]
 801c216:	d032      	beq.n	801c27e <__sflush_r+0x9a>
 801c218:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801c21a:	89a3      	ldrh	r3, [r4, #12]
 801c21c:	075a      	lsls	r2, r3, #29
 801c21e:	d505      	bpl.n	801c22c <__sflush_r+0x48>
 801c220:	6863      	ldr	r3, [r4, #4]
 801c222:	1ac0      	subs	r0, r0, r3
 801c224:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801c226:	b10b      	cbz	r3, 801c22c <__sflush_r+0x48>
 801c228:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801c22a:	1ac0      	subs	r0, r0, r3
 801c22c:	2300      	movs	r3, #0
 801c22e:	4602      	mov	r2, r0
 801c230:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801c232:	6a21      	ldr	r1, [r4, #32]
 801c234:	4628      	mov	r0, r5
 801c236:	47b0      	blx	r6
 801c238:	1c43      	adds	r3, r0, #1
 801c23a:	89a3      	ldrh	r3, [r4, #12]
 801c23c:	d106      	bne.n	801c24c <__sflush_r+0x68>
 801c23e:	6829      	ldr	r1, [r5, #0]
 801c240:	291d      	cmp	r1, #29
 801c242:	d848      	bhi.n	801c2d6 <__sflush_r+0xf2>
 801c244:	4a29      	ldr	r2, [pc, #164]	; (801c2ec <__sflush_r+0x108>)
 801c246:	40ca      	lsrs	r2, r1
 801c248:	07d6      	lsls	r6, r2, #31
 801c24a:	d544      	bpl.n	801c2d6 <__sflush_r+0xf2>
 801c24c:	2200      	movs	r2, #0
 801c24e:	6062      	str	r2, [r4, #4]
 801c250:	04d9      	lsls	r1, r3, #19
 801c252:	6922      	ldr	r2, [r4, #16]
 801c254:	6022      	str	r2, [r4, #0]
 801c256:	d504      	bpl.n	801c262 <__sflush_r+0x7e>
 801c258:	1c42      	adds	r2, r0, #1
 801c25a:	d101      	bne.n	801c260 <__sflush_r+0x7c>
 801c25c:	682b      	ldr	r3, [r5, #0]
 801c25e:	b903      	cbnz	r3, 801c262 <__sflush_r+0x7e>
 801c260:	6560      	str	r0, [r4, #84]	; 0x54
 801c262:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801c264:	602f      	str	r7, [r5, #0]
 801c266:	2900      	cmp	r1, #0
 801c268:	d0c9      	beq.n	801c1fe <__sflush_r+0x1a>
 801c26a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801c26e:	4299      	cmp	r1, r3
 801c270:	d002      	beq.n	801c278 <__sflush_r+0x94>
 801c272:	4628      	mov	r0, r5
 801c274:	f7ff face 	bl	801b814 <_free_r>
 801c278:	2000      	movs	r0, #0
 801c27a:	6360      	str	r0, [r4, #52]	; 0x34
 801c27c:	e7c0      	b.n	801c200 <__sflush_r+0x1c>
 801c27e:	2301      	movs	r3, #1
 801c280:	4628      	mov	r0, r5
 801c282:	47b0      	blx	r6
 801c284:	1c41      	adds	r1, r0, #1
 801c286:	d1c8      	bne.n	801c21a <__sflush_r+0x36>
 801c288:	682b      	ldr	r3, [r5, #0]
 801c28a:	2b00      	cmp	r3, #0
 801c28c:	d0c5      	beq.n	801c21a <__sflush_r+0x36>
 801c28e:	2b1d      	cmp	r3, #29
 801c290:	d001      	beq.n	801c296 <__sflush_r+0xb2>
 801c292:	2b16      	cmp	r3, #22
 801c294:	d101      	bne.n	801c29a <__sflush_r+0xb6>
 801c296:	602f      	str	r7, [r5, #0]
 801c298:	e7b1      	b.n	801c1fe <__sflush_r+0x1a>
 801c29a:	89a3      	ldrh	r3, [r4, #12]
 801c29c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c2a0:	81a3      	strh	r3, [r4, #12]
 801c2a2:	e7ad      	b.n	801c200 <__sflush_r+0x1c>
 801c2a4:	690f      	ldr	r7, [r1, #16]
 801c2a6:	2f00      	cmp	r7, #0
 801c2a8:	d0a9      	beq.n	801c1fe <__sflush_r+0x1a>
 801c2aa:	0793      	lsls	r3, r2, #30
 801c2ac:	680e      	ldr	r6, [r1, #0]
 801c2ae:	bf08      	it	eq
 801c2b0:	694b      	ldreq	r3, [r1, #20]
 801c2b2:	600f      	str	r7, [r1, #0]
 801c2b4:	bf18      	it	ne
 801c2b6:	2300      	movne	r3, #0
 801c2b8:	eba6 0807 	sub.w	r8, r6, r7
 801c2bc:	608b      	str	r3, [r1, #8]
 801c2be:	f1b8 0f00 	cmp.w	r8, #0
 801c2c2:	dd9c      	ble.n	801c1fe <__sflush_r+0x1a>
 801c2c4:	4643      	mov	r3, r8
 801c2c6:	463a      	mov	r2, r7
 801c2c8:	6a21      	ldr	r1, [r4, #32]
 801c2ca:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801c2cc:	4628      	mov	r0, r5
 801c2ce:	47b0      	blx	r6
 801c2d0:	2800      	cmp	r0, #0
 801c2d2:	dc06      	bgt.n	801c2e2 <__sflush_r+0xfe>
 801c2d4:	89a3      	ldrh	r3, [r4, #12]
 801c2d6:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801c2da:	81a3      	strh	r3, [r4, #12]
 801c2dc:	f04f 30ff 	mov.w	r0, #4294967295
 801c2e0:	e78e      	b.n	801c200 <__sflush_r+0x1c>
 801c2e2:	4407      	add	r7, r0
 801c2e4:	eba8 0800 	sub.w	r8, r8, r0
 801c2e8:	e7e9      	b.n	801c2be <__sflush_r+0xda>
 801c2ea:	bf00      	nop
 801c2ec:	20400001 	.word	0x20400001

0801c2f0 <_fflush_r>:
 801c2f0:	b538      	push	{r3, r4, r5, lr}
 801c2f2:	690b      	ldr	r3, [r1, #16]
 801c2f4:	4605      	mov	r5, r0
 801c2f6:	460c      	mov	r4, r1
 801c2f8:	b1db      	cbz	r3, 801c332 <_fflush_r+0x42>
 801c2fa:	b118      	cbz	r0, 801c304 <_fflush_r+0x14>
 801c2fc:	6983      	ldr	r3, [r0, #24]
 801c2fe:	b90b      	cbnz	r3, 801c304 <_fflush_r+0x14>
 801c300:	f000 f860 	bl	801c3c4 <__sinit>
 801c304:	4b0c      	ldr	r3, [pc, #48]	; (801c338 <_fflush_r+0x48>)
 801c306:	429c      	cmp	r4, r3
 801c308:	d109      	bne.n	801c31e <_fflush_r+0x2e>
 801c30a:	686c      	ldr	r4, [r5, #4]
 801c30c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c310:	b17b      	cbz	r3, 801c332 <_fflush_r+0x42>
 801c312:	4621      	mov	r1, r4
 801c314:	4628      	mov	r0, r5
 801c316:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801c31a:	f7ff bf63 	b.w	801c1e4 <__sflush_r>
 801c31e:	4b07      	ldr	r3, [pc, #28]	; (801c33c <_fflush_r+0x4c>)
 801c320:	429c      	cmp	r4, r3
 801c322:	d101      	bne.n	801c328 <_fflush_r+0x38>
 801c324:	68ac      	ldr	r4, [r5, #8]
 801c326:	e7f1      	b.n	801c30c <_fflush_r+0x1c>
 801c328:	4b05      	ldr	r3, [pc, #20]	; (801c340 <_fflush_r+0x50>)
 801c32a:	429c      	cmp	r4, r3
 801c32c:	bf08      	it	eq
 801c32e:	68ec      	ldreq	r4, [r5, #12]
 801c330:	e7ec      	b.n	801c30c <_fflush_r+0x1c>
 801c332:	2000      	movs	r0, #0
 801c334:	bd38      	pop	{r3, r4, r5, pc}
 801c336:	bf00      	nop
 801c338:	0801ff88 	.word	0x0801ff88
 801c33c:	0801ffa8 	.word	0x0801ffa8
 801c340:	0801ff68 	.word	0x0801ff68

0801c344 <std>:
 801c344:	2300      	movs	r3, #0
 801c346:	b510      	push	{r4, lr}
 801c348:	4604      	mov	r4, r0
 801c34a:	e9c0 3300 	strd	r3, r3, [r0]
 801c34e:	6083      	str	r3, [r0, #8]
 801c350:	8181      	strh	r1, [r0, #12]
 801c352:	6643      	str	r3, [r0, #100]	; 0x64
 801c354:	81c2      	strh	r2, [r0, #14]
 801c356:	e9c0 3304 	strd	r3, r3, [r0, #16]
 801c35a:	6183      	str	r3, [r0, #24]
 801c35c:	4619      	mov	r1, r3
 801c35e:	2208      	movs	r2, #8
 801c360:	305c      	adds	r0, #92	; 0x5c
 801c362:	f7ff fa4e 	bl	801b802 <memset>
 801c366:	4b05      	ldr	r3, [pc, #20]	; (801c37c <std+0x38>)
 801c368:	6263      	str	r3, [r4, #36]	; 0x24
 801c36a:	4b05      	ldr	r3, [pc, #20]	; (801c380 <std+0x3c>)
 801c36c:	62a3      	str	r3, [r4, #40]	; 0x28
 801c36e:	4b05      	ldr	r3, [pc, #20]	; (801c384 <std+0x40>)
 801c370:	62e3      	str	r3, [r4, #44]	; 0x2c
 801c372:	4b05      	ldr	r3, [pc, #20]	; (801c388 <std+0x44>)
 801c374:	6224      	str	r4, [r4, #32]
 801c376:	6323      	str	r3, [r4, #48]	; 0x30
 801c378:	bd10      	pop	{r4, pc}
 801c37a:	bf00      	nop
 801c37c:	0801c5a5 	.word	0x0801c5a5
 801c380:	0801c5c7 	.word	0x0801c5c7
 801c384:	0801c5ff 	.word	0x0801c5ff
 801c388:	0801c623 	.word	0x0801c623

0801c38c <_cleanup_r>:
 801c38c:	4901      	ldr	r1, [pc, #4]	; (801c394 <_cleanup_r+0x8>)
 801c38e:	f000 b885 	b.w	801c49c <_fwalk_reent>
 801c392:	bf00      	nop
 801c394:	0801c2f1 	.word	0x0801c2f1

0801c398 <__sfmoreglue>:
 801c398:	b570      	push	{r4, r5, r6, lr}
 801c39a:	1e4a      	subs	r2, r1, #1
 801c39c:	2568      	movs	r5, #104	; 0x68
 801c39e:	4355      	muls	r5, r2
 801c3a0:	460e      	mov	r6, r1
 801c3a2:	f105 0174 	add.w	r1, r5, #116	; 0x74
 801c3a6:	f7ff fa83 	bl	801b8b0 <_malloc_r>
 801c3aa:	4604      	mov	r4, r0
 801c3ac:	b140      	cbz	r0, 801c3c0 <__sfmoreglue+0x28>
 801c3ae:	2100      	movs	r1, #0
 801c3b0:	e9c0 1600 	strd	r1, r6, [r0]
 801c3b4:	300c      	adds	r0, #12
 801c3b6:	60a0      	str	r0, [r4, #8]
 801c3b8:	f105 0268 	add.w	r2, r5, #104	; 0x68
 801c3bc:	f7ff fa21 	bl	801b802 <memset>
 801c3c0:	4620      	mov	r0, r4
 801c3c2:	bd70      	pop	{r4, r5, r6, pc}

0801c3c4 <__sinit>:
 801c3c4:	6983      	ldr	r3, [r0, #24]
 801c3c6:	b510      	push	{r4, lr}
 801c3c8:	4604      	mov	r4, r0
 801c3ca:	bb33      	cbnz	r3, 801c41a <__sinit+0x56>
 801c3cc:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 801c3d0:	6503      	str	r3, [r0, #80]	; 0x50
 801c3d2:	4b12      	ldr	r3, [pc, #72]	; (801c41c <__sinit+0x58>)
 801c3d4:	4a12      	ldr	r2, [pc, #72]	; (801c420 <__sinit+0x5c>)
 801c3d6:	681b      	ldr	r3, [r3, #0]
 801c3d8:	6282      	str	r2, [r0, #40]	; 0x28
 801c3da:	4298      	cmp	r0, r3
 801c3dc:	bf04      	itt	eq
 801c3de:	2301      	moveq	r3, #1
 801c3e0:	6183      	streq	r3, [r0, #24]
 801c3e2:	f000 f81f 	bl	801c424 <__sfp>
 801c3e6:	6060      	str	r0, [r4, #4]
 801c3e8:	4620      	mov	r0, r4
 801c3ea:	f000 f81b 	bl	801c424 <__sfp>
 801c3ee:	60a0      	str	r0, [r4, #8]
 801c3f0:	4620      	mov	r0, r4
 801c3f2:	f000 f817 	bl	801c424 <__sfp>
 801c3f6:	2200      	movs	r2, #0
 801c3f8:	60e0      	str	r0, [r4, #12]
 801c3fa:	2104      	movs	r1, #4
 801c3fc:	6860      	ldr	r0, [r4, #4]
 801c3fe:	f7ff ffa1 	bl	801c344 <std>
 801c402:	2201      	movs	r2, #1
 801c404:	2109      	movs	r1, #9
 801c406:	68a0      	ldr	r0, [r4, #8]
 801c408:	f7ff ff9c 	bl	801c344 <std>
 801c40c:	2202      	movs	r2, #2
 801c40e:	2112      	movs	r1, #18
 801c410:	68e0      	ldr	r0, [r4, #12]
 801c412:	f7ff ff97 	bl	801c344 <std>
 801c416:	2301      	movs	r3, #1
 801c418:	61a3      	str	r3, [r4, #24]
 801c41a:	bd10      	pop	{r4, pc}
 801c41c:	0801ff2c 	.word	0x0801ff2c
 801c420:	0801c38d 	.word	0x0801c38d

0801c424 <__sfp>:
 801c424:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c426:	4b1b      	ldr	r3, [pc, #108]	; (801c494 <__sfp+0x70>)
 801c428:	681e      	ldr	r6, [r3, #0]
 801c42a:	69b3      	ldr	r3, [r6, #24]
 801c42c:	4607      	mov	r7, r0
 801c42e:	b913      	cbnz	r3, 801c436 <__sfp+0x12>
 801c430:	4630      	mov	r0, r6
 801c432:	f7ff ffc7 	bl	801c3c4 <__sinit>
 801c436:	3648      	adds	r6, #72	; 0x48
 801c438:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 801c43c:	3b01      	subs	r3, #1
 801c43e:	d503      	bpl.n	801c448 <__sfp+0x24>
 801c440:	6833      	ldr	r3, [r6, #0]
 801c442:	b133      	cbz	r3, 801c452 <__sfp+0x2e>
 801c444:	6836      	ldr	r6, [r6, #0]
 801c446:	e7f7      	b.n	801c438 <__sfp+0x14>
 801c448:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 801c44c:	b16d      	cbz	r5, 801c46a <__sfp+0x46>
 801c44e:	3468      	adds	r4, #104	; 0x68
 801c450:	e7f4      	b.n	801c43c <__sfp+0x18>
 801c452:	2104      	movs	r1, #4
 801c454:	4638      	mov	r0, r7
 801c456:	f7ff ff9f 	bl	801c398 <__sfmoreglue>
 801c45a:	6030      	str	r0, [r6, #0]
 801c45c:	2800      	cmp	r0, #0
 801c45e:	d1f1      	bne.n	801c444 <__sfp+0x20>
 801c460:	230c      	movs	r3, #12
 801c462:	603b      	str	r3, [r7, #0]
 801c464:	4604      	mov	r4, r0
 801c466:	4620      	mov	r0, r4
 801c468:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801c46a:	4b0b      	ldr	r3, [pc, #44]	; (801c498 <__sfp+0x74>)
 801c46c:	6665      	str	r5, [r4, #100]	; 0x64
 801c46e:	e9c4 5500 	strd	r5, r5, [r4]
 801c472:	60a5      	str	r5, [r4, #8]
 801c474:	e9c4 3503 	strd	r3, r5, [r4, #12]
 801c478:	e9c4 5505 	strd	r5, r5, [r4, #20]
 801c47c:	2208      	movs	r2, #8
 801c47e:	4629      	mov	r1, r5
 801c480:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 801c484:	f7ff f9bd 	bl	801b802 <memset>
 801c488:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801c48c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 801c490:	e7e9      	b.n	801c466 <__sfp+0x42>
 801c492:	bf00      	nop
 801c494:	0801ff2c 	.word	0x0801ff2c
 801c498:	ffff0001 	.word	0xffff0001

0801c49c <_fwalk_reent>:
 801c49c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801c4a0:	4680      	mov	r8, r0
 801c4a2:	4689      	mov	r9, r1
 801c4a4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801c4a8:	2600      	movs	r6, #0
 801c4aa:	b914      	cbnz	r4, 801c4b2 <_fwalk_reent+0x16>
 801c4ac:	4630      	mov	r0, r6
 801c4ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801c4b2:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 801c4b6:	3f01      	subs	r7, #1
 801c4b8:	d501      	bpl.n	801c4be <_fwalk_reent+0x22>
 801c4ba:	6824      	ldr	r4, [r4, #0]
 801c4bc:	e7f5      	b.n	801c4aa <_fwalk_reent+0xe>
 801c4be:	89ab      	ldrh	r3, [r5, #12]
 801c4c0:	2b01      	cmp	r3, #1
 801c4c2:	d907      	bls.n	801c4d4 <_fwalk_reent+0x38>
 801c4c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 801c4c8:	3301      	adds	r3, #1
 801c4ca:	d003      	beq.n	801c4d4 <_fwalk_reent+0x38>
 801c4cc:	4629      	mov	r1, r5
 801c4ce:	4640      	mov	r0, r8
 801c4d0:	47c8      	blx	r9
 801c4d2:	4306      	orrs	r6, r0
 801c4d4:	3568      	adds	r5, #104	; 0x68
 801c4d6:	e7ee      	b.n	801c4b6 <_fwalk_reent+0x1a>

0801c4d8 <__swhatbuf_r>:
 801c4d8:	b570      	push	{r4, r5, r6, lr}
 801c4da:	460e      	mov	r6, r1
 801c4dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c4e0:	2900      	cmp	r1, #0
 801c4e2:	b096      	sub	sp, #88	; 0x58
 801c4e4:	4614      	mov	r4, r2
 801c4e6:	461d      	mov	r5, r3
 801c4e8:	da07      	bge.n	801c4fa <__swhatbuf_r+0x22>
 801c4ea:	2300      	movs	r3, #0
 801c4ec:	602b      	str	r3, [r5, #0]
 801c4ee:	89b3      	ldrh	r3, [r6, #12]
 801c4f0:	061a      	lsls	r2, r3, #24
 801c4f2:	d410      	bmi.n	801c516 <__swhatbuf_r+0x3e>
 801c4f4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801c4f8:	e00e      	b.n	801c518 <__swhatbuf_r+0x40>
 801c4fa:	466a      	mov	r2, sp
 801c4fc:	f000 f8b8 	bl	801c670 <_fstat_r>
 801c500:	2800      	cmp	r0, #0
 801c502:	dbf2      	blt.n	801c4ea <__swhatbuf_r+0x12>
 801c504:	9a01      	ldr	r2, [sp, #4]
 801c506:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801c50a:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801c50e:	425a      	negs	r2, r3
 801c510:	415a      	adcs	r2, r3
 801c512:	602a      	str	r2, [r5, #0]
 801c514:	e7ee      	b.n	801c4f4 <__swhatbuf_r+0x1c>
 801c516:	2340      	movs	r3, #64	; 0x40
 801c518:	2000      	movs	r0, #0
 801c51a:	6023      	str	r3, [r4, #0]
 801c51c:	b016      	add	sp, #88	; 0x58
 801c51e:	bd70      	pop	{r4, r5, r6, pc}

0801c520 <__smakebuf_r>:
 801c520:	898b      	ldrh	r3, [r1, #12]
 801c522:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801c524:	079d      	lsls	r5, r3, #30
 801c526:	4606      	mov	r6, r0
 801c528:	460c      	mov	r4, r1
 801c52a:	d507      	bpl.n	801c53c <__smakebuf_r+0x1c>
 801c52c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801c530:	6023      	str	r3, [r4, #0]
 801c532:	6123      	str	r3, [r4, #16]
 801c534:	2301      	movs	r3, #1
 801c536:	6163      	str	r3, [r4, #20]
 801c538:	b002      	add	sp, #8
 801c53a:	bd70      	pop	{r4, r5, r6, pc}
 801c53c:	ab01      	add	r3, sp, #4
 801c53e:	466a      	mov	r2, sp
 801c540:	f7ff ffca 	bl	801c4d8 <__swhatbuf_r>
 801c544:	9900      	ldr	r1, [sp, #0]
 801c546:	4605      	mov	r5, r0
 801c548:	4630      	mov	r0, r6
 801c54a:	f7ff f9b1 	bl	801b8b0 <_malloc_r>
 801c54e:	b948      	cbnz	r0, 801c564 <__smakebuf_r+0x44>
 801c550:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801c554:	059a      	lsls	r2, r3, #22
 801c556:	d4ef      	bmi.n	801c538 <__smakebuf_r+0x18>
 801c558:	f023 0303 	bic.w	r3, r3, #3
 801c55c:	f043 0302 	orr.w	r3, r3, #2
 801c560:	81a3      	strh	r3, [r4, #12]
 801c562:	e7e3      	b.n	801c52c <__smakebuf_r+0xc>
 801c564:	4b0d      	ldr	r3, [pc, #52]	; (801c59c <__smakebuf_r+0x7c>)
 801c566:	62b3      	str	r3, [r6, #40]	; 0x28
 801c568:	89a3      	ldrh	r3, [r4, #12]
 801c56a:	6020      	str	r0, [r4, #0]
 801c56c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801c570:	81a3      	strh	r3, [r4, #12]
 801c572:	9b00      	ldr	r3, [sp, #0]
 801c574:	6163      	str	r3, [r4, #20]
 801c576:	9b01      	ldr	r3, [sp, #4]
 801c578:	6120      	str	r0, [r4, #16]
 801c57a:	b15b      	cbz	r3, 801c594 <__smakebuf_r+0x74>
 801c57c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c580:	4630      	mov	r0, r6
 801c582:	f000 f887 	bl	801c694 <_isatty_r>
 801c586:	b128      	cbz	r0, 801c594 <__smakebuf_r+0x74>
 801c588:	89a3      	ldrh	r3, [r4, #12]
 801c58a:	f023 0303 	bic.w	r3, r3, #3
 801c58e:	f043 0301 	orr.w	r3, r3, #1
 801c592:	81a3      	strh	r3, [r4, #12]
 801c594:	89a3      	ldrh	r3, [r4, #12]
 801c596:	431d      	orrs	r5, r3
 801c598:	81a5      	strh	r5, [r4, #12]
 801c59a:	e7cd      	b.n	801c538 <__smakebuf_r+0x18>
 801c59c:	0801c38d 	.word	0x0801c38d

0801c5a0 <__malloc_lock>:
 801c5a0:	4770      	bx	lr

0801c5a2 <__malloc_unlock>:
 801c5a2:	4770      	bx	lr

0801c5a4 <__sread>:
 801c5a4:	b510      	push	{r4, lr}
 801c5a6:	460c      	mov	r4, r1
 801c5a8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c5ac:	f000 f894 	bl	801c6d8 <_read_r>
 801c5b0:	2800      	cmp	r0, #0
 801c5b2:	bfab      	itete	ge
 801c5b4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801c5b6:	89a3      	ldrhlt	r3, [r4, #12]
 801c5b8:	181b      	addge	r3, r3, r0
 801c5ba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801c5be:	bfac      	ite	ge
 801c5c0:	6563      	strge	r3, [r4, #84]	; 0x54
 801c5c2:	81a3      	strhlt	r3, [r4, #12]
 801c5c4:	bd10      	pop	{r4, pc}

0801c5c6 <__swrite>:
 801c5c6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801c5ca:	461f      	mov	r7, r3
 801c5cc:	898b      	ldrh	r3, [r1, #12]
 801c5ce:	05db      	lsls	r3, r3, #23
 801c5d0:	4605      	mov	r5, r0
 801c5d2:	460c      	mov	r4, r1
 801c5d4:	4616      	mov	r6, r2
 801c5d6:	d505      	bpl.n	801c5e4 <__swrite+0x1e>
 801c5d8:	2302      	movs	r3, #2
 801c5da:	2200      	movs	r2, #0
 801c5dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c5e0:	f000 f868 	bl	801c6b4 <_lseek_r>
 801c5e4:	89a3      	ldrh	r3, [r4, #12]
 801c5e6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801c5ea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801c5ee:	81a3      	strh	r3, [r4, #12]
 801c5f0:	4632      	mov	r2, r6
 801c5f2:	463b      	mov	r3, r7
 801c5f4:	4628      	mov	r0, r5
 801c5f6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801c5fa:	f000 b817 	b.w	801c62c <_write_r>

0801c5fe <__sseek>:
 801c5fe:	b510      	push	{r4, lr}
 801c600:	460c      	mov	r4, r1
 801c602:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c606:	f000 f855 	bl	801c6b4 <_lseek_r>
 801c60a:	1c43      	adds	r3, r0, #1
 801c60c:	89a3      	ldrh	r3, [r4, #12]
 801c60e:	bf15      	itete	ne
 801c610:	6560      	strne	r0, [r4, #84]	; 0x54
 801c612:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801c616:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801c61a:	81a3      	strheq	r3, [r4, #12]
 801c61c:	bf18      	it	ne
 801c61e:	81a3      	strhne	r3, [r4, #12]
 801c620:	bd10      	pop	{r4, pc}

0801c622 <__sclose>:
 801c622:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801c626:	f000 b813 	b.w	801c650 <_close_r>
	...

0801c62c <_write_r>:
 801c62c:	b538      	push	{r3, r4, r5, lr}
 801c62e:	4c07      	ldr	r4, [pc, #28]	; (801c64c <_write_r+0x20>)
 801c630:	4605      	mov	r5, r0
 801c632:	4608      	mov	r0, r1
 801c634:	4611      	mov	r1, r2
 801c636:	2200      	movs	r2, #0
 801c638:	6022      	str	r2, [r4, #0]
 801c63a:	461a      	mov	r2, r3
 801c63c:	f7e4 fe09 	bl	8001252 <_write>
 801c640:	1c43      	adds	r3, r0, #1
 801c642:	d102      	bne.n	801c64a <_write_r+0x1e>
 801c644:	6823      	ldr	r3, [r4, #0]
 801c646:	b103      	cbz	r3, 801c64a <_write_r+0x1e>
 801c648:	602b      	str	r3, [r5, #0]
 801c64a:	bd38      	pop	{r3, r4, r5, pc}
 801c64c:	20001d50 	.word	0x20001d50

0801c650 <_close_r>:
 801c650:	b538      	push	{r3, r4, r5, lr}
 801c652:	4c06      	ldr	r4, [pc, #24]	; (801c66c <_close_r+0x1c>)
 801c654:	2300      	movs	r3, #0
 801c656:	4605      	mov	r5, r0
 801c658:	4608      	mov	r0, r1
 801c65a:	6023      	str	r3, [r4, #0]
 801c65c:	f7e4 fe15 	bl	800128a <_close>
 801c660:	1c43      	adds	r3, r0, #1
 801c662:	d102      	bne.n	801c66a <_close_r+0x1a>
 801c664:	6823      	ldr	r3, [r4, #0]
 801c666:	b103      	cbz	r3, 801c66a <_close_r+0x1a>
 801c668:	602b      	str	r3, [r5, #0]
 801c66a:	bd38      	pop	{r3, r4, r5, pc}
 801c66c:	20001d50 	.word	0x20001d50

0801c670 <_fstat_r>:
 801c670:	b538      	push	{r3, r4, r5, lr}
 801c672:	4c07      	ldr	r4, [pc, #28]	; (801c690 <_fstat_r+0x20>)
 801c674:	2300      	movs	r3, #0
 801c676:	4605      	mov	r5, r0
 801c678:	4608      	mov	r0, r1
 801c67a:	4611      	mov	r1, r2
 801c67c:	6023      	str	r3, [r4, #0]
 801c67e:	f7e4 fe10 	bl	80012a2 <_fstat>
 801c682:	1c43      	adds	r3, r0, #1
 801c684:	d102      	bne.n	801c68c <_fstat_r+0x1c>
 801c686:	6823      	ldr	r3, [r4, #0]
 801c688:	b103      	cbz	r3, 801c68c <_fstat_r+0x1c>
 801c68a:	602b      	str	r3, [r5, #0]
 801c68c:	bd38      	pop	{r3, r4, r5, pc}
 801c68e:	bf00      	nop
 801c690:	20001d50 	.word	0x20001d50

0801c694 <_isatty_r>:
 801c694:	b538      	push	{r3, r4, r5, lr}
 801c696:	4c06      	ldr	r4, [pc, #24]	; (801c6b0 <_isatty_r+0x1c>)
 801c698:	2300      	movs	r3, #0
 801c69a:	4605      	mov	r5, r0
 801c69c:	4608      	mov	r0, r1
 801c69e:	6023      	str	r3, [r4, #0]
 801c6a0:	f7e4 fe0f 	bl	80012c2 <_isatty>
 801c6a4:	1c43      	adds	r3, r0, #1
 801c6a6:	d102      	bne.n	801c6ae <_isatty_r+0x1a>
 801c6a8:	6823      	ldr	r3, [r4, #0]
 801c6aa:	b103      	cbz	r3, 801c6ae <_isatty_r+0x1a>
 801c6ac:	602b      	str	r3, [r5, #0]
 801c6ae:	bd38      	pop	{r3, r4, r5, pc}
 801c6b0:	20001d50 	.word	0x20001d50

0801c6b4 <_lseek_r>:
 801c6b4:	b538      	push	{r3, r4, r5, lr}
 801c6b6:	4c07      	ldr	r4, [pc, #28]	; (801c6d4 <_lseek_r+0x20>)
 801c6b8:	4605      	mov	r5, r0
 801c6ba:	4608      	mov	r0, r1
 801c6bc:	4611      	mov	r1, r2
 801c6be:	2200      	movs	r2, #0
 801c6c0:	6022      	str	r2, [r4, #0]
 801c6c2:	461a      	mov	r2, r3
 801c6c4:	f7e4 fe08 	bl	80012d8 <_lseek>
 801c6c8:	1c43      	adds	r3, r0, #1
 801c6ca:	d102      	bne.n	801c6d2 <_lseek_r+0x1e>
 801c6cc:	6823      	ldr	r3, [r4, #0]
 801c6ce:	b103      	cbz	r3, 801c6d2 <_lseek_r+0x1e>
 801c6d0:	602b      	str	r3, [r5, #0]
 801c6d2:	bd38      	pop	{r3, r4, r5, pc}
 801c6d4:	20001d50 	.word	0x20001d50

0801c6d8 <_read_r>:
 801c6d8:	b538      	push	{r3, r4, r5, lr}
 801c6da:	4c07      	ldr	r4, [pc, #28]	; (801c6f8 <_read_r+0x20>)
 801c6dc:	4605      	mov	r5, r0
 801c6de:	4608      	mov	r0, r1
 801c6e0:	4611      	mov	r1, r2
 801c6e2:	2200      	movs	r2, #0
 801c6e4:	6022      	str	r2, [r4, #0]
 801c6e6:	461a      	mov	r2, r3
 801c6e8:	f7e4 fd96 	bl	8001218 <_read>
 801c6ec:	1c43      	adds	r3, r0, #1
 801c6ee:	d102      	bne.n	801c6f6 <_read_r+0x1e>
 801c6f0:	6823      	ldr	r3, [r4, #0]
 801c6f2:	b103      	cbz	r3, 801c6f6 <_read_r+0x1e>
 801c6f4:	602b      	str	r3, [r5, #0]
 801c6f6:	bd38      	pop	{r3, r4, r5, pc}
 801c6f8:	20001d50 	.word	0x20001d50

0801c6fc <_init>:
 801c6fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c6fe:	bf00      	nop
 801c700:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c702:	bc08      	pop	{r3}
 801c704:	469e      	mov	lr, r3
 801c706:	4770      	bx	lr

0801c708 <_fini>:
 801c708:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801c70a:	bf00      	nop
 801c70c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801c70e:	bc08      	pop	{r3}
 801c710:	469e      	mov	lr, r3
 801c712:	4770      	bx	lr
